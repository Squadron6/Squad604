typedef char *__builtin_va_list;
typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x9b50250 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x9b502b0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x9b50310 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9b50370 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x9b50510 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x9b50570 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9b505d0 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef unsigned char __u_char;
        typedef unsigned short __u_short;
        typedef unsigned int __u_int;
        typedef unsigned long __u_long;
        typedef signed char __int8_t;
        typedef unsigned char __uint8_t;
        typedef short __int16_t;
        typedef unsigned short __uint16_t;
        typedef int __int32_t;
        typedef unsigned int __uint32_t;
        typedef long long __int64_t;
        typedef unsigned long long __uint64_t;
        typedef long long __quad_t;
        typedef unsigned long long __u_quad_t;
        typedef __u_quad_t __dev_t;
        typedef unsigned int __uid_t;
        typedef unsigned int __gid_t;
        typedef unsigned long __ino_t;
        typedef __u_quad_t __ino64_t;
        typedef unsigned int __mode_t;
        typedef unsigned int __nlink_t;
        typedef long __off_t;
        typedef __quad_t __off64_t;
        typedef int __pid_t;
        struct {
            int __val[2];
        };
        typedef struct __fsid_t __fsid_t;
        typedef long __clock_t;
        typedef unsigned long __rlim_t;
        typedef __u_quad_t __rlim64_t;
        typedef unsigned int __id_t;
        typedef long __time_t;
        typedef unsigned int __useconds_t;
        typedef long __suseconds_t;
        typedef int __daddr_t;
        typedef long __swblk_t;
        typedef int __key_t;
        typedef int __clockid_t;
        typedef void *__timer_t;
        typedef long __blksize_t;
        typedef long __blkcnt_t;
        typedef __quad_t __blkcnt64_t;
        typedef unsigned long __fsblkcnt_t;
        typedef __u_quad_t __fsblkcnt64_t;
        typedef unsigned long __fsfilcnt_t;
        typedef __u_quad_t __fsfilcnt64_t;
        typedef int __ssize_t;
        typedef __off64_t __loff_t;
        typedef __quad_t *__qaddr_t;
        typedef char *__caddr_t;
        typedef int __intptr_t;
        typedef unsigned int __socklen_t;
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __off_t off_t;
        typedef __off64_t off64_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __ssize_t ssize_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef signed char int8_t;
        typedef short int16_t;
        typedef int int32_t;
        typedef long long int64_t;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                } ;
                ;
                ;
            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
        inline termios() throw() (CompoundStmt 0xa1578d0 </usr/include/i386-linux-gnu/bits/termios.h:29:8>)


        inline termios(const termios &) throw();
        inline termios &operator=(const termios &) throw() (CompoundStmt 0xa158130 </usr/include/i386-linux-gnu/bits/termios.h:29:8>
  (BinaryOperator 0xa157d18 <col:8> 'tcflag_t':'unsigned int' lvalue '='
    (MemberExpr 0xa157ce8 <col:8> 'tcflag_t':'unsigned int' lvalue ->c_iflag 0x9bf4ba0
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))
    (ImplicitCastExpr 0xa157d08 <col:8> 'tcflag_t':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa157cc8 <col:8> 'const tcflag_t':'const unsigned int' lvalue .c_iflag 0x9bf4ba0
        (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
  (BinaryOperator 0xa157d80 <col:8> 'tcflag_t':'unsigned int' lvalue '='
    (MemberExpr 0xa157d50 <col:8> 'tcflag_t':'unsigned int' lvalue ->c_oflag 0x9bf4be0
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))
    (ImplicitCastExpr 0xa157d70 <col:8> 'tcflag_t':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa157d30 <col:8> 'const tcflag_t':'const unsigned int' lvalue .c_oflag 0x9bf4be0
        (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
  (BinaryOperator 0xa157de8 <col:8> 'tcflag_t':'unsigned int' lvalue '='
    (MemberExpr 0xa157db8 <col:8> 'tcflag_t':'unsigned int' lvalue ->c_cflag 0x9bf4c20
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))
    (ImplicitCastExpr 0xa157dd8 <col:8> 'tcflag_t':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa157d98 <col:8> 'const tcflag_t':'const unsigned int' lvalue .c_cflag 0x9bf4c20
        (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
  (BinaryOperator 0xa157e50 <col:8> 'tcflag_t':'unsigned int' lvalue '='
    (MemberExpr 0xa157e20 <col:8> 'tcflag_t':'unsigned int' lvalue ->c_lflag 0x9bf4c60
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))
    (ImplicitCastExpr 0xa157e40 <col:8> 'tcflag_t':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa157e00 <col:8> 'const tcflag_t':'const unsigned int' lvalue .c_lflag 0x9bf4c60
        (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
  (BinaryOperator 0xa157eb8 <col:8> 'cc_t':'unsigned char' lvalue '='
    (MemberExpr 0xa157e88 <col:8> 'cc_t':'unsigned char' lvalue ->c_line 0x9bf4cb0
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))
    (ImplicitCastExpr 0xa157ea8 <col:8> 'cc_t':'unsigned char' <LValueToRValue>
      (MemberExpr 0xa157e68 <col:8> 'const cc_t':'const unsigned char' lvalue .c_line 0x9bf4cb0
        (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
  (CallExpr 0xa157ff0 <col:8> 'void *'
    (ImplicitCastExpr 0xa157fe0 <col:8> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa157fac <col:8> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa158018 <col:8> 'void *' <BitCast>
      (UnaryOperator 0xa157f98 <col:8> 'cc_t (*)[32]' prefix '&'
        (MemberExpr 0xa157ef0 <col:8> 'cc_t [32]' lvalue ->c_cc 0x9bf4d60
          (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))))
    (ImplicitCastExpr 0xa158028 <col:8> 'const void *' <BitCast>
      (UnaryOperator 0xa157f48 <col:8> 'cc_t const (*)[32]' prefix '&'
        (MemberExpr 0xa157ed0 <col:8> 'cc_t const[32]' lvalue .c_cc 0x9bf4d60
          (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
    (IntegerLiteral 0xa157fc8 <col:8> 'unsigned int' 32))
  (BinaryOperator 0xa158088 <col:8> 'speed_t':'unsigned int' lvalue '='
    (MemberExpr 0xa158054 <col:8> 'speed_t':'unsigned int' lvalue ->c_ispeed 0x9bf4db0
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))
    (ImplicitCastExpr 0xa158078 <col:8> 'speed_t':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa158034 <col:8> 'const speed_t':'const unsigned int' lvalue .c_ispeed 0x9bf4db0
        (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
  (BinaryOperator 0xa1580f0 <col:8> 'speed_t':'unsigned int' lvalue '='
    (MemberExpr 0xa1580c0 <col:8> 'speed_t':'unsigned int' lvalue ->c_ospeed 0x9bf4df0
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))
    (ImplicitCastExpr 0xa1580e0 <col:8> 'speed_t':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa1580a0 <col:8> 'const speed_t':'const unsigned int' lvalue .c_ospeed 0x9bf4df0
        (DeclRefExpr 0xa157c9c <col:8> 'const struct termios' lvalue ParmVar 0xa157c60 '' 'const struct termios &'))))
  (ReturnStmt 0xa158120 <col:8>
    (UnaryOperator 0xa158108 <col:8> 'struct termios' lvalue prefix '*'
      (CXXThisExpr 0xa157cb8 <col:8> 'struct termios *' this))))


    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
extern "C" {
    typedef __intptr_t intptr_t;
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x9c27458 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9c1d4c4 <col:26> 'int' EnumConstant 0x9c1d490 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x9c27468 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9c270c8 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x9c27094 <line:468:33> 'int' EnumConstant 0x9c26ce0 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x9c270b0 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x9c30548 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c27658 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x9c30558 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c27868 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0x9c3e3f8 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3dfe0 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0x9c3e408 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e038 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0x9c3e418 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e088 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0x9c3e428 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e0d8 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0x9c3e438 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e128 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0x9c3e448 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e178 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0x9c3e458 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e1c8 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0x9c3e468 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e218 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0x9c3e478 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e268 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0x9c3e488 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e2b8 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0x9c3e498 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e308 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0x9c3e4a8 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e358 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0x9c3e4b8 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c3e3a8 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
extern "C" {
    extern char PC;
    extern char *UP;
    extern char *BC;
    extern short ospeed;
    extern char *tgetstr(const char *, char **);
    extern char *tgoto(const char *, int, int);
    extern int tgetent(char *, const char *);
    extern int tgetflag(const char *);
    extern int tgetnum(const char *);
    extern int tputs(const char *, int, int (*)(int));
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9d23908 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa164ac0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa164814 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d2a880 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9d23a20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9d23a40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc> class allocator;
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e0b8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9d0e0a0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9d0e060 <col:9> 'char_type':'char' lvalue ParmVar 0x9d0cce0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d0e090 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9d0e078 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0cd70 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e168 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9d0e158 <col:9, col:24>
    (BinaryOperator 0x9d0e140 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d0e110 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e100 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0cc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0ce90 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e130 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e120 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0e4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9d0cee0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e218 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9d0e208 <col:9, col:23>
    (BinaryOperator 0x9d0e1f0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d0e1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0d000 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e1e0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1d0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e194 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9d0d050 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d0ffa8 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9d0ff98 <col:9, col:48>
    (CallExpr 0x9d0e2b8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9d0e2a8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d0e22c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9d0e2f0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0e2e0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e244 <col:33> 'const char_type *' lvalue ParmVar 0x9d0d150 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff78 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0ff68 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e25c <col:39> 'const char_type *' lvalue ParmVar 0x9d0d1a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff88 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d0e274 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d1e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d10138 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9d10128 <col:9, col:36>
    (CallExpr 0x9d100f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9d100e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d10094 <col:16> 'unsigned int (const char *)' lvalue Function 0x9d0ffc0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9d10118 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d100ac <col:33> 'const char_type *' lvalue ParmVar 0x9d0d2f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d103f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9d103e8 <col:9, col:77>
    (CXXStaticCastExpr 0x9d103d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9d10348 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9d10338 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d102b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9d10150 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d10380 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10370 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d102cc <col:63> 'const char_type *' lvalue ParmVar 0x9d0d3f0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9d103a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d10390 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d102e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9d0d480 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9d103b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d102fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d430 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d10548 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9d10538 <col:9, col:74>
    (CXXStaticCastExpr 0x9d10520 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10498 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9d10488 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1040c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9cd9ea0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d104d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d104c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10424 <col:58> 'char_type *' lvalue ParmVar 0x9d0d5e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d104f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d104e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d1043c <col:64> 'const char_type *' lvalue ParmVar 0x9d0d630 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d10500 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10454 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d670 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d107e8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9d107d8 <col:9, col:73>
    (CXXStaticCastExpr 0x9d107c0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10738 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9d10728 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d106c4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d10770 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d10760 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106dc <col:57> 'char_type *' lvalue ParmVar 0x9d0d780 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d10790 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10780 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106f4 <col:63> 'const char_type *' lvalue ParmVar 0x9d0d7d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d107a0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d1070c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d810 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d10938 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9d10928 <col:9, col:71>
    (CXXStaticCastExpr 0x9d10910 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10888 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9d10878 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d107fc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9ce5bb0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d108c0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d108b0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10814 <col:57> 'char_type *' lvalue ParmVar 0x9d0d8f0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9d108e0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d108d0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d1082c <col:62> 'char_type':'char' lvalue ParmVar 0x9d0d970 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9d108f0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10844 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d930 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d109b8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9d109a8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d10990 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9d10980 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9d10970 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9d1094c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9d0db00 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d10a70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9d10a60 <col:9, col:69>
    (CXXStaticCastExpr 0x9d10a48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9d10a38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9d10a18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9d10a08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9d109f8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9d109cc <col:65> 'const char_type':'const char' lvalue ParmVar 0x9d0dc20 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d10b00 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9d10af0 <col:9, col:24>
    (BinaryOperator 0x9d10ad8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d10ab8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a84 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9d0dd40 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d10ac8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a9c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9d0dd90 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d10b78 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9d10b68 <col:9, col:56>
    (CXXStaticCastExpr 0x9d10b50 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9d10b30 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9d10b18 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d10cd8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9d10cc8 <col:9, col:37>
    (ConditionalOperator 0x9d10ca8 <col:16, col:37> 'int'
      (ParenExpr 0x9d10c50 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9d10c38 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9d10c28 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9d10b8c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &'))
          (CallExpr 0x9d10c08 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9d10bf8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d10ba4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9d0ded0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9d10c68 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9d10c98 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10c80 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13618 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9d13600 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9d135c0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9d11090 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d135f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9d135d8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11120 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d136a8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9d13698 <col:9, col:24>
    (BinaryOperator 0x9d13680 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d13660 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d1362c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11240 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13670 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13644 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11290 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13738 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9d13728 <col:9, col:23>
    (BinaryOperator 0x9d13710 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d136f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136bc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d113b0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13700 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136d4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11400 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d138a0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9d13890 <col:9, col:39>
    (CallExpr 0x9d13838 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9d13828 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d137cc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b0d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cface0 'wmemcmp')))
      (ImplicitCastExpr 0x9d13860 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13784 <col:24> 'const char_type *' lvalue ParmVar 0x9d11500 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9d13870 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d1379c <col:30> 'const char_type *' lvalue ParmVar 0x9d11550 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13880 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d137b4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11590 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d139a8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9d13998 <col:9, col:26>
    (CallExpr 0x9d13968 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9d13958 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13904 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9c4aa10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9cfa730 'wcslen')))
      (ImplicitCastExpr 0x9d13988 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d138ec <col:23> 'const char_type *' lvalue ParmVar 0x9d116a0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d13ae8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9d13ad8 <col:9, col:37>
    (ImplicitCastExpr 0x9d13ac8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9d13a70 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9d13a60 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d13a40 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4af20 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff890 'wmemchr')))
        (ImplicitCastExpr 0x9d13a98 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d139f8 <col:24> 'const char_type *' lvalue ParmVar 0x9d117a0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9d13aa8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13a10 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11830 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9d13ab8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13a28 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d117e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13c50 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9d13c40 <col:9, col:40>
    (CallExpr 0x9d13be8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9d13bd8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13b7c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b420 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cfadc0 'wmemmove')))
      (ImplicitCastExpr 0x9d13c10 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b34 <col:25> 'char_type *' lvalue ParmVar 0x9d11990 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13c20 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b4c <col:31> 'const char_type *' lvalue ParmVar 0x9d119e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13c30 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13b64 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9d11a20 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13d90 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9d13d80 <col:9, col:39>
    (CallExpr 0x9d13d28 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9d13d18 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13ce4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9c4b280 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9cfad50 'wmemcpy')))
      (ImplicitCastExpr 0x9d13d50 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13c9c <col:24> 'char_type *' lvalue ParmVar 0x9d11b30 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13d60 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13cb4 <col:30> 'const char_type *' lvalue ParmVar 0x9d11b80 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13d70 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13ccc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11bc0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d13ef0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9d13ee0 <col:9, col:37>
    (CallExpr 0x9d13e88 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9d13e78 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13e24 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4b5e0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff580 'wmemset')))
      (ImplicitCastExpr 0x9d13eb0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13ddc <col:24> 'char_type *' lvalue ParmVar 0x9d11ca0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9d13ec0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13df4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9d11d20 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9d13ed0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13e0c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d11ce0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d13f70 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9d13f60 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9d13f48 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9d13f38 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9d13f28 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13f10 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d11e90 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d13ff0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9d13fe0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9d13fc8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9d13fb8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9d13fa8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13f90 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d13180 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d14080 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9d14070 <col:9, col:24>
    (BinaryOperator 0x9d14058 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d14038 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14004 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132a0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d14048 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d1401c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132f0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d140f8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9d140e8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d140d0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9d140b0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9d14098 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d142d0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9d142c0 <col:9, col:46>
    (ConditionalOperator 0x9d142a0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9d14218 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9d14208 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1410c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9d13390 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9d14124 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9d14240 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9d141a8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9d14198 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d1413c <col:33> 'int_type (void)' lvalue CXXMethod 0x9d13430 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9d14290 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d14250 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9d14280 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14268 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9e4e7f8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9e4e7e8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9dd8700 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9dd86e8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa165620 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa165610 <col:9, col:29>
    (ImplicitCastExpr 0xa165600 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa1655e0 <col:17, col:29> 'char *' lvalue ._M_p 0x9e4ed80
        (MemberExpr 0xa1655c0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e4edb0
          (CXXThisExpr 0xa1654a0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa165488 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa165478 <col:9, col:59>
    (UnaryOperator 0xa165460 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa165448 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa165430 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa165418 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa165400 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa1653e0 <col:44, col:52> 'char *'
                (MemberExpr 0xa1653c0 <col:44> '<bound member function type>' ->_M_data 0x9e4ee30
                  (CXXThisExpr 0xa1653b0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9dfa6d8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9dfa6c0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa164dd8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa164dc8 <col:9, col:26>
    (ImplicitCastExpr 0xa164db8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa164d98 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9e6ed50
        (ImplicitCastExpr 0xa164d88 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa164d50 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa164d30 <col:16> '<bound member function type>' ->_M_rep 0x9e4f100
              (CXXThisExpr 0xa164c08 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa164bf0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa164be0 <col:9, col:32>
    (BinaryOperator 0xa164bc8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa164b98 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa164b78 <col:16, col:22> '<bound member function type>' ->size 0x9e560a0
          (CXXThisExpr 0xa164b68 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa164bb8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e02108 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa165cc0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa165748 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa1656f0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa1656e0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa165674 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9e57640 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa1656c0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa1656a0 <col:13, col:19> '<bound member function type>' ->size 0x9e560a0
          (CXXThisExpr 0xa165690 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa165718 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa165708 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02574 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa165738 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e02560 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e02530 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa165cb0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa165ca0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa165c88 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa165c40 <col:9, col:17> 'char *'
          (MemberExpr 0xa165c20 <col:9> '<bound member function type>' ->_M_data 0x9e4ee30
            (CXXThisExpr 0xa165c10 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa165c78 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa165c5c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9e57640 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa164628 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa164488 <line:180:4, col:62>
    0xa1642b0 "void *__p =
      (CXXReinterpretCastExpr 0xa164470 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa164458 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa164400 <col:41> 'size_type []' lvalue Var 0x9e96c80 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa164618 <line:181:4, col:39>
    (UnaryOperator 0xa164600 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa1645e8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa1645d8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa1645bc <col:36> 'void *' lvalue Var 0xa1642b0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa164298 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa164278 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa163fa0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa163f58 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa163f48 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9df846c <col:8> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa163f80 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa163f30 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa163d90 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa163f18 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa163ef8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa163ee8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa163eb0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9e96e00 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa163f90 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9df8558 <col:50> '_Bool' false))))
    (CompoundStmt 0xa164260 <line:236:6, line:245:6>
      (NullStmt 0x9df8590 <line:238:67>)
      (IfStmt 0xa164240 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa164098 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa164070 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa164060 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9df85c0 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0bf0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa164048 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa164028 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9e96450
                (ImplicitCastExpr 0xa164018 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa163ff0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9df8658 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9df8640 <col:10> 'int' 1)))
          (IntegerLiteral 0x9df8698 <col:16> 'int' 0))
        (CompoundStmt 0xa164228 <line:241:3, line:244:3>
          (NullStmt 0x9df8718 <line:242:63>)
          (CXXMemberCallExpr 0xa164208 <line:243:5, col:19> 'void'
            (MemberExpr 0xa1641d0 <col:5> '<bound member function type>' ->_M_destroy 0x9e97ab0
              (CXXThisExpr 0xa1640b0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa1641f0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9e97990 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa1634f0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9e73dd8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9e73dc8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9dd8700 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9dd86e8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa163d30 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa163d20 <col:9, col:29>
    (ImplicitCastExpr 0xa163d10 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa163cf0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9e74360
        (MemberExpr 0xa163cd0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e74390
          (CXXThisExpr 0xa163bb0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa163b98 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa163b88 <col:9, col:59>
    (UnaryOperator 0xa163b70 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa163b58 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa163b40 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa163b28 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa163b10 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa163af0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa163ad0 <col:44> '<bound member function type>' ->_M_data 0x9e74410
                  (CXXThisExpr 0xa163ac0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9dfa6d8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9dfa6c0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa163440 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa163420 <col:9, col:51> 'void'
    (CXXTemporary 0xa1633a0)
    (CXXMemberCallExpr 0xa1633b8 <col:9, col:51> 'void'
      (MemberExpr 0xa163314 <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9e979e0
        (CXXMemberCallExpr 0xa1632e8 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa1632c8 <col:9> '<bound member function type>' ->_M_rep 0x9e74700
            (ImplicitCastExpr 0xa163308 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa15c060 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa163410 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa163400 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa1633a8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa1633a0)
            (CXXMemberCallExpr 0xa163368 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa163348 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9e8e200
                (ImplicitCastExpr 0xa163388 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa163338 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa165f70 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa165f60 <col:9, col:26>
    (ImplicitCastExpr 0xa165f50 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa165f30 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9e962d0
        (ImplicitCastExpr 0xa165f20 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa165f00 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa165ee0 <col:16> '<bound member function type>' ->_M_rep 0x9e74700
              (CXXThisExpr 0xa165dc0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa165da8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa165d98 <col:9, col:32>
    (BinaryOperator 0xa165d80 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa165d50 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa165d30 <col:16, col:22> '<bound member function type>' ->size 0x9e7b610
          (CXXThisExpr 0xa165d20 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa165d70 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e02108 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa166610 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa166098 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa166040 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa166030 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa165fc4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9e7cb70 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa166010 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa165ff0 <col:13, col:19> '<bound member function type>' ->size 0x9e7b610
          (CXXThisExpr 0xa165fe0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa166068 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa166058 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02574 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa166088 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e02560 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e02530 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa166600 <line:859:2, col:22>
    (ImplicitCastExpr 0xa1665f0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa1665d8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa166590 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa166570 <col:9> '<bound member function type>' ->_M_data 0x9e74410
            (CXXThisExpr 0xa166560 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa1665c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1665ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9e7cb70 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa166b40 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa166b30 <col:9, col:24>
    (ImplicitCastExpr 0xa166b20 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa166b00 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa166ae0 <col:16> '<bound member function type>' ->_M_data 0x9e74410
          (CXXThisExpr 0xa166ad0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa164800 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa1647f0 <col:9, col:16>
    (CXXConstructExpr 0xa1647c8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa1647b8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa1647a8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa164760 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e74390
            (CXXThisExpr 0xa164640 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa15aae8 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa15aa98 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa15a858 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa15a848 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa15a824 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0x9c71f60 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0xa15aa80 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa15aa70 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa15aa4c <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0xa15a9d0 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa15b018 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa15afc8 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa15ad80 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa15ad70 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa15ad50 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0xa15aab0 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0xa15afb0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa15afa0 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa15af7c <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0xa15af00 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0x9c6cc78 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0x9c683b8 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0x9c68390 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0x9c6cc58 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0x9c6cc30 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9c6d1a0 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9c6d630 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9be3e18 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be3dc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0x9c6d980 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9be3e18 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be3dc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9be4a98 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4a40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c735c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73570 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9be4788 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4730 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71978 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71920 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c738d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73880 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71668 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71610 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c72fa8 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c72250 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c87d68 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4120 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c732b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73260 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71f98 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71f40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c882d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4120 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71c88 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71c30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71358 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71300 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c86c58 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4120 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c73be8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73b90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9be4478 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4420 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0x9be4120 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9be4478 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4420 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9be4788 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4730 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9be4a98 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9be4a40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71358 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71300 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71668 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71610 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71978 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71920 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71c88 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71c30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c71f98 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c71f40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c72fa8 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c72250 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c732b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73260 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c735c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73570 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c738d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73880 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9c73be8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73b90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9c75218 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c751c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa15aa08 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c73ef0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9c74f08 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c74eb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9c75528 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c754d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0x9c73ef0 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9c74f08 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c74eb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9c75218 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c751c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9c75528 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c754d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0xa15af38 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c75830 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9c75830 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9c76770 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa159458 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c76ac0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9c76ac0 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9c77040 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9c79818 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c797c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9c7a818 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7a7c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0x9c794c0 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9c79818 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c797c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9c7a818 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7a7c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9c7b188 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7b130 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9c7ae78 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7ae20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9c7b498 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7b440 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0x9c7ab20 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9c7ae78 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7ae20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9c7b188 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7b130 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9c7b498 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9c7b440 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0x9c7c520 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0x9c85fe8 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0x9c85fd8 <col:7, col:23>
    (BinaryOperator 0x9c85fc0 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0x9c85f8c <col:14> '_Type *' lvalue ParmVar 0x9c85e60 '__ptr' '_Type *')
      (IntegerLiteral 0x9c85fa8 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0x9c861b0 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0x9c861a0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9c86190 <col:14> '_Bool' false)))

;
    template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0x9c862d0 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0x9eb7038 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0x9eb7018 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0x9eb6e90 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9eb6e78 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9eb6e50 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x9eb6e40 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9c8c7b8 <col:37, col:40> 'int'
              (UnaryOperator 0x9c8c7a0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9c8c788 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x9eb6e68 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9c8c7f0 <col:44> 'int' 0))))
    (BinaryOperator 0x9eb6fd0 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0x9eb6ec0 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x9eb6eb0 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9c8c838 <col:33> 'int' 1)))
      (ParenExpr 0x9eb6fb8 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9eb6fa0 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9eb6f08 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9eb6ee0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0x9eb6ef8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9c8c890 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9eb6f90 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9eb6f78 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9eb6f60 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9eb6f38 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0x9eb6f28 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0x9c8c900 <col:37, col:40> 'int'
                      (UnaryOperator 0x9c8c8e8 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0x9c8c8d0 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0x9eb6f50 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9c8c938 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0x9eb7000 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x9eb6ff0 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9c8c9c8 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0x9eb73c8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0x9eb73a8 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0x9eb7100 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9eb70e8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9eb70c0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x9eb70b0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9c8caa8 <col:37, col:40> 'int'
              (UnaryOperator 0x9c8ca90 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9c8ca78 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x9eb70d8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9c8cae0 <col:44> 'int' 0))))
    (ParenExpr 0x9eb7348 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0x9eb7330 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0x9eb7308 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0x9eb72f0 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0x9eb72d8 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0x9eb72c0 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0x9eb7298 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0x9eb7280 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0x9eb7130 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0x9eb7120 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0x9c8cb28 <col:13> 'int' 1)))
                    (ParenExpr 0x9eb7268 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x9eb7250 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9eb7228 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9eb7210 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9eb7178 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9eb7150 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0x9eb7168 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9c8cb80 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9eb7200 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9eb71e8 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9eb71d0 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9eb71a8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0x9eb7198 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0x9c8cbf0 <col:37, col:40> 'int'
                                        (UnaryOperator 0x9c8cbd8 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0x9c8cbc0 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0x9eb71c0 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0x9c8cc28 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0x9eb7240 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9c8cca0 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0x9eb72b0 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9c8cd18 <col:49> 'int' 1))))
            (IntegerLiteral 0x9c8cd60 <col:55> 'int' 1)))
        (ImplicitCastExpr 0x9eb7320 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9c8cda8 <col:60> 'int' 1))))
    (UnaryOperator 0x9eb7390 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0x9eb7378 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x9eb7368 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9c8cdf0 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0x9eb7480 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9eb7468 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9eb7440 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x9eb7430 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0x9c8cee8 <col:37, col:40> 'int'
          (UnaryOperator 0x9c8ced0 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0x9c8ceb8 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0x9eb7458 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0x9c8cf20 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0x9eb75e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9eb75c8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9eb75b0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9eb7518 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9eb74f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0x9eb7508 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9c8cfd8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9eb75a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9eb7588 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9eb7570 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9eb7548 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0x9eb7538 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0x9c8f5c0 <col:37, col:40> 'int'
                  (UnaryOperator 0x9c8f5a8 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9c8d018 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0x9eb7560 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0x9c8f5f8 <col:44> 'int' 0))))))))
;
    }
template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0x9f64090 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9f64078 <col:3, col:68> 'int'
    (ConditionalOperator 0x9f64058 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x9f63eb0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9f63e98 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9f63e88 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9f63e70 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x9f63e60 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9c8c7b8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9c8c7a0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9c8c788 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9c8c7f0 <col:44> 'int' 0)))
      (BinaryOperator 0x9f64000 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x9f63ff0 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x9f63ee0 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x9f63ed0 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9c8c838 <col:33> 'int' 1))))
        (ParenExpr 0x9f63fd8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x9f63fc0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x9f63f28 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x9f63f00 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0x9f63f18 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9c8c890 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x9f63fb0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x9f63f98 <col:31, col:45> '_Bool'
                (BinaryOperator 0x9f63f80 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x9f63f70 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x9f63f58 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0x9f63f48 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0x9c8c900 <col:37, col:40> 'int'
                          (UnaryOperator 0x9c8c8e8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9c8c8d0 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9c8c938 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x9f64048 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x9f64030 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0x9f64020 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0x9c8c9c8 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0x9f68c10 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9f68bf8 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x9f68bd8 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x9f68930 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9f68918 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9f68908 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9f688f0 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x9f688e0 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9c8caa8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9c8ca90 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9c8ca78 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9c8cae0 <col:44> 'int' 0)))
      (ParenExpr 0x9f68b68 <line:51:4, col:61> 'int'
        (BinaryOperator 0x9f68b50 <col:5, col:60> 'int' '+'
          (ParenExpr 0x9f68b38 <col:5, col:56> 'int'
            (BinaryOperator 0x9f68b20 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x9f68b08 <col:6, col:50> 'int'
                (BinaryOperator 0x9f68af0 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x9f68ad8 <col:7, col:45> 'int'
                    (BinaryOperator 0x9f68ac0 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x9f68ab0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x9f68960 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0x9f68950 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0x9c8cb28 <col:13> 'int' 1))))
                      (ParenExpr 0x9f68a98 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x9f68a80 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x9f68a58 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x9f68a40 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x9f689a8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x9f68980 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0x9f68998 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9c8cb80 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x9f68a30 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x9f68a18 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x9f68a00 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x9f689f0 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x9f689d8 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0x9f689c8 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0x9c8cbf0 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9c8cbd8 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9c8cbc0 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9c8cc28 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x9f68a70 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9c8cca0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9c8cd18 <col:49> 'int' 1)))
              (IntegerLiteral 0x9c8cd60 <col:55> 'int' 1)))
          (IntegerLiteral 0x9c8cda8 <col:60> 'int' 1)))
      (UnaryOperator 0x9f68bc0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x9f68bb0 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x9f68b98 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x9f68b88 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9c8cdf0 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x9f68cc0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9f68ca8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x9f68c98 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x9f68c80 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0x9f68c70 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0x9c8cee8 <col:37, col:40> 'int'
            (UnaryOperator 0x9c8ced0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9c8ceb8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9c8cf20 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9f68e20 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9f68e08 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9f68df0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9f68d58 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9f68d30 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0x9f68d48 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9c8cfd8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9f68de0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9f68dc8 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9f68db0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x9f68da0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x9f68d88 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0x9f68d78 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0x9c8f5c0 <col:37, col:40> 'int'
                    (UnaryOperator 0x9c8f5a8 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9c8d018 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9c8f5f8 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0xa014ab0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa014a98 <col:3, col:68> 'int'
    (ConditionalOperator 0xa014a78 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa0148d0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa0148b8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa0148a8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa014890 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa014880 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9c8c7b8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9c8c7a0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9c8c788 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9c8c7f0 <col:44> 'int' 0)))
      (BinaryOperator 0xa014a20 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa014a10 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa014900 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa0148f0 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9c8c838 <col:33> 'int' 1))))
        (ParenExpr 0xa0149f8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa0149e0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa014948 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa014920 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0xa014938 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9c8c890 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa0149d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa0149b8 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa0149a0 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa014990 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa014978 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0xa014968 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0x9c8c900 <col:37, col:40> 'int'
                          (UnaryOperator 0x9c8c8e8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9c8c8d0 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9c8c938 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa014a68 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa014a50 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0xa014a40 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0x9c8c9c8 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0xa017ff0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa017fd8 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa017fb8 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa014b70 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa014b58 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa014b48 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa014b30 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa014b20 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9c8caa8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9c8ca90 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9c8ca78 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9c8cae0 <col:44> 'int' 0)))
      (ParenExpr 0xa014da8 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa014d90 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa014d78 <col:5, col:56> 'int'
            (BinaryOperator 0xa014d60 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa014d48 <col:6, col:50> 'int'
                (BinaryOperator 0xa014d30 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa014d18 <col:7, col:45> 'int'
                    (BinaryOperator 0xa014d00 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa014cf0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa014ba0 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0xa014b90 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0x9c8cb28 <col:13> 'int' 1))))
                      (ParenExpr 0xa014cd8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa014cc0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa014c98 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa014c80 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa014be8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa014bc0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0xa014bd8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9c8cb80 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa014c70 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa014c58 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa014c40 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa014c30 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa014c18 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0xa014c08 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0x9c8cbf0 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9c8cbd8 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9c8cbc0 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9c8cc28 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa014cb0 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9c8cca0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9c8cd18 <col:49> 'int' 1)))
              (IntegerLiteral 0x9c8cd60 <col:55> 'int' 1)))
          (IntegerLiteral 0x9c8cda8 <col:60> 'int' 1)))
      (UnaryOperator 0xa017fa0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa017f90 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa017f78 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa017f68 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9c8cdf0 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa0180a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa018088 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa018078 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa018060 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0xa018050 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0x9c8cee8 <col:37, col:40> 'int'
            (UnaryOperator 0x9c8ced0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9c8ceb8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9c8cf20 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa018200 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa0181e8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa0181d0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa018138 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa018110 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0xa018128 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9c8cfd8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa0181c0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa0181a8 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa018190 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa018180 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa018168 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0xa018158 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0x9c8f5c0 <col:37, col:40> 'int'
                    (UnaryOperator 0x9c8f5a8 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9c8d018 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9c8f5f8 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0x9dfe6a8 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0x9dfe688 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0x9dfe540 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9dfe528 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9dfe510 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9c8c7b8 <col:37, col:40> 'int'
            (UnaryOperator 0x9c8c7a0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9c8c788 <col:39> 'int' 1))))
        (IntegerLiteral 0x9c8c7f0 <col:44> 'int' 0)))
    (BinaryOperator 0x9dfe650 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0x9dfe560 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0x9c8c838 <col:33> 'int' 1))
      (ParenExpr 0x9dfe638 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9dfe620 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9dfe5a8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9dfe580 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0x9dfe598 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9c8c890 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9dfe610 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9dfe5f8 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9dfe5e0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9dfe5c8 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0x9c8c900 <col:37, col:40> 'int'
                    (UnaryOperator 0x9c8c8e8 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9c8c8d0 <col:39> 'int' 1))))
                (IntegerLiteral 0x9c8c938 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0x9dfe670 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0x9c8c9c8 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0x9dfe9b8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0x9dfe998 <line:42:31, line:51:71> 'int'
    (ParenExpr 0x9dfe750 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9dfe738 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9dfe720 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9c8caa8 <col:37, col:40> 'int'
            (UnaryOperator 0x9c8ca90 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9c8ca78 <col:39> 'int' 1))))
        (IntegerLiteral 0x9c8cae0 <col:44> 'int' 0)))
    (ParenExpr 0x9dfe948 <line:51:4, col:61> 'int'
      (BinaryOperator 0x9dfe930 <col:5, col:60> 'int' '+'
        (ParenExpr 0x9dfe918 <col:5, col:56> 'int'
          (BinaryOperator 0x9dfe900 <col:6, col:55> 'int' '<<'
            (ParenExpr 0x9dfe8e8 <col:6, col:50> 'int'
              (BinaryOperator 0x9dfe8d0 <col:7, col:49> 'int' '-'
                (ParenExpr 0x9dfe8b8 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0x9dfe8a0 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0x9dfe770 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0x9c8cb28 <col:13> 'int' 1))
                    (ParenExpr 0x9dfe888 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x9dfe870 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9dfe848 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9dfe830 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9dfe7b8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9dfe790 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0x9dfe7a8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9c8cb80 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9dfe820 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9dfe808 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9dfe7f0 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9dfe7d8 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0x9c8cbf0 <col:37, col:40> 'int'
                                      (UnaryOperator 0x9c8cbd8 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0x9c8cbc0 <col:39> 'int' 1))))
                                  (IntegerLiteral 0x9c8cc28 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0x9dfe860 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9c8cca0 <col:43> 'int' 1))))))
                (IntegerLiteral 0x9c8cd18 <col:49> 'int' 1)))
            (IntegerLiteral 0x9c8cd60 <col:55> 'int' 1)))
        (IntegerLiteral 0x9c8cda8 <col:60> 'int' 1)))
    (UnaryOperator 0x9dfe980 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0x9dfe968 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0x9c8cdf0 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9dfea50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9dfea38 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9dfea20 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0x9c8cee8 <col:37, col:40> 'int'
        (UnaryOperator 0x9c8ced0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9c8ceb8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9c8cf20 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9dfeb90 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9dfeb78 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9dfeb60 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9dfeae8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9dfeac0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0x9dfead8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9c8cfd8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9dfeb50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9dfeb38 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9dfeb20 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9dfeb08 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0x9c8f5c0 <col:37, col:40> 'int'
                (UnaryOperator 0x9c8f5a8 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0x9c8d018 <col:39> 'int' 1))))
            (IntegerLiteral 0x9c8f5f8 <col:44> 'int' 0)))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0x9c8ca20 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0x9c8ca00 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0x9c8c820 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9c8c808 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9c8c7d8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9c8c7b8 <col:37, col:40> 'int'
            (UnaryOperator 0x9c8c7a0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9c8c788 <col:39> 'int' 1))))
        (IntegerLiteral 0x9c8c7f0 <col:44> 'int' 0)))
    (BinaryOperator 0x9c8c9b0 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0x9c8c858 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0x9c8c838 <col:33> 'int' 1))
      (ParenExpr 0x9c8c998 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0x9c8c980 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0x9c8c8b8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9c8c878 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0x9c8c8a8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9c8c890 <col:22> 'int' 8)))
          (ParenExpr 0x9c8c968 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0x9c8c950 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0x9c8c920 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0x9c8c900 <col:37, col:40> 'int'
                  (UnaryOperator 0x9c8c8e8 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9c8c8d0 <col:39> 'int' 1))))
              (IntegerLiteral 0x9c8c938 <col:44> 'int' 0))))))
    (CStyleCastExpr 0x9c8c9e8 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0x9c8c9c8 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0x9c8ce60 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0x9c8ce40 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0x9c8cb10 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9c8caf8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9c8cac8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9c8caa8 <col:37, col:40> 'int'
            (UnaryOperator 0x9c8ca90 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9c8ca78 <col:39> 'int' 1))))
        (IntegerLiteral 0x9c8cae0 <col:44> 'int' 0)))
    (ParenExpr 0x9c8cdd8 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0x9c8cdc0 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0x9c8cd90 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0x9c8cd78 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0x9c8cd48 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0x9c8cd30 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0x9c8cd00 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0x9c8cce8 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0x9c8cb48 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0x9c8cb28 <col:13> 'int' 1))
                    (ParenExpr 0x9c8ccd0 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0x9c8ccb8 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0x9c8cc88 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0x9c8cc70 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0x9c8cba8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9c8cb68 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0x9c8cb98 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9c8cb80 <col:22> 'int' 8)))
                            (ParenExpr 0x9c8cc58 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0x9c8cc40 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0x9c8cc10 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0x9c8cbf0 <col:37, col:40> 'int'
                                    (UnaryOperator 0x9c8cbd8 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0x9c8cbc0 <col:39> 'int' 1))))
                                (IntegerLiteral 0x9c8cc28 <col:44> 'int' 0)))))
                        (IntegerLiteral 0x9c8cca0 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0x9c8cd18 <col:49> 'int' 1)))
            (IntegerLiteral 0x9c8cd60 <col:55> 'int' 1)))
        (IntegerLiteral 0x9c8cda8 <col:60> 'int' 1)))
    (UnaryOperator 0x9c8ce28 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0x9c8ce10 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0x9c8cdf0 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9c8cf50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0x9c8cf38 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0x9c8cf08 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0x9c8cee8 <col:37, col:40> 'int'
        (UnaryOperator 0x9c8ced0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9c8ceb8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9c8cf20 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0x9c8f658 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0x9c8f640 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0x9c8d000 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x9c8cfc0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0x9c8cff0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9c8cfd8 <col:22> 'int' 8)))
    (ParenExpr 0x9c8f628 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9c8f610 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9c8f5e0 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9c8f5c0 <col:37, col:40> 'int'
            (UnaryOperator 0x9c8f5a8 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9c8d018 <col:39> 'int' 1))))
        (IntegerLiteral 0x9c8f5f8 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0x9c90860 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0x9c90848 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0x9c90830 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0x9c90820 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0x9c90188 <col:4> 'int' 2))
      (BinaryOperator 0x9c90808 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0x9c907c8 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0x9c907b8 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0x9c90570 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0x9c90550 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0x9c90330 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0x9c90358 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0x9c90530 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0x9c904d8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0x9c90500 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0x9c90518 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0x9c90588 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0x9c907f8 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0x9c907e0 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0x9c908b8 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0x9c90c30 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9c90c10 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0x9c90a40 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9c90a68 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0x9c90bf0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0x9c90b98 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9c90bc0 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0x9c90bd8 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0x9c90fb0 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9c90f90 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0x9c90dc0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9c90de8 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0x9c90f70 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0x9c90f18 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9c90f40 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0x9c90f58 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0x9c92360 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0x9c92350 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0x9c92338 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0x9c92310 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0x9c922f8 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0x9c92298 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0x9c9224c <col:61> '_Tp' lvalue ParmVar 0x9c92100 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0x9c92788 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0x9c926b8 <line:127:7, col:37>
    0x9c92650 "_Tp __tmp =
      (ParenExpr 0x9c926a0 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0x9c92684 <line:127:33> '_Tp' lvalue ParmVar 0x9c924c0 '__a' '_Tp &'))")
  (BinaryOperator 0x9c92710 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9c926c8 <line:128:7> '_Tp' lvalue ParmVar 0x9c924c0 '__a' '_Tp &')
    (ParenExpr 0x9c926f8 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9c926e0 <line:128:27> '_Tp' lvalue ParmVar 0x9c92510 '__b' '_Tp &')))
  (BinaryOperator 0x9c92770 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9c92728 <line:129:7> '_Tp' lvalue ParmVar 0x9c92510 '__b' '_Tp &')
    (ParenExpr 0x9c92758 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9c92740 <line:129:27> '_Tp' lvalue Var 0x9c92650 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0x9bfd020 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0x9bfcff8 <line:138:7, line:139:25>
    (DeclStmt 0x9bfce70 <line:138:12, col:26>
      0x9bfce10 "size_t __n =
        (ImplicitCastExpr 0x9bfce60 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9bfce48 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9bfcec0 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0x9bfceb0 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9bfce80 <col:28> 'size_t':'unsigned int' lvalue Var 0x9bfce10 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0x9bfce98 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0x9bfcaa0 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0x9bfcef0 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9bfced8 <col:41> 'size_t':'unsigned int' lvalue Var 0x9bfce10 '__n' 'size_t':'unsigned int'))
    (CallExpr 0x9bfcfd0 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9bfcf08 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfcdd0 0x9c92610)
      (ArraySubscriptExpr 0x9bfcf70 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9bfcf40 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9bfcbf0 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9bfcf58 <col:11> 'size_t':'unsigned int' lvalue Var 0x9bfce10 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0x9bfcfb8 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0x9bfcf84 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9bfccd0 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9bfcf9c <col:21> 'size_t':'unsigned int' lvalue Var 0x9bfce10 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0x9bfe120 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0x9bfe130 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0x9bfd5c0 '__a' 'const _T1 &')
), second((DeclRefExpr 0x9bfe188 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0x9bfd650 '__b' 'const _T2 &')
) (CompoundStmt 0x9bfe1e0 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0x9bfe208 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0x9bfe1f0 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x9bfd9f0 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0x9bfe290 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0x9bfe278 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x9bfd9f0 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0x9bfe310 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bfe9e8 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0x9bfe9d8 <col:7, col:58>
    (BinaryOperator 0x9bfe9c0 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9bfe898 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfe860 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790)
        (CXXDependentScopeMemberExpr 0x9bfe7d8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bfe7c0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfe520 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9bfe828 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9bfe80c <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfe690 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0x9bfe998 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfe960 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790)
        (CXXDependentScopeMemberExpr 0x9bfe8d8 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9bfe8bc <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfe520 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9bfe928 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0x9bfe90c <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfe690 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bff420 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0x9bff410 <line:208:7, line:209:62>
    (BinaryOperator 0x9bff3f8 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9bfef38 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9bfef00 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30)
        (CXXDependentScopeMemberExpr 0x9bfee78 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9bfee60 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfebe0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9bfeec8 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9bfeeac <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfed50 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0x9bff3e0 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0x9bff3c8 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0x9bff2b0 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0x9bff298 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0x9bff270 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0x9bff238 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30)
                (CXXDependentScopeMemberExpr 0x9bfef78 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0x9bfef5c <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfed50 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0x9bff200 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9bfefac <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfebe0 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0x9bff3a0 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9bff368 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30)
            (CXXDependentScopeMemberExpr 0x9bff2e0 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0x9bff2c4 <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfebe0 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0x9bff330 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0x9bff314 <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bfed50 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bff970 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0x9bff960 <col:7, col:26>
    (UnaryOperator 0x9bff948 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9bff930 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9bff908 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9bff8d0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790)
          (DeclRefExpr 0x9bff8a0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bff620 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9bff8b8 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bff790 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9bffe90 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0x9bffe80 <col:7, col:20>
    (CXXOperatorCallExpr 0x9bffe58 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9bffe20 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30)
      (DeclRefExpr 0x9bffdf0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bffce0 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0x9bffe08 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x9bffb70 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9c9f1d0 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0x9c9f1c0 <col:7, col:25>
    (UnaryOperator 0x9c9f1a8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9c9f190 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9c9f168 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9c9f130 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30)
          (DeclRefExpr 0x9c9f100 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9c9eff0 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9c9f118 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9c00090 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9c9f720 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0x9c9f710 <col:7, col:25>
    (UnaryOperator 0x9c9f6f8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9c9f6e0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9c9f6b8 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9c9f680 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30)
          (DeclRefExpr 0x9c9f650 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9c9f3d0 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9c9f668 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9c9f540 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0x9c9fbd8 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0x9c9fbc8 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0x9c9fba8 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0x9c9fb78 <col:29> '_T1' lvalue ParmVar 0x9c9f8d0 '__x' '_T1')
      (DeclRefExpr 0x9c9fb90 <col:34> '_T2' lvalue ParmVar 0x9c9f910 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0xa09eaa0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0xa0a2bb0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0x9ca68a0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x9ca6890 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0x9ca6878 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0xa15bd68 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa15bd58 <col:9, col:16>
    (ImplicitCastExpr 0xa15bd48 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0xa15bd2c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa159830 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9ca7408 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9ca73f8 <col:9, col:16>
    (DeclRefExpr 0x9ca73e0 <col:16> '_Iterator' lvalue ParmVar 0x9ca72c0 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9ca7a30 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x9ca7a20 <col:9, col:26>
    (CallExpr 0x9ca7a00 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ca79c8 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0x9ca79b0 <col:16> '_Iterator' lvalue ParmVar 0x9ca7890 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9ca80c8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0x9ca7f70 <line:78:7, col:72>
    0x9ca7f20 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0x9ca7f58 <col:71> 'int' 0)")
  (WhileStmt 0x9ca8088 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ca7fe8 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9ca7fb0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870)
      (DeclRefExpr 0x9ca7f80 <col:14> '_InputIterator' lvalue ParmVar 0x9ca7c50 '__first' '_InputIterator')
      (DeclRefExpr 0x9ca7f98 <col:25> '_InputIterator' lvalue ParmVar 0x9ca7c90 '__last' '_InputIterator'))
    (CompoundStmt 0x9ca8070 <line:80:2, line:83:2>
      (UnaryOperator 0x9ca8028 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ca800c <col:6> '_InputIterator' lvalue ParmVar 0x9ca7c50 '__first' '_InputIterator'))
      (UnaryOperator 0x9ca8058 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ca803c <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9ca7f20 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0x9ca80b8 <line:84:7, col:14>
    (DeclRefExpr 0x9ca809c <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9ca7f20 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0x9cac770 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x9cac760 <line:95:7, col:23>
    (BinaryOperator 0x9cac748 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0x9cac714 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x9cac570 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0x9cac72c <col:23> '_RandomAccessIterator' lvalue ParmVar 0x9cac530 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9cacb90 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x9cacb80 <line:115:7, line:116:42>
    (CallExpr 0x9cacb58 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0x9caca68 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ca7e00 0x9cac6e0)
      (DeclRefExpr 0x9cacaa0 <col:30> '_InputIterator' lvalue ParmVar 0x9cac8c0 '__first' '_InputIterator')
      (DeclRefExpr 0x9cacab8 <col:39> '_InputIterator' lvalue ParmVar 0x9cac900 '__last' '_InputIterator')
      (CallExpr 0x9cacb38 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9cacae8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ca6760)
        (DeclRefExpr 0x9cacb1c <col:34> '_InputIterator' lvalue ParmVar 0x9cac8c0 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0x9cacef8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0x9cacee0 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0x9cace98 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0x9cace64 <col:14> '_Distance' lvalue ParmVar 0x9caccd0 '__n' '_Distance'))
    (UnaryOperator 0x9cacec8 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9caceac <col:4> '_InputIterator' lvalue ParmVar 0x9cacc90 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0x9cad398 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0x9cad378 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cad230 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9cad1f8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0)
      (DeclRefExpr 0x9cad1c4 <col:11> '_Distance' lvalue ParmVar 0x9cad030 '__n' '_Distance')
      (IntegerLiteral 0x9cad1e0 <col:17> 'int' 0))
    (WhileStmt 0x9cad2d0 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0x9cad288 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0x9cad254 <col:16> '_Distance' lvalue ParmVar 0x9cad030 '__n' '_Distance'))
      (UnaryOperator 0x9cad2b8 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cad29c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9cacff0 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0x9cad360 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0x9cad318 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9cad2e4 <col:16> '_Distance' lvalue ParmVar 0x9cad030 '__n' '_Distance'))
      (UnaryOperator 0x9cad348 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9cad32c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9cacff0 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0x9cae108 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x9cae0e8 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9cae0b4 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x9cad490 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0x9cae0cc <col:14> '_Distance' lvalue ParmVar 0x9cadf20 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0x9cae608 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x9cae4b0 <line:173:7, col:74>
    0x9cae460 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0x9cae494 <col:71> '_Distance' lvalue ParmVar 0x9cae240 '__n' '_Distance')")
  (CallExpr 0x9cae5e0 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x9cae4e8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cace30 0x9cad190 0x9cae080)
    (DeclRefExpr 0x9cae524 <col:22> '_InputIterator' lvalue ParmVar 0x9cae200 '__i' '_InputIterator &')
    (DeclRefExpr 0x9cae53c <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9cae460 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0x9cae5c0 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9cae570 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ca6760)
      (DeclRefExpr 0x9cae5a4 <col:57> '_InputIterator' lvalue ParmVar 0x9cae200 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0x9cb2110 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0x9cb2120 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x9cb01e0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0x9cb2180 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0x9cb21a8 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0x9cb2190 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb0320 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0x9cb2220 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0x9cb2280 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9cb2248 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0x9cb2230 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x9cb0580 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0x9cb22e0 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0x9cb2368 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0x9cb2358 <col:9, col:16>
    (MemberExpr 0x9cb2334 <col:16> 'const _Iterator' lvalue ->current 0x9cafdc0
      (CXXThisExpr 0x9cb2308 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0x9cb2460 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0x9cb23f8 <line:158:2, col:27>
    0x9cb2390 "_Iterator __tmp =
      (MemberExpr 0x9cb23d8 <col:20> 'const _Iterator' lvalue ->current 0x9cafdc0
        (CXXThisExpr 0x9cb23c8 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0x9cb2450 <line:159:2, col:12>
    (UnaryOperator 0x9cb2438 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0x9cb2420 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9cb2408 <col:12> '_Iterator' lvalue Var 0x9cb2390 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0x9cb2508 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0x9cb24f8 <col:9, col:29>
    (UnaryOperator 0x9cb24e0 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0x9cb24c8 <col:17, col:29> '<dependent type>'
        (CallExpr 0x9cb24a8 <col:18, col:28> '<dependent type>'
          (MemberExpr 0x9cb2488 <col:18, col:26> '<bound member function type>' ->operator* 0x9cb07d0
            (CXXThisExpr 0x9cb2478 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0x9cb25a0 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0x9cb2550 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9cb2530 <col:4> '_Iterator' lvalue ->current 0x9cafdc0
      (CXXThisExpr 0x9cb2520 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9cb2590 <line:180:2, col:10>
    (UnaryOperator 0x9cb2578 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cb2568 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0x9cb26a0 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0x9cb2620 <line:191:2, col:32>
    0x9cb25c0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9cb2608 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9cb25f8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9cb2660 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9cb2640 <col:4> '_Iterator' lvalue ->current 0x9cafdc0
      (CXXThisExpr 0x9cb2630 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9cb2690 <line:193:2, col:9>
    (DeclRefExpr 0x9cb2674 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9cb25c0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0x9cb2740 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0x9cb26f0 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9cb26d0 <col:4> '_Iterator' lvalue ->current 0x9cafdc0
      (CXXThisExpr 0x9cb26c0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9cb2730 <line:205:2, col:10>
    (UnaryOperator 0x9cb2718 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cb2708 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0x9cb2840 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0x9cb27c0 <line:216:2, col:32>
    0x9cb2760 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9cb27a8 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9cb2798 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9cb2800 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9cb27e0 <col:4> '_Iterator' lvalue ->current 0x9cafdc0
      (CXXThisExpr 0x9cb27d0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9cb2830 <line:218:2, col:9>
    (DeclRefExpr 0x9cb2814 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9cb2760 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0x9cb28f8 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0x9cb28e8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9cb28c8 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9cb28b0 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0x9cb2878 <col:33> 'const _Iterator' lvalue ->current 0x9cafdc0
          (CXXThisExpr 0x9cb2868 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9cb2898 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9cb1c20 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0x9cb29b0 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0x9cb2958 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9cb2920 <col:2> '_Iterator' lvalue ->current 0x9cafdc0
      (CXXThisExpr 0x9cb2910 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9cb2940 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9cb1d30 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9cb29a0 <line:239:2, col:10>
    (UnaryOperator 0x9cb2988 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cb2978 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0x9cb2a60 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0x9cb2a50 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9cb2a30 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9cb2a18 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0x9cb29e0 <col:33> 'const _Iterator' lvalue ->current 0x9cafdc0
          (CXXThisExpr 0x9cb29d0 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9cb2a00 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9cb1e40 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0x9cb2b18 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0x9cb2ac0 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9cb2a88 <col:2> '_Iterator' lvalue ->current 0x9cafdc0
      (CXXThisExpr 0x9cb2a78 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9cb2aa8 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9cb1f00 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9cb2b08 <line:260:2, col:10>
    (UnaryOperator 0x9cb2af0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cb2ae0 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0x9cb2bc8 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0x9cb2bb8 <col:9, col:29>
    (UnaryOperator 0x9cb2ba0 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0x9cb2b88 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0x9cb2b70 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0x9cb2b40 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9cb2b30 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0x9cb2b54 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9cb1fd0 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9cb50b0 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0x9cb50a0 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cb5078 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb5040 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb4f30 0x9bfe790)
      (CallExpr 0x9cb4fb0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb4f78 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb4f60 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb4d30 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9cb5020 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb4fe8 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb4fcc <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb4e30 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9cb5550 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0x9cb5540 <col:7, col:36>
    (CXXOperatorCallExpr 0x9cb5518 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb54e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb53d0 0x9bfee30)
      (CallExpr 0x9cb5450 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb5418 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb5400 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb52f0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9cb54c0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb5488 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb546c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb51f0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9cb5970 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0x9cb5960 <col:7, col:26>
    (UnaryOperator 0x9cb5948 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9cb5930 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9cb5908 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9cb58d0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb4f30 0x9bfe790)
          (DeclRefExpr 0x9cb58a0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb5690 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9cb58b8 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb5790 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9cb5d70 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0x9cb5d60 <col:7, col:20>
    (CXXOperatorCallExpr 0x9cb5d38 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb5d00 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb53d0 0x9bfee30)
      (DeclRefExpr 0x9cb5cd0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb5bb0 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0x9cb5ce8 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb5ab0 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9cb6190 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0x9cb6180 <col:7, col:25>
    (UnaryOperator 0x9cb6168 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9cb6150 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9cb6128 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9cb60f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb53d0 0x9bfee30)
          (DeclRefExpr 0x9cb60c0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb5fb0 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9cb60d8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb5eb0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9cb65b0 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0x9cb65a0 <col:7, col:25>
    (UnaryOperator 0x9cb6588 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9cb6570 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9cb6548 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9cb6510 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb53d0 0x9bfee30)
          (DeclRefExpr 0x9cb64e0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb62d0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9cb64f8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb63d0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9cb6b80 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0x9cb6b70 <col:7, col:36>
    (CXXOperatorCallExpr 0x9cb6b48 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb6b10 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00)
      (CallExpr 0x9cb6a80 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb6a48 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb6a30 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb68f0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9cb6af0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb6ab8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb6a9c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb67f0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0x9cb71b8 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0x9cb71a8 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9cb7188 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0x9cb7160 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9cb7128 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00)
        (CallExpr 0x9cb70f0 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cb70b8 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0x9cb70a0 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9cb6ea0 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0x9cb710c <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x9cb6da0 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9cb7728 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0x9cb7718 <col:7, col:37>
    (CXXOperatorCallExpr 0x9cb76f0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb76b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb75a0 0x9cb4f30 0x9bfe790)
      (CallExpr 0x9cb7620 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb75e8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb75d0 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9cb7350 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0x9cb7690 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb7658 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb763c <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9cb74a0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9cb8050 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0x9cb8040 <col:7, col:36>
    (CXXOperatorCallExpr 0x9cb7bf0 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb7bb0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb7aa0 0x9cb53d0 0x9bfee30)
      (CallExpr 0x9cb7b20 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb7ae8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb7ad0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9cb79c0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9cb7b90 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb7b58 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb7b3c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9cb78c0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9cb84d8 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0x9cb84c8 <col:7, col:26>
    (UnaryOperator 0x9cb84b0 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9cb8498 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9cb8470 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9cb8430 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb75a0 0x9cb4f30 0x9bfe790)
          (DeclRefExpr 0x9cb8400 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9cb81f0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9cb8418 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9cb82f0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9cb8928 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0x9cb8918 <col:7, col:20>
    (CXXOperatorCallExpr 0x9cb88f0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb88b0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb7aa0 0x9cb53d0 0x9bfee30)
      (DeclRefExpr 0x9cb8880 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9cb8770 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0x9cb8898 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9cb8670 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9cb8da8 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0x9cb8d98 <col:7, col:25>
    (UnaryOperator 0x9cb8d80 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9cb8d68 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9cb8d40 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9cb8d00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb7aa0 0x9cb53d0 0x9bfee30)
          (DeclRefExpr 0x9cb8cd0 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9cb8bc0 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0x9cb8ce8 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9cb8ac0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9cb9878 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0x9cb9868 <col:7, col:25>
    (UnaryOperator 0x9cb9850 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9cb9838 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9cb9810 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9cb97d0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb7aa0 0x9cb53d0 0x9bfee30)
          (DeclRefExpr 0x9cb97a0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9cb8f40 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9cb97b8 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9cb9690 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9cb9e70 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0x9cb9e60 <col:7, col:36>
    (CXXOperatorCallExpr 0x9cb9e38 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9cb9e00 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb9cf0 0x9cb6a00)
      (CallExpr 0x9cb9d70 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb9d38 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb9d20 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9cb9be0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9cb9de0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cb9da8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9cb9d8c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9cb9ae0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9cbb420 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9cbb404 <col:58> '_Container' lvalue ParmVar 0x9cbaf20 '__x' '_Container &'))
) (CompoundStmt 0x9cbb480 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9cbb580 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0x9cbb528 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cbb4d8 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9cbb4b8 <col:2> '_Container *' lvalue ->container 0x9cba600
        (CXXThisExpr 0x9cbb4a8 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9cbb50c <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x9cbb0d0 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9cbb570 <line:426:2, col:10>
    (UnaryOperator 0x9cbb558 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbb548 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0x9cbb5d0 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0x9cbb5c0 <col:9, col:17>
    (UnaryOperator 0x9cbb5a8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbb598 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0x9cbb620 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0x9cbb610 <col:9, col:17>
    (UnaryOperator 0x9cbb5f8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbb5e8 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9cbb670 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0x9cbb660 <col:9, col:17>
    (UnaryOperator 0x9cbb648 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbb638 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0x9cbb9d8 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0x9cbb9c8 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0x9cbb9a8 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0x9cbb990 <col:47> '_Container' lvalue ParmVar 0x9cbb7a0 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9cbdc70 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9cbdc54 <col:68> '_Container' lvalue ParmVar 0x9cbd7b0 '__x' '_Container &'))
) (CompoundStmt 0x9cbdcd0 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9cbddd0 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0x9cbdd78 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9cbdd28 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9cbdd08 <col:2> '_Container *' lvalue ->container 0x9cbbe00
        (CXXThisExpr 0x9cbdcf8 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9cbdd5c <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x9cbd920 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9cbddc0 <line:516:2, col:10>
    (UnaryOperator 0x9cbdda8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbdd98 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0x9cbde20 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0x9cbde10 <col:9, col:17>
    (UnaryOperator 0x9cbddf8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbdde8 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0x9cbde70 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0x9cbde60 <col:9, col:17>
    (UnaryOperator 0x9cbde48 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbde38 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9cbdec0 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0x9cbdeb0 <col:9, col:17>
    (UnaryOperator 0x9cbde98 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbde88 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0x9cbe228 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0x9cbe218 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9cbe1f8 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0x9cbe1e0 <col:48> '_Container' lvalue ParmVar 0x9cbdff0 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0x9cbf7c0 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9cbf7a4 <col:20> '_Container' lvalue ParmVar 0x9cbf270 '__x' '_Container &'))
), iter((DeclRefExpr 0x9cbf818 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0x9cbf2f0 '__i' 'typename _Container::iterator')
) (CompoundStmt 0x9cbf870 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9cbfa38 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0x9cbf9a0 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0x9cbf8a8 <col:2> 'typename _Container::iterator' lvalue ->iter 0x9cbe710
      (CXXThisExpr 0x9cbf898 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0x9cbf978 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cbf8f8 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0x9cbf8d8 <col:9> '_Container *' lvalue ->container 0x9cbe650
          (CXXThisExpr 0x9cbf8c8 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0x9cbf940 <col:27> 'typename _Container::iterator' lvalue ->iter 0x9cbe710
        (CXXThisExpr 0x9cbf930 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0x9cbf960 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x9cbf470 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0x9cbf9e8 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9cbf9c8 <col:4> 'typename _Container::iterator' lvalue ->iter 0x9cbe710
      (CXXThisExpr 0x9cbf9b8 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0x9cbfa28 <line:628:2, col:10>
    (UnaryOperator 0x9cbfa10 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbfa00 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0x9cbfa90 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0x9cbfa80 <col:9, col:17>
    (UnaryOperator 0x9cbfa68 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbfa58 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0x9cbfae0 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0x9cbfad0 <col:9, col:17>
    (UnaryOperator 0x9cbfab8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbfaa8 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0x9cbfb30 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0x9cbfb20 <col:9, col:17>
    (UnaryOperator 0x9cbfb08 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cbfaf8 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0x9cbffe0 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0x9cbffd0 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0x9cbffb0 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0x9cbff00 <line:679:42> '_Container' lvalue ParmVar 0x9cbfcc0 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0x9cbff90 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0x9cbff74 <col:37> '_Iterator' lvalue ParmVar 0x9cbfd00 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0x9cc2728 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0x9cc2780 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0x9cc2790 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0x9cc1210 '__i' 'const _Iterator &')
) (CompoundStmt 0x9cc27f0 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0x9cc2850 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9cc2818 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0x9cc2800 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x9cc1930 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0x9cc28b0 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0x9cc2950 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x9cc2940 <col:9, col:17>
    (UnaryOperator 0x9cc2928 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0x9cc2904 <col:17> 'const _Iterator' lvalue ->_M_current 0x9cc0cc0
        (CXXThisExpr 0x9cc28d8 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0x9cc29a8 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0x9cc2998 <col:9, col:16>
    (MemberExpr 0x9cc2978 <col:16> 'const _Iterator' lvalue ->_M_current 0x9cc0cc0
      (CXXThisExpr 0x9cc2968 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0x9cc2a40 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x9cc29f0 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9cc29d0 <col:4> '_Iterator' lvalue ->_M_current 0x9cc0cc0
      (CXXThisExpr 0x9cc29c0 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9cc2a30 <line:743:2, col:10>
    (UnaryOperator 0x9cc2a18 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cc2a08 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0x9cc2af0 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0x9cc2ae0 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9cc2ac0 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9cc2aa8 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0x9cc2a70 <col:34> '_Iterator' lvalue ->_M_current 0x9cc0cc0
          (CXXThisExpr 0x9cc2a60 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0x9cc2b88 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0x9cc2b38 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9cc2b18 <col:4> '_Iterator' lvalue ->_M_current 0x9cc0cc0
      (CXXThisExpr 0x9cc2b08 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9cc2b78 <line:755:2, col:10>
    (UnaryOperator 0x9cc2b60 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cc2b50 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0x9cc2c38 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0x9cc2c28 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9cc2c08 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9cc2bf0 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0x9cc2bb8 <col:34> '_Iterator' lvalue ->_M_current 0x9cc0cc0
          (CXXThisExpr 0x9cc2ba8 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0x9cc2cc0 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0x9cc2cb0 <col:9, col:30>
    (ArraySubscriptExpr 0x9cc2c98 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0x9cc2c60 <col:16> 'const _Iterator' lvalue ->_M_current 0x9cc0cc0
        (CXXThisExpr 0x9cc2c50 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0x9cc2c80 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9cc2170 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0x9cc42f0 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0x9cc4298 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9cc4260 <col:9> '_Iterator' lvalue ->_M_current 0x9cc0cc0
      (CXXThisExpr 0x9cc4250 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9cc4280 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9cc2290 '__n' 'const difference_type &'))
  (ReturnStmt 0x9cc42e0 <col:28, col:36>
    (UnaryOperator 0x9cc42c8 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cc42b8 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0x9cc43a0 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0x9cc4390 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9cc4370 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9cc4358 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0x9cc4320 <col:34> 'const _Iterator' lvalue ->_M_current 0x9cc0cc0
          (CXXThisExpr 0x9cc4310 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9cc4340 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9cc23b0 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0x9cc4458 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0x9cc4400 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9cc43c8 <col:9> '_Iterator' lvalue ->_M_current 0x9cc0cc0
      (CXXThisExpr 0x9cc43b8 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9cc43e8 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9cc24d0 '__n' 'const difference_type &'))
  (ReturnStmt 0x9cc4448 <col:28, col:36>
    (UnaryOperator 0x9cc4430 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cc4420 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0x9cc4508 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0x9cc44f8 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9cc44d8 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9cc44c0 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0x9cc4488 <col:34> 'const _Iterator' lvalue ->_M_current 0x9cc0cc0
          (CXXThisExpr 0x9cc4478 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9cc44a8 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9cc25b0 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0x9cc4560 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9cc4550 <col:9, col:16>
    (MemberExpr 0x9cc4530 <col:16> 'const _Iterator' lvalue ->_M_current 0x9cc0cc0
      (CXXThisExpr 0x9cc4520 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9cc4c80 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0x9cc4c70 <col:7, col:41>
    (CXXOperatorCallExpr 0x9cc4c48 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9cc4c10 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cc4b00)
      (CallExpr 0x9cc4b80 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc4b48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc4b30 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9cc4820 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9cc4bf0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc4bb8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc4b9c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9cc4a00 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9c6e6b8 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x9c6e6a8 <col:7, col:41>
    (CXXOperatorCallExpr 0x9c6e680 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9c6e648 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cc5110 0x9cc4b00)
      (CallExpr 0x9cc5190 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc5158 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc5140 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9cc4ea0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9cc5200 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc51c8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc51ac <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9cc5010 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9c6ecd0 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0x9c6ecc0 <col:7, col:41>
    (CXXOperatorCallExpr 0x9c6ec98 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9c6ec60 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6eb50)
      (CallExpr 0x9c6ebd0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9c6eb98 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9c6eb80 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9c6e900 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9c6ec40 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9c6ec08 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9c6ebec <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9c6ea70 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9c6f2a0 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x9c6f290 <col:7, col:41>
    (CXXOperatorCallExpr 0x9c6f268 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9c6f230 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c6f120 0x9c6eb50)
      (CallExpr 0x9c6f1a0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9c6f168 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9c6f150 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9c6eed0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9c6f210 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9c6f1d8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9c6f1bc <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9c6f040 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9cc9d20 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0x9cc9d10 <col:7, col:40>
    (CXXOperatorCallExpr 0x9cc9ce8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9cc9cb0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cc9ba0)
      (CallExpr 0x9cc9c20 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc9be8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc9bd0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9c6f4f0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9cc9c90 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cc9c58 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9cc9c3c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9cc9ac0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9cca2f0 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0x9cca2e0 <col:7, col:40>
    (CXXOperatorCallExpr 0x9cca2b8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9cca280 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cca170 0x9cc9ba0)
      (CallExpr 0x9cca1f0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cca1b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cca1a0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9cc9f20 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9cca260 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cca228 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9cca20c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9cca090 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9cca910 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0x9cca900 <col:7, col:40>
    (CXXOperatorCallExpr 0x9cca8d8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9cca8a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cca790)
      (CallExpr 0x9cca810 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cca7d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cca7c0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9cca540 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9cca880 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cca848 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9cca82c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9cca6b0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9ccaf30 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0x9ccaf20 <col:7, col:40>
    (CXXOperatorCallExpr 0x9ccaef8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccaec0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccadb0 0x9cca790)
      (CallExpr 0x9ccae30 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccadf8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccade0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccab60 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9ccaea0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccae68 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccae4c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccacd0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9ccb550 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0x9ccb540 <col:7, col:41>
    (CXXOperatorCallExpr 0x9ccb518 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccb4e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccb3d0)
      (CallExpr 0x9ccb450 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccb418 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccb400 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9ccb180 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9ccb4c0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccb488 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccb46c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9ccb2f0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9ccbb58 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0x9ccbb48 <col:7, col:41>
    (CXXOperatorCallExpr 0x9ccbb20 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccbae8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccb9a0 0x9ccb3d0)
      (CallExpr 0x9ccba20 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccb9e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccb9d0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccb750 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9ccbac8 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccba90 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccba3c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccb8c0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9ccc170 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0x9ccc160 <col:7, col:41>
    (CXXOperatorCallExpr 0x9ccc138 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccc100 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccbff0)
      (CallExpr 0x9ccc070 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccc038 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccc020 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9ccbda0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9ccc0e0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccc0a8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccc08c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9ccbf10 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9ccc740 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0x9ccc730 <col:7, col:41>
    (CXXOperatorCallExpr 0x9ccc708 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccc6d0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccc5c0 0x9ccbff0)
      (CallExpr 0x9ccc640 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccc608 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccc5f0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccc370 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9ccc6b0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccc678 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccc65c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccc4e0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9cccef0 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0x9cccee0 <col:7, col:40>
    (CXXOperatorCallExpr 0x9ccceb8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccce80 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cccd70)
      (CallExpr 0x9cccdf0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cccdb8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9cccda0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9cccaf0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9ccce60 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccce28 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccce0c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9cccc60 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9ccd640 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x9ccd630 <col:7, col:40>
    (CXXOperatorCallExpr 0x9ccd608 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9ccd5d0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccd4c0 0x9cccd70)
      (CallExpr 0x9ccd540 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccd508 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccd4f0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccd240 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9ccd5b0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ccd578 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9ccd55c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9ccd3b0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0x9ccee60 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0x9ccee50 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0x9ccee30 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0x9ccee08 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9ccedd0 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccec10)
        (CallExpr 0x9cced98 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cced60 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0x9cced48 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9cceae0 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0x9ccedb4 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x9ccd930 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9cd26e0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9cd26b8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9cd2620 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9c92610 0x9bfcdd0)
    (UnaryOperator 0x9cd2670 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9cd2658 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9cd24a0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9cd26a0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9cd2684 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9cd24e0 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9ccf868 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0x9ccf6a0 <line:87:11, line:88:24>
    0x9ccf670 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9ccf750 <line:89:11, col:50>
    0x9ccf6d0 "_ValueType1 __tmp =
      (ParenExpr 0x9ccf738 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0x9ccf720 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9ccf704 <col:46> '_ForwardIterator1' lvalue ParmVar 0x9ccf3a0 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0x9ccf7d8 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9ccf778 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9ccf760 <col:12> '_ForwardIterator1' lvalue ParmVar 0x9ccf3a0 '__a' '_ForwardIterator1'))
    (ParenExpr 0x9ccf7c0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0x9ccf7a8 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ccf78c <col:33> '_ForwardIterator2' lvalue ParmVar 0x9ccf3e0 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0x9ccf850 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9ccf808 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9ccf7f0 <col:12> '_ForwardIterator2' lvalue ParmVar 0x9ccf3e0 '__b' '_ForwardIterator2'))
    (ParenExpr 0x9ccf838 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0x9ccf81c </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x9ccf6d0 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9cd26e0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9cd26b8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9cd2620 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9c92610 0x9bfcdd0)
    (UnaryOperator 0x9cd2670 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9cd2658 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9cd24a0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9cd26a0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9cd2684 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9cd24e0 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9cd39d8 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0x9cd2a30 <line:120:7, line:121:13>
    0x9cd2a00 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9cd2bc0 <line:122:7, line:123:13>
    0x9cd2b90 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0x9cd2cf0 <line:135:7, line:136:17>
    0x9cd2cc0 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0x9cd2e40 <line:137:7, line:138:17>
    0x9cd2e10 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0x9cd39b0 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9cd3958 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9cd397c <col:12> '_ForwardIterator1' lvalue ParmVar 0x9cd27c0 '__a' '_ForwardIterator1')
    (DeclRefExpr 0x9cd3994 <col:17> '_ForwardIterator2' lvalue ParmVar 0x9cd2800 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0x9cd3ec0 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0x9cd3c98 <line:167:56>)
  (ForStmt 0x9cd3e70 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cd3d18 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd3cd8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9cd3ca4 <col:14> '_ForwardIterator1' lvalue ParmVar 0x9cd3ac0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9cd3cbc <col:26> '_ForwardIterator1' lvalue ParmVar 0x9cd3b00 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0x9cd3da0 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9cd3d58 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd3d3c <col:37> '_ForwardIterator1' lvalue ParmVar 0x9cd3ac0 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0x9cd3d88 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd3d6c <col:49> '_ForwardIterator2' lvalue ParmVar 0x9cd3b40 '__first2' '_ForwardIterator2')))
    (CallExpr 0x9cd3e48 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd3de0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd28e0)
      (DeclRefExpr 0x9cd3e14 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9cd3ac0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9cd3e2c <col:27> '_ForwardIterator2' lvalue ParmVar 0x9cd3b40 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0x9cd3eb0 <line:171:7, col:14>
    (DeclRefExpr 0x9cd3e94 <col:14> '_ForwardIterator2' lvalue ParmVar 0x9cd3b40 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9cd41f8 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0x9cd41b0 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cd4160 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd4120 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (DeclRefExpr 0x9cd40f0 <col:11> 'const _Tp' lvalue ParmVar 0x9cd3fc0 '__b' 'const _Tp &')
      (DeclRefExpr 0x9cd4108 <col:17> 'const _Tp' lvalue ParmVar 0x9cd3f70 '__a' 'const _Tp &'))
    (ReturnStmt 0x9cd41a0 <line:193:2, col:9>
      (DeclRefExpr 0x9cd4184 <col:9> 'const _Tp' lvalue ParmVar 0x9cd3fc0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9cd41e8 <line:194:7, col:14>
    (DeclRefExpr 0x9cd41cc <col:14> 'const _Tp' lvalue ParmVar 0x9cd3f70 '__a' 'const _Tp &')))

;
    template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9cd4508 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x9cd44c0 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cd4470 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd4430 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (DeclRefExpr 0x9cd4400 <col:11> 'const _Tp' lvalue ParmVar 0x9cd42a0 '__a' 'const _Tp &')
      (DeclRefExpr 0x9cd4418 <col:17> 'const _Tp' lvalue ParmVar 0x9cd42f0 '__b' 'const _Tp &'))
    (ReturnStmt 0x9cd44b0 <line:216:2, col:9>
      (DeclRefExpr 0x9cd4494 <col:9> 'const _Tp' lvalue ParmVar 0x9cd42f0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9cd44f8 <line:217:7, col:14>
    (DeclRefExpr 0x9cd44dc <col:14> 'const _Tp' lvalue ParmVar 0x9cd42a0 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9cd4ef0 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0x9cd4ea8 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0x9cd4e58 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9cd4e10 <col:11> '_Compare' lvalue ParmVar 0x9cd4690 '__comp' '_Compare')
      (DeclRefExpr 0x9cd4e28 <col:18> 'const _Tp' lvalue ParmVar 0x9cd4650 '__b' 'const _Tp &')
      (DeclRefExpr 0x9cd4e40 <col:23> 'const _Tp' lvalue ParmVar 0x9cd4600 '__a' 'const _Tp &'))
    (ReturnStmt 0x9cd4e98 <line:237:2, col:9>
      (DeclRefExpr 0x9cd4e7c <col:9> 'const _Tp' lvalue ParmVar 0x9cd4650 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9cd4ee0 <line:238:7, col:14>
    (DeclRefExpr 0x9cd4ec4 <col:14> 'const _Tp' lvalue ParmVar 0x9cd4600 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9cd5288 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0x9cd5240 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0x9cd51f0 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9cd51a4 <col:11> '_Compare' lvalue ParmVar 0x9cd5080 '__comp' '_Compare')
      (DeclRefExpr 0x9cd51bc <col:18> 'const _Tp' lvalue ParmVar 0x9cd4ff0 '__a' 'const _Tp &')
      (DeclRefExpr 0x9cd51d4 <col:23> 'const _Tp' lvalue ParmVar 0x9cd5040 '__b' 'const _Tp &'))
    (ReturnStmt 0x9cd5230 <line:258:2, col:9>
      (DeclRefExpr 0x9cd5214 <col:9> 'const _Tp' lvalue ParmVar 0x9cd5040 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9cd5278 <line:259:7, col:14>
    (DeclRefExpr 0x9cd525c <col:14> 'const _Tp' lvalue ParmVar 0x9cd4ff0 '__a' 'const _Tp &')))

;
    template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0xa15bd18 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa15bd08 <col:7, col:55>
    (CallExpr 0xa15bcd8 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa15bcc8 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa15bc6c <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0xa1598d0 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0xa15bcf8 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa15bc8c <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa1599e0 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0x9cd5b10 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9cd5b00 <col:7, col:55>
    (CallExpr 0x9cd5ae0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9cd5aa0 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9cd5ac4 <col:51> '_Iterator' lvalue ParmVar 0x9cd58a0 '__it' '_Iterator'))))

;
    template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0x9cd6a80 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x9cd6a70 <col:7, col:55>
    (CallExpr 0x9cd6a50 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9cd6a10 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9cd6a34 <col:51> '_Iterator' lvalue ParmVar 0x9cd6810 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9cd8b18 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9cd86e0 <line:326:4, col:68>
    0x9cd86b0 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9cd8ac8 <line:327:4, line:332:6>
    (DeclStmt 0x9cd87d8 <line:327:8, col:40>
      0x9cd8710 "_Distance __n =
        (CXXOperatorCallExpr 0x9cd87b0 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd8778 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (DeclRefExpr 0x9cd8744 <col:24> '_II' lvalue ParmVar 0x9cd8440 '__last' '_II')
          (DeclRefExpr 0x9cd875c <col:33> '_II' lvalue ParmVar 0x9cd8400 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cd8858 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd8818 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9cd87e8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9cd8710 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9cd8800 <col:48> 'int' 0))
    (UnaryOperator 0x9cd8898 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9cd887c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9cd8710 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9cd8aa8 <line:328:6, line:332:6>
      (BinaryOperator 0x9cd8a30 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9cd88c8 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9cd88ac <col:9> '_OI' lvalue ParmVar 0x9cd8480 '__result' '_OI'))
        (UnaryOperator 0x9cd88f8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9cd88dc <col:21> '_II' lvalue ParmVar 0x9cd8400 '__first' '_II')))
      (UnaryOperator 0x9cd8a60 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd8a48 <col:10> '_II' lvalue ParmVar 0x9cd8400 '__first' '_II'))
      (UnaryOperator 0x9cd8a90 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd8a74 <col:10> '_OI' lvalue ParmVar 0x9cd8480 '__result' '_OI'))))
  (ReturnStmt 0x9cd8b08 <line:333:4, col:11>
    (DeclRefExpr 0x9cd8aec <col:11> '_OI' lvalue ParmVar 0x9cd8480 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9cd7298 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0x9cd7248 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cd7130 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd70f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9cd70c0 <col:11> '_II' lvalue ParmVar 0x9cd6ed0 '__first' '_II')
      (DeclRefExpr 0x9cd70d8 <col:22> '_II' lvalue ParmVar 0x9cd6f10 '__last' '_II'))
    (BinaryOperator 0x9cd71b8 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0x9cd7170 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd7154 <col:32> '_OI' lvalue ParmVar 0x9cd6f50 '__result' '_OI'))
      (UnaryOperator 0x9cd71a0 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd7184 <col:44> '_II' lvalue ParmVar 0x9cd6ed0 '__first' '_II')))
    (BinaryOperator 0x9cd7230 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0x9cd71e8 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9cd71d0 <col:7> '_OI' lvalue ParmVar 0x9cd6f50 '__result' '_OI'))
      (UnaryOperator 0x9cd7218 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9cd71fc <col:19> '_II' lvalue ParmVar 0x9cd6ed0 '__first' '_II'))))
  (ReturnStmt 0x9cd7288 <line:300:4, col:11>
    (DeclRefExpr 0x9cd726c <col:11> '_OI' lvalue ParmVar 0x9cd6f50 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9cd8b18 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9cd86e0 <line:326:4, col:68>
    0x9cd86b0 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9cd8ac8 <line:327:4, line:332:6>
    (DeclStmt 0x9cd87d8 <line:327:8, col:40>
      0x9cd8710 "_Distance __n =
        (CXXOperatorCallExpr 0x9cd87b0 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9cd8778 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (DeclRefExpr 0x9cd8744 <col:24> '_II' lvalue ParmVar 0x9cd8440 '__last' '_II')
          (DeclRefExpr 0x9cd875c <col:33> '_II' lvalue ParmVar 0x9cd8400 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cd8858 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9cd8818 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9cd87e8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9cd8710 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9cd8800 <col:48> 'int' 0))
    (UnaryOperator 0x9cd8898 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9cd887c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9cd8710 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9cd8aa8 <line:328:6, line:332:6>
      (BinaryOperator 0x9cd8a30 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9cd88c8 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9cd88ac <col:9> '_OI' lvalue ParmVar 0x9cd8480 '__result' '_OI'))
        (UnaryOperator 0x9cd88f8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9cd88dc <col:21> '_II' lvalue ParmVar 0x9cd8400 '__first' '_II')))
      (UnaryOperator 0x9cd8a60 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd8a48 <col:10> '_II' lvalue ParmVar 0x9cd8400 '__first' '_II'))
      (UnaryOperator 0x9cd8a90 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cd8a74 <col:10> '_OI' lvalue ParmVar 0x9cd8480 '__result' '_OI'))))
  (ReturnStmt 0x9cd8b08 <line:333:4, col:11>
    (DeclRefExpr 0x9cd8aec <col:11> '_OI' lvalue ParmVar 0x9cd8480 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9cda1a8 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x9cd9e58 <line:364:4, col:43>
    0x9cd9d90 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9cd9e30 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9cd9df8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9cd9dc4 <col:27> 'const _Tp *' lvalue ParmVar 0x9cd9060 '__last' 'const _Tp *')
        (DeclRefExpr 0x9cd9ddc <col:36> 'const _Tp *' lvalue ParmVar 0x9cd9010 '__first' 'const _Tp *'))")
  (IfStmt 0x9cda0e8 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x9cd9e90 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9cd9e80 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9cd9e68 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9cd9d90 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9cda0c0 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0x9cda004 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9cd9ea0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0x9cda01c <col:24> '_Tp *' lvalue ParmVar 0x9cd90f0 '__result' '_Tp *')
      (DeclRefExpr 0x9cda034 <col:34> 'const _Tp *' lvalue ParmVar 0x9cd9010 '__first' 'const _Tp *')
      (BinaryOperator 0x9cda0a8 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9cda058 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9cda098 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9cda088 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9cda070 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x9cd9d90 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9cda198 <line:367:4, col:22>
    (CXXOperatorCallExpr 0x9cda170 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9cda138 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
      (DeclRefExpr 0x9cda104 <col:11> '_Tp *' lvalue ParmVar 0x9cd90f0 '__result' '_Tp *')
      (DeclRefExpr 0x9cda11c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9cd9d90 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0x9cdaff8 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x9cda5c0 <line:375:7, col:68>
    0x9cda590 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0x9cda750 <line:376:7, col:68>
    0x9cda720 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0x9cda8a0 <line:377:7, col:73>
    0x9cda870 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0x9cdad30 <line:378:7, line:381:58>
    0x9cda8c0 "const bool __simple =
      (ParenExpr 0x9cdad18 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0x9cdad00 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0x9cdab58 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0x9cdaa38 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9cda918 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9cdaa10 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9cdab30 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9cdacd8 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9cdafe8 <line:383:7, line:384:70>
    (CallExpr 0x9cdafc0 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9cdaf50 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0x9cdaf74 <col:45> '_II' lvalue ParmVar 0x9cda2d0 '__first' '_II')
      (DeclRefExpr 0x9cdaf8c <col:54> '_II' lvalue ParmVar 0x9cda310 '__last' '_II')
      (DeclRefExpr 0x9cdafa4 <col:62> '_OI' lvalue ParmVar 0x9cda350 '__result' '_OI'))))

;
    template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e0b8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9d0e0a0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9d0e060 <col:9> 'char_type':'char' lvalue ParmVar 0x9d0cce0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d0e090 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9d0e078 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0cd70 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e168 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9d0e158 <col:9, col:24>
    (BinaryOperator 0x9d0e140 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d0e110 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e100 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0cc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0ce90 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e130 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e120 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0e4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9d0cee0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e218 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9d0e208 <col:9, col:23>
    (BinaryOperator 0x9d0e1f0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d0e1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0d000 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e1e0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1d0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e194 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9d0d050 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d0ffa8 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9d0ff98 <col:9, col:48>
    (CallExpr 0x9d0e2b8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9d0e2a8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d0e22c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9d0e2f0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0e2e0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e244 <col:33> 'const char_type *' lvalue ParmVar 0x9d0d150 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff78 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0ff68 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e25c <col:39> 'const char_type *' lvalue ParmVar 0x9d0d1a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff88 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d0e274 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d1e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d10138 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9d10128 <col:9, col:36>
    (CallExpr 0x9d100f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9d100e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d10094 <col:16> 'unsigned int (const char *)' lvalue Function 0x9d0ffc0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9d10118 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d100ac <col:33> 'const char_type *' lvalue ParmVar 0x9d0d2f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d103f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9d103e8 <col:9, col:77>
    (CXXStaticCastExpr 0x9d103d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9d10348 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9d10338 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d102b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9d10150 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d10380 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10370 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d102cc <col:63> 'const char_type *' lvalue ParmVar 0x9d0d3f0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9d103a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d10390 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d102e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9d0d480 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9d103b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d102fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d430 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d10548 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9d10538 <col:9, col:74>
    (CXXStaticCastExpr 0x9d10520 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10498 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9d10488 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1040c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9cd9ea0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d104d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d104c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10424 <col:58> 'char_type *' lvalue ParmVar 0x9d0d5e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d104f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d104e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d1043c <col:64> 'const char_type *' lvalue ParmVar 0x9d0d630 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d10500 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10454 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d670 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d107e8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9d107d8 <col:9, col:73>
    (CXXStaticCastExpr 0x9d107c0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10738 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9d10728 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d106c4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d10770 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d10760 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106dc <col:57> 'char_type *' lvalue ParmVar 0x9d0d780 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d10790 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10780 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106f4 <col:63> 'const char_type *' lvalue ParmVar 0x9d0d7d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d107a0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d1070c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d810 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d10938 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9d10928 <col:9, col:71>
    (CXXStaticCastExpr 0x9d10910 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10888 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9d10878 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d107fc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9ce5bb0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d108c0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d108b0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10814 <col:57> 'char_type *' lvalue ParmVar 0x9d0d8f0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9d108e0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d108d0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d1082c <col:62> 'char_type':'char' lvalue ParmVar 0x9d0d970 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9d108f0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10844 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d930 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d109b8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9d109a8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d10990 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9d10980 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9d10970 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9d1094c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9d0db00 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d10a70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9d10a60 <col:9, col:69>
    (CXXStaticCastExpr 0x9d10a48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9d10a38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9d10a18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9d10a08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9d109f8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9d109cc <col:65> 'const char_type':'const char' lvalue ParmVar 0x9d0dc20 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d10b00 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9d10af0 <col:9, col:24>
    (BinaryOperator 0x9d10ad8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d10ab8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a84 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9d0dd40 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d10ac8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a9c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9d0dd90 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d10b78 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9d10b68 <col:9, col:56>
    (CXXStaticCastExpr 0x9d10b50 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9d10b30 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9d10b18 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d10cd8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9d10cc8 <col:9, col:37>
    (ConditionalOperator 0x9d10ca8 <col:16, col:37> 'int'
      (ParenExpr 0x9d10c50 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9d10c38 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9d10c28 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9d10b8c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &'))
          (CallExpr 0x9d10c08 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9d10bf8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d10ba4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9d0ded0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9d10c68 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9d10c98 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10c80 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &')))))


    }
template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13618 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9d13600 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9d135c0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9d11090 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d135f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9d135d8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11120 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d136a8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9d13698 <col:9, col:24>
    (BinaryOperator 0x9d13680 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d13660 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d1362c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11240 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13670 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13644 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11290 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13738 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9d13728 <col:9, col:23>
    (BinaryOperator 0x9d13710 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d136f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136bc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d113b0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13700 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136d4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11400 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d138a0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9d13890 <col:9, col:39>
    (CallExpr 0x9d13838 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9d13828 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d137cc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b0d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cface0 'wmemcmp')))
      (ImplicitCastExpr 0x9d13860 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13784 <col:24> 'const char_type *' lvalue ParmVar 0x9d11500 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9d13870 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d1379c <col:30> 'const char_type *' lvalue ParmVar 0x9d11550 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13880 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d137b4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11590 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d139a8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9d13998 <col:9, col:26>
    (CallExpr 0x9d13968 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9d13958 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13904 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9c4aa10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9cfa730 'wcslen')))
      (ImplicitCastExpr 0x9d13988 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d138ec <col:23> 'const char_type *' lvalue ParmVar 0x9d116a0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d13ae8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9d13ad8 <col:9, col:37>
    (ImplicitCastExpr 0x9d13ac8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9d13a70 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9d13a60 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d13a40 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4af20 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff890 'wmemchr')))
        (ImplicitCastExpr 0x9d13a98 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d139f8 <col:24> 'const char_type *' lvalue ParmVar 0x9d117a0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9d13aa8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13a10 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11830 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9d13ab8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13a28 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d117e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13c50 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9d13c40 <col:9, col:40>
    (CallExpr 0x9d13be8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9d13bd8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13b7c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b420 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cfadc0 'wmemmove')))
      (ImplicitCastExpr 0x9d13c10 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b34 <col:25> 'char_type *' lvalue ParmVar 0x9d11990 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13c20 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b4c <col:31> 'const char_type *' lvalue ParmVar 0x9d119e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13c30 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13b64 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9d11a20 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13d90 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9d13d80 <col:9, col:39>
    (CallExpr 0x9d13d28 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9d13d18 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13ce4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9c4b280 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9cfad50 'wmemcpy')))
      (ImplicitCastExpr 0x9d13d50 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13c9c <col:24> 'char_type *' lvalue ParmVar 0x9d11b30 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13d60 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13cb4 <col:30> 'const char_type *' lvalue ParmVar 0x9d11b80 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13d70 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13ccc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11bc0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d13ef0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9d13ee0 <col:9, col:37>
    (CallExpr 0x9d13e88 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9d13e78 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13e24 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4b5e0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff580 'wmemset')))
      (ImplicitCastExpr 0x9d13eb0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13ddc <col:24> 'char_type *' lvalue ParmVar 0x9d11ca0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9d13ec0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13df4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9d11d20 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9d13ed0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13e0c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d11ce0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d13f70 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9d13f60 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9d13f48 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9d13f38 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9d13f28 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13f10 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d11e90 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d13ff0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9d13fe0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9d13fc8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9d13fb8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9d13fa8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13f90 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d13180 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d14080 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9d14070 <col:9, col:24>
    (BinaryOperator 0x9d14058 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d14038 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14004 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132a0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d14048 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d1401c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132f0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d140f8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9d140e8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d140d0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9d140b0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9d14098 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d142d0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9d142c0 <col:9, col:46>
    (ConditionalOperator 0x9d142a0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9d14218 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9d14208 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1410c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9d13390 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9d14124 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9d14240 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9d141a8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9d14198 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d1413c <col:33> 'int_type (void)' lvalue CXXMethod 0x9d13430 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9d14290 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d14250 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9d14280 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14268 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0x9cdda58 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x9cdda48 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0x9cdda28 <line:420:14, line:422:39> '_OI'
      (CallExpr 0x9cdda00 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdd800 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0x9cda470)
        (CallExpr 0x9cdd8d0 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x9cdd880 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
          (DeclRefExpr 0x9cdd8b4 <col:64> '_II' lvalue ParmVar 0x9cdd610 '__first' '_II'))
        (CallExpr 0x9cdd958 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9cdd908 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
          (DeclRefExpr 0x9cdd93c <col:29> '_II' lvalue ParmVar 0x9cdd650 '__last' '_II'))
        (CallExpr 0x9cdd9e0 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9cdd990 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
          (DeclRefExpr 0x9cdd9c4 <col:29> '_OI' lvalue ParmVar 0x9cdd690 '__result' '_OI'))))))

;
    template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0x9cddff8 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x9cddcd8 <line:450:54>)
  (ReturnStmt 0x9cddfe8 <line:452:7, line:454:18>
    (ParenExpr 0x9cddfd0 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0x9cddfa8 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdde08 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0x9cdc330 0x9cdcb80 0x9cdd4d0 0x9cdd780)
        (CallExpr 0x9cddee8 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9cdde98 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd6920)
          (DeclRefExpr 0x9cddecc <col:27> '_II' lvalue ParmVar 0x9cddb30 '__first' '_II'))
        (CallExpr 0x9cddf70 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9cddf20 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd6920)
          (DeclRefExpr 0x9cddf54 <col:55> '_II' lvalue ParmVar 0x9cddb70 '__last' '_II'))
        (DeclRefExpr 0x9cddf90 <line:454:9> '_OI' lvalue ParmVar 0x9cddbb0 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9cdf938 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9cdf588 <line:529:4, col:55>
    0x9cdf550 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9cdf8e8 <line:530:4, line:531:23>
    (BinaryOperator 0x9cdf760 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9cdf598 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9cdf550 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9cdf618 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdf5e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9cdf5b0 <col:15> '_BI1' lvalue ParmVar 0x9cdf2e0 '__last' '_BI1')
        (DeclRefExpr 0x9cdf5c8 <col:24> '_BI1' lvalue ParmVar 0x9cdf2a0 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cdf7e8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9cdf7a8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9cdf778 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9cdf550 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9cdf790 <col:39> 'int' 0))
    (UnaryOperator 0x9cdf828 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9cdf80c <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9cdf550 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9cdf8d0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9cdf870 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9cdf858 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9cdf83c <col:9> '_BI2' lvalue ParmVar 0x9cdf320 '__result' '_BI2')))
      (UnaryOperator 0x9cdf8b8 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9cdf8a0 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9cdf884 <col:23> '_BI1' lvalue ParmVar 0x9cdf2e0 '__last' '_BI1')))))
  (ReturnStmt 0x9cdf928 <line:532:4, col:11>
    (DeclRefExpr 0x9cdf90c <col:11> '_BI2' lvalue ParmVar 0x9cdf320 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9cdef30 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0x9cdeef0 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cdee20 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9cdede0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9cdedb0 <col:11> '_BI1' lvalue ParmVar 0x9cdebf0 '__first' '_BI1')
      (DeclRefExpr 0x9cdedc8 <col:22> '_BI1' lvalue ParmVar 0x9cdec30 '__last' '_BI1'))
    (BinaryOperator 0x9cdeed8 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9cdee78 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9cdee60 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9cdee44 <col:9> '_BI2' lvalue ParmVar 0x9cdec70 '__result' '_BI2')))
      (UnaryOperator 0x9cdeec0 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9cdeea8 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9cdee8c <col:23> '_BI1' lvalue ParmVar 0x9cdec30 '__last' '_BI1')))))
  (ReturnStmt 0x9cdef20 <line:503:4, col:11>
    (DeclRefExpr 0x9cdef04 <col:11> '_BI2' lvalue ParmVar 0x9cdec70 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9cdf938 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9cdf588 <line:529:4, col:55>
    0x9cdf550 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9cdf8e8 <line:530:4, line:531:23>
    (BinaryOperator 0x9cdf760 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9cdf598 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9cdf550 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9cdf618 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9cdf5e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9cdf5b0 <col:15> '_BI1' lvalue ParmVar 0x9cdf2e0 '__last' '_BI1')
        (DeclRefExpr 0x9cdf5c8 <col:24> '_BI1' lvalue ParmVar 0x9cdf2a0 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cdf7e8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9cdf7a8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9cdf778 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9cdf550 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9cdf790 <col:39> 'int' 0))
    (UnaryOperator 0x9cdf828 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9cdf80c <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9cdf550 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9cdf8d0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9cdf870 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9cdf858 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9cdf83c <col:9> '_BI2' lvalue ParmVar 0x9cdf320 '__result' '_BI2')))
      (UnaryOperator 0x9cdf8b8 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9cdf8a0 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9cdf884 <col:23> '_BI1' lvalue ParmVar 0x9cdf2e0 '__last' '_BI1')))))
  (ReturnStmt 0x9cdf928 <line:532:4, col:11>
    (DeclRefExpr 0x9cdf90c <col:11> '_BI2' lvalue ParmVar 0x9cdf320 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9ce1088 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x9ce0e28 <line:559:4, col:43>
    0x9ce0d60 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9ce0e00 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce0dc8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9ce0d94 <col:27> 'const _Tp *' lvalue ParmVar 0x9ce0ba0 '__last' 'const _Tp *')
        (DeclRefExpr 0x9ce0dac <col:36> 'const _Tp *' lvalue ParmVar 0x9ce0b50 '__first' 'const _Tp *'))")
  (IfStmt 0x9ce0fc8 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ce0e60 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9ce0e50 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9ce0e38 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9ce0d60 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9ce0fa0 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0x9ce0e6c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9cd9ea0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0x9ce0ef0 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce0eb8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9ce0e84 <col:24> '_Tp *' lvalue ParmVar 0x9ce0c10 '__result' '_Tp *')
        (DeclRefExpr 0x9ce0e9c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x9ce0d60 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0x9ce0f14 <col:41> 'const _Tp *' lvalue ParmVar 0x9ce0b50 '__first' 'const _Tp *')
      (BinaryOperator 0x9ce0f88 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9ce0f38 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9ce0f78 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9ce0f68 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9ce0f50 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x9ce0d60 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9ce1078 <line:562:4, col:22>
    (CXXOperatorCallExpr 0x9ce1050 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce1018 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9ce0fe4 <col:11> '_Tp *' lvalue ParmVar 0x9ce0c10 '__result' '_Tp *')
      (DeclRefExpr 0x9ce0ffc <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9ce0d60 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9ce21e8 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x9ce1470 <line:570:7, col:69>
    0x9ce1440 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0x9ce15a0 <line:571:7, col:69>
    0x9ce1570 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0x9ce1b60 <line:572:7, col:74>
    0x9ce1b30 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0x9ce1f40 <line:573:7, line:576:58>
    0x9ce1b80 "const bool __simple =
      (ParenExpr 0x9ce1f28 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0x9ce1f10 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0x9ce1db8 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0x9ce1cc8 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9ce1bd8 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9ce1ca0 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9ce1d90 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9ce1ee8 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9ce21d8 <line:578:7, line:581:18>
    (CallExpr 0x9ce21b0 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ce2140 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0x9ce2164 <col:59> '_BI1' lvalue ParmVar 0x9ce11b0 '__first' '_BI1')
      (DeclRefExpr 0x9ce217c <line:580:10> '_BI1' lvalue ParmVar 0x9ce11f0 '__last' '_BI1')
      (DeclRefExpr 0x9ce2194 <line:581:10> '_BI2' lvalue ParmVar 0x9ce1230 '__result' '_BI2'))))

;
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9ce2768 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x9ce2758 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0x9ce2738 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0x9ce2710 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce2510 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0x9ce1320)
        (CallExpr 0x9ce25e0 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce2590 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
          (DeclRefExpr 0x9ce25c4 <col:24> '_BI1' lvalue ParmVar 0x9ce2320 '__first' '_BI1'))
        (CallExpr 0x9ce2668 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce2618 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
          (DeclRefExpr 0x9ce264c <col:52> '_BI1' lvalue ParmVar 0x9ce2360 '__last' '_BI1'))
        (CallExpr 0x9ce26f0 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce26a0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
          (DeclRefExpr 0x9ce26d4 <col:24> '_BI2' lvalue ParmVar 0x9ce23a0 '__result' '_BI2'))))))

;
    template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9ce3278 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x9ce29e8 <line:621:54>)
  (ReturnStmt 0x9ce3268 <line:623:7, line:625:18>
    (ParenExpr 0x9ce3250 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0x9ce3228 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce3098 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0x9ce2490)
        (CallExpr 0x9ce3168 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce3118 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd6920)
          (DeclRefExpr 0x9ce314c <col:27> '_BI1' lvalue ParmVar 0x9ce2840 '__first' '_BI1'))
        (CallExpr 0x9ce31f0 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce31a0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd6920)
          (DeclRefExpr 0x9ce31d4 <col:55> '_BI1' lvalue ParmVar 0x9ce2880 '__last' '_BI1'))
        (DeclRefExpr 0x9ce3210 <line:625:9> '_BI2' lvalue ParmVar 0x9ce28c0 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9ce3988 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0x9ce3960 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce38a8 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce3868 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9ce3834 <col:14> '_ForwardIterator' lvalue ParmVar 0x9ce3620 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9ce384c <col:25> '_ForwardIterator' lvalue ParmVar 0x9ce3660 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9ce38e8 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9ce38cc <col:35> '_ForwardIterator' lvalue ParmVar 0x9ce3620 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9ce3948 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9ce3918 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ce38fc <col:3> '_ForwardIterator' lvalue ParmVar 0x9ce3620 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9ce392c <col:13> 'const _Tp' lvalue ParmVar 0x9ce36d0 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa15bfc8 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa15bdf0 <line:685:7, col:32>
    0xa15bd90 "const int __tmp =
      (ImplicitCastExpr 0xa15bde0 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa15bdc4 <col:25> 'const int':'const int' lvalue ParmVar 0xa15b9d0 '__value' 'const int &'))")
  (ForStmt 0xa15bfa0 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa15be90 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0xa15be70 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa15be3c <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa15b920 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0xa15be80 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa15be54 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa15b960 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0xa15bec0 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0xa15bea8 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa15b920 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0xa15bf50 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0xa15bf00 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa15bef0 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0xa15bed4 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa15b920 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0xa15bf40 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0xa15bf30 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa15bf14 <col:13> 'const int':'const int' lvalue Var 0xa15bd90 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9ce55f8 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x9ce3f50 <line:685:7, col:32>
    0x9ce3f00 "const _Tp __tmp =
      (DeclRefExpr 0x9ce3f34 <col:25> 'const _Tp' lvalue ParmVar 0x9ce3d90 '__value' 'const _Tp &')")
  (ForStmt 0x9ce55d0 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce3fd0 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce3f90 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9ce3f60 <col:14> '_ForwardIterator' lvalue ParmVar 0x9ce3ce0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9ce3f78 <col:25> '_ForwardIterator' lvalue ParmVar 0x9ce3d20 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9ce4010 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9ce3ff4 <col:35> '_ForwardIterator' lvalue ParmVar 0x9ce3ce0 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9ce4070 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9ce4040 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ce4024 <col:3> '_ForwardIterator' lvalue ParmVar 0x9ce3ce0 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9ce4054 <col:13> 'const _Tp' lvalue Var 0x9ce3f00 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0x9ce5e40 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0x9ce5ba0 <line:696:7, col:28>
    0x9ce5b50 "const _Tp __tmp =
      (DeclRefExpr 0x9ce5b84 <col:25> 'const _Tp' lvalue ParmVar 0x9ce59e0 '__c' 'const _Tp &')")
  (CallExpr 0x9ce5e18 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0x9ce5d14 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0x9ce5bb0 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0x9ce5d2c <col:24> '_Tp *' lvalue ParmVar 0x9ce5920 '__first' '_Tp *')
    (CXXStaticCastExpr 0x9ce5d70 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0x9ce5d44 <col:60> 'const _Tp' lvalue Var 0x9ce5b50 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0x9ce5df0 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce5db8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9ce5d88 <col:10> '_Tp *' lvalue ParmVar 0x9ce5970 '__last' '_Tp *')
      (DeclRefExpr 0x9ce5da0 <col:19> '_Tp *' lvalue ParmVar 0x9ce5920 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa15bbe0 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9ce6128 <line:720:54>)
  (CallExpr 0xa15bbb8 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0xa15bba8 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa15bb64 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa15ba60 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9ce3ec0 '__fill_a')))
    (CallExpr 0xa159b78 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa159b68 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa159b08 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa159a60 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9cd59b0 '__niter_base')))
      (ImplicitCastExpr 0xa159b98 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa158f94 <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0a64f0 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0xa159c60 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa159c50 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa159c28 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa159a60 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9cd59b0 '__niter_base')))
      (ImplicitCastExpr 0xa159c80 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa159bdc <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa0a6530 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0xa159c8c <line:723:7> 'const int':'const int' lvalue ParmVar 0xa0a65c0 '__value' 'const int &')))

template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9ce62e8 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9ce6128 <line:720:54>)
  (CallExpr 0x9ce62c0 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0x9ce6158 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce3800 0x9ce3ec0 0x9ce5b10)
    (CallExpr 0x9ce6200 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce61b0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
      (DeclRefExpr 0x9ce61e4 <col:39> '_ForwardIterator' lvalue ParmVar 0x9ce5f20 '__first' '_ForwardIterator'))
    (CallExpr 0x9ce6288 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce6238 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
      (DeclRefExpr 0x9ce626c <col:67> '_ForwardIterator' lvalue ParmVar 0x9ce5f60 '__last' '_ForwardIterator'))
    (DeclRefExpr 0x9ce62a8 <line:723:7> 'const _Tp' lvalue ParmVar 0x9ce5fd0 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9ce7060 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0x9ce7010 <line:731:7, line:733:13>
    (DeclStmt 0x9ce6e90 <line:731:12, col:45>
      0x9ce6e40 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9ce6e74 <col:42> '_Size' lvalue ParmVar 0x9ce6b80 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce6f10 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce6ed0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9ce6ea0 <col:5> 'decltype(__n + 0)' lvalue Var 0x9ce6e40 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9ce6eb8 <col:15> 'int' 0))
    (BinaryOperator 0x9ce6f98 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9ce6f50 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9ce6f34 <col:20> 'decltype(__n + 0)' lvalue Var 0x9ce6e40 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9ce6f80 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ce6f64 <col:31> '_OutputIterator' lvalue ParmVar 0x9ce6b40 '__first' '_OutputIterator')))
    (BinaryOperator 0x9ce6ff8 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9ce6fc8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ce6fb0 <col:3> '_OutputIterator' lvalue ParmVar 0x9ce6b40 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9ce6fdc <col:13> 'const _Tp' lvalue ParmVar 0x9ce6c10 '__value' 'const _Tp &')))
  (ReturnStmt 0x9ce7050 <line:734:7, col:14>
    (DeclRefExpr 0x9ce7034 <col:14> '_OutputIterator' lvalue ParmVar 0x9ce6b40 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9ce7960 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0x9ce7680 <line:742:7, col:32>
    0x9ce7630 "const _Tp __tmp =
      (DeclRefExpr 0x9ce7664 <col:25> 'const _Tp' lvalue ParmVar 0x9ce74c0 '__value' 'const _Tp &')")
  (ForStmt 0x9ce7910 <line:743:7, line:745:13>
    (DeclStmt 0x9ce7790 <line:743:12, col:45>
      0x9ce7740 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9ce7774 <col:42> '_Size' lvalue ParmVar 0x9ce7450 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce7810 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce77d0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9ce77a0 <col:5> 'decltype(__n + 0)' lvalue Var 0x9ce7740 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9ce77b8 <col:15> 'int' 0))
    (BinaryOperator 0x9ce7898 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9ce7850 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9ce7834 <col:20> 'decltype(__n + 0)' lvalue Var 0x9ce7740 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9ce7880 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ce7864 <col:31> '_OutputIterator' lvalue ParmVar 0x9ce7410 '__first' '_OutputIterator')))
    (BinaryOperator 0x9ce78f8 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9ce78c8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ce78b0 <col:3> '_OutputIterator' lvalue ParmVar 0x9ce7410 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9ce78dc <col:13> 'const _Tp' lvalue Var 0x9ce7630 '__tmp' 'const _Tp')))
  (ReturnStmt 0x9ce7950 <line:746:7, col:14>
    (DeclRefExpr 0x9ce7934 <col:14> '_OutputIterator' lvalue ParmVar 0x9ce7410 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0x9ce8550 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0x9ce8488 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0x9ce8388 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce3800 0x9ce3ec0 0x9ce5b10)
    (DeclRefExpr 0x9ce83c4 <col:21> '_Tp *' lvalue ParmVar 0x9ce8150 '__first' '_Tp *')
    (CXXOperatorCallExpr 0x9ce8448 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce8410 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
      (DeclRefExpr 0x9ce83dc <col:30> '_Tp *' lvalue ParmVar 0x9ce8150 '__first' '_Tp *')
      (DeclRefExpr 0x9ce83f4 <col:40> '_Size' lvalue ParmVar 0x9ce8190 '__n' '_Size'))
    (DeclRefExpr 0x9ce846c <col:45> 'const _Tp' lvalue ParmVar 0x9ce8200 '__c' 'const _Tp &'))
  (ReturnStmt 0x9ce8540 <line:755:7, col:24>
    (CXXOperatorCallExpr 0x9ce8518 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce84e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
      (DeclRefExpr 0x9ce84b0 <col:14> '_Tp *' lvalue ParmVar 0x9ce8150 '__first' '_Tp *')
      (DeclRefExpr 0x9ce84c8 <col:24> '_Size' lvalue ParmVar 0x9ce8190 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9ce89f8 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0x9ce89e8 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0x9ce89c8 <col:14, col:75> '_OI'
      (CallExpr 0x9ce89a0 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x9ce88a8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce6d40 0x9ce75f0 0x9ce8330)
        (CallExpr 0x9ce8950 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9ce8900 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
          (DeclRefExpr 0x9ce8934 <col:52> '_OI' lvalue ParmVar 0x9ce8680 '__first' '_OI'))
        (DeclRefExpr 0x9ce8970 <col:62> '_Size' lvalue ParmVar 0x9ce86c0 '__n' '_Size')
        (DeclRefExpr 0x9ce8988 <col:67> 'const _Tp' lvalue ParmVar 0x9ce8730 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9cea780 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9cea770 <line:804:4, line:805:30>
    (UnaryOperator 0x9cea758 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9cea730 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9cea604 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9cea61c <col:29> 'const _Tp *' lvalue ParmVar 0x9cea290 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9cea634 <col:39> 'const _Tp *' lvalue ParmVar 0x9cea330 '__first2' 'const _Tp *')
        (BinaryOperator 0x9cea718 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9cea658 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9cea700 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9cea6d8 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9cea6a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (DeclRefExpr 0x9cea670 <col:11> 'const _Tp *' lvalue ParmVar 0x9cea2e0 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9cea688 <col:21> 'const _Tp *' lvalue ParmVar 0x9cea290 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9ce9fe0 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0x9ce9f98 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ce9dc0 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9ce9d80 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9ce9d50 <col:11> '_II1' lvalue ParmVar 0x9ce8d40 '__first1' '_II1')
      (DeclRefExpr 0x9ce9d68 <col:23> '_II1' lvalue ParmVar 0x9ce8d80 '__last1' '_II1'))
    (BinaryOperator 0x9ce9e48 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0x9ce9e00 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ce9de4 <col:34> '_II1' lvalue ParmVar 0x9ce8d40 '__first1' '_II1'))
      (UnaryOperator 0x9ce9e30 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ce9e14 <col:46> '_II2' lvalue ParmVar 0x9ce8dc0 '__first2' '_II2')))
    (IfStmt 0x9ce9f78 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0x9ce9f40 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0x9ce9f28 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9ce9f00 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9ce9ec0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0)
            (UnaryOperator 0x9ce9e78 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ce9e60 <col:13> '_II1' lvalue ParmVar 0x9ce8d40 '__first1' '_II1'))
            (UnaryOperator 0x9ce9ea8 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ce9e8c <col:26> '_II2' lvalue ParmVar 0x9ce8dc0 '__first2' '_II2')))))
      (ReturnStmt 0x9ce9f68 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0x9ce9f58 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9ce9fd0 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0x9ce9fc0 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9cea780 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9cea770 <line:804:4, line:805:30>
    (UnaryOperator 0x9cea758 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9cea730 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9cea604 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9cea61c <col:29> 'const _Tp *' lvalue ParmVar 0x9cea290 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9cea634 <col:39> 'const _Tp *' lvalue ParmVar 0x9cea330 '__first2' 'const _Tp *')
        (BinaryOperator 0x9cea718 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9cea658 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9cea700 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9cea6d8 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9cea6a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (DeclRefExpr 0x9cea670 <col:11> 'const _Tp *' lvalue ParmVar 0x9cea2e0 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9cea688 <col:21> 'const _Tp *' lvalue ParmVar 0x9cea290 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9cebf28 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0x9ceab50 <line:813:7, col:69>
    0x9ceab20 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9ceb890 <line:814:7, col:69>
    0x9ceb860 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9cebd60 <line:815:7, line:818:58>
    0x9ceb8b0 "const bool __simple =
      (ParenExpr 0x9cebd48 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0x9cebd30 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0x9cebbd8 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0x9cebae8 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0x9ceb9f0 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0x9cebac0 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9cebbb0 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9cebd08 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9cebf18 <line:820:7, col:71>
    (CallExpr 0x9cebef0 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9cebe80 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0x9cebea4 <col:44> '_II1' lvalue ParmVar 0x9cea860 '__first1' '_II1')
      (DeclRefExpr 0x9cebebc <col:54> '_II1' lvalue ParmVar 0x9cea8a0 '__last1' '_II1')
      (DeclRefExpr 0x9cebed4 <col:63> '_II2' lvalue ParmVar 0x9cea8e0 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9ceda48 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9ced6e8 <line:846:4, line:847:34>
    0x9ced620 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9ced6c0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced688 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9ced654 <col:16> '_RAI1' lvalue ParmVar 0x9ced170 '__last1' '_RAI1')
        (DeclRefExpr 0x9ced66c <col:26> '_RAI1' lvalue ParmVar 0x9ced130 '__first1' '_RAI1'))")
  (DeclStmt 0x9ced8c8 <line:848:4, line:849:34>
    0x9ced800 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9ced8a0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced868 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9ced834 <col:16> '_RAI2' lvalue ParmVar 0x9ced1f0 '__last2' '_RAI2')
        (DeclRefExpr 0x9ced84c <col:26> '_RAI2' lvalue ParmVar 0x9ced1b0 '__first2' '_RAI2'))")
  (ReturnStmt 0x9ceda38 <line:850:4, col:52>
    (ConditionalOperator 0x9ceda18 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9ced948 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced908 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
        (DeclRefExpr 0x9ced8d8 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ced800 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9ced8f0 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9ced620 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9ced9d8 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced9a0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (DeclRefExpr 0x9ced96c <col:31> '_RAI1' lvalue ParmVar 0x9ced130 '__first1' '_RAI1')
        (DeclRefExpr 0x9ced984 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ced800 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9ced9fc <col:52> '_RAI1' lvalue ParmVar 0x9ced170 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9ceda88 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9ceda78 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9ceda68 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0x9cec718 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0x9cec708 <col:11, col:18>
    (DeclRefExpr 0x9cec6f0 <col:18> '_II1' lvalue ParmVar 0x9cec330 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0x9cec7d8 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0x9cec7c8 <col:11, col:29>
    (CXXOperatorCallExpr 0x9cec7a0 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9cec760 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9cec72c <col:18> '_II' lvalue ParmVar 0x9cec570 '__first' '_II')
      (DeclRefExpr 0x9cec744 <col:29> '_II' lvalue ParmVar 0x9cec5b0 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9ceda48 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9ced6e8 <line:846:4, line:847:34>
    0x9ced620 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9ced6c0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced688 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9ced654 <col:16> '_RAI1' lvalue ParmVar 0x9ced170 '__last1' '_RAI1')
        (DeclRefExpr 0x9ced66c <col:26> '_RAI1' lvalue ParmVar 0x9ced130 '__first1' '_RAI1'))")
  (DeclStmt 0x9ced8c8 <line:848:4, line:849:34>
    0x9ced800 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9ced8a0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced868 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9ced834 <col:16> '_RAI2' lvalue ParmVar 0x9ced1f0 '__last2' '_RAI2')
        (DeclRefExpr 0x9ced84c <col:26> '_RAI2' lvalue ParmVar 0x9ced1b0 '__first2' '_RAI2'))")
  (ReturnStmt 0x9ceda38 <line:850:4, col:52>
    (ConditionalOperator 0x9ceda18 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9ced948 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced908 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
        (DeclRefExpr 0x9ced8d8 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ced800 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9ced8f0 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9ced620 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9ced9d8 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9ced9a0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (DeclRefExpr 0x9ced96c <col:31> '_RAI1' lvalue ParmVar 0x9ced130 '__first1' '_RAI1')
        (DeclRefExpr 0x9ced984 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ced800 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9ced9fc <col:52> '_RAI1' lvalue ParmVar 0x9ced170 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9ceda88 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9ceda78 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9ceda68 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9cf1930 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9cf12b8 <line:897:4, col:44>
    0x9cf11f0 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9cf1290 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf1258 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9cf1224 <col:26> 'const _Tp *' lvalue ParmVar 0x9cf0fb0 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9cf123c <col:36> 'const _Tp *' lvalue ParmVar 0x9cf0f60 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9cf1398 <line:898:4, col:44>
    0x9cf12d0 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9cf1370 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf1338 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9cf1304 <col:26> 'const _Up *' lvalue ParmVar 0x9cf1070 '__last2' 'const _Up *')
        (DeclRefExpr 0x9cf131c <col:36> 'const _Up *' lvalue ParmVar 0x9cf1020 '__first2' 'const _Up *'))")
  (DeclStmt 0x9cf17d8 <line:899:4, line:900:32>
    0x9cf13c0 "const int __result =
      (CallExpr 0x9cf17b0 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9cf13f4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9cf140c <col:42> 'const _Tp *' lvalue ParmVar 0x9cf0f60 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9cf1424 <col:52> 'const _Up *' lvalue ParmVar 0x9cf1020 '__first2' 'const _Up *')
        (CallExpr 0x9cf1788 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9cf1778 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9cf1718 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9cf1670 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9cd40c0 'min')))
          (DeclRefExpr 0x9cf1490 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9cf11f0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9cf14a8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9cf12d0 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9cf1920 <line:901:4, col:51>
    (ConditionalOperator 0x9cf1900 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9cf1828 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9cf1818 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cf17e8 <col:11> 'const int' lvalue Var 0x9cf13c0 '__result' 'const int'))
        (IntegerLiteral 0x9cf1800 <col:23> 'int' 0))
      (BinaryOperator 0x9cf1880 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9cf1870 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cf1840 <col:27> 'const int' lvalue Var 0x9cf13c0 '__result' 'const int'))
        (IntegerLiteral 0x9cf1858 <col:38> 'int' 0))
      (BinaryOperator 0x9cf18e8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9cf18c8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9cf1898 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9cf11f0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9cf18d8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9cf18b0 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9cf12d0 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9cf0c50 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0x9cefeb0 <line:872:2, col:70>
    0x9cefe80 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9cf0040 <line:873:2, col:70>
    0x9cf0010 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9cf0260 <line:874:2, col:59>
    0x9cf0230 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0x9cf0380 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0x9cf0270 <line:876:2> '_II1' lvalue ParmVar 0x9cefb60 '__last1' '_II1')
    (CallExpr 0x9cf0350 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9cf02c8 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0x9cf02ec <col:35> '_II1' lvalue ParmVar 0x9cefb20 '__first1' '_II1')
      (DeclRefExpr 0x9cf0304 <col:45> '_II1' lvalue ParmVar 0x9cefb60 '__last1' '_II1')
      (DeclRefExpr 0x9cf031c <line:877:7> '_II2' lvalue ParmVar 0x9cefba0 '__first2' '_II2')
      (DeclRefExpr 0x9cf0334 <col:17> '_II2' lvalue ParmVar 0x9cefbe0 '__last2' '_II2')))
  (ForStmt 0x9cf0ad0 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9cf04d0 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cf0408 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf03c8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
        (DeclRefExpr 0x9cf0398 <col:9> '_II1' lvalue ParmVar 0x9cefb20 '__first1' '_II1')
        (DeclRefExpr 0x9cf03b0 <col:21> '_II1' lvalue ParmVar 0x9cefb60 '__last1' '_II1'))
      (CallExpr 0x9cf04a8 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9cf0450 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cf0474 <col:51> '_II2' lvalue ParmVar 0x9cefba0 '__first2' '_II2')
        (DeclRefExpr 0x9cf048c <col:61> '_II2' lvalue ParmVar 0x9cefbe0 '__last2' '_II2')))
    (BinaryOperator 0x9cf0548 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0x9cf0500 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf04e8 <col:9> '_II1' lvalue ParmVar 0x9cefb20 '__first1' '_II1'))
      (UnaryOperator 0x9cf0530 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf0514 <col:21> '_II2' lvalue ParmVar 0x9cefba0 '__first2' '_II2')))
    (CompoundStmt 0x9cf0ab8 <line:880:4, line:885:4>
      (IfStmt 0x9cf0648 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9cf0600 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9cf05c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
          (UnaryOperator 0x9cf0578 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf0560 <col:11> '_II1' lvalue ParmVar 0x9cefb20 '__first1' '_II1'))
          (UnaryOperator 0x9cf05a8 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf058c <col:23> '_II2' lvalue ParmVar 0x9cefba0 '__first2' '_II2')))
        (ReturnStmt 0x9cf0638 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0x9cf0628 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9cf0a98 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9cf0a50 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9cf0a10 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
          (UnaryOperator 0x9cf0680 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf0664 <col:11> '_II2' lvalue ParmVar 0x9cefba0 '__first2' '_II2'))
          (UnaryOperator 0x9cf06b0 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf0694 <col:23> '_II1' lvalue ParmVar 0x9cefb20 '__first1' '_II1')))
        (ReturnStmt 0x9cf0a88 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0x9cf0a78 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9cf0c40 <line:886:2, col:44>
    (BinaryOperator 0x9cf0c28 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cf0b68 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf0b28 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0)
        (DeclRefExpr 0x9cf0af4 <col:9> '_II1' lvalue ParmVar 0x9cefb20 '__first1' '_II1')
        (DeclRefExpr 0x9cf0b0c <col:21> '_II1' lvalue ParmVar 0x9cefb60 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9cf0c00 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf0bc0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
        (DeclRefExpr 0x9cf0b8c <col:32> '_II2' lvalue ParmVar 0x9cefba0 '__first2' '_II2')
        (DeclRefExpr 0x9cf0ba4 <col:44> '_II2' lvalue ParmVar 0x9cefbe0 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9cf1930 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9cf12b8 <line:897:4, col:44>
    0x9cf11f0 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9cf1290 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf1258 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9cf1224 <col:26> 'const _Tp *' lvalue ParmVar 0x9cf0fb0 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9cf123c <col:36> 'const _Tp *' lvalue ParmVar 0x9cf0f60 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9cf1398 <line:898:4, col:44>
    0x9cf12d0 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9cf1370 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf1338 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9cf1304 <col:26> 'const _Up *' lvalue ParmVar 0x9cf1070 '__last2' 'const _Up *')
        (DeclRefExpr 0x9cf131c <col:36> 'const _Up *' lvalue ParmVar 0x9cf1020 '__first2' 'const _Up *'))")
  (DeclStmt 0x9cf17d8 <line:899:4, line:900:32>
    0x9cf13c0 "const int __result =
      (CallExpr 0x9cf17b0 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9cf13f4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9cf140c <col:42> 'const _Tp *' lvalue ParmVar 0x9cf0f60 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9cf1424 <col:52> 'const _Up *' lvalue ParmVar 0x9cf1020 '__first2' 'const _Up *')
        (CallExpr 0x9cf1788 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9cf1778 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9cf1718 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9cf1670 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9cd40c0 'min')))
          (DeclRefExpr 0x9cf1490 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9cf11f0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9cf14a8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9cf12d0 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9cf1920 <line:901:4, col:51>
    (ConditionalOperator 0x9cf1900 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9cf1828 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9cf1818 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cf17e8 <col:11> 'const int' lvalue Var 0x9cf13c0 '__result' 'const int'))
        (IntegerLiteral 0x9cf1800 <col:23> 'int' 0))
      (BinaryOperator 0x9cf1880 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9cf1870 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9cf1840 <col:27> 'const int' lvalue Var 0x9cf13c0 '__result' 'const int'))
        (IntegerLiteral 0x9cf1858 <col:38> 'int' 0))
      (BinaryOperator 0x9cf18e8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9cf18c8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9cf1898 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9cf11f0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9cf18d8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9cf18b0 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9cf12d0 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9cf33b8 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0x9cf2960 <line:910:7, col:69>
    0x9cf2930 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9cf2a90 <line:911:7, col:69>
    0x9cf2a60 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9cf31d8 <line:912:7, line:917:34>
    0x9cf2ab0 "const bool __simple =
      (ParenExpr 0x9cf31c0 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0x9cf31a8 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0x9cf30b8 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0x9cf2fd0 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0x9cf2e90 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0x9cf2d38 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0x9cf2bf0 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0x9cf2d10 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0x9cf2e78 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0x9cf2e50 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0x9cf2fb8 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0x9cf2f90 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0x9cf3090 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9cf3180 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9cf33a8 <line:919:7, line:920:29>
    (CallExpr 0x9cf3378 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9cf32f0 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0x9cf3314 <col:61> '_II1' lvalue ParmVar 0x9cf2630 '__first1' '_II1')
      (DeclRefExpr 0x9cf332c <col:71> '_II1' lvalue ParmVar 0x9cf2670 '__last1' '_II1')
      (DeclRefExpr 0x9cf3344 <line:920:12> '_II2' lvalue ParmVar 0x9cf26b0 '__first2' '_II2')
      (DeclRefExpr 0x9cf335c <col:22> '_II2' lvalue ParmVar 0x9cf26f0 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0x9cf3ff0 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0x9cf37f0 <line:939:7, line:940:12>
    0x9cf37c0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0x9cf3920 <line:941:7, line:942:15>
    0x9cf38f0 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0x9cf3930 <line:947:67>)
  (DeclStmt 0x9cf3a40 <line:949:7, col:59>
    0x9cf3960 "_DistanceType __len =
      (CallExpr 0x9cf3a18 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf39b0 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
        (DeclRefExpr 0x9cf39e4 <col:43> '_ForwardIterator' lvalue ParmVar 0x9cf34a0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9cf39fc <col:52> '_ForwardIterator' lvalue ParmVar 0x9cf34e0 '__last' '_ForwardIterator'))")
  (WhileStmt 0x9cf3fb0 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cf3ac0 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9cf3a80 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9cf3a50 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3960 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0x9cf3a68 <col:22> 'int' 0))
    (CompoundStmt 0x9cf3f90 <line:952:2, line:964:2>
      (DeclStmt 0x9cf3b70 <line:953:4, col:37>
        0x9cf3af0 "_DistanceType __half =
          (BinaryOperator 0x9cf3b58 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0x9cf3b24 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3960 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0x9cf3b40 <col:36> 'int' 1))")
      (DeclStmt 0x9cf3be0 <line:954:4, col:39>
        0x9cf3b90 "_ForwardIterator __middle =
          (DeclRefExpr 0x9cf3bc4 <col:32> '_ForwardIterator' lvalue ParmVar 0x9cf34a0 '__first' '_ForwardIterator')")
      (CallExpr 0x9cf3c80 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf3c18 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cae340)
        (DeclRefExpr 0x9cf3c4c <col:17> '_ForwardIterator' lvalue Var 0x9cf3b90 '__middle' '_ForwardIterator')
        (DeclRefExpr 0x9cf3c64 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3af0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0x9cf3f70 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9cf3d30 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9cf3cf0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
          (UnaryOperator 0x9cf3cc0 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf3ca4 <col:9> '_ForwardIterator' lvalue Var 0x9cf3b90 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0x9cf3cd4 <col:20> 'const _Tp' lvalue ParmVar 0x9cf3550 '__val' 'const _Tp &'))
        (CompoundStmt 0x9cf3f08 <line:957:6, line:961:6>
          (BinaryOperator 0x9cf3d88 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0x9cf3d54 <col:8> '_ForwardIterator' lvalue ParmVar 0x9cf34a0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9cf3d6c <col:18> '_ForwardIterator' lvalue Var 0x9cf3b90 '__middle' '_ForwardIterator'))
          (UnaryOperator 0x9cf3db8 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9cf3da0 <col:10> '_ForwardIterator' lvalue ParmVar 0x9cf34a0 '__first' '_ForwardIterator'))
          (BinaryOperator 0x9cf3ef0 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0x9cf3dcc <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3960 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0x9cf3ec8 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9cf3e90 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (CXXOperatorCallExpr 0x9cf3e50 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0x9cf3e18 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                (DeclRefExpr 0x9cf3de4 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3960 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0x9cf3dfc <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3af0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0x9cf3e78 <col:33> 'int' 1))))
        (BinaryOperator 0x9cf3f58 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0x9cf3f24 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3960 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0x9cf3f3c <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9cf3af0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0x9cf3fe0 <line:965:7, col:14>
    (DeclRefExpr 0x9cf3fc4 <col:14> '_ForwardIterator' lvalue ParmVar 0x9cf34a0 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0x9cf4410 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0x9cf41d8 <line:974:7, col:16>
    0x9cf41a0 "_Size __k")
  (ForStmt 0x9cf4348 <line:975:7, line:976:4>
    (BinaryOperator 0x9cf4218 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0x9cf41e8 <col:12> '_Size' lvalue Var 0x9cf41a0 '__k' '_Size')
      (IntegerLiteral 0x9cf4200 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cf42a0 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9cf4260 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9cf4230 <col:21> '_Size' lvalue ParmVar 0x9cf4080 '__n' '_Size')
      (IntegerLiteral 0x9cf4248 <col:28> 'int' 0))
    (CompoundAssignOperator 0x9cf42f8 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9cf42c4 <col:31> '_Size' lvalue ParmVar 0x9cf4080 '__n' '_Size')
      (IntegerLiteral 0x9cf42e0 <col:39> 'int' 1))
    (UnaryOperator 0x9cf4330 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9cf4318 <col:4> '_Size' lvalue Var 0x9cf41a0 '__k' '_Size')))
  (ReturnStmt 0x9cf4400 <line:977:7, col:20>
    (CXXOperatorCallExpr 0x9cf43d8 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9cf43a0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9cf436c <col:14> '_Size' lvalue Var 0x9cf41a0 '__k' '_Size')
      (IntegerLiteral 0x9cf4388 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0x9cf4dd0 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0x9cf4dc0 <col:5, col:63>
    (ImplicitCastExpr 0x9cf4db0 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0x9cf4d98 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0x9cf4598 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9cf4558 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9cf4518 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0x9cf4548 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9cf4530 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9cf4588 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9cf4570 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9cf4d88 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0x9cf4d48 <col:46, col:63> 'int'
            (ImplicitCastExpr 0x9cf4d38 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9cf4cf0 <col:46> 'int (unsigned int)' lvalue Function 0x9cf45b0 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0x9cf4d78 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9cf4d68 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0x9cf4d08 <col:60> 'int' lvalue ParmVar 0x9cf4440 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0x9cf5160 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0x9cf5150 <col:5, col:64>
    (ImplicitCastExpr 0x9cf5140 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0x9cf5128 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0x9cf4f58 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9cf4f18 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9cf4ed8 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0x9cf4f08 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9cf4ef0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9cf4f48 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9cf4f30 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9cf5118 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0x9cf50d8 <col:46, col:64> 'int'
            (ImplicitCastExpr 0x9cf50c8 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9cf5080 <col:46> 'int (unsigned long)' lvalue Function 0x9cf4f90 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0x9cf5108 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0x9cf50f8 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0x9cf5098 <col:61> 'long' lvalue ParmVar 0x9cf4e00 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0x9cf54f0 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0x9cf54e0 <col:5, col:70>
    (ImplicitCastExpr 0x9cf54d0 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0x9cf54b8 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0x9cf52e8 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0x9cf52a8 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9cf5268 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0x9cf5298 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9cf5280 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9cf52d8 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9cf52c0 <col:47> 'int' 1)))
        (ImplicitCastExpr 0x9cf54a8 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0x9cf5468 <col:51, col:70> 'int'
            (ImplicitCastExpr 0x9cf5458 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9cf5410 <col:51> 'int (unsigned long long)' lvalue Function 0x9cf5320 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0x9cf5498 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0x9cf5488 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0x9cf5428 <col:67> 'long long' lvalue ParmVar 0x9cf5190 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9cf59a8 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0x9cf5778 <line:1018:56>)
  (ReturnStmt 0x9cf5998 <line:1020:7, line:1022:37>
    (CallExpr 0x9cf5970 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9cf57a0 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ceaa00)
      (CallExpr 0x9cf5840 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf57f0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
        (DeclRefExpr 0x9cf5824 <col:49> '_II1' lvalue ParmVar 0x9cf55d0 '__first1' '_II1'))
      (CallExpr 0x9cf58c8 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf5878 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
        (DeclRefExpr 0x9cf58ac <col:28> '_II1' lvalue ParmVar 0x9cf5610 '__last1' '_II1'))
      (CallExpr 0x9cf5950 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf5900 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
        (DeclRefExpr 0x9cf5934 <col:28> '_II2' lvalue ParmVar 0x9cf5650 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9cf67a0 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0x9cf6518 <line:1048:56>)
  (ForStmt 0x9cf6758 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9cf6598 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9cf6558 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
      (DeclRefExpr 0x9cf6524 <col:14> '_IIter1' lvalue ParmVar 0x9cf5ad0 '__first1' '_IIter1')
      (DeclRefExpr 0x9cf653c <col:26> '_IIter1' lvalue ParmVar 0x9cf5b10 '__last1' '_IIter1'))
    (BinaryOperator 0x9cf6620 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9cf65d8 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf65bc <col:37> '_IIter1' lvalue ParmVar 0x9cf5ad0 '__first1' '_IIter1'))
      (UnaryOperator 0x9cf6608 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf65ec <col:49> '_IIter2' lvalue ParmVar 0x9cf5b50 '__first2' '_IIter2')))
    (IfStmt 0x9cf6738 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0x9cf6700 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0x9cf66e0 <col:7, col:47> '_Bool'
          (CallExpr 0x9cf66b8 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0x9cf6640 <col:12> '_BinaryPredicate' lvalue ParmVar 0x9cf5b90 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0x9cf6670 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9cf6658 <col:27> '_IIter1' lvalue ParmVar 0x9cf5ad0 '__first1' '_IIter1'))
            (UnaryOperator 0x9cf66a0 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9cf6684 <col:38> '_IIter2' lvalue ParmVar 0x9cf5b50 '__first2' '_IIter2')))))
      (ReturnStmt 0x9cf6728 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0x9cf6718 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9cf6790 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0x9cf6780 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9cf6f90 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0x9cf6b80 <line:1077:7, col:69>
    0x9cf6b50 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9cf6cb0 <line:1078:7, col:69>
    0x9cf6c80 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0x9cf6cc0 <line:1083:56>)
  (NullStmt 0x9cf6cd0 <line:1084:56>)
  (ReturnStmt 0x9cf6f80 <line:1086:7, line:1089:33>
    (CallExpr 0x9cf6f50 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9cf6cf8 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cf2810)
      (CallExpr 0x9cf6d98 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf6d48 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
        (DeclRefExpr 0x9cf6d7c <col:67> '_II1' lvalue ParmVar 0x9cf6880 '__first1' '_II1'))
      (CallExpr 0x9cf6e20 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf6dd0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
        (DeclRefExpr 0x9cf6e04 <col:25> '_II1' lvalue ParmVar 0x9cf68c0 '__last1' '_II1'))
      (CallExpr 0x9cf6ea8 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf6e58 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
        (DeclRefExpr 0x9cf6e8c <col:25> '_II2' lvalue ParmVar 0x9cf6900 '__first2' '_II2'))
      (CallExpr 0x9cf6f30 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf6ee0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd59b0)
        (DeclRefExpr 0x9cf6f14 <col:25> '_II2' lvalue ParmVar 0x9cf6940 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0x9cf7e18 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0x9cf7460 <line:1110:7, col:75>
    0x9cf7430 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9cf7590 <line:1111:7, col:75>
    0x9cf7560 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9cf77a0 <line:1112:7, col:64>
    0x9cf7770 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0x9cf77b0 <line:1117:56>)
  (NullStmt 0x9cf77c0 <line:1118:56>)
  (BinaryOperator 0x9cf78e0 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0x9cf77cc <col:7> '_II1' lvalue ParmVar 0x9cf7110 '__last1' '_II1')
    (CallExpr 0x9cf78b0 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9cf7828 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0x9cf784c <col:40> '_II1' lvalue ParmVar 0x9cf70d0 '__first1' '_II1')
      (DeclRefExpr 0x9cf7864 <col:50> '_II1' lvalue ParmVar 0x9cf7110 '__last1' '_II1')
      (DeclRefExpr 0x9cf787c <col:59> '_II2' lvalue ParmVar 0x9cf7150 '__first2' '_II2')
      (DeclRefExpr 0x9cf7894 <col:69> '_II2' lvalue ParmVar 0x9cf7190 '__last2' '_II2')))
  (ForStmt 0x9cf7c98 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9cf7a30 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cf7968 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf7928 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
        (DeclRefExpr 0x9cf78f8 <col:14> '_II1' lvalue ParmVar 0x9cf70d0 '__first1' '_II1')
        (DeclRefExpr 0x9cf7910 <col:26> '_II1' lvalue ParmVar 0x9cf7110 '__last1' '_II1'))
      (CallExpr 0x9cf7a08 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9cf79b0 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9cf79d4 <col:56> '_II2' lvalue ParmVar 0x9cf7150 '__first2' '_II2')
        (DeclRefExpr 0x9cf79ec <col:66> '_II2' lvalue ParmVar 0x9cf7190 '__last2' '_II2')))
    (BinaryOperator 0x9cf7aa8 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0x9cf7a60 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf7a48 <col:7> '_II1' lvalue ParmVar 0x9cf70d0 '__first1' '_II1'))
      (UnaryOperator 0x9cf7a90 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf7a74 <col:19> '_II2' lvalue ParmVar 0x9cf7150 '__first2' '_II2')))
    (CompoundStmt 0x9cf7c80 <line:1123:2, line:1128:2>
      (IfStmt 0x9cf7b80 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0x9cf7b38 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9cf7ac0 <col:8> '_Compare' lvalue ParmVar 0x9cf71d0 '__comp' '_Compare')
          (UnaryOperator 0x9cf7af0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf7ad8 <col:16> '_II1' lvalue ParmVar 0x9cf70d0 '__first1' '_II1'))
          (UnaryOperator 0x9cf7b20 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf7b04 <col:27> '_II2' lvalue ParmVar 0x9cf7150 '__first2' '_II2')))
        (ReturnStmt 0x9cf7b70 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0x9cf7b60 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9cf7c60 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0x9cf7c18 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9cf7b9c <col:8> '_Compare' lvalue ParmVar 0x9cf71d0 '__comp' '_Compare')
          (UnaryOperator 0x9cf7bd0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf7bb4 <col:16> '_II2' lvalue ParmVar 0x9cf7150 '__first2' '_II2'))
          (UnaryOperator 0x9cf7c00 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf7be4 <col:27> '_II1' lvalue ParmVar 0x9cf70d0 '__first1' '_II1')))
        (ReturnStmt 0x9cf7c50 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0x9cf7c40 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9cf7e08 <line:1129:7, col:49>
    (BinaryOperator 0x9cf7df0 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cf7d30 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf7cf0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0)
        (DeclRefExpr 0x9cf7cbc <col:14> '_II1' lvalue ParmVar 0x9cf70d0 '__first1' '_II1')
        (DeclRefExpr 0x9cf7cd4 <col:26> '_II1' lvalue ParmVar 0x9cf7110 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9cf7dc8 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf7d88 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
        (DeclRefExpr 0x9cf7d54 <col:37> '_II2' lvalue ParmVar 0x9cf7150 '__first2' '_II2')
        (DeclRefExpr 0x9cf7d6c <col:49> '_II2' lvalue ParmVar 0x9cf7190 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0x9cf8f08 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0x9cf81d8 <line:1156:56>)
  (WhileStmt 0x9cf83d8 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0x9cf8348 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cf8258 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf8218 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
        (DeclRefExpr 0x9cf81e4 <col:14> '_InputIterator1' lvalue ParmVar 0x9cf7fe0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9cf81fc <col:26> '_InputIterator1' lvalue ParmVar 0x9cf8020 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0x9cf8320 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf82e0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0)
        (UnaryOperator 0x9cf8298 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9cf827c <col:38> '_InputIterator1' lvalue ParmVar 0x9cf7fe0 '__first1' '_InputIterator1'))
        (UnaryOperator 0x9cf82c8 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9cf82ac <col:51> '_InputIterator2' lvalue ParmVar 0x9cf8060 '__first2' '_InputIterator2'))))
    (CompoundStmt 0x9cf83c0 <line:1159:9, line:1162:9>
      (UnaryOperator 0x9cf8378 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf8360 <col:6> '_InputIterator1' lvalue ParmVar 0x9cf7fe0 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9cf83a8 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf838c <col:6> '_InputIterator2' lvalue ParmVar 0x9cf8060 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9cf8ef8 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0x9cf8ed8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9cf8ea8 <col:53> '_InputIterator1' lvalue ParmVar 0x9cf7fe0 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9cf8ec0 <col:63> '_InputIterator2' lvalue ParmVar 0x9cf8060 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9cf96d8 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0x9cf9358 <line:1191:56>)
  (WhileStmt 0x9cf9558 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0x9cf94c8 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9cf93d8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf9398 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0)
        (DeclRefExpr 0x9cf9364 <col:14> '_InputIterator1' lvalue ParmVar 0x9cf9110 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9cf937c <col:26> '_InputIterator1' lvalue ParmVar 0x9cf9150 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0x9cf94a8 <col:37, col:77> '_Bool'
        (CallExpr 0x9cf9480 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0x9cf9408 <col:42> '_BinaryPredicate' lvalue ParmVar 0x9cf91d0 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0x9cf9438 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf9420 <col:57> '_InputIterator1' lvalue ParmVar 0x9cf9110 '__first1' '_InputIterator1'))
          (UnaryOperator 0x9cf9468 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9cf944c <col:68> '_InputIterator2' lvalue ParmVar 0x9cf9190 '__first2' '_InputIterator2')))))
    (CompoundStmt 0x9cf9540 <line:1194:9, line:1197:9>
      (UnaryOperator 0x9cf94f8 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf94e0 <col:6> '_InputIterator1' lvalue ParmVar 0x9cf9110 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9cf9528 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9cf950c <col:6> '_InputIterator2' lvalue ParmVar 0x9cf9190 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9cf96c8 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0x9cf96a8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9cf9678 <col:53> '_InputIterator1' lvalue ParmVar 0x9cf9110 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9cf9690 <col:63> '_InputIterator2' lvalue ParmVar 0x9cf9190 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9cffb50 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0x9cffb40 <col:5, col:55>
    (CallExpr 0x9cffb08 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0x9cffaf8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9cffa98 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9c49580 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9cff6d0 'wcschr')))
      (CXXConstCastExpr 0x9cffa68 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9cffa58 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9cffa30 <col:46> 'wchar_t *' lvalue ParmVar 0x9cff8d0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9cffb30 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9cffa80 <col:52> 'wchar_t' lvalue ParmVar 0x9cff910 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9cffdf0 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0x9cffde0 <col:5, col:58>
    (CallExpr 0x9cffda8 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0x9cffd98 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9cffd38 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9c49d10 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9cff740 'wcspbrk')))
      (CXXConstCastExpr 0x9cffd08 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9cffcf8 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9cffcd0 <col:47> 'wchar_t *' lvalue ParmVar 0x9cffb80 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9cffdd0 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9cffd20 <col:54> 'const wchar_t *' lvalue ParmVar 0x9cffbd0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9d00040 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0x9d00030 <col:5, col:56>
    (CallExpr 0x9cffff8 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0x9cfffe8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9cfffc8 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9c496e0 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9cff7b0 'wcsrchr')))
      (CXXConstCastExpr 0x9cfff98 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9cfff88 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9cfff60 <col:47> 'wchar_t *' lvalue ParmVar 0x9cffe20 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9d00020 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9cfffb0 <col:53> 'wchar_t' lvalue ParmVar 0x9cffe60 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9d002a0 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0x9d00290 <col:5, col:57>
    (CallExpr 0x9d00258 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0x9d00248 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d00228 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9c49e80 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9cff820 'wcsstr')))
      (CXXConstCastExpr 0x9d001f8 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9d001e8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9d001c0 <col:46> 'wchar_t *' lvalue ParmVar 0x9d00070 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9d00280 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9d00210 <col:53> 'const wchar_t *' lvalue ParmVar 0x9d000c0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0x9d005d0 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0x9d005c0 <col:5, col:61>
    (CallExpr 0x9d00578 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0x9d00568 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d00508 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4af20 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff890 'wmemchr')))
      (CXXConstCastExpr 0x9d004c0 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9d004b0 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9d00488 <col:47> 'wchar_t *' lvalue ParmVar 0x9d002d0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9d005a0 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d004d8 <col:53> 'wchar_t' lvalue ParmVar 0x9d00310 '__c' 'wchar_t'))
      (ImplicitCastExpr 0x9d005b0 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d004f0 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0x9d00350 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0x9d02dc8 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0x9d02e60 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0x9d02e70 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0x9d00e70 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0x9d02f10 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0x9d02f98 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0x9d02f88 <col:36, col:43>
    (MemberExpr 0x9d02f64 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0x9d00d20
      (CXXThisExpr 0x9d02f38 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0x9d03010 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0x9d02ff8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0x9d02fc0 <col:9> '_StateT' lvalue ->_M_state 0x9d00d60
      (CXXThisExpr 0x9d02fb0 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9d02fe0 <col:20> '_StateT' lvalue ParmVar 0x9d01060 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0x9d03068 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0x9d03058 <col:9, col:16>
    (MemberExpr 0x9d03038 <col:16> 'const _StateT' lvalue ->_M_state 0x9d00d60
      (CXXThisExpr 0x9d03028 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0x9d03120 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0x9d030c8 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9d03090 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9d00d20
      (CXXThisExpr 0x9d03080 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9d030b0 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9d011f0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9d03110 <line:158:2, col:10>
    (UnaryOperator 0x9d030f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d030e8 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0x9d031d8 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0x9d03180 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9d03148 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9d00d20
      (CXXThisExpr 0x9d03138 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9d03168 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9d01320 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9d031c8 <line:169:2, col:10>
    (UnaryOperator 0x9d031b0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9d031a0 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0x9d03308 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0x9d03280 <line:181:2, col:19>
    0x9d03200 "fpos<_StateT> __pos =
      (ParenListExpr 0x9d03260 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9d03248 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9d03238 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9d032c0 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9d03290 <col:2> 'fpos<_StateT>' lvalue Var 0x9d03200 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9d032a8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9d013f0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9d032f8 <line:183:2, col:9>
    (DeclRefExpr 0x9d032e0 <col:9> 'fpos<_StateT>' lvalue Var 0x9d03200 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0x9d03438 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0x9d033b0 <line:195:2, col:19>
    0x9d03330 "fpos<_StateT> __pos =
      (ParenListExpr 0x9d03390 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9d03378 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9d03368 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9d033f0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9d033c0 <col:2> 'fpos<_StateT>' lvalue Var 0x9d03330 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9d033d8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9d01500 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9d03428 <line:197:2, col:9>
    (DeclRefExpr 0x9d03410 <col:9> 'fpos<_StateT>' lvalue Var 0x9d03330 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0x9d03548 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0x9d03538 <col:9, col:33>
    (CXXOperatorCallExpr 0x9d03510 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9d034d8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (MemberExpr 0x9d03468 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0x9d00d20
        (CXXThisExpr 0x9d03458 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0x9d034a0 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9d03488 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x9d02cc0 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9d03978 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0x9d03968 <col:7, col:49>
    (BinaryOperator 0x9d03950 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0x9d038f0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9d038d8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9d036a0 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9d03930 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9d03918 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9d037a0 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9d03d68 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0x9d03d58 <col:7, col:49>
    (BinaryOperator 0x9d03d40 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0x9d03ce0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9d03cc8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9d03ab0 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9d03d20 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9d03d08 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9d03bb0 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d072a8 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0x9d07290 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0x9d07260 <col:9> 'char_type':'_CharT' lvalue ParmVar 0x9d05d80 '__c1' 'char_type &')
    (DeclRefExpr 0x9d07278 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9d05df0 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d07360 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0x9d07350 <col:9, col:24>
    (CXXOperatorCallExpr 0x9d07328 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9d072f0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cc4b00 0x9cc5110)
      (DeclRefExpr 0x9d072bc <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9d05f10 '__c1' 'const char_type &')
      (DeclRefExpr 0x9d072d4 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0x9d05f60 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d07418 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0x9d07408 <col:9, col:23>
    (CXXOperatorCallExpr 0x9d073e0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9d073a8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cc9ba0 0x9cca170)
      (DeclRefExpr 0x9d07374 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9d06080 '__c1' 'const char_type &')
      (DeclRefExpr 0x9d0738c <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0x9d060d0 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d07478 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0x9d07468 <col:9, col:42>
    (CXXStaticCastExpr 0x9d07450 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0x9d0742c <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9d06ce0 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d074d8 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0x9d074c8 <col:9, col:41>
    (CXXStaticCastExpr 0x9d074b0 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0x9d0748c <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0x9d06e00 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d07590 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0x9d07580 <col:9, col:24>
    (CXXOperatorCallExpr 0x9d07558 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9d07520 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cc4b00 0x9cc5110)
      (DeclRefExpr 0x9d074ec <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9d06f20 '__c1' 'const int_type &')
      (DeclRefExpr 0x9d07504 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9d06f70 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0x9d07608 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0x9d075f8 <col:9, col:56>
    (CXXStaticCastExpr 0x9d075e0 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0x9d075c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9d075a8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d07768 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0x9d07758 <col:9, col:72>
    (ConditionalOperator 0x9d07738 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0x9d076b0 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0x9d07688 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0x9d0761c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9d07010 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0x9d07634 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9d07140 '__c' 'const int_type &')
          (CallExpr 0x9d07668 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0x9d0764c <col:34> 'int_type (void)' lvalue CXXMethod 0x9d070d0 'eof' 'int_type (void)'))))
      (DeclRefExpr 0x9d076c4 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9d07140 '__c' 'const int_type &')
      (CallExpr 0x9d07718 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0x9d076dc <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0x9d06ea0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0x9d07700 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9d094a8 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0x9d09458 <line:148:7, line:152:11>
    (DeclStmt 0x9d07b70 <line:148:12, col:31>
      0x9d07b10 "std::size_t __i =
        (ImplicitCastExpr 0x9d07b60 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9d07b48 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9d07bd0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9d07bb0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d07b80 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9d07b10 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9d07bc0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d07b98 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9d079e0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9d07c00 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9d07be8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9d07b10 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9d09438 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0x9d07cc0 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0x9d07c14 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9d06130 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9d07c60 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9d07c2c <col:9> 'const char_type *' lvalue ParmVar 0x9d07930 '__s1' 'const char_type *')
          (DeclRefExpr 0x9d07c44 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9d07b10 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0x9d07ca8 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0x9d07c74 <col:20> 'const char_type *' lvalue ParmVar 0x9d07980 '__s2' 'const char_type *')
          (DeclRefExpr 0x9d07c8c <col:25> 'std::size_t':'unsigned int' lvalue Var 0x9d07b10 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0x9d09310 <line:150:4, col:12>
        (UnaryOperator 0x9d092f8 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0x9d07ce8 <col:12> 'int' 1)))
      (IfStmt 0x9d09418 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0x9d093c8 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0x9d09320 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9d06130 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0x9d09368 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9d09338 <col:14> 'const char_type *' lvalue ParmVar 0x9d07980 '__s2' 'const char_type *')
            (DeclRefExpr 0x9d09350 <col:19> 'std::size_t':'unsigned int' lvalue Var 0x9d07b10 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0x9d093b0 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9d0937c <col:25> 'const char_type *' lvalue ParmVar 0x9d07930 '__s1' 'const char_type *')
            (DeclRefExpr 0x9d09394 <col:30> 'std::size_t':'unsigned int' lvalue Var 0x9d07b10 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0x9d09408 <line:152:4, col:11>
          (IntegerLiteral 0x9d093f0 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0x9d09498 <line:153:7, col:14>
    (IntegerLiteral 0x9d09480 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0x9d09960 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0x9d09810 <line:161:7, col:26>
    0x9d097b0 "std::size_t __i =
      (ImplicitCastExpr 0x9d09800 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d097e8 <col:25> 'int' 0))")
  (WhileStmt 0x9d09910 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0x9d098c8 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0x9d098a0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0x9d09820 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9d06000 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9d09868 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9d09838 <col:18> 'const char_type *' lvalue ParmVar 0x9d09690 '__p' 'const char_type *')
          (DeclRefExpr 0x9d09850 <col:22> 'std::size_t':'unsigned int' lvalue Var 0x9d097b0 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0x9d09888 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0x9d098f8 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9d098dc <col:11> 'std::size_t':'unsigned int' lvalue Var 0x9d097b0 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0x9d09950 <line:164:7, col:14>
    (ImplicitCastExpr 0x9d09940 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9d09924 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9d097b0 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0x9d0a1f8 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0x9d0a1a8 <line:172:7, line:174:24>
    (DeclStmt 0x9d09fa0 <line:172:12, col:31>
      0x9d09f40 "std::size_t __i =
        (ImplicitCastExpr 0x9d09f90 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9d09f78 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9d0a000 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9d09fe0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d09fb0 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9d09f40 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9d09ff0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d09fc8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9d09c90 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9d0a030 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9d0a018 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9d09f40 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9d0a188 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0x9d0a0c0 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0x9d0a044 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9d06000 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9d0a090 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0x9d0a05c <col:16> 'const char_type *' lvalue ParmVar 0x9d09c30 '__s' 'const char_type *')
          (DeclRefExpr 0x9d0a074 <col:20> 'std::size_t':'unsigned int' lvalue Var 0x9d09f40 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0x9d0a0a4 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0x9d09ce0 '__a' 'const char_type &'))
      (ReturnStmt 0x9d0a178 <line:174:11, col:24>
        (CXXOperatorCallExpr 0x9d0a150 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9d0a118 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccec10)
          (DeclRefExpr 0x9d0a0e4 <col:18> 'const char_type *' lvalue ParmVar 0x9d09c30 '__s' 'const char_type *')
          (DeclRefExpr 0x9d0a0fc <col:24> 'std::size_t':'unsigned int' lvalue Var 0x9d09f40 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0x9d0a1e8 <line:175:7, col:14>
    (IntegerLiteral 0x9d0a1d0 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9d0a890 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0x9d0a880 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0x9d0a868 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0x9d0a818 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0x9d0a76c <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9cd9ea0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0x9d0a784 <col:53> 'char_type *' lvalue ParmVar 0x9d0a490 '__s1' 'char_type *')
        (DeclRefExpr 0x9d0a79c <col:59> 'const char_type *' lvalue ParmVar 0x9d0a4e0 '__s2' 'const char_type *')
        (BinaryOperator 0x9d0a800 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0x9d0a7f0 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9d0a7b4 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0x9d0a540 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9d0a7d8 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9d0af78 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0x9d0af28 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0x9d0ae30 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0)
    (DeclRefExpr 0x9d0ae64 <col:17> 'const char_type *' lvalue ParmVar 0x9d0ab80 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0x9d0aee8 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9d0aeb0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ccec10)
      (DeclRefExpr 0x9d0ae7c <col:23> 'const char_type *' lvalue ParmVar 0x9d0ab80 '__s2' 'const char_type *')
      (DeclRefExpr 0x9d0ae94 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0x9d0abe0 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0x9d0af0c <col:35> 'char_type *' lvalue ParmVar 0x9d0ab30 '__s1' 'char_type *'))
  (ReturnStmt 0x9d0af68 <line:194:7, col:14>
    (DeclRefExpr 0x9d0af50 <col:14> 'char_type *' lvalue ParmVar 0x9d0ab30 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0x9d0c5f0 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0x9d0c5a0 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9d0c520 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce8850)
    (DeclRefExpr 0x9d0c554 <col:19> 'char_type *' lvalue ParmVar 0x9d0b210 '__s' 'char_type *')
    (DeclRefExpr 0x9d0c56c <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0x9d0b270 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0x9d0c584 <col:29> 'char_type':'_CharT' lvalue ParmVar 0x9d0b2b0 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0x9d0c5e0 <line:204:7, col:14>
    (DeclRefExpr 0x9d0c5c8 <col:14> 'char_type *' lvalue ParmVar 0x9d0b210 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e0b8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9d0e0a0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9d0e060 <col:9> 'char_type':'char' lvalue ParmVar 0x9d0cce0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d0e090 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9d0e078 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0cd70 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e168 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9d0e158 <col:9, col:24>
    (BinaryOperator 0x9d0e140 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d0e110 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e100 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0cc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0ce90 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e130 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e120 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0e4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9d0cee0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e218 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9d0e208 <col:9, col:23>
    (BinaryOperator 0x9d0e1f0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d0e1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0d000 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e1e0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1d0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e194 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9d0d050 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d0ffa8 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9d0ff98 <col:9, col:48>
    (CallExpr 0x9d0e2b8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9d0e2a8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d0e22c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9d0e2f0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0e2e0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e244 <col:33> 'const char_type *' lvalue ParmVar 0x9d0d150 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff78 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0ff68 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e25c <col:39> 'const char_type *' lvalue ParmVar 0x9d0d1a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff88 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d0e274 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d1e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d10138 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9d10128 <col:9, col:36>
    (CallExpr 0x9d100f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9d100e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d10094 <col:16> 'unsigned int (const char *)' lvalue Function 0x9d0ffc0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9d10118 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d100ac <col:33> 'const char_type *' lvalue ParmVar 0x9d0d2f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d103f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9d103e8 <col:9, col:77>
    (CXXStaticCastExpr 0x9d103d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9d10348 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9d10338 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d102b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9d10150 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d10380 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10370 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d102cc <col:63> 'const char_type *' lvalue ParmVar 0x9d0d3f0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9d103a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d10390 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d102e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9d0d480 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9d103b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d102fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d430 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d10548 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9d10538 <col:9, col:74>
    (CXXStaticCastExpr 0x9d10520 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10498 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9d10488 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1040c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9cd9ea0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d104d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d104c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10424 <col:58> 'char_type *' lvalue ParmVar 0x9d0d5e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d104f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d104e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d1043c <col:64> 'const char_type *' lvalue ParmVar 0x9d0d630 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d10500 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10454 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d670 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d107e8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9d107d8 <col:9, col:73>
    (CXXStaticCastExpr 0x9d107c0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10738 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9d10728 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d106c4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d10770 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d10760 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106dc <col:57> 'char_type *' lvalue ParmVar 0x9d0d780 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d10790 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10780 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106f4 <col:63> 'const char_type *' lvalue ParmVar 0x9d0d7d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d107a0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d1070c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d810 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d10938 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9d10928 <col:9, col:71>
    (CXXStaticCastExpr 0x9d10910 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10888 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9d10878 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d107fc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9ce5bb0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d108c0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d108b0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10814 <col:57> 'char_type *' lvalue ParmVar 0x9d0d8f0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9d108e0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d108d0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d1082c <col:62> 'char_type':'char' lvalue ParmVar 0x9d0d970 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9d108f0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10844 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d930 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d109b8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9d109a8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d10990 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9d10980 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9d10970 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9d1094c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9d0db00 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d10a70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9d10a60 <col:9, col:69>
    (CXXStaticCastExpr 0x9d10a48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9d10a38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9d10a18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9d10a08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9d109f8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9d109cc <col:65> 'const char_type':'const char' lvalue ParmVar 0x9d0dc20 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d10b00 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9d10af0 <col:9, col:24>
    (BinaryOperator 0x9d10ad8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d10ab8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a84 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9d0dd40 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d10ac8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a9c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9d0dd90 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d10b78 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9d10b68 <col:9, col:56>
    (CXXStaticCastExpr 0x9d10b50 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9d10b30 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9d10b18 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d10cd8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9d10cc8 <col:9, col:37>
    (ConditionalOperator 0x9d10ca8 <col:16, col:37> 'int'
      (ParenExpr 0x9d10c50 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9d10c38 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9d10c28 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9d10b8c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &'))
          (CallExpr 0x9d10c08 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9d10bf8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d10ba4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9d0ded0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9d10c68 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9d10c98 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10c80 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13618 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9d13600 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9d135c0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9d11090 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d135f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9d135d8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11120 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d136a8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9d13698 <col:9, col:24>
    (BinaryOperator 0x9d13680 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d13660 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d1362c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11240 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13670 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13644 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11290 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13738 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9d13728 <col:9, col:23>
    (BinaryOperator 0x9d13710 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d136f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136bc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d113b0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13700 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136d4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11400 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d138a0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9d13890 <col:9, col:39>
    (CallExpr 0x9d13838 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9d13828 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d137cc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b0d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cface0 'wmemcmp')))
      (ImplicitCastExpr 0x9d13860 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13784 <col:24> 'const char_type *' lvalue ParmVar 0x9d11500 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9d13870 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d1379c <col:30> 'const char_type *' lvalue ParmVar 0x9d11550 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13880 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d137b4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11590 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d139a8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9d13998 <col:9, col:26>
    (CallExpr 0x9d13968 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9d13958 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13904 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9c4aa10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9cfa730 'wcslen')))
      (ImplicitCastExpr 0x9d13988 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d138ec <col:23> 'const char_type *' lvalue ParmVar 0x9d116a0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d13ae8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9d13ad8 <col:9, col:37>
    (ImplicitCastExpr 0x9d13ac8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9d13a70 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9d13a60 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d13a40 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4af20 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff890 'wmemchr')))
        (ImplicitCastExpr 0x9d13a98 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d139f8 <col:24> 'const char_type *' lvalue ParmVar 0x9d117a0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9d13aa8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13a10 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11830 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9d13ab8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13a28 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d117e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13c50 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9d13c40 <col:9, col:40>
    (CallExpr 0x9d13be8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9d13bd8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13b7c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b420 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cfadc0 'wmemmove')))
      (ImplicitCastExpr 0x9d13c10 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b34 <col:25> 'char_type *' lvalue ParmVar 0x9d11990 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13c20 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b4c <col:31> 'const char_type *' lvalue ParmVar 0x9d119e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13c30 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13b64 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9d11a20 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13d90 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9d13d80 <col:9, col:39>
    (CallExpr 0x9d13d28 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9d13d18 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13ce4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9c4b280 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9cfad50 'wmemcpy')))
      (ImplicitCastExpr 0x9d13d50 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13c9c <col:24> 'char_type *' lvalue ParmVar 0x9d11b30 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13d60 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13cb4 <col:30> 'const char_type *' lvalue ParmVar 0x9d11b80 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13d70 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13ccc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11bc0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d13ef0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9d13ee0 <col:9, col:37>
    (CallExpr 0x9d13e88 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9d13e78 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13e24 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4b5e0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff580 'wmemset')))
      (ImplicitCastExpr 0x9d13eb0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13ddc <col:24> 'char_type *' lvalue ParmVar 0x9d11ca0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9d13ec0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13df4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9d11d20 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9d13ed0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13e0c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d11ce0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d13f70 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9d13f60 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9d13f48 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9d13f38 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9d13f28 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13f10 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d11e90 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d13ff0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9d13fe0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9d13fc8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9d13fb8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9d13fa8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13f90 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d13180 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d14080 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9d14070 <col:9, col:24>
    (BinaryOperator 0x9d14058 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d14038 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14004 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132a0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d14048 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d1401c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132f0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d140f8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9d140e8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d140d0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9d140b0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9d14098 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d142d0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9d142c0 <col:9, col:46>
    (ConditionalOperator 0x9d142a0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9d14218 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9d14208 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1410c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9d13390 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9d14124 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9d14240 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9d141a8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9d14198 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d1413c <col:33> 'int_type (void)' lvalue CXXMethod 0x9d13430 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9d14290 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d14250 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9d14280 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14268 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e0b8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9d0e0a0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9d0e060 <col:9> 'char_type':'char' lvalue ParmVar 0x9d0cce0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d0e090 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9d0e078 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0cd70 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e168 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9d0e158 <col:9, col:24>
    (BinaryOperator 0x9d0e140 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d0e110 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e100 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0cc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0ce90 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e130 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e120 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e0e4 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9d0cee0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d0e218 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9d0e208 <col:9, col:23>
    (BinaryOperator 0x9d0e1f0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d0e1c0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1b0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e17c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9d0d000 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9d0e1e0 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9d0e1d0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9d0e194 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9d0d050 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d0ffa8 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9d0ff98 <col:9, col:48>
    (CallExpr 0x9d0e2b8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9d0e2a8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d0e22c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9cea4a0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9d0e2f0 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0e2e0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e244 <col:33> 'const char_type *' lvalue ParmVar 0x9d0d150 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff78 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9d0ff68 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d0e25c <col:39> 'const char_type *' lvalue ParmVar 0x9d0d1a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9d0ff88 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d0e274 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d1e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d10138 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9d10128 <col:9, col:36>
    (CallExpr 0x9d100f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9d100e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d10094 <col:16> 'unsigned int (const char *)' lvalue Function 0x9d0ffc0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9d10118 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d100ac <col:33> 'const char_type *' lvalue ParmVar 0x9d0d2f0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d103f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9d103e8 <col:9, col:77>
    (CXXStaticCastExpr 0x9d103d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9d10348 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9d10338 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d102b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9d10150 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d10380 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10370 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d102cc <col:63> 'const char_type *' lvalue ParmVar 0x9d0d3f0 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9d103a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d10390 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d102e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9d0d480 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9d103b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d102fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d430 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d10548 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9d10538 <col:9, col:74>
    (CXXStaticCastExpr 0x9d10520 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10498 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9d10488 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1040c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9cd9ea0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d104d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d104c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10424 <col:58> 'char_type *' lvalue ParmVar 0x9d0d5e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d104f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d104e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d1043c <col:64> 'const char_type *' lvalue ParmVar 0x9d0d630 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d10500 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10454 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d670 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d107e8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9d107d8 <col:9, col:73>
    (CXXStaticCastExpr 0x9d107c0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10738 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9d10728 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d106c4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9d10770 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d10760 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106dc <col:57> 'char_type *' lvalue ParmVar 0x9d0d780 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9d10790 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9d10780 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d106f4 <col:63> 'const char_type *' lvalue ParmVar 0x9d0d7d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9d107a0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d1070c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d810 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d10938 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9d10928 <col:9, col:71>
    (CXXStaticCastExpr 0x9d10910 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9d10888 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9d10878 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d107fc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9ce5bb0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9d108c0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9d108b0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9d10814 <col:57> 'char_type *' lvalue ParmVar 0x9d0d8f0 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9d108e0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9d108d0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9d1082c <col:62> 'char_type':'char' lvalue ParmVar 0x9d0d970 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9d108f0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d10844 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9d0d930 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d109b8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9d109a8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d10990 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9d10980 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9d10970 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9d1094c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9d0db00 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d10a70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9d10a60 <col:9, col:69>
    (CXXStaticCastExpr 0x9d10a48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9d10a38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9d10a18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9d10a08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9d109f8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9d109cc <col:65> 'const char_type':'const char' lvalue ParmVar 0x9d0dc20 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d10b00 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9d10af0 <col:9, col:24>
    (BinaryOperator 0x9d10ad8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d10ab8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a84 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9d0dd40 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d10ac8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10a9c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9d0dd90 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d10b78 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9d10b68 <col:9, col:56>
    (CXXStaticCastExpr 0x9d10b50 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9d10b30 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9d10b18 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d10cd8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9d10cc8 <col:9, col:37>
    (ConditionalOperator 0x9d10ca8 <col:16, col:37> 'int'
      (ParenExpr 0x9d10c50 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9d10c38 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9d10c28 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9d10b8c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &'))
          (CallExpr 0x9d10c08 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9d10bf8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d10ba4 <col:24> 'int_type (void)' lvalue CXXMethod 0x9d0ded0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9d10c68 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9d10c98 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9d10c80 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9d0df40 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13618 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9d13600 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9d135c0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9d11090 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9d135f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9d135d8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11120 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d136a8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9d13698 <col:9, col:24>
    (BinaryOperator 0x9d13680 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d13660 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d1362c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11240 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13670 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13644 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11290 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9d13738 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9d13728 <col:9, col:23>
    (BinaryOperator 0x9d13710 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9d136f0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136bc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d113b0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9d13700 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d136d4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11400 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d138a0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9d13890 <col:9, col:39>
    (CallExpr 0x9d13838 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9d13828 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d137cc <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b0d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cface0 'wmemcmp')))
      (ImplicitCastExpr 0x9d13860 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13784 <col:24> 'const char_type *' lvalue ParmVar 0x9d11500 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9d13870 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d1379c <col:30> 'const char_type *' lvalue ParmVar 0x9d11550 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13880 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d137b4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11590 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9d139a8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9d13998 <col:9, col:26>
    (CallExpr 0x9d13968 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9d13958 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13904 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9c4aa10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9cfa730 'wcslen')))
      (ImplicitCastExpr 0x9d13988 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d138ec <col:23> 'const char_type *' lvalue ParmVar 0x9d116a0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9d13ae8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9d13ad8 <col:9, col:37>
    (ImplicitCastExpr 0x9d13ac8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9d13a70 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9d13a60 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d13a40 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4af20 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff890 'wmemchr')))
        (ImplicitCastExpr 0x9d13a98 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9d139f8 <col:24> 'const char_type *' lvalue ParmVar 0x9d117a0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9d13aa8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13a10 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d11830 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9d13ab8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13a28 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d117e0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13c50 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9d13c40 <col:9, col:40>
    (CallExpr 0x9d13be8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9d13bd8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13b7c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9c4b420 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9cfadc0 'wmemmove')))
      (ImplicitCastExpr 0x9d13c10 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b34 <col:25> 'char_type *' lvalue ParmVar 0x9d11990 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13c20 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13b4c <col:31> 'const char_type *' lvalue ParmVar 0x9d119e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13c30 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13b64 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9d11a20 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9d13d90 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9d13d80 <col:9, col:39>
    (CallExpr 0x9d13d28 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9d13d18 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13ce4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9c4b280 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9cfad50 'wmemcpy')))
      (ImplicitCastExpr 0x9d13d50 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13c9c <col:24> 'char_type *' lvalue ParmVar 0x9d11b30 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9d13d60 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13cb4 <col:30> 'const char_type *' lvalue ParmVar 0x9d11b80 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9d13d70 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13ccc <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9d11bc0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9d13ef0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9d13ee0 <col:9, col:37>
    (CallExpr 0x9d13e88 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9d13e78 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d13e24 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9c4b5e0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9cff580 'wmemset')))
      (ImplicitCastExpr 0x9d13eb0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9d13ddc <col:24> 'char_type *' lvalue ParmVar 0x9d11ca0 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9d13ec0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9d13df4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9d11d20 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9d13ed0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d13e0c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9d11ce0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9d13f70 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9d13f60 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9d13f48 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9d13f38 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9d13f28 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9d13f10 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d11e90 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9d13ff0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9d13fe0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9d13fc8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9d13fb8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9d13fa8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9d13f90 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9d13180 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9d14080 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9d14070 <col:9, col:24>
    (BinaryOperator 0x9d14058 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9d14038 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14004 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132a0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9d14048 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d1401c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d132f0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9d140f8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9d140e8 <col:9, col:42>
    (CXXStaticCastExpr 0x9d140d0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9d140b0 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9d14098 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9d142d0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9d142c0 <col:9, col:46>
    (ConditionalOperator 0x9d142a0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9d14218 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9d14208 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1410c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9d13390 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9d14124 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9d14240 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9d141a8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9d14198 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9d1413c <col:33> 'int_type (void)' lvalue CXXMethod 0x9d13430 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9d14290 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9d14250 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9d14280 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9d14268 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9d134a0 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0x9d147f0 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0x9d14dd0 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0x9d1c320 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0x9d1d568 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0x9d1d558 <col:61, col:68>
    (ImplicitCastExpr 0x9d1d548 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9d1d52c <col:68> 'void *' lvalue ParmVar 0x9d1d3e0 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0x9d1d748 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0x9d1d738 <col:63, col:70>
    (ImplicitCastExpr 0x9d1d728 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9d1d70c <col:70> 'void *' lvalue ParmVar 0x9d1d600 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0x9d1d910 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0x9d1da90 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x9d1f870 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0x9d1f880 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x9d1f8a0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0x9d1f870 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0x9d1f880 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0x9d1f890 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0x9d1f8a0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0x9d1f948 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0x9d1f938 <col:38, col:65>
    (CallExpr 0x9d1f918 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0x9d1f8c8 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
      (DeclRefExpr 0x9d1f8fc <col:62> '_Tp' lvalue ParmVar 0x9d1f000 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0x9d1f9f8 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0x9d1f9e8 <col:44, col:71>
    (CallExpr 0x9d1f9c8 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0x9d1f978 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
      (DeclRefExpr 0x9d1f9ac <col:68> 'const _Tp' lvalue ParmVar 0x9d1f140 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0x9d1f860 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0x9d1f848 <col:45> 'int' 0))
) (CompoundStmt 0x9d1fd50 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0x9d1fb98 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d1fae8 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9d1fab0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cca790 0x9ccadb0)
      (DeclRefExpr 0x9d1fa0c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9d1f270 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9d1fa90 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d1fa58 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9d1fa48 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0x9d1fb78 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0x9d1fb68 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d1fb30 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9c631b0 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9d1fd40 <line:92:2, col:60>
    (CXXStaticCastExpr 0x9d1fd28 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0x9d1fcf8 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0x9d1fce8 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d1fc90 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x9d1c7e0 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0x9d1fc78 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0x9d1fc68 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9d1fc2c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9d1f270 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9d1fc50 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0x9d1fdf8 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0x9d1fdd8 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9d1fd80 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0x9d1ca50 0x9d1d120 0x9d1d860)
    (DeclRefExpr 0x9d1fdbc <col:27> 'pointer':'_Tp *' lvalue ParmVar 0x9d1f3d0 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0x9d1feb8 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0x9d1fea8 <col:9, col:39>
    (BinaryOperator 0x9d1fe90 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0x9d1fe58 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0x9d1fe48 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x9d1fe30 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x9d1fe18 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0x9d1fe78 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0x9d1ff70 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0x9d1ff30 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0x9d1fef8 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0x9d1fecc <col:23> 'pointer':'_Tp *' lvalue ParmVar 0x9d1f5e0 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0x9d1ff10 <col:32> 'const _Tp' lvalue ParmVar 0x9d1f630 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0x9d1fff8 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0x9d1ffd8 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0x9d1ffa8 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0x9d1ff84 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0x9d1f740 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9d21fc0 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0x9d21fb0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9d21fa0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9d22330 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0x9d22320 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9d22310 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9d23908 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa164ac0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa164814 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d2a880 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9d23a20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9d23a40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9d23908 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa164ac0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa164814 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d2a880 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9d23a20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9d23a40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0x9d23908 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0x9d239c8 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0x9d234e0 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0x9d23a20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0x9d23a30 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0x9d23a40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9d244c0 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0x9d244b0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9d244a0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9d24850 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0x9d24840 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9d24830 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9d24c20 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0x9d24c10 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9d24c00 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9d24f90 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0x9d24f80 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9d24f70 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9d23908 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa164ac0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa164814 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d2a880 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9d23a20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9d23a40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9d2aea0 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0x9d2b2f0 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0x9d2cbc0 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0x9d2cba0 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9d2cae8 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9d2caa0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d24f40 0x9d24bd0 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90)
      (DeclRefExpr 0x9d2ca70 <col:6> '_Alloc' lvalue ParmVar 0x9d2c920 '__one' '_Alloc &')
      (DeclRefExpr 0x9d2ca88 <col:15> '_Alloc' lvalue ParmVar 0x9d2c970 '__two' '_Alloc &'))
    (CallExpr 0x9d2cb78 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9d2cb10 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9c92610 0x9bfcdd0)
      (DeclRefExpr 0x9d2cb48 <col:9> '_Alloc' lvalue ParmVar 0x9d2c920 '__one' '_Alloc &')
      (DeclRefExpr 0x9d2cb60 <col:16> '_Alloc' lvalue ParmVar 0x9d2c970 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9d2cc30 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0x9d2d0a0 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0x9d2d090 <col:9, col:16>
    (CXXBoolLiteralExpr 0x9d2d080 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0x9d2d680 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0x9d2d670 <col:9, col:25>
    (CXXOperatorCallExpr 0x9d2d648 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9d2d600 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9d24f40 0x9d24bd0 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90)
      (DeclRefExpr 0x9d2d5d0 <col:16> 'const _Alloc' lvalue ParmVar 0x9d2d480 '__one' 'const _Alloc &')
      (DeclRefExpr 0x9d2d5e8 <col:25> 'const _Alloc' lvalue ParmVar 0x9d2d4d0 '__two' 'const _Alloc &'))))


    };
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0x9d32d90 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0x9d2df38 <line:75:5, col:54>
    0x9d2de30 "__c_locale __old =
      (CallExpr 0x9d2df08 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0x9d2def8 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d2de88 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9d2d980 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0x9d2df28 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0x9d2dea8 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0x9d2db80 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0x9d2df88 <line:88:5, col:29>
    0x9d2df50 "__builtin_va_list __args")
  (CallExpr 0x9d2e188 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0x9d2e178 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d2e0f4 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0x9d2e020 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0x9d2e10c <col:24> '__builtin_va_list':'char *' lvalue Var 0x9d2df50 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0x9d2e124 <col:32> 'const char *' lvalue ParmVar 0x9d2dcf0 '__fmt' 'const char *'))
  (DeclStmt 0x9d2e518 <line:92:5, col:72>
    0x9d2e1c0 "const int __ret =
      (CallExpr 0x9d2e498 <col:23, col:71> 'int'
        (ImplicitCastExpr 0x9d2e488 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d2e3d0 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0x9d2e200 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0x9d2e4c8 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0x9d2e3e8 <col:43> 'char *' lvalue ParmVar 0x9d2dc10 '__out' 'char *'))
        (ImplicitCastExpr 0x9d2e4e8 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9d2e4d8 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d2e400 <col:50> 'const int' lvalue ParmVar 0x9d2dc60 '__size' 'const int')))
        (ImplicitCastExpr 0x9d2e4f8 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9d2e418 <col:58> 'const char *' lvalue ParmVar 0x9d2dcf0 '__fmt' 'const char *'))
        (ImplicitCastExpr 0x9d2e508 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0x9d2e430 <col:65> '__builtin_va_list':'char *' lvalue Var 0x9d2df50 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0x9d32c98 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0x9d32c88 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d32c14 <col:5> 'void (__builtin_va_list &)' lvalue Function 0x9d32b40 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0x9d32c2c <col:22> '__builtin_va_list':'char *' lvalue Var 0x9d2df50 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0x9d32d28 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0x9d32d18 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d32cdc <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9d2d980 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0x9d32d48 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0x9d32cfc <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0x9d2de30 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0x9d32d80 <line:108:5, col:12>
    (ImplicitCastExpr 0x9d32d70 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0x9d32d54 <col:12> 'const int' lvalue Var 0x9d2e1c0 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0x9d3ef98 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3d5d0 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3d5b0 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3d418 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3d3e8 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3d3d0 <line:50:22> 'int' 0))
        (IntegerLiteral 0x9d3d400 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3d4d8 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3d4c0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3d490 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3d478 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3d430 <col:38> 'int' 1)
              (ParenExpr 0x9d3d460 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3d448 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9d3d4a8 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3d598 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3d580 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3d550 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3d538 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3d4f0 <col:60> 'int' 1)
              (ParenExpr 0x9d3d520 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3d508 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9d3d568 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0x9d3efa8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3d828 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3d808 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3d670 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3d640 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3d628 <line:51:22> 'int' 1))
        (IntegerLiteral 0x9d3d658 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3d730 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3d718 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3d6e8 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3d6d0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3d688 <col:38> 'int' 1)
              (ParenExpr 0x9d3d6b8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3d6a0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9d3d700 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3d7f0 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3d7d8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3d7a8 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3d790 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3d748 <col:60> 'int' 1)
              (ParenExpr 0x9d3d778 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3d760 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9d3d7c0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0x9d3efb8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3da78 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3da58 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3d8c0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3d890 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3d878 <line:52:22> 'int' 2))
        (IntegerLiteral 0x9d3d8a8 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3d980 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3d968 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3d938 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3d920 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3d8d8 <col:38> 'int' 1)
              (ParenExpr 0x9d3d908 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3d8f0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9d3d950 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3da40 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3da28 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3d9f8 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3d9e0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3d998 <col:60> 'int' 1)
              (ParenExpr 0x9d3d9c8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3d9b0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9d3da10 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0x9d3efc8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3dcc8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3dca8 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3db10 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3dae0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3dac8 <line:53:22> 'int' 3))
        (IntegerLiteral 0x9d3daf8 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3dbd0 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3dbb8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3db88 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3db70 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3db28 <col:38> 'int' 1)
              (ParenExpr 0x9d3db58 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3db40 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9d3dba0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3dc90 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3dc78 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3dc48 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3dc30 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3dbe8 <col:60> 'int' 1)
              (ParenExpr 0x9d3dc18 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3dc00 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9d3dc60 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0x9d3efd8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3df18 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3def8 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3dd60 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3dd30 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3dd18 <line:54:23> 'int' 4))
        (IntegerLiteral 0x9d3dd48 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3de20 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3de08 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3ddd8 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3ddc0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3dd78 <col:38> 'int' 1)
              (ParenExpr 0x9d3dda8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3dd90 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9d3ddf0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3dee0 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3dec8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3de98 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3de80 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3de38 <col:60> 'int' 1)
              (ParenExpr 0x9d3de68 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3de50 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9d3deb0 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0x9d3efe8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3e168 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3e148 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3dfb0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3df80 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3df68 <line:55:22> 'int' 5))
        (IntegerLiteral 0x9d3df98 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3e070 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3e058 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3e028 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3e010 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3dfc8 <col:38> 'int' 1)
              (ParenExpr 0x9d3dff8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3dfe0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9d3e040 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3e130 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3e118 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3e0e8 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3e0d0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3e088 <col:60> 'int' 1)
              (ParenExpr 0x9d3e0b8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3e0a0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9d3e100 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0x9d3eff8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3e3b8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3e398 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3e200 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3e1d0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3e1b8 <line:56:22> 'int' 6))
        (IntegerLiteral 0x9d3e1e8 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3e2c0 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3e2a8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3e278 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3e260 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3e218 <col:38> 'int' 1)
              (ParenExpr 0x9d3e248 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3e230 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9d3e290 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3e380 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3e368 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3e338 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3e320 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3e2d8 <col:60> 'int' 1)
              (ParenExpr 0x9d3e308 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3e2f0 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9d3e350 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0x9d3f008 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3e608 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3e5e8 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3e450 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3e420 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3e408 <line:57:22> 'int' 7))
        (IntegerLiteral 0x9d3e438 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3e510 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3e4f8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3e4c8 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3e4b0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3e468 <col:38> 'int' 1)
              (ParenExpr 0x9d3e498 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3e480 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9d3e4e0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3e5d0 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3e5b8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3e588 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3e570 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3e528 <col:60> 'int' 1)
              (ParenExpr 0x9d3e558 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3e540 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9d3e5a0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0x9d3f018 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3e858 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3e838 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3e6a0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3e670 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3e658 <line:58:22> 'int' 8))
        (IntegerLiteral 0x9d3e688 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3e760 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3e748 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3e718 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3e700 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3e6b8 <col:38> 'int' 1)
              (ParenExpr 0x9d3e6e8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3e6d0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9d3e730 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3e820 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3e808 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3e7d8 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3e7c0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3e778 <col:60> 'int' 1)
              (ParenExpr 0x9d3e7a8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3e790 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9d3e7f0 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0x9d3f028 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3eaa8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3ea88 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3e8f0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3e8c0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3e8a8 <line:59:22> 'int' 9))
        (IntegerLiteral 0x9d3e8d8 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3e9b0 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3e998 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3e968 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3e950 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3e908 <col:38> 'int' 1)
              (ParenExpr 0x9d3e938 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3e920 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9d3e980 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3ea70 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3ea58 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3ea28 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3ea10 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3e9c8 <col:60> 'int' 1)
              (ParenExpr 0x9d3e9f8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3e9e0 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9d3ea40 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0x9d3f038 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3ecf8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3ecd8 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3eb40 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3eb10 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3eaf8 <line:60:22> 'int' 10))
        (IntegerLiteral 0x9d3eb28 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3ec00 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3ebe8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3ebb8 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3eba0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3eb58 <col:38> 'int' 1)
              (ParenExpr 0x9d3eb88 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3eb70 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9d3ebd0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3ecc0 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3eca8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3ec78 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3ec60 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3ec18 <col:60> 'int' 1)
              (ParenExpr 0x9d3ec48 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3ec30 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9d3ec90 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0x9d3f048 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9d3ef48 <col:23, col:77> 'int'
    (ConditionalOperator 0x9d3ef28 <col:24, col:76> 'int'
      (BinaryOperator 0x9d3ed90 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9d3ed60 <col:24, col:28> 'int'
          (IntegerLiteral 0x9d3ed48 <line:61:22> 'int' 11))
        (IntegerLiteral 0x9d3ed78 <line:45:32> 'int' 8))
      (ParenExpr 0x9d3ee50 <col:36, col:54> 'int'
        (BinaryOperator 0x9d3ee38 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9d3ee08 <col:37, col:48> 'int'
            (BinaryOperator 0x9d3edf0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9d3eda8 <col:38> 'int' 1)
              (ParenExpr 0x9d3edd8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9d3edc0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9d3ee20 <line:45:53> 'int' 8)))
      (ParenExpr 0x9d3ef10 <col:58, col:76> 'int'
        (BinaryOperator 0x9d3eef8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9d3eec8 <col:59, col:70> 'int'
            (BinaryOperator 0x9d3eeb0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9d3ee68 <col:60> 'int' 1)
              (ParenExpr 0x9d3ee98 <col:65, col:69> 'int'
                (IntegerLiteral 0x9d3ee80 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9d3eee0 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9f363d0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9f363b8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9f36328 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9f363a8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9f36390 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9f36380 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9f36358 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9f36340 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9f39998 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9f39980 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9f399a8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9f399d0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f399b8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9f399f8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9f399e0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9f39a08 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9f39a30 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f39a18 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9f39b20 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9f39b10 <col:9, col:36>
    (CXXMemberCallExpr 0x9f39ae0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9f39ac0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9f37c10
        (CXXThisExpr 0x9f39a58 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39b00 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9f39aa8 <col:33> 'char_type':'char' lvalue ParmVar 0x9f36e80 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f39c30 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9f39c20 <col:9, col:43>
    (CXXMemberCallExpr 0x9f39bd8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9f39bb8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9f37d40
        (CXXThisExpr 0x9f39b38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39c00 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39b88 <col:33> 'char_type *' lvalue ParmVar 0x9f36fc0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9f39c10 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39ba0 <col:39> 'const char_type *' lvalue ParmVar 0x9f37030 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9f39d10 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9f39d00 <col:9, col:36>
    (CXXMemberCallExpr 0x9f39cd0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9f39cb0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9f37e00
        (CXXThisExpr 0x9f39c48 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39cf0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9f39c98 <col:33> 'char_type':'char' lvalue ParmVar 0x9f37140 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f39e20 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9f39e10 <col:9, col:43>
    (CXXMemberCallExpr 0x9f39dc8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9f39da8 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9f37f30
        (CXXThisExpr 0x9f39d28 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39df0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39d78 <col:33> 'char_type *' lvalue ParmVar 0x9f37210 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9f39e00 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39d90 <col:39> 'const char_type *' lvalue ParmVar 0x9f37260 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9f3a0b8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9f39f80 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f39e98 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f39e88 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9f39e64 <col:6> 'char' lvalue ->_M_widen_ok 0x9f35fc0
          (CXXThisExpr 0x9f39e38 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9f39f70 <line:868:4, col:51>
      (ImplicitCastExpr 0x9f39f60 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f39f48 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9f39f38 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f39eb8 <col:11> 'char [256]' lvalue ->_M_widen 0x9f360e0
              (CXXThisExpr 0x9f39ea8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f39f20 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f39f10 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f39f00 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9f39ed8 <col:47> 'char' lvalue ParmVar 0x9f37330 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9f39fd0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9f39fb0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9f396e0
      (CXXThisExpr 0x9f39fa0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9f3a0a8 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9f3a078 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9f3a058 <col:9, col:15> '<bound member function type>' ->do_widen 0x9f39130
        (CXXThisExpr 0x9f39ff0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3a098 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3a040 <col:24> 'char' lvalue ParmVar 0x9f37330 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9f3a4f8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9f3a2e0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9f3a140 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9f3a130 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a120 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9f3a0e8 <col:6> 'char' lvalue ->_M_widen_ok 0x9f35fc0
            (CXXThisExpr 0x9f3a0d8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9f3a108 <col:21> 'int' 1))
    (CompoundStmt 0x9f3a2c8 <line:895:4, line:898:4>
      (CallExpr 0x9f3a218 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9f3a208 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3a158 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9f3a250 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9f3a240 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9f3a170 <col:23> 'char_type *' lvalue ParmVar 0x9f374d0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9f3a270 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9f3a260 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f3a188 <col:29> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9f3a280 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f3a1f0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9f3a1d0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f3a1a0 <col:35> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9f3a1e0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f3a1b8 <col:42> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *')))))
      (ReturnStmt 0x9f3a2b8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9f3a2a8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3a28c <col:13> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9f3a3b8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9f3a350 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f3a340 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f3a330 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9f3a310 <col:7> 'char' lvalue ->_M_widen_ok 0x9f35fc0
            (CXXThisExpr 0x9f3a300 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9f3a398 <line:900:4, col:18> 'void'
      (MemberExpr 0x9f3a378 <col:4> '<bound member function type>' ->_M_widen_init 0x9f396e0
        (CXXThisExpr 0x9f3a368 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9f3a4e8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9f3a490 <col:9, col:40> 'const char *'
      (MemberExpr 0x9f3a470 <col:9, col:15> '<bound member function type>' ->do_widen 0x9f392b0
        (CXXThisExpr 0x9f3a3d8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3a4b8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3a428 <col:24> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9f3a4c8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3a440 <col:30> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9f3a4d8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3a458 <col:36> 'char_type *' lvalue ParmVar 0x9f374d0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9f3aa40 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9f3a6c8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f3a5e0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f3a5d0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f3a5b8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9f3a5a8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f3a528 <col:6> 'char [256]' lvalue ->_M_narrow 0x9f361d0
              (CXXThisExpr 0x9f3a518 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f3a590 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f3a580 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f3a570 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9f3a548 <col:43> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9f3a6b8 <line:926:4, col:52>
      (ImplicitCastExpr 0x9f3a6a8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f3a690 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9f3a680 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f3a600 <col:11> 'char [256]' lvalue ->_M_narrow 0x9f361d0
              (CXXThisExpr 0x9f3a5f0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f3a668 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f3a658 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f3a648 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9f3a620 <col:48> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9f3a820 <line:927:2, col:43>
    0x9f3a6f0 "const char __t =
      (CXXMemberCallExpr 0x9f3a7d8 <col:19, col:42> 'char'
        (MemberExpr 0x9f3a7b8 <col:19> '<bound member function type>' ->do_narrow 0x9f393d0
          (CXXThisExpr 0x9f3a7a8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9f3a800 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a778 <col:29> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9f3a810 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a790 <col:34> 'char' lvalue ParmVar 0x9f37650 '__dfault' 'char')))")
  (IfStmt 0x9f3a9e8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9f3a8a0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9f3a870 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a860 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a830 <col:6> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char')))
      (ImplicitCastExpr 0x9f3a890 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a880 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a848 <col:13> 'char' lvalue ParmVar 0x9f37650 '__dfault' 'char'))))
    (BinaryOperator 0x9f3a9d0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9f3a990 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9f3a980 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9f3a900 <col:4> 'char [256]' lvalue ->_M_narrow 0x9f361d0
            (CXXThisExpr 0x9f3a8f0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9f3a968 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9f3a958 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9f3a948 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9f3a920 <col:41> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9f3a9c0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3a9a4 <col:49> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9f3aa30 <line:930:2, col:9>
    (ImplicitCastExpr 0x9f3aa20 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9f3aa04 <col:9> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9f3af40 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9f3acf8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f3ab60 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f3ab18 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9f3ab08 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3aa60 <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f3ab40 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9f3aae0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9f3aad0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f3aac0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9f3aa88 <col:23> 'char' lvalue ->_M_narrow_ok 0x9f36210
                  (CXXThisExpr 0x9f3aa78 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9f3aaa8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9f3ab50 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f3aaf8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9f3ace0 <line:960:4, line:963:4>
      (CallExpr 0x9f3ac30 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9f3ac20 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3ab6c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9f3ac68 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9f3ac58 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9f3ab84 <col:23> 'char *' lvalue ParmVar 0x9f37850 '__to' 'char *')))
        (ImplicitCastExpr 0x9f3ac88 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9f3ac78 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9f3ab9c <col:29> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9f3ac98 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f3ac08 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9f3abe8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9f3abb4 <col:35> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9f3abf8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9f3abcc <col:42> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9f3acd0 <line:962:6, col:13>
        (ImplicitCastExpr 0x9f3acc0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3aca4 <col:13> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9f3add0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9f3ad68 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f3ad58 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f3ad48 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9f3ad28 <col:7> 'char' lvalue ->_M_narrow_ok 0x9f36210
            (CXXThisExpr 0x9f3ad18 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9f3adb0 <line:965:4, col:19> 'void'
      (MemberExpr 0x9f3ad90 <col:4> '<bound member function type>' ->_M_narrow_init 0x9f39660
        (CXXThisExpr 0x9f3ad80 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9f3af30 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9f3aec0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9f3aea0 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9f39590
        (CXXThisExpr 0x9f3adf0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3aef0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae40 <col:25> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9f3af00 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae58 <col:31> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9f3af10 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3ae70 <col:37> 'char' lvalue ParmVar 0x9f37800 '__dfault' 'char'))
      (ImplicitCastExpr 0x9f3af20 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae88 <col:47> 'char *' lvalue ParmVar 0x9f37850 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9f3afb0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9f3afa0 <col:9, col:16>
    (ImplicitCastExpr 0x9f3af90 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9f3af70 <col:16> 'const mask *const' lvalue ->_M_table 0x9f35f80
        (CXXThisExpr 0x9f3af60 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9f3b000 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9f3aff0 <col:9, col:16>
    (ImplicitCastExpr 0x9f3afe0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9f3afc4 <col:16> 'char' lvalue ParmVar 0x9f37fa0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9f3b188 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9f3b0d8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9f3b0c8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f3b014 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9f3b110 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9f3b100 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3b02c <col:19> 'char_type *' lvalue ParmVar 0x9f39250 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9f3b130 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9f3b120 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3b044 <col:27> 'const char *' lvalue ParmVar 0x9f391b0 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9f3b140 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9f3b0b0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9f3b090 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3b05c <col:33> 'const char *' lvalue ParmVar 0x9f39200 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9f3b0a0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3b074 <col:40> 'const char *' lvalue ParmVar 0x9f391b0 '__lo' 'const char *')))))
  (ReturnStmt 0x9f3b178 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9f3b168 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9f3b14c <col:9> 'const char *' lvalue ParmVar 0x9f39200 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9f3b1d8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9f3b1c8 <col:9, col:16>
    (ImplicitCastExpr 0x9f3b1b8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9f3b1a0 <col:16> 'char_type':'char' lvalue ParmVar 0x9f39330 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9f3b360 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9f3b2b0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9f3b2a0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f3b1ec <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9f3b2e8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9f3b2d8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9f3b204 <col:19> 'char *' lvalue ParmVar 0x9f39530 '__dest' 'char *')))
    (ImplicitCastExpr 0x9f3b308 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9f3b2f8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3b21c <col:27> 'const char_type *' lvalue ParmVar 0x9f39450 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9f3b318 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9f3b288 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9f3b268 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3b234 <col:33> 'const char_type *' lvalue ParmVar 0x9f394a0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9f3b278 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3b24c <col:40> 'const char_type *' lvalue ParmVar 0x9f39450 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9f3b350 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9f3b340 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9f3b324 <col:9> 'const char_type *' lvalue ParmVar 0x9f394a0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9f420d8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f420c0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9f42100 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f420e8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9d4d5b8 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9d4d808 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9d51430 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0x9d51080 <line:46:7, col:66>
    0x9d51050 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9d51170 <line:47:7, col:62>
    0x9d51140 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9d512c8 <line:49:7, col:62>
    0x9d51190 "const streamsize __put =
      (CallExpr 0x9d512a0 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d51238 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0x9d51218 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d511e0 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9d511c4 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d50d10 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0x9d5126c <col:53> 'const _CharT *' lvalue ParmVar 0x9d50d80 '__s' 'const _CharT *')
        (DeclRefExpr 0x9d51284 <col:58> 'streamsize':'int' lvalue ParmVar 0x9d50de0 '__n' 'streamsize':'int'))")
  (IfStmt 0x9d51410 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0x9d51328 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0x9d51308 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9d512d8 <col:11> 'const streamsize':'const int' lvalue Var 0x9d51190 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x9d51318 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9d512f0 <col:20> 'streamsize':'int' lvalue ParmVar 0x9d50de0 '__n' 'streamsize':'int')))
    (CallExpr 0x9d513f0 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9d51358 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9d51340 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d50d10 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0x9d513c8 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0x9d51f00 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0x9d518e0 <line:58:7, col:66>
    0x9d518b0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9d519a0 <line:59:7, col:62>
    0x9d51970 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9d51a68 <line:61:7, col:38>
    0x9d519c0 "const _CharT __c =
      (CallExpr 0x9d51a48 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9d51a10 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9d519f4 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d51630 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0x9d51ed8 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9d51ab8 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0x9d51aa8 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9d51a78 <col:14> 'streamsize':'int' lvalue ParmVar 0x9d51670 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9d51a90 <col:20> 'int' 0))
    (UnaryOperator 0x9d51ae8 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0x9d51ad0 <col:25> 'streamsize':'int' lvalue ParmVar 0x9d51670 '__n' 'streamsize':'int'))
    (CompoundStmt 0x9d51ec0 <line:63:2, line:70:2>
      (DeclStmt 0x9d51ca8 <line:64:4, col:70>
        0x9d51b90 "const typename _Traits::int_type __put =
          (CallExpr 0x9d51c88 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d51c38 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0x9d51c18 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d51be0 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d51bc4 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d51630 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0x9d51c6c <col:66> 'const _CharT' lvalue Var 0x9d519c0 '__c' 'const _CharT'))")
      (IfStmt 0x9d51ea0 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0x9d51d88 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9d51ce0 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x9d51d04 <col:29> 'const typename _Traits::int_type' lvalue Var 0x9d51b90 '__put' 'const typename _Traits::int_type')
          (CallExpr 0x9d51d68 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9d51d40 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0x9d51e88 <line:66:6, line:69:6>
          (CallExpr 0x9d51e60 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d51dc8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d51dac <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d51630 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9d51e38 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0x9d51e80 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9d576d0 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0x9d56940 <line:78:7, col:66>
    0x9d56910 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9d56a00 <line:79:7, col:62>
    0x9d569d0 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9d56b00 <line:81:7, col:52>
    0x9d56a90 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0x9d56ae0 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0x9d56ac4 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0x9d57688 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0x9d56b10 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0x9d56a90 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0x9d57668 <line:83:2, line:110:2>
      (IfStmt 0x9d57438 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d56b28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9d57418 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0x9d56be8 <line:86:8, col:44>
            0x9d56b40 "const streamsize __w =
              (CallExpr 0x9d56bc8 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9d56b90 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x9d56b74 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0x9d57370 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0x9d56c48 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9d56c28 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9d56bf8 <col:12> 'const streamsize':'const int' lvalue Var 0x9d56b40 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0x9d56c38 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9d56c10 <col:18> 'streamsize':'int' lvalue ParmVar 0x9d52290 '__n' 'streamsize':'int')))
            (CompoundStmt 0x9d572a8 <line:88:3, line:98:3>
              (DeclStmt 0x9d56e80 <line:89:5, line:91:32>
                0x9d56c70 "const bool __left =
                  (ParenExpr 0x9d56e68 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0x9d56e40 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0x9d56df8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
                      (ParenExpr 0x9d56d98 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0x9d56d80 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0x9d56cf8 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0x9d56cc0 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0x9d56ca4 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0x9d56d58 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0x9d56dd0 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0x9d56fb0 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0x9d56eb8 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9d56ea8 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9d56e90 <col:10> 'const _Bool' lvalue Var 0x9d56c70 '__left' 'const _Bool')))
                (CallExpr 0x9d56f88 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d56ed0 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9d51770)
                  (DeclRefExpr 0x9d56f04 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9d56f70 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9d56f50 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9d56f1c <col:29> 'const streamsize':'const int' lvalue Var 0x9d56b40 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9d56f60 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9d56f34 <col:35> 'streamsize':'int' lvalue ParmVar 0x9d52290 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0x9d570e8 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0x9d57020 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9d56fe8 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0x9d56fcc <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0x9d570c0 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d57040 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9d50f00)
                  (DeclRefExpr 0x9d57074 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0x9d5708c <col:30> 'const _CharT *' lvalue ParmVar 0x9d52250 '__s' 'const _CharT *')
                  (DeclRefExpr 0x9d570a4 <col:35> 'streamsize':'int' lvalue ParmVar 0x9d52290 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0x9d57288 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0x9d57190 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0x9d57104 <col:9> 'const _Bool' lvalue Var 0x9d56c70 '__left' 'const _Bool')
                  (CallExpr 0x9d57170 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9d57138 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0x9d5711c <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0x9d57260 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9d571a8 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9d51770)
                  (DeclRefExpr 0x9d571dc <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9d57248 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9d57228 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9d571f4 <col:29> 'const streamsize':'const int' lvalue Var 0x9d56b40 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9d57238 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9d5720c <col:35> 'streamsize':'int' lvalue ParmVar 0x9d52290 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0x9d57348 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9d572c8 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0x9d50f00)
              (DeclRefExpr 0x9d572fc <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0x9d57314 <col:26> 'const _CharT *' lvalue ParmVar 0x9d52250 '__s' 'const _CharT *')
              (DeclRefExpr 0x9d5732c <col:31> 'streamsize':'int' lvalue ParmVar 0x9d52290 '__n' 'streamsize':'int')))
          (CallExpr 0x9d573f8 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d573a8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d5738c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9d573e0 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9d57548 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d57458 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9d57530 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0x9d57500 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d57480 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d57468 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9d574d8 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0x9d57520 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0x9d57648 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9d57568 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9d57630 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0x9d57610 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9d57590 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9d57578 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9d575e8 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9d576c0 <line:111:7, col:14>
    (DeclRefExpr 0x9d576a4 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9d521e0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d599b0 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0x9d599a0 <col:9, col:22>
    (CXXOperatorCallExpr 0x9d59978 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9d59940 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
      (DeclRefExpr 0x9d59910 <col:16> 'const _Tp' lvalue ParmVar 0x9d597a0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d59928 <col:22> 'const _Tp' lvalue ParmVar 0x9d597f0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d59f90 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0x9d59f80 <col:9, col:22>
    (CXXOperatorCallExpr 0x9d59f58 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9d59f20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9d59ef0 <col:16> 'const _Tp' lvalue ParmVar 0x9d59da0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d59f08 <col:22> 'const _Tp' lvalue ParmVar 0x9d59df0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d5a528 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0x9d5a518 <col:9, col:22>
    (BinaryOperator 0x9d5a500 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0x9d5a4d0 <col:16> 'const _Tp' lvalue ParmVar 0x9d5a380 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d5a4e8 <col:22> 'const _Tp' lvalue ParmVar 0x9d5a3d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d5aab8 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0x9d5aaa8 <col:9, col:22>
    (BinaryOperator 0x9d5aa90 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0x9d5aa60 <col:16> 'const _Tp' lvalue ParmVar 0x9d5a910 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d5aa78 <col:22> 'const _Tp' lvalue ParmVar 0x9d5a960 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d5d3c8 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0x9d5d3b8 <col:9, col:22>
    (BinaryOperator 0x9d5d3a0 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0x9d5d370 <col:16> 'const _Tp' lvalue ParmVar 0x9d5aea0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d5d388 <col:22> 'const _Tp' lvalue ParmVar 0x9d5aef0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0x9d5d960 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0x9d5d950 <col:9, col:17>
    (CXXOperatorCallExpr 0x9d5d930 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5d8f8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9d5d8e0 <col:17> 'const _Tp' lvalue ParmVar 0x9d5d7c0 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d5dfd0 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0x9d5dfc0 <col:9, col:23>
    (CXXOperatorCallExpr 0x9d5df98 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5df50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (DeclRefExpr 0x9d5df20 <col:16> 'const _Tp' lvalue ParmVar 0x9d5ddb0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d5df38 <col:23> 'const _Tp' lvalue ParmVar 0x9d5de00 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d5e5c0 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0x9d5e5b0 <col:9, col:23>
    (CXXOperatorCallExpr 0x9d5e588 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5e540 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40)
      (DeclRefExpr 0x9d5e510 <col:16> 'const _Tp' lvalue ParmVar 0x9d5e3c0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d5e528 <col:23> 'const _Tp' lvalue ParmVar 0x9d5e410 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d5eba8 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0x9d5eb98 <col:9, col:22>
    (CXXOperatorCallExpr 0x9d5eb70 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5eb30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9d5eb00 <col:16> 'const _Tp' lvalue ParmVar 0x9d5e9b0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d5eb18 <col:22> 'const _Tp' lvalue ParmVar 0x9d5ea00 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d5f188 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0x9d5f178 <col:9, col:22>
    (CXXOperatorCallExpr 0x9d5f150 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9d5f110 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (DeclRefExpr 0x9d5f0e0 <col:16> 'const _Tp' lvalue ParmVar 0x9d5ef90 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d5f0f8 <col:22> 'const _Tp' lvalue ParmVar 0x9d5efe0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d61a08 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0x9d619f8 <col:9, col:23>
    (CXXOperatorCallExpr 0x9d619d0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9d61990 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770)
      (DeclRefExpr 0x9d61960 <col:16> 'const _Tp' lvalue ParmVar 0x9d61810 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d61978 <col:23> 'const _Tp' lvalue ParmVar 0x9d61860 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d61fe8 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0x9d61fd8 <col:9, col:23>
    (CXXOperatorCallExpr 0x9d61fb0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9d61f70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0)
      (DeclRefExpr 0x9d61f40 <col:16> 'const _Tp' lvalue ParmVar 0x9d61df0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d61f58 <col:23> 'const _Tp' lvalue ParmVar 0x9d61e40 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d62578 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0x9d62568 <col:9, col:23>
    (BinaryOperator 0x9d62550 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0x9d62520 <col:16> 'const _Tp' lvalue ParmVar 0x9d623d0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d62538 <col:23> 'const _Tp' lvalue ParmVar 0x9d62420 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9d62b08 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0x9d62af8 <col:9, col:23>
    (BinaryOperator 0x9d62ae0 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0x9d62ab0 <col:16> 'const _Tp' lvalue ParmVar 0x9d62960 '__x' 'const _Tp &')
      (DeclRefExpr 0x9d62ac8 <col:23> 'const _Tp' lvalue ParmVar 0x9d629b0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0x9d63060 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0x9d63050 <col:9, col:17>
    (UnaryOperator 0x9d63038 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9d63020 <col:17> 'const _Tp' lvalue ParmVar 0x9d62f00 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9cc5b78 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0x9cc5b68 <col:9, col:22>
    (BinaryOperator 0x9cc5b50 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0x9cc5b20 <col:16> 'const _Tp' lvalue ParmVar 0x9d63450 '__x' 'const _Tp &')
      (DeclRefExpr 0x9cc5b38 <col:22> 'const _Tp' lvalue ParmVar 0x9d634a0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9cc6108 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0x9cc60f8 <col:9, col:22>
    (BinaryOperator 0x9cc60e0 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0x9cc60b0 <col:16> 'const _Tp' lvalue ParmVar 0x9cc5f60 '__x' 'const _Tp &')
      (DeclRefExpr 0x9cc60c8 <col:22> 'const _Tp' lvalue ParmVar 0x9cc5fb0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9cc6698 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0x9cc6688 <col:9, col:22>
    (BinaryOperator 0x9cc6670 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0x9cc6640 <col:16> 'const _Tp' lvalue ParmVar 0x9cc64f0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9cc6658 <col:22> 'const _Tp' lvalue ParmVar 0x9cc6540 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9cc6e54 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0x9cc6bd0 '__x' 'const _Predicate &')
) (CompoundStmt 0x9cc6eb0 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0x9cc6f88 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0x9cc6f78 <col:9, col:28>
    (UnaryOperator 0x9cc6f60 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9cc6f40 <col:17, col:28> '<dependent type>'
        (MemberExpr 0x9cc6f04 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9cc6b30
          (CXXThisExpr 0x9cc6ed8 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9cc6f24 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0x9cc6d50 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0x9cc72e8 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0x9cc72d8 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9cc72b8 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0x9cc72a0 <col:39> 'const _Predicate' lvalue ParmVar 0x9cc70b0 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9d6db88 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0x9cc78e0 '__x' 'const _Predicate &')
) (CompoundStmt 0x9d6dbe0 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0x9d6dcd8 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0x9d6dcc8 <col:9, col:33>
    (UnaryOperator 0x9d6dcb0 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0x9d6dc88 <col:17, col:33> '<dependent type>'
        (MemberExpr 0x9d6dc34 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9cc7840
          (CXXThisExpr 0x9d6dc08 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9d6dc54 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0x9d6d9d0 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0x9d6dc6c <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0x9d6da80 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0x9d6e038 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0x9d6e028 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0x9d6e008 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0x9d6dff0 <col:40> 'const _Predicate' lvalue ParmVar 0x9d6de00 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0x9d6e928 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0x9d6e938 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0x9d6e700 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0x9d6e990 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0x9d6ea50 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0x9d6ea40 <col:9, col:26>
    (CallExpr 0x9d6ea20 <col:16, col:26> '<dependent type>'
      (MemberExpr 0x9d6e9e4 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0x9d6e590
        (CXXThisExpr 0x9d6e9b8 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0x9d6ea04 <col:23> '_Arg' lvalue ParmVar 0x9d6e820 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0x9d6ef60 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0x9d6ef50 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9d6ef30 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0x9d6ef18 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0x9d6ecc0 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0x9d708b8 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0x9d708c8 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9d6f760 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0x9d70920 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0x9d70a00 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0x9d709f0 <col:9, col:31>
    (CallExpr 0x9d709c8 <col:16, col:31> '<dependent type>'
      (MemberExpr 0x9d70974 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0x9d6f5b0
        (CXXThisExpr 0x9d70948 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0x9d70994 <col:23> '_Arg1' lvalue ParmVar 0x9d6f880 '__x' '_Arg1')
      (DeclRefExpr 0x9d709ac <col:28> '_Arg2' lvalue ParmVar 0x9d6f8c0 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0x9d71058 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0x9d71048 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0x9d71028 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0x9d71010 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9d70d50 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0x9d71688 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0x9d71678 <col:9, col:16>
    (DeclRefExpr 0x9d71660 <col:16> '_Tp' lvalue ParmVar 0x9d71400 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0x9d716c8 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0x9d716b8 <col:9, col:16>
    (DeclRefExpr 0x9d7169c <col:16> 'const _Tp' lvalue ParmVar 0x9d71540 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0x9d71ef0 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0x9d71ee0 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9d71ea8 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9d71e90 <col:16> '_Pair' lvalue ParmVar 0x9d71b70 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0x9d71f68 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0x9d71f58 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9d71f20 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9d71f04 <col:16> 'const _Pair' lvalue ParmVar 0x9d71d20 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0x9d72790 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0x9d72780 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9d72748 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9d72730 <col:16> '_Pair' lvalue ParmVar 0x9d72410 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0x9d72808 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0x9d727f8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9d727c0 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9d727a4 <col:16> 'const _Pair' lvalue ParmVar 0x9d725c0 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9d73f10 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9d73c20 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9d73f70 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0x9d74068 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0x9d74058 <col:9, col:29>
    (CallExpr 0x9d74038 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9d74020 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9d74008 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9d73f80 <col:17> '_Tp *' lvalue ParmVar 0x9d73d50 '__p' '_Tp *')
          (MemberExpr 0x9d73fe4 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9d73ee0
            (CXXThisExpr 0x9d73fb8 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9d748e0 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9d745f0 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9d74940 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0x9d74a38 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0x9d74a28 <col:9, col:29>
    (CallExpr 0x9d74a08 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9d749f0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9d749d8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9d74950 <col:17> 'const _Tp *' lvalue ParmVar 0x9d74720 '__p' 'const _Tp *')
          (MemberExpr 0x9d749b4 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9d748b0
            (CXXThisExpr 0x9d74988 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9d75270 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9d74f80 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9d752d0 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0x9d753c8 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0x9d753b8 <col:9, col:28>
    (CallExpr 0x9d75398 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9d75380 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9d75368 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9d752e0 <col:17> '_Tp' lvalue ParmVar 0x9d750b0 '__r' '_Tp &')
          (MemberExpr 0x9d75344 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9d75240
            (CXXThisExpr 0x9d75318 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9d76f30 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9d76c40 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9d76f90 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0x9d77088 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0x9d77078 <col:9, col:28>
    (CallExpr 0x9d77058 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9d77040 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9d77028 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9d76fa0 <col:17> 'const _Tp' lvalue ParmVar 0x9d76d70 '__r' 'const _Tp &')
          (MemberExpr 0x9d77004 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9d76f00
            (CXXThisExpr 0x9d76fd8 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9d77ab0 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9d77740 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9d77b10 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0x9d77c20 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0x9d77c10 <col:9, col:32>
    (CallExpr 0x9d77bf0 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9d77bc0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9d77ba8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9d77b20 <col:17> '_Tp *' lvalue ParmVar 0x9d77870 '__p' '_Tp *')
          (MemberExpr 0x9d77b84 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9d77a80
            (CXXThisExpr 0x9d77b58 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9d77bd4 <col:29> '_Arg' lvalue ParmVar 0x9d778b0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9d78650 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9d782e0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9d786b0 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0x9d787c0 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0x9d787b0 <col:9, col:32>
    (CallExpr 0x9d78790 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9d78760 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9d78748 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9d786c0 <col:17> 'const _Tp *' lvalue ParmVar 0x9d78410 '__p' 'const _Tp *')
          (MemberExpr 0x9d78724 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9d78620
            (CXXThisExpr 0x9d786f8 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9d78774 <col:29> '_Arg' lvalue ParmVar 0x9d78450 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9d7a360 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9d79ff0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9d7a3c0 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0x9d7a4d0 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0x9d7a4c0 <col:9, col:31>
    (CallExpr 0x9d7a4a0 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9d7a470 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9d7a458 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9d7a3d0 <col:17> '_Tp' lvalue ParmVar 0x9d7a120 '__r' '_Tp &')
          (MemberExpr 0x9d7a434 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9d7a330
            (CXXThisExpr 0x9d7a408 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9d7a484 <col:28> '_Arg' lvalue ParmVar 0x9d7a160 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9d7ae40 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9d7aad0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9d7aea0 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0x9d7afb0 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0x9d7afa0 <col:9, col:31>
    (CallExpr 0x9d7af80 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9d7af50 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9d7af38 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9d7aeb0 <col:17> 'const _Tp' lvalue ParmVar 0x9d7ac00 '__r' 'const _Tp &')
          (MemberExpr 0x9d7af14 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9d7ae10
            (CXXThisExpr 0x9d7aee8 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9d7af64 <col:28> '_Arg' lvalue ParmVar 0x9d7ac40 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0x9d7b4b0 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0x9d7b4a0 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0x9d7b480 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9d7b468 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9d7b210 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9d7b9b0 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0x9d7b9a0 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0x9d7b980 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9d7b968 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9d7b710 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0x9d7c900 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0x9d7c8f0 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0x9d7c8d0 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9d7c8b8 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9d7c660 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9d7ce00 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0x9d7cdf0 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0x9d7cdd0 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9d7cdb8 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9d7cb60 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9d7d448 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0x9d7d438 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9d7d418 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9d7d400 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9d7d140 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9d7da88 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0x9d7da78 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9d7da58 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9d7da40 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9d7d780 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9d7e0c8 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0x9d7e0b8 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0x9d7e098 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9d7e080 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9d7ddc0 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9d7f508 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0x9d7f4f8 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0x9d7f4d8 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9d7f4c0 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9d7e400 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0x9d800e4 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0x9d7fbe0 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9d80138 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9d7fc70 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0x9d80190 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9d80288 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0x9d80278 <col:9, col:29>
    (CallExpr 0x9d80250 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9d801e4 <col:16> 'const _Operation' lvalue ->op 0x9d7fab0
        (CXXThisExpr 0x9d801b8 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9d80218 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9d7fb40
        (CXXThisExpr 0x9d80208 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9d80238 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9d7fe10 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9d80350 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0x9d80340 <col:9, col:29>
    (CallExpr 0x9d80318 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9d802b0 <col:16> 'const _Operation' lvalue ->op 0x9d7fab0
        (CXXThisExpr 0x9d802a0 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9d802e0 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9d7fb40
        (CXXThisExpr 0x9d802d0 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9d80300 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0x9d7ffd0 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9d808a0 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0x9d80740 <line:129:7, col:66>
    0x9d80710 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0x9d80890 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0x9d80870 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0x9d80800 <col:36> 'const _Operation' lvalue ParmVar 0x9d804e0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9d80850 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0x9d80838 <col:53> 'const _Tp' lvalue ParmVar 0x9d80550 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0x9d813b4 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0x9d80eb0 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9d852d8 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9d80f40 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0x9d85330 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9d85428 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0x9d85418 <col:9, col:29>
    (CallExpr 0x9d853f0 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9d85384 <col:16> 'const _Operation' lvalue ->op 0x9d80d80
        (CXXThisExpr 0x9d85358 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9d853a4 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9d810e0 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0x9d853d0 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9d80e10
        (CXXThisExpr 0x9d853c0 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9d854f0 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0x9d854e0 <col:9, col:29>
    (CallExpr 0x9d854b8 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9d85450 <col:16> 'const _Operation' lvalue ->op 0x9d80d80
        (CXXThisExpr 0x9d85440 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9d85470 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0x9d812a0 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0x9d85498 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9d80e10
        (CXXThisExpr 0x9d85488 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9d85a40 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0x9d858e0 <line:164:7, col:67>
    0x9d858b0 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0x9d85a30 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0x9d85a10 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0x9d859a0 <col:36> 'const _Operation' lvalue ParmVar 0x9d85680 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9d859f0 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0x9d859d8 <col:53> 'const _Tp' lvalue ParmVar 0x9d856f0 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0x9d97ea0 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0x9d97f00 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0x9d97f60 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0x9d97fc0 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0x9d98020 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0x9d98080 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0x9d980e0 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0x9d98140 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0x9d981a0 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0x9d98200 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0x9d98260 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0x9da41a8 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da4014 <col:26> 'int' EnumConstant 0x9da3f20 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0x9da41b8 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da4064 <col:29> 'int' EnumConstant 0x9da3f60 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0x9da41c8 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da40b4 <col:30> 'int' EnumConstant 0x9da3fa0 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0x9da41d8 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da4104 <col:27> 'int' EnumConstant 0x9da4030 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0x9da41e8 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da4154 <col:29> 'int' EnumConstant 0x9da3f20 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0x9da4378 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da4294 <col:30> 'int' EnumConstant 0x9da4260 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0x9da4388 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da4324 <col:29> 'int' EnumConstant 0x9da42f0 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0x9da4628 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9da45d4 <col:31> 'int' EnumConstant 0x9da4520 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0x9c155d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0x9c15540 <line:242:3, line:251:13>
    0x9c15480 "static void *const __gthread_active_ptr =
      (UnaryOperator 0x9c15528 <line:243:7, <scratch space>:97:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0x9c15510 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:97:1> 'void *' <BitCast>
          (UnaryOperator 0x9c154e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:97:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0x9c154b4 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0x9c12250 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0x9c155c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0x9c155b8 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0x9c155a0 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0x9c15580 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9c15550 <col:10> 'void *const' lvalue Var 0x9c15480 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0x9c15590 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0x9c15568 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0x9c159d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0x9c159c8 <line:663:3, col:68>
    (CallExpr 0x9c15958 <<scratch space>:98:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0x9c15948 <<scratch space>:98:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c158ec <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0x9dbca00 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0x9c15988 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0x9c15894 <col:36> '__gthread_t *' lvalue ParmVar 0x9c15630 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0x9c15998 </usr/include/clang/3.0/include/stddef.h:47:14> 'const pthread_attr_t *' <NullToPointer>
        (GNUNullExpr 0x9c158b0 <col:14> 'int'))
      (ImplicitCastExpr 0x9c159a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9c158bc <col:54> 'void *(*)(void *)' lvalue ParmVar 0x9c156e0 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0x9c159b8 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0x9c158d4 <col:62> 'void *' lvalue ParmVar 0x9c15730 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0x9c15c60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0x9c15c50 <line:669:3, col:57>
    (CallExpr 0x9c15c08 <<scratch space>:99:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0x9c15bf8 <<scratch space>:99:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c15b9c <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0x9dbcca0 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0x9c15c30 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c15b6c <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c15a00 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9c15c40 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0x9c15b84 <col:46> 'void **' lvalue ParmVar 0x9c15a50 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0x9c15e38 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0x9c15e28 <line:675:3, col:46>
    (CallExpr 0x9c15df8 <<scratch space>:100:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0x9c15de8 <<scratch space>:100:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c15db4 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0x9dbd190 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0x9c15e18 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c15d9c <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c15c80 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0x9c160b0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0x9c160a0 <line:681:3, col:45>
    (CallExpr 0x9c16058 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0x9c16048 <<scratch space>:101:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c15fec <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0x9dbce80 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0x9c16080 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c15fbc <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c15e60 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9c16090 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9c15fd4 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0x9c15ea0 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0x9c16268 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0x9c16258 <line:687:3, col:34>
    (CallExpr 0x9c16238 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0x9c16228 <<scratch space>:102:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c161d4 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0x9dbd050 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0x9c163e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0x9c163d8 <line:693:3, col:33>
    (CallExpr 0x9c163b8 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0x9c163a8 <<scratch space>:103:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c16374 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0x9c12420 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0x9c167e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0x9c167c0 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0x9c16648 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9c16628 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9c16618 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c165fc <col:7> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9c16770 <line:700:5, col:50>
      (CallExpr 0x9c16728 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0x9c16718 <<scratch space>:104:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9c166bc <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0x9dbc420 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0x9c16750 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0x9c1668c <col:36> '__gthread_once_t *' lvalue ParmVar 0x9c16440 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0x9c16760 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0x9c166a4 <col:44> 'void (*)(void)' lvalue ParmVar 0x9c164e0 '__func' 'void (*)(void)'))))
    (ReturnStmt 0x9c167b0 <line:702:5, col:13>
      (UnaryOperator 0x9c16798 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0x9c16780 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0x9c16b00 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0x9c16af0 <line:708:3, col:53>
    (CallExpr 0x9c16aa8 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0x9c16a98 <<scratch space>:105:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c16a3c <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0x9c13a70 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0x9c16ad0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0x9c16a0c <col:40> '__gthread_key_t *' lvalue ParmVar 0x9c16840 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0x9c16ae0 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9c16a24 <col:47> 'void (*)(void *)' lvalue ParmVar 0x9c168f0 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0x9c16cd8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0x9c16cc8 <line:714:3, col:45>
    (CallExpr 0x9c16c98 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0x9c16c88 <<scratch space>:106:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c16c54 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0x9c13c70 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9c16cb8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c16c3c <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c16b20 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0x9c16eb8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0x9c16ea8 <line:720:3, col:46>
    (CallExpr 0x9c16e78 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0x9c16e68 <<scratch space>:107:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c16e34 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0x9dbc630 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9c16e98 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c16e1c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c16d00 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0x9c17140 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0x9c17130 <line:726:3, col:53>
    (CallExpr 0x9c170e8 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0x9c170d8 <<scratch space>:108:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9c1707c <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0x9dbc7d0 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0x9c17110 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9c1704c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9c16ee0 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0x9c17120 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0x9c17064 <col:48> 'const void *' lvalue ParmVar 0x9c16f30 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0x9dcd4e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0x9dcd4c0 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dcd398 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dcd378 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9dcd368 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcd34c <col:7> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9dcd488 <line:733:5, col:52>
      (CallExpr 0x9dcd458 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0x9dcd448 <<scratch space>:109:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcd3f4 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c12f20 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9dcd478 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9dcd3dc <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9c171a0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9dcd4b0 <line:735:5, col:12>
      (IntegerLiteral 0x9dcd498 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9dcd780 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0x9dcd760 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dcd658 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dcd638 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9dcd628 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcd60c <col:7> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9dcd728 <line:742:5, col:49>
      (CallExpr 0x9dcd6f8 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0x9dcd6e8 <<scratch space>:110:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcd6b4 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c125a0 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9dcd718 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9dcd69c <col:42> '__gthread_mutex_t *' lvalue ParmVar 0x9dcd510 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9dcd750 <line:744:5, col:12>
      (IntegerLiteral 0x9dcd738 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9dcda20 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0x9dcda00 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dcd8f8 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dcd8d8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9dcd8c8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcd8ac <col:7> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9dcd9c8 <line:751:5, col:52>
      (CallExpr 0x9dcd998 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0x9dcd988 <<scratch space>:111:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcd954 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c12790 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9dcd9b8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9dcd93c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9dcd7b0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9dcd9f0 <line:753:5, col:12>
      (IntegerLiteral 0x9dcd9d8 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9dcddb8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0x9dcdd98 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dcdc38 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dcdc18 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9dcdc08 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcdbec <col:7> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9dcdd60 <line:763:5, col:69>
      (CallExpr 0x9dcdd18 <<scratch space>:112:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0x9dcdd08 <<scratch space>:112:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcdcac <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0x9c12960 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0x9dcdd40 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9dcdc7c <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9dcda50 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0x9dcdd50 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0x9dcdc94 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0x9dcdad0 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0x9dcdd88 <line:765:5, col:12>
      (IntegerLiteral 0x9dcdd70 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9dce050 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0x9dce030 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dcdf28 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dcdf08 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9dcdef8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcdedc <col:7> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9dcdff8 <line:774:5, col:51>
      (CallExpr 0x9dcdfc8 <<scratch space>:113:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0x9dcdfb8 <<scratch space>:113:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dcdf84 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9c12b90 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9dcdfe8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9dcdf6c <col:44> '__gthread_mutex_t *' lvalue ParmVar 0x9dcdde0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9dce020 <line:776:5, col:12>
      (IntegerLiteral 0x9dce008 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9dce268 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0x9dce258 <line:805:3, col:39>
    (CallExpr 0x9dce228 <col:10, col:39> 'int'
      (ImplicitCastExpr 0x9dce218 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dce1e4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9dcd570 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9dce248 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dce1cc <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9dce0b0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9dce410 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0x9dce400 <line:811:3, col:42>
    (CallExpr 0x9dce3d0 <col:10, col:42> 'int'
      (ImplicitCastExpr 0x9dce3c0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dce3a4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9dcd810 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9dce3f0 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dce38c <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9dce290 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9dce680 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0x9dce670 <line:820:3, col:59>
    (CallExpr 0x9dce628 <col:10, col:59> 'int'
      (ImplicitCastExpr 0x9dce618 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dce5dc <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9dcdb50 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9dce650 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dce5ac <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9dce440 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9dce660 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9dce5c4 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0x9dce490 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9dce830 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0x9dce820 <line:828:3, col:41>
    (CallExpr 0x9dce7f0 <col:10, col:41> 'int'
      (ImplicitCastExpr 0x9dce7e0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dce7c4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9dcde40 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9dce810 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dce7ac <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9dce6b0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0x9dcea68 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0x9dcea58 <line:834:3, col:50>
    (CallExpr 0x9dcea28 <<scratch space>:114:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0x9dcea18 <<scratch space>:114:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dce9c4 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0x9c13110 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9dcea48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9dce9ac <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9dce890 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0x9dcec28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0x9dcec18 <line:840:3, col:47>
    (CallExpr 0x9dcebe8 <<scratch space>:115:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0x9dcebd8 <<scratch space>:115:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dceba4 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0x9c132b0 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9dcec08 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9dceb8c <col:41> '__gthread_cond_t *' lvalue ParmVar 0x9dcea90 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0x9dceeb0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0x9dceea0 <line:846:3, col:54>
    (CallExpr 0x9dcee58 <<scratch space>:116:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0x9dcee48 <<scratch space>:116:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dcedec <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0x9c13490 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0x9dcee80 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcedbc <col:39> '__gthread_cond_t *' lvalue ParmVar 0x9dcec50 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9dcee90 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcedd4 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9dceca0 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9dcf1d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0x9dcf1c0 <line:853:3, col:74>
    (CallExpr 0x9dcf168 <<scratch space>:117:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0x9dcf158 <<scratch space>:117:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dcf0fc <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0x9c13680 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0x9dcf190 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcf0b4 <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9dceee0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9dcf1a0 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcf0cc <col:52> '__gthread_mutex_t *' lvalue ParmVar 0x9dcef30 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0x9dcf1b0 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcf0e4 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0x9dcef80 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9dcf870 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0x9dcf860 <line:860:3, col:46>
    (CallExpr 0x9dcf818 <col:10, col:46> 'int'
      (ImplicitCastExpr 0x9dcf808 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dcf7cc <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0x9dced20 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9dcf840 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcf79c <col:31> '__gthread_cond_t *' lvalue ParmVar 0x9dcf200 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9dcf850 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcf7b4 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9dcf680 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9dcfb70 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0x9dcfb60 <line:868:3, col:66>
    (CallExpr 0x9dcfb08 <col:10, col:66> 'int'
      (ImplicitCastExpr 0x9dcfaf8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dcfabc <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9dcf010 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9dcfb30 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcfa74 <col:36> '__gthread_cond_t *' lvalue ParmVar 0x9dcf8a0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9dcfb40 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcfa8c <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9dcf8f0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9dcfb50 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcfaa4 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0x9dcf940 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0x9dcfd38 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0x9dcfd28 <line:874:3, col:48>
    (CallExpr 0x9dcfcf8 <<scratch space>:118:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0x9dcfce8 <<scratch space>:118:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dcfcb4 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0x9c138d0 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9dcfd18 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9dcfc9c <col:42> '__gthread_cond_t *' lvalue ParmVar 0x9dcfba0 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9dd0298 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0x9dd0288 <col:5, col:45>
    (CallExpr 0x9dd00b8 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0x9dd0278 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dd0244 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0x9dd0120 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0x9dd00e0 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9dd0054 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0x9dcfe80 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0x9dd0238 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0x9dd006c <col:40> 'int' lvalue ParmVar 0x9dcfed0 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9dd0610 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0x9dd0470 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0x9dd0600 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9dd05e4 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0x9dd04c0 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0x9dd0498 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0x9dd0430 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0x9dd02c0 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0x9dd05d8 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0x9dd0448 <col:33> 'int' lvalue ParmVar 0x9dd0310 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9dd08f8 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0x9dd0828 <line:66:5, col:35>
    0x9dd07a0 "_Atomic_word __result =
      (ImplicitCastExpr 0x9dd0818 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0x9dd0800 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0x9dd07f0 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9dd07d4 <col:30> '_Atomic_word *' lvalue ParmVar 0x9dd0660 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0x9dd08a0 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9dd0860 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9dd0850 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9dd0838 <col:6> '_Atomic_word *' lvalue ParmVar 0x9dd0660 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9dd0890 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9dd0874 <col:15> 'int' lvalue ParmVar 0x9dd06b0 '__val' 'int')))
  (ReturnStmt 0x9dd08e8 <line:68:5, col:12>
    (ImplicitCastExpr 0x9dd08d8 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0x9dd08c0 <col:12> '_Atomic_word':'int' lvalue Var 0x9dd07a0 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9dd0b10 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0x9dd0af0 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9dd0ab0 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9dd0aa0 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9dd0a88 <col:6> '_Atomic_word *' lvalue ParmVar 0x9dd0930 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9dd0ae0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9dd0ac4 <col:15> 'int' lvalue ParmVar 0x9dd0980 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9dd0fa0 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0x9dd0f80 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dd0d18 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dd0cf8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9dd0ce8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dd0ccc <col:9> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9dd0e50 <line:81:7, col:45>
      (CallExpr 0x9dd0df8 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9dd0de8 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dd0d8c <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0x9dcff50 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0x9dd0e30 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0x9dd0e20 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9dd0d5c <col:33> '_Atomic_word *' lvalue ParmVar 0x9dd0b40 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0x9dd0e40 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0x9dd0d74 <col:40> 'int' lvalue ParmVar 0x9dd0b90 '__val' 'int'))))
    (ReturnStmt 0x9dd0f70 <line:83:7, col:52>
      (CallExpr 0x9dd0f28 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9dd0f18 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dd0ec4 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0730 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0x9dd0f50 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9dd0e94 <col:40> '_Atomic_word *' lvalue ParmVar 0x9dd0b40 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0x9dd0f60 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0x9dd0eac <col:47> 'int' lvalue ParmVar 0x9dd0b90 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9dd1410 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0x9dd13f0 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dd11a8 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dd1188 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9dd1178 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dd115c <col:9> 'int (void)' lvalue Function 0x9c15410 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0x9dd1288 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0x9dd1278 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dd121c <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0x9dd03b0 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0x9dd12c0 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0x9dd12b0 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9dd11ec <col:20> '_Atomic_word *' lvalue ParmVar 0x9dd0fd0 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0x9dd12d0 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0x9dd1204 <col:27> 'int' lvalue ParmVar 0x9dd1020 '__val' 'int')))
    (CallExpr 0x9dd13a8 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0x9dd1398 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dd1344 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0x9dd0a20 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0x9dd13d0 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9dd1314 <col:27> '_Atomic_word *' lvalue ParmVar 0x9dd0fd0 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0x9dd13e0 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0x9dd132c <col:34> 'int' lvalue ParmVar 0x9dd1020 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9e4e7f8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9e4e7e8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9dd8700 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9dd86e8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa165620 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa165610 <col:9, col:29>
    (ImplicitCastExpr 0xa165600 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa1655e0 <col:17, col:29> 'char *' lvalue ._M_p 0x9e4ed80
        (MemberExpr 0xa1655c0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e4edb0
          (CXXThisExpr 0xa1654a0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa165488 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa165478 <col:9, col:59>
    (UnaryOperator 0xa165460 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa165448 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa165430 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa165418 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa165400 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa1653e0 <col:44, col:52> 'char *'
                (MemberExpr 0xa1653c0 <col:44> '<bound member function type>' ->_M_data 0x9e4ee30
                  (CXXThisExpr 0xa1653b0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9dfa6d8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9dfa6c0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa164dd8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa164dc8 <col:9, col:26>
    (ImplicitCastExpr 0xa164db8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa164d98 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9e6ed50
        (ImplicitCastExpr 0xa164d88 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa164d50 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa164d30 <col:16> '<bound member function type>' ->_M_rep 0x9e4f100
              (CXXThisExpr 0xa164c08 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa164bf0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa164be0 <col:9, col:32>
    (BinaryOperator 0xa164bc8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa164b98 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa164b78 <col:16, col:22> '<bound member function type>' ->size 0x9e560a0
          (CXXThisExpr 0xa164b68 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa164bb8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e02108 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa165cc0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa165748 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa1656f0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa1656e0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa165674 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9e57640 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa1656c0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa1656a0 <col:13, col:19> '<bound member function type>' ->size 0x9e560a0
          (CXXThisExpr 0xa165690 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa165718 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa165708 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02574 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa165738 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e02560 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e02530 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa165cb0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa165ca0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa165c88 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa165c40 <col:9, col:17> 'char *'
          (MemberExpr 0xa165c20 <col:9> '<bound member function type>' ->_M_data 0x9e4ee30
            (CXXThisExpr 0xa165c10 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa165c78 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa165c5c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9e57640 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa164628 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa164488 <line:180:4, col:62>
    0xa1642b0 "void *__p =
      (CXXReinterpretCastExpr 0xa164470 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa164458 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa164400 <col:41> 'size_type []' lvalue Var 0x9e96c80 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa164618 <line:181:4, col:39>
    (UnaryOperator 0xa164600 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa1645e8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa1645d8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa1645bc <col:36> 'void *' lvalue Var 0xa1642b0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa164298 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa164278 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa163fa0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa163f58 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa163f48 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9df846c <col:8> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa163f80 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa163f30 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa163d90 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa163f18 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa163ef8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa163ee8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa163eb0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9e96e00 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa163f90 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9df8558 <col:50> '_Bool' false))))
    (CompoundStmt 0xa164260 <line:236:6, line:245:6>
      (NullStmt 0x9df8590 <line:238:67>)
      (IfStmt 0xa164240 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa164098 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa164070 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa164060 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9df85c0 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0bf0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa164048 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa164028 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9e96450
                (ImplicitCastExpr 0xa164018 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa163ff0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9df8658 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9df8640 <col:10> 'int' 1)))
          (IntegerLiteral 0x9df8698 <col:16> 'int' 0))
        (CompoundStmt 0xa164228 <line:241:3, line:244:3>
          (NullStmt 0x9df8718 <line:242:63>)
          (CXXMemberCallExpr 0xa164208 <line:243:5, col:19> 'void'
            (MemberExpr 0xa1641d0 <col:5> '<bound member function type>' ->_M_destroy 0x9e97ab0
              (CXXThisExpr 0xa1640b0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa1641f0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9e97990 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa1634f0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9e73dd8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9e73dc8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9dd8700 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9dd86e8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa163d30 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa163d20 <col:9, col:29>
    (ImplicitCastExpr 0xa163d10 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa163cf0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9e74360
        (MemberExpr 0xa163cd0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e74390
          (CXXThisExpr 0xa163bb0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa163b98 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa163b88 <col:9, col:59>
    (UnaryOperator 0xa163b70 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa163b58 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa163b40 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa163b28 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa163b10 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa163af0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa163ad0 <col:44> '<bound member function type>' ->_M_data 0x9e74410
                  (CXXThisExpr 0xa163ac0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9dfa6d8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9dfa6c0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa163440 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa163420 <col:9, col:51> 'void'
    (CXXTemporary 0xa1633a0)
    (CXXMemberCallExpr 0xa1633b8 <col:9, col:51> 'void'
      (MemberExpr 0xa163314 <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9e979e0
        (CXXMemberCallExpr 0xa1632e8 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa1632c8 <col:9> '<bound member function type>' ->_M_rep 0x9e74700
            (ImplicitCastExpr 0xa163308 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa15c060 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa163410 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa163400 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa1633a8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa1633a0)
            (CXXMemberCallExpr 0xa163368 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa163348 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9e8e200
                (ImplicitCastExpr 0xa163388 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa163338 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa165f70 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa165f60 <col:9, col:26>
    (ImplicitCastExpr 0xa165f50 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa165f30 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9e962d0
        (ImplicitCastExpr 0xa165f20 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa165f00 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa165ee0 <col:16> '<bound member function type>' ->_M_rep 0x9e74700
              (CXXThisExpr 0xa165dc0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa165da8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa165d98 <col:9, col:32>
    (BinaryOperator 0xa165d80 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa165d50 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa165d30 <col:16, col:22> '<bound member function type>' ->size 0x9e7b610
          (CXXThisExpr 0xa165d20 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa165d70 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e02108 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa166610 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa166098 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa166040 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa166030 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa165fc4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9e7cb70 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa166010 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa165ff0 <col:13, col:19> '<bound member function type>' ->size 0x9e7b610
          (CXXThisExpr 0xa165fe0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa166068 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa166058 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02574 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa166088 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e02560 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e02530 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa166600 <line:859:2, col:22>
    (ImplicitCastExpr 0xa1665f0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa1665d8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa166590 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa166570 <col:9> '<bound member function type>' ->_M_data 0x9e74410
            (CXXThisExpr 0xa166560 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa1665c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1665ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9e7cb70 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa166b40 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa166b30 <col:9, col:24>
    (ImplicitCastExpr 0xa166b20 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa166b00 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa166ae0 <col:16> '<bound member function type>' ->_M_data 0x9e74410
          (CXXThisExpr 0xa166ad0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa164800 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa1647f0 <col:9, col:16>
    (CXXConstructExpr 0xa1647c8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa1647b8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa1647a8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa164760 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e74390
            (CXXThisExpr 0xa164640 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9df7918 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9df78a0 <line:180:4, col:62>
    0x9df7810 "void *__p =
      (CXXReinterpretCastExpr 0x9df7888 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0x9df7860 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0x9df7844 <col:41> 'size_type []' lvalue Var 0x9dd5f30 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9df7908 <line:181:4, col:39>
    (UnaryOperator 0x9df78f0 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0x9df78d8 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0x9df78b0 <col:36> 'void *' lvalue Var 0x9df7810 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0x9df7a20 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0x9df7a10 <col:11, col:38>
    (CXXOperatorCallExpr 0x9df79e8 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9df79a8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (CXXDependentScopeMemberExpr 0x9df7958 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9df7948 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9df7990 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0x9df7b10 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9df7b00 <col:11, col:38>
    (CXXOperatorCallExpr 0x9df7ad8 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9df7a98 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (CXXDependentScopeMemberExpr 0x9df7a48 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9df7a38 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9df7a80 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0x9df7bb8 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0x9df7ba0 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9df7b38 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9df7b28 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0x9df7b88 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0x9df7b70 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0x9df7c48 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9df7c30 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9df7be0 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9df7bd0 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0x9df7c18 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9df8148 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9df8128 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0x9df7ea8 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9df7db0 <col:8> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9df7e70 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9df7e28 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40)
        (CXXThisExpr 0x9df7dc8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9df7e10 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9df7df0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9df7dd8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dd5fc0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9df7e98 <col:50> '_Bool' false))
    (CompoundStmt 0x9df8108 <line:206:6, line:212:6>
      (CallExpr 0x9df7f18 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9df7ee0 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9df7ed0 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0x9df7f98 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9df7f48 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9df7f38 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9df7f7c <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd6240 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9df80e0 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9df7ff8 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0x9df80b0 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0x9df8078 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9df8040 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0x9df8030 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0x9df8094 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd6240 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9df80c4 <col:53> 'const _CharT' lvalue Var 0x9dd5ea0 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0x9df8220 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9df8210 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9df81f8 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0x9df81c0 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9df8188 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CXXThisExpr 0x9df8160 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0x9df8170 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0x9df8458 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0x9df8448 <line:222:4, line:223:46>
    (ConditionalOperator 0x9df8428 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0x9df8358 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0x9df8340 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0x9df8288 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0x9df8268 <col:13, col:26> '<dependent type>'
              (MemberExpr 0x9df8248 <col:13> '<bound member function type>' ->_M_is_leaked 0x9dd6050
                (CXXThisExpr 0x9df8238 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0x9df8318 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0x9df82d0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
            (DeclRefExpr 0x9df829c <col:31> 'const _Alloc' lvalue ParmVar 0x9dd6450 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0x9df82b4 <col:43> 'const _Alloc' lvalue ParmVar 0x9dd64a0 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0x9df83a0 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0x9df8380 <col:14> '<bound member function type>' ->_M_refcopy 0x9dd8180
          (CXXThisExpr 0x9df8370 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0x9df8408 <col:29, col:46> '<dependent type>'
        (MemberExpr 0x9df83d0 <col:29> '<bound member function type>' ->_M_clone 0x9dd82d0
          (CXXThisExpr 0x9df83c0 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9df83f0 <col:38> 'const _Alloc' lvalue ParmVar 0x9dd6450 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0x9df8800 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9df87e0 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0x9df8568 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9df846c <col:8> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9df8530 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9df84e8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40)
        (CXXThisExpr 0x9df8488 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9df84d0 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9df84b0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9df8498 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dd5fc0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9df8558 <col:50> '_Bool' false))
    (CompoundStmt 0x9df87c8 <line:236:6, line:245:6>
      (NullStmt 0x9df8590 <line:238:67>)
      (IfStmt 0x9df87a8 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9df86f0 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0x9df86b0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0)
          (CallExpr 0x9df8670 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0x9df85c0 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0bf0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0x9df8628 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0x9df85f0 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0x9df85e0 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0x9df8658 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9df8640 <col:10> 'int' 1)))
          (IntegerLiteral 0x9df8698 <col:16> 'int' 0))
        (CompoundStmt 0x9df8790 <line:241:3, line:244:3>
          (NullStmt 0x9df8718 <line:242:63>)
          (CallExpr 0x9df8770 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0x9df8738 <col:5> '<bound member function type>' ->_M_destroy 0x9dd6940
              (CXXThisExpr 0x9df8728 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0x9df8758 <col:16> 'const _Alloc' lvalue ParmVar 0x9dd67a0 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0x9dfa398 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0x9dfa318 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0x9dfa210 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9df8814 <col:8> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9dfa1d8 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfa190 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40)
        (CXXThisExpr 0x9df8830 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9df8878 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9df8858 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9df8840 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dd5fc0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9dfa200 <col:50> '_Bool' false))
    (CallExpr 0x9dfa2f0 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0x9dfa258 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0x9dd1080 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0x9dfa2c0 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0x9dfa288 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x9dfa278 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0x9dfa2d8 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0x9dfa388 <line:258:4, col:22>
    (CallExpr 0x9dfa368 <col:11, col:22> '<dependent type>'
      (MemberExpr 0x9dfa348 <col:11> '<bound member function type>' ->_M_refdata 0x9dd63c0
        (CXXThisExpr 0x9dfa338 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0x9df7500 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0x9dfa3b0 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0x9dd8500 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0x9dfa408 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0x9dd84b0 '__dat' '_CharT *')
) (CompoundStmt 0x9dfa460 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9dd8720 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0x9dd8700 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0x9dd86e8 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0x9dfa520 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9dfa510 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0x9dfa4d8 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0x9dfa4b4 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9dd8790
        (CXXThisExpr 0x9dfa488 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0x9dfa5f8 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0x9dfa5e8 <col:9, col:39>
    (ParenExpr 0x9dfa5d0 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0x9dfa5b8 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9dfa568 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0x9dfa548 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9dd8790
            (CXXThisExpr 0x9dfa538 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9dfa59c <col:36> '_CharT *' lvalue ParmVar 0x9dd8880 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0x9dfa748 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9dfa738 <col:9, col:59>
    (UnaryOperator 0x9dfa720 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0x9dfa708 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0x9dfa6f0 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0x9dfa6a8 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0x9dfa690 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0x9dfa660 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0x9dfa620 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0x9dfa6d8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9dfa6c0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0x9dfa808 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0x9dfa7f8 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0x9dfa7d8 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9dfa7b8 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9dfa778 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0x9dfa990 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0x9dfa980 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0x9dfa960 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9dfa938 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfa900 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9dfa878 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0x9dfa838 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0x9dfa8e0 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9dfa8a8 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9dfa898 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0x9dfaad8 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0x9dfaab8 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0x9dfaa50 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0x9dfaa30 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dfa9f8 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0x9dfa9d8 <col:7, col:14> '<dependent type>'
            (MemberExpr 0x9dfa9b8 <col:7> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9dfa9a8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9dfaa98 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0x9dfaa78 <col:4> '<bound member function type>' ->_M_leak_hard 0x9dde8a0
        (CXXThisExpr 0x9dfaa68 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9dfad00 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9dfacb8 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9dfabb0 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfab70 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9dfaaec <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8be0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9dfab50 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9dfab18 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0x9dfab08 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9dfac88 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9dfac78 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfac3c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9dfaca8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9dfac28 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9dfac0c </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9dd8c30 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9dfacf0 <line:319:2, col:9>
    (DeclRefExpr 0x9dfacd4 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8be0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0x9dfb038 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0x9dfb018 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9dfaf30 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfaef0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (CXXOperatorCallExpr 0x9dfaeb0 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfae78 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CallExpr 0x9dfad60 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9dfad28 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9dfad18 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0x9dfae60 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0x9dfae38 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9dfae00 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (CallExpr 0x9dfadc8 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9dfad90 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9dfad80 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9dfade4 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8d40 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0x9dfaed4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8d80 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9dfafe8 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0x9dfafd8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfafbc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63690 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9dfb008 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9dfafa8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9dfaf8c </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0x9dd8dd0 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9dfb358 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x9dfb1f8 <line:333:2, col:54>
    0x9dfb060 "const bool __testoff =
      (CXXOperatorCallExpr 0x9dfb1d0 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfb190 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
        (DeclRefExpr 0x9dfb094 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8f50 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9dfb168 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9dfb130 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (CallExpr 0x9dfb0f8 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9dfb0c0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9dfb0b0 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0x9dfb114 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0x9dfb348 <line:334:2, col:44>
    (ConditionalOperator 0x9dfb328 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0x9dfb318 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9dfb208 <col:9> 'const _Bool' lvalue Var 0x9dfb060 '__testoff' 'const _Bool'))
      (DeclRefExpr 0x9dfb220 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8f50 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9dfb2f0 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfb2b8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CallExpr 0x9dfb280 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9dfb248 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9dfb238 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9dfb29c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd8f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0x9dfb7a0 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0x9dfb790 <line:341:2, line:342:58>
    (ParenExpr 0x9dfb778 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0x9dfb760 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0x9dfb4f0 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9dfb450 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0x9dfb468 <col:32> 'const _CharT *' lvalue ParmVar 0x9dd9090 '__s' 'const _CharT *')
          (CallExpr 0x9dfb4d0 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0x9dfb490 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0x9dfb738 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9dfb5d0 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0x9dfb6f8 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x9dfb6c0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
            (CallExpr 0x9dfb638 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0x9dfb5f8 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0x9dfb6a0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9dfb668 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9dfb658 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0x9dfb71c <col:54> 'const _CharT *' lvalue ParmVar 0x9dd9090 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9dfba10 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0x9dfb9f0 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9dfb830 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfb7e8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (DeclRefExpr 0x9dfb7b4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd9240 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9dfb7d0 <col:13> 'int' 1))
    (CallExpr 0x9dfb908 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dfb880 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9dfb8c0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dfb8a4 <col:25> '_CharT *' lvalue ParmVar 0x9dd91b0 '__d' '_CharT *'))
      (UnaryOperator 0x9dfb8f0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dfb8d4 <col:31> 'const _CharT *' lvalue ParmVar 0x9dd9200 '__s' 'const _CharT *')))
    (CallExpr 0x9dfb9c8 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dfb958 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9dfb97c <col:22> '_CharT *' lvalue ParmVar 0x9dd91b0 '__d' '_CharT *')
      (DeclRefExpr 0x9dfb994 <col:27> 'const _CharT *' lvalue ParmVar 0x9dd9200 '__s' 'const _CharT *')
      (DeclRefExpr 0x9dfb9ac <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd9240 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9dfbc80 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0x9dfbc60 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9dfbaa0 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfba58 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (DeclRefExpr 0x9dfba24 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd9410 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9dfba40 <col:13> 'int' 1))
    (CallExpr 0x9dfbb78 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dfbaf0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9dfbb30 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dfbb14 <col:25> '_CharT *' lvalue ParmVar 0x9dd9380 '__d' '_CharT *'))
      (UnaryOperator 0x9dfbb60 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dfbb44 <col:31> 'const _CharT *' lvalue ParmVar 0x9dd93d0 '__s' 'const _CharT *')))
    (CallExpr 0x9dfbc38 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dfbbc8 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9dfbbec <col:22> '_CharT *' lvalue ParmVar 0x9dd9380 '__d' '_CharT *')
      (DeclRefExpr 0x9dfbc04 <col:27> 'const _CharT *' lvalue ParmVar 0x9dd93d0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9dfbc1c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd9410 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0x9dfbed8 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0x9dfbeb8 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9dfbd10 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfbcc8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (DeclRefExpr 0x9dfbc94 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd9530 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9dfbcb0 <col:13> 'int' 1))
    (CallExpr 0x9dfbdd0 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dfbd60 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9dfbda0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dfbd84 <col:25> '_CharT *' lvalue ParmVar 0x9dd94f0 '__d' '_CharT *'))
      (DeclRefExpr 0x9dfbdb4 <col:30> '_CharT' lvalue ParmVar 0x9dd9570 '__c' '_CharT'))
    (CallExpr 0x9dfbe90 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dfbe20 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9dfbe44 <col:24> '_CharT *' lvalue ParmVar 0x9dd94f0 '__d' '_CharT *')
      (DeclRefExpr 0x9dfbe5c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dd9530 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9dfbe74 <col:34> '_CharT' lvalue ParmVar 0x9dd9570 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0x9dfc108 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0x9dfc0e0 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9dfbf68 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfbf20 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40)
      (DeclRefExpr 0x9dfbeec <col:11> '_Iterator' lvalue ParmVar 0x9dd9750 '__k1' '_Iterator')
      (DeclRefExpr 0x9dfbf04 <col:19> '_Iterator' lvalue ParmVar 0x9dd9790 '__k2' '_Iterator'))
    (BinaryOperator 0x9dfbff0 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0x9dfbfa8 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9dfbf8c <col:27> '_Iterator' lvalue ParmVar 0x9dd9750 '__k1' '_Iterator'))
      (UnaryOperator 0x9dfbfd8 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9dfbfbc <col:35> '_CharT *' lvalue ParmVar 0x9dd9710 '__p' '_CharT *')))
    (CallExpr 0x9dfc0b8 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dfc030 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0x9dfc070 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dfc054 <col:27> '_CharT *' lvalue ParmVar 0x9dd9710 '__p' '_CharT *'))
      (UnaryOperator 0x9dfc0a0 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9dfc084 <col:33> '_Iterator' lvalue ParmVar 0x9dd9750 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0x9dfd760 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0x9dfd738 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9dfc120 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9dd9fc0 0x9dd9de0 0x9dd9c00 0x9dd9a40 0x9dd98b0)
    (DeclRefExpr 0x9dfc164 <col:23> '_CharT *' lvalue ParmVar 0x9dd9900 '__p' '_CharT *')
    (CallExpr 0x9dfd6a8 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dfd670 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9dfd658 <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dd9940 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9dfd718 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dfd6e0 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9dfd6c4 <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dd9980 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9dfd8e0 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0x9dfd8b8 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9dfd778 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9dd9fc0 0x9dd9de0 0x9dd9c00 0x9dd9a40 0x9dd98b0)
    (DeclRefExpr 0x9dfd7bc <col:23> '_CharT *' lvalue ParmVar 0x9dd9ac0 '__p' '_CharT *')
    (CallExpr 0x9dfd828 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dfd7f0 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9dfd7d4 <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dd9b00 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9dfd898 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dfd860 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9dfd844 <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dd9b40 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9dfd9f8 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0x9dfd9d0 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9dfd8f4 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9dfd90c <col:17> '_CharT *' lvalue ParmVar 0x9dd9c80 '__p' '_CharT *')
    (DeclRefExpr 0x9dfd924 <col:22> '_CharT *' lvalue ParmVar 0x9dd9cd0 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0x9dfd9a8 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfd970 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9dfd93c <col:28> '_CharT *' lvalue ParmVar 0x9dd9d20 '__k2' '_CharT *')
      (DeclRefExpr 0x9dfd954 <col:35> '_CharT *' lvalue ParmVar 0x9dd9cd0 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9dfdb10 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0x9dfdae8 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9dfda0c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9dfda24 <col:17> '_CharT *' lvalue ParmVar 0x9dd9e60 '__p' '_CharT *')
    (DeclRefExpr 0x9dfda3c <col:22> 'const _CharT *' lvalue ParmVar 0x9dd9eb0 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0x9dfdac0 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfda88 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9dfda54 <col:28> 'const _CharT *' lvalue ParmVar 0x9dd9f00 '__k2' 'const _CharT *')
      (DeclRefExpr 0x9dfda6c <col:35> 'const _CharT *' lvalue ParmVar 0x9dd9eb0 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0x9dff048 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0x9dfdc40 <line:403:2, col:58>
    0x9dfdb50 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0x9dfdc20 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0x9dfdbf8 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9dfdbc0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (DeclRefExpr 0x9dfdb90 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dda040 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9dfdba8 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9dda080 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0x9dff028 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9dfeca8 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9dfec68 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (DeclRefExpr 0x9dfdc50 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9dfdb50 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0x9dfec48 <col:12, col:46> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))
    (ReturnStmt 0x9dfed90 <line:406:4, col:45>
      (ImplicitCastExpr 0x9dfed80 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x9dfed60 <col:11, col:45> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int')))
    (IfStmt 0x9dff008 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9dfeeb0 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9dfee70 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0)
        (DeclRefExpr 0x9dfeda0 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9dfdb50 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0x9dfee50 <col:17, col:51> 'const int':'const int' lvalue Var 0x9dfe4c0 '__min' 'const int':'const int'))
      (ReturnStmt 0x9dfefa0 <line:408:4, col:45>
        (ImplicitCastExpr 0x9dfef90 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x9dfef70 <col:11, col:45> 'const int':'const int' lvalue Var 0x9dfe4c0 '__min' 'const int':'const int')))
      (ReturnStmt 0x9dfeff8 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0x9dfefd8 <col:11, col:18> 'int'
          (DeclRefExpr 0x9dfefbc <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9dfdb50 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9dff0e0 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x9dff0d0 <col:9, col:35>
    (CallExpr 0x9dff0b0 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9dff088 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0x9dff168 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9dff130 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0x9dff110 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0x9dff0f4 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dde920 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0x9dff190 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0x9dff1f0 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9df7518 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7538 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7558 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7578 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7598 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9dff310 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0x9dff2f0 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9dff250 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0x9dff230 <col:9, col:16> '<dependent type>'
        (MemberExpr 0x9dff210 <col:9> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9dff200 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9dff2d0 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dff298 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0x9dff288 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9dff3b8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0x9dff3a8 <col:9, col:34>
    (CallExpr 0x9dff388 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dff338 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dff328 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9dff36c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ddf880 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0x9dff460 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0x9dff450 <col:9, col:32>
    (CallExpr 0x9dff430 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9dff3e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9dff3d0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9dff414 <col:29> 'const _CharT *' lvalue ParmVar 0x9ddf9a0 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0x9dff550 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0x9dff4f0 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9dff488 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9dff478 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9dff4c0 <col:15> 'int' 1)
    (DeclRefExpr 0x9dff4d8 <col:18> '_CharT' lvalue ParmVar 0x9ddfab0 '__c' '_CharT'))
  (ReturnStmt 0x9dff540 <line:562:2, col:10>
    (UnaryOperator 0x9dff528 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9dff518 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0x9e01530 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0x9dff598 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0x9dff578 <col:2> '<bound member function type>' ->_M_leak 0x9dd8b70
      (CXXThisExpr 0x9dff568 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9e01520 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0x9dff630 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9dff610 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x9dff5d0 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0x9e015f0 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0x9e015e0 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9e015c0 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9e015a0 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9e01560 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0x9e017c8 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0x9e01638 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0x9e01618 <col:2> '<bound member function type>' ->_M_leak 0x9dd8b70
      (CXXThisExpr 0x9e01608 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9e017b8 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0x9e01798 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9e01770 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9e01738 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9e016b0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9e01670 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0x9e01718 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e016e0 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9e016d0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0x9e01950 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0x9e01940 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0x9e01920 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9e018f8 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9e018c0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9e01838 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x9e017f8 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0x9e018a0 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e01868 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9e01858 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0x9e01a08 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0x9e019f8 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9e019d8 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9e019b8 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e01980 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9e01970 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9e01ac0 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0x9e01ab0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9e01a90 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9e01a70 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e01a38 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9e01a28 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0x9e01b78 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0x9e01b68 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9e01b48 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9e01b28 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e01af0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9e01ae0 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0x9e01c30 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0x9e01c20 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x9e01c00 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9e01be0 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e01ba8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9e01b98 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0x9e01ce0 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9e01cd0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9e01c98 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9e01c78 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9e01c58 <col:16> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e01c48 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0x9e01d90 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x9e01d80 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9e01d48 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9e01d28 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9e01d08 <col:16> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e01cf8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0x9e01e10 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0x9e01e00 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0x9e01dc8 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0x9e01ed0 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0x9e01ea8 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e01e38 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e01e28 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e01e6c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de03f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9e01e90 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0x9e01f80 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x9e01f70 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9e01f38 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9e01f18 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9e01ef8 <col:16> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e01ee8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0x9df75b0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0x9e02088 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0x9e02060 <col:9, col:37> '<dependent type>'
    (MemberExpr 0x9e01fa8 <col:9> '<bound member function type>' ->_M_mutate 0x9dde810
      (CXXThisExpr 0x9e01f98 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9e01fc8 <col:19> 'int' 0)
    (CallExpr 0x9e02028 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e01ff0 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0x9e01fe0 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0x9e02048 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0x9e021a0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9e02190 <col:9, col:32>
    (CXXOperatorCallExpr 0x9e02168 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9e02120 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (CallExpr 0x9e020e8 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e020b0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9e020a0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0x9e02108 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0x9e02278 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0x9e021b8 <line:819:40>)
  (ReturnStmt 0x9e02268 <line:820:2, col:24>
    (ArraySubscriptExpr 0x9e02250 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9e02218 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9e021d8 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9e02234 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de34b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0x9e023b0 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0x9e02290 <line:837:40>)
  (NullStmt 0x9e022a0 <line:839:42>)
  (CallExpr 0x9e022e0 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0x9e022c0 <col:2> '<bound member function type>' ->_M_leak 0x9dd8b70
      (CXXThisExpr 0x9e022b0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9e023a0 <line:841:2, col:24>
    (ArraySubscriptExpr 0x9e02388 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9e02350 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9e02310 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9e0236c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de35e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9e026a0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9e025d0 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e02490 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9e02450 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770)
      (DeclRefExpr 0x9e023d0 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de36f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e02430 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e023f8 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x9e023e8 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9e025a0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9e02590 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02574 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9e025c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e02560 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e02530 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9e02690 <line:859:2, col:22>
    (ArraySubscriptExpr 0x9e02678 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9e02640 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9e02600 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9e0265c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de36f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0x9e02978 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0x9e02858 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e02760 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9e02720 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770)
      (DeclRefExpr 0x9e026b8 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de37b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e02700 <col:13, col:18> '<dependent type>'
        (MemberExpr 0x9e026e0 <col:13> '<bound member function type>' ->size 0x9de0130
          (CXXThisExpr 0x9e026d0 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9e02828 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0x9e02818 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e027fc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9e02848 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e027e8 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e027bc </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0x9e028a8 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0x9e02888 <col:2> '<bound member function type>' ->_M_leak 0x9dd8b70
      (CXXThisExpr 0x9e02878 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9e02968 <line:913:2, col:22>
    (ArraySubscriptExpr 0x9e02950 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9e02918 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9e028d8 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9e02934 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de37b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e02a28 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0x9e02a18 <col:9, col:34>
    (CallExpr 0x9e029f8 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e029a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e02998 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e029dc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de3880 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0x9e02ad0 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0x9e02ac0 <col:9, col:32>
    (CallExpr 0x9e02aa0 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e02a50 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e02a40 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e02a84 <col:29> 'const _CharT *' lvalue ParmVar 0x9de3960 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0x9e02ba0 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0x9e02b48 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e02af8 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9e02ae8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e02b2c <col:18> '_CharT' lvalue ParmVar 0x9de3a30 '__c' '_CharT'))
  (ReturnStmt 0x9e02b90 <line:944:2, col:10>
    (UnaryOperator 0x9e02b78 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e02b68 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0x9e02cf0 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x9e02bb8 <line:998:32>)
  (ReturnStmt 0x9e02ce0 <line:999:2, col:51>
    (CallExpr 0x9e02cb8 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e02bd8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e02bc8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e02c0c <col:22> 'const _CharT *' lvalue ParmVar 0x9de3f10 '__s' 'const _CharT *')
      (CallExpr 0x9e02c98 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e02c48 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e02c7c <col:47> 'const _CharT *' lvalue ParmVar 0x9de3f10 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9e02e60 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0x9e02e50 <col:11, col:69>
    (CallExpr 0x9e02e20 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e02d18 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9e02d08 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e02d80 <col:32, col:40> '<dependent type>'
        (MemberExpr 0x9e02d60 <col:32> '<bound member function type>' ->_M_iend 0x9dd8af0
          (CXXThisExpr 0x9e02d50 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9e02dd0 <col:43, col:51> '<dependent type>'
        (MemberExpr 0x9e02db0 <col:43> '<bound member function type>' ->_M_iend 0x9dd8af0
          (CXXThisExpr 0x9e02da0 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9e02dec <col:54> '_InputIterator' lvalue ParmVar 0x9de4190 '__first' '_InputIterator')
      (DeclRefExpr 0x9e02e04 <col:63> '_InputIterator' lvalue ParmVar 0x9de41d0 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0x9e03440 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x9e02f98 <line:1044:2, col:42>
    0x9e02e80 "const size_type __len =
      (CXXOperatorCallExpr 0x9e02f70 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9e02f38 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (IntegerLiteral 0x9e02eb8 <col:26> 'int' 1)
        (CallExpr 0x9e02f18 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e02ee0 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9e02ed0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9e031d0 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x9e03138 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9e03068 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9e03028 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
        (DeclRefExpr 0x9e02fa8 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e02e80 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9e03008 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e02fd0 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0x9e02fc0 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9e03118 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e030e0 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0x9e030c0 <col:34, col:41> '<dependent type>'
            (MemberExpr 0x9e030a0 <col:34> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e03090 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9e031b0 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e03160 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9e03150 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e03194 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e02e80 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0x9e03358 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e03218 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0x9e03328 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0x9e032a0 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0x9e03260 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0x9e03308 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e032d0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e032c0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9e0333c <col:47> '_CharT' lvalue ParmVar 0x9de4310 '__c' '_CharT'))
  (CallExpr 0x9e03420 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e033d0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9e033b0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9e03390 <col:2> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e03380 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9e03404 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e02e80 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9e04420 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0x9e04410 <line:1090:9, line:1092:34>
    (CallExpr 0x9e043e8 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e03470 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e03460 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e04318 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9e042e0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9e034f8 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e034c0 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9e034a4 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de44f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9e042b8 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e04238 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9e04220 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de44f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9e0426c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de4530 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9e04284 <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0x9e043c0 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e04358 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0433c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de44f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e0438c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de4530 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e043a4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de4570 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0x9e04570 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0x9e04438 <line:1119:32>)
  (ReturnStmt 0x9e04560 <line:1120:2, col:51>
    (CallExpr 0x9e04538 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e04458 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e04448 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0448c <col:22> 'const _CharT *' lvalue ParmVar 0x9de4770 '__s' 'const _CharT *')
      (CallExpr 0x9e04518 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e044c8 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e044fc <col:47> 'const _CharT *' lvalue ParmVar 0x9de4770 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0x9e046d0 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0x9e046c0 <col:9, col:67>
    (CallExpr 0x9e04690 <col:16, col:67> '<dependent type>'
      (MemberExpr 0x9e04598 <col:16> '<bound member function type>' ->_M_replace_aux 0x9dee680
        (CXXThisExpr 0x9e04588 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0x9e045d8 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9e045c0 <col:41> 'int' 0))
      (CallExpr 0x9e04640 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e04608 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0x9e045f8 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9e0465c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de4840 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e04674 <col:64> '_CharT' lvalue ParmVar 0x9de4880 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9e04840 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0x9e04830 <col:11, col:71>
    (CallExpr 0x9e04800 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e046f8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9e046e8 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e04760 <col:32, col:42> '<dependent type>'
        (MemberExpr 0x9e04740 <col:32> '<bound member function type>' ->_M_ibegin 0x9dd8a70
          (CXXThisExpr 0x9e04730 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9e047b0 <col:45, col:53> '<dependent type>'
        (MemberExpr 0x9e04790 <col:45> '<bound member function type>' ->_M_iend 0x9dd8af0
          (CXXThisExpr 0x9e04780 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9e047cc <col:56> '_InputIterator' lvalue ParmVar 0x9de49b0 '__first' '_InputIterator')
      (DeclRefExpr 0x9e047e4 <col:65> '_InputIterator' lvalue ParmVar 0x9de49f0 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0x9e04930 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0x9e04900 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e04868 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9e04858 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e0489c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de4b10 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9e048b4 <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de4b10 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9e048cc <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de4b50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e048e4 <col:38> '_CharT' lvalue ParmVar 0x9de4b90 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0x9e04a20 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0x9e049f0 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e04958 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9e04948 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e0498c <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de4d20 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9e049a4 <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de4d20 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9e049bc <col:35> '_InputIterator' lvalue ParmVar 0x9de4d60 '__beg' '_InputIterator')
    (DeclRefExpr 0x9e049d4 <col:42> '_InputIterator' lvalue ParmVar 0x9de4da0 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e04ba0 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0x9e04b90 <col:9, col:70>
    (CallExpr 0x9e04b60 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e04a48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e04a38 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e04a7c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de4f00 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e04a94 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de4f50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0x9e04ad0 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9e04ab8 <col:54> 'int' 0))
      (CallExpr 0x9e04b40 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e04b08 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0x9e04aec <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de4f50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0x9e04e88 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0x9e04e78 <line:1243:9, line:1245:35>
    (CallExpr 0x9e04e50 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e04bc8 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e04bb8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e04bfc <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de5060 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9e04d80 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9e04d48 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9e04c68 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e04c30 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0x9e04c14 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de50b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9e04d20 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e04ca0 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9e04c84 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de50b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9e04cd4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de50f0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9e04cec <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0x9e04e28 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e04dc0 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9e04da4 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de50b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e04df4 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de50f0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e04e0c <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de5130 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0x9e04ff0 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0x9e04ea0 <line:1284:32>)
  (ReturnStmt 0x9e04fe0 <line:1285:2, col:58>
    (CallExpr 0x9e04fb8 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e04ec0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e04eb0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e04ef4 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8460 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e04f0c <col:29> 'const _CharT *' lvalue ParmVar 0x9de84b0 '__s' 'const _CharT *')
      (CallExpr 0x9e04f98 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e04f48 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e04f7c <col:54> 'const _CharT *' lvalue ParmVar 0x9de84b0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0x9e05188 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0x9e05178 <line:1306:9, line:1307:32>
    (CallExpr 0x9e05148 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0x9e05018 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0x9dee680
        (CXXThisExpr 0x9e05008 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e050b0 <col:31, col:69> '<dependent type>'
        (MemberExpr 0x9e05048 <col:31> '<bound member function type>' ->_M_check 0x9dd8cd0
          (CXXThisExpr 0x9e05038 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e05068 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de85c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9e05080 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0x9e050f8 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9e050e0 <col:20> 'int' 0))
      (DeclRefExpr 0x9e05114 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8600 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e0512c <col:29> '_CharT' lvalue ParmVar 0x9de8640 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0x9e055a8 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0x9e051a0 <line:1324:66>)
  (DeclStmt 0x9e052c0 <line:1325:2, col:43>
    0x9e051c0 "const size_type __pos =
      (CXXOperatorCallExpr 0x9e05298 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9e05260 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e051f4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de8780 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e05240 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9e05220 <col:32> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e05210 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9e053b0 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0x9e052e0 <col:2> '<bound member function type>' ->_M_replace_aux 0x9dee680
      (CXXThisExpr 0x9e052d0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e05300 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e051c0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9e05338 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9e05320 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0x9e05378 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9e05360 <col:48> 'int' 1))
    (DeclRefExpr 0x9e05394 <col:52> '_CharT' lvalue ParmVar 0x9de87c0 '__c' '_CharT'))
  (CallExpr 0x9e05468 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e05430 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9e05410 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9e053f0 <col:2> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e053e0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9e05598 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0x9e05578 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9e05550 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9e05518 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9e054e0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9e054a0 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9e054fc <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e051c0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0x9df75c8 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0x9df75e0 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0x9e057c8 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0x9e05768 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0x9e055e0 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9dde810
      (CXXThisExpr 0x9e055d0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9e05678 <col:12, col:49> '<dependent type>'
      (MemberExpr 0x9e05610 <col:12> '<bound member function type>' ->_M_check 0x9dd8cd0
        (CXXThisExpr 0x9e05600 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e05630 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de88d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9e05648 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0x9e05700 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0x9e056b0 <col:5> '<bound member function type>' ->_M_limit 0x9dd8ff0
        (CXXThisExpr 0x9e056a0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e056d0 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de88d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e056e8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8910 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0x9e05748 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9e05730 <col:37> 'int' 0)))
  (ReturnStmt 0x9e057b8 <line:1350:2, col:10>
    (UnaryOperator 0x9e057a0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e05790 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0x9e05bc8 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0x9e057e0 <line:1365:32>)
  (DeclStmt 0x9e05900 <line:1366:2, col:50>
    0x9e05800 "const size_type __pos =
      (CXXOperatorCallExpr 0x9e058d8 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9e058a0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e05834 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de8a20 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e05880 <col:39, col:49> '<dependent type>'
          (MemberExpr 0x9e05860 <col:39> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e05850 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9e059d8 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0x9e05920 <col:2> '<bound member function type>' ->_M_mutate 0x9dde810
      (CXXThisExpr 0x9e05910 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e05940 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e05800 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9e05978 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9e05960 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0x9e059b8 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9e059a0 <col:43> 'int' 0)))
  (CallExpr 0x9e05a88 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e05a50 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9e05a30 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9e05a10 <col:2> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e05a00 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9e05bb8 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0x9e05b98 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9e05b70 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9e05b38 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9e05b00 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9e05ac0 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9e05b1c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e05800 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e05d88 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0x9e05d78 <col:9, col:71>
    (CallExpr 0x9e05d48 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e05c00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e05bf0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e05c34 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8c80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e05c4c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8cc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e05cb8 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e05c80 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9e05c64 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de8d10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9e05d28 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e05cf0 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9e05cd4 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de8d10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0x9e06090 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0x9e06080 <line:1425:9, line:1427:37>
    (CallExpr 0x9e06050 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e05db0 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e05da0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e05de4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8e50 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e05dfc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8e90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9e05f80 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9e05f48 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0)
        (CallExpr 0x9e05e68 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e05e30 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9e05e14 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de8ee0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9e05f20 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e05ea0 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9e05e84 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de8ee0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9e05ed4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8f20 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9e05eec <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0x9e06028 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e05fc0 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9e05fa4 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de8ee0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e05ff4 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8f20 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e0600c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de8f60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0x9e071a0 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0x9e060a8 <line:1468:32>)
  (ReturnStmt 0x9e06208 <line:1469:2, col:65>
    (CallExpr 0x9e061d8 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e060c8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e060b8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e060fc <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de92c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e06114 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de9300 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e0612c <col:36> 'const _CharT *' lvalue ParmVar 0x9de9350 '__s' 'const _CharT *')
      (CallExpr 0x9e061b8 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e06168 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0619c <col:61> 'const _CharT *' lvalue ParmVar 0x9de9350 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9e07388 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0x9e07378 <line:1490:9, line:1491:42>
    (CallExpr 0x9e07348 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0x9e071c8 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0x9dee680
        (CXXThisExpr 0x9e071b8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e07268 <col:31, col:70> '<dependent type>'
        (MemberExpr 0x9e071f8 <col:31> '<bound member function type>' ->_M_check 0x9dd8cd0
          (CXXThisExpr 0x9e071e8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e07218 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de9490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9e07230 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0x9e072f0 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0x9e072a0 <col:10> '<bound member function type>' ->_M_limit 0x9dd8ff0
          (CXXThisExpr 0x9e07290 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e072c0 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de9490 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e072d8 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de94d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9e07314 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de9510 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e0732c <col:39> '_CharT' lvalue ParmVar 0x9de9550 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e07538 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0x9e07528 <col:9, col:71>
    (CallExpr 0x9e074f8 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e073b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e073a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e073e4 <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9690 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9e073fc <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de96d0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0x9e07468 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e07430 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9e07414 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de9720 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9e074d8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e074a0 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9e07484 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9de9720 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0x9e07770 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0x9e07550 <line:1528:27>)
  (ReturnStmt 0x9e07760 <line:1529:2, col:64>
    (CallExpr 0x9e07730 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e07570 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e07560 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e07648 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9e07610 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e075a4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9860 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e075f0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9e075d0 <col:30> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e075c0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9e076d8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e076a0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e0766c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de98a0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e07684 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9860 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9e076fc <col:56> 'const _CharT *' lvalue ParmVar 0x9de98f0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e07714 <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de9930 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0x9e078f8 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0x9e07788 <line:1548:32>)
  (ReturnStmt 0x9e078e8 <line:1549:2, col:64>
    (CallExpr 0x9e078b8 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e077a8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e07798 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e077dc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9a70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9e077f4 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9ab0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9e0780c <col:35> 'const _CharT *' lvalue ParmVar 0x9de9b00 '__s' 'const _CharT *')
      (CallExpr 0x9e07898 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e07848 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0787c <col:60> 'const _CharT *' lvalue ParmVar 0x9de9b00 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0x9e07b18 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0x9e07910 <line:1570:27>)
  (ReturnStmt 0x9e07b08 <line:1571:2, col:65>
    (CallExpr 0x9e07ad8 <col:9, col:65> '<dependent type>'
      (MemberExpr 0x9e07930 <col:9> '<bound member function type>' ->_M_replace_aux 0x9dee680
        (CXXThisExpr 0x9e07920 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e079f0 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9e079b8 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e07950 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9c40 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e07998 <col:31, col:41> '<dependent type>'
          (MemberExpr 0x9e07978 <col:31> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e07968 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9e07a80 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9e07a48 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e07a14 <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9c80 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e07a2c <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9c40 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9e07aa4 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9de9cc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e07abc <col:62> '_CharT' lvalue ParmVar 0x9de9d00 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0x9e07e10 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0x9e07b30 <line:1594:29>)
  (NullStmt 0x9e07b40 <line:1595:46>)
  (DeclStmt 0x9e07ce0 <line:1596:4, col:72>
    0x9e07cb0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0x9e07e00 <line:1597:4, col:66>
    (CallExpr 0x9e07dd0 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x9e07d00 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9e07d40 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9e90 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9e07d58 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9de9ed0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9e07d70 <col:43> '_InputIterator' lvalue ParmVar 0x9de9f10 '__k1' '_InputIterator')
      (DeclRefExpr 0x9e07d88 <col:49> '_InputIterator' lvalue ParmVar 0x9de9f50 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0x9e07db8 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9e080d8 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0x9e07e30 <line:1606:27>)
  (NullStmt 0x9e07e40 <line:1607:44>)
  (ReturnStmt 0x9e080c8 <line:1608:2, line:1609:26>
    (CallExpr 0x9e08098 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e07e60 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e07e50 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e07f38 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9e07f00 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e07e94 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dea0b0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e07ee0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9e07ec0 <col:30> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e07eb0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9e07fc8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e07f90 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e07f5c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dea0f0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e07f74 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dea0b0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9e07fec <line:1609:9> '_CharT *' lvalue ParmVar 0x9dea140 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0x9e08070 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08038 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e08004 <col:15> '_CharT *' lvalue ParmVar 0x9dea190 '__k2' '_CharT *')
        (DeclRefExpr 0x9e0801c <col:22> '_CharT *' lvalue ParmVar 0x9dea140 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9e083a0 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0x9e080f8 <line:1617:27>)
  (NullStmt 0x9e08108 <line:1618:44>)
  (ReturnStmt 0x9e08390 <line:1619:2, line:1620:26>
    (CallExpr 0x9e08360 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e08128 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e08118 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e08200 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9e081c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e0815c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dea2d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e081a8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9e08188 <col:30> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e08178 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9e08290 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08258 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e08224 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dea310 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e0823c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dea2d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9e082b4 <line:1620:9> 'const _CharT *' lvalue ParmVar 0x9dea360 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0x9e08338 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08300 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e082cc <col:15> 'const _CharT *' lvalue ParmVar 0x9deda40 '__k2' 'const _CharT *')
        (DeclRefExpr 0x9e082e4 <col:22> 'const _CharT *' lvalue ParmVar 0x9dea360 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0x9e086c0 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0x9e083c0 <line:1627:27>)
  (NullStmt 0x9e083d0 <line:1628:44>)
  (ReturnStmt 0x9e086b0 <line:1629:2, line:1630:33>
    (CallExpr 0x9e08680 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e083f0 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e083e0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e084c8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08490 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e08424 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedb80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e08470 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9e08450 <col:30> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e08440 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9e08558 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08520 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e084ec <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedbc0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e08504 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedb80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9e085d0 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e08598 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0857c <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedc00 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9e08658 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08620 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e085ec <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedc40 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e08604 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedc00 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9e089e0 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0x9e086e0 <line:1638:27>)
  (NullStmt 0x9e086f0 <line:1639:44>)
  (ReturnStmt 0x9e089d0 <line:1640:2, line:1641:33>
    (CallExpr 0x9e089a0 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e08710 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e08700 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e087e8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9e087b0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e08744 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedd80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e08790 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9e08770 <col:30> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e08760 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9e08878 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08840 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e0880c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9deddc0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e08824 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dedd80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9e088f0 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e088b8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0889c <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dede00 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9e08978 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08940 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e0890c <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dede40 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e08924 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dede00 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9e08bf8 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0x9e08be8 <col:11, col:76>
    (CallExpr 0x9e08bb8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0x9e08a10 <col:18> '<bound member function type>' ->_M_replace_aux 0x9dee680
        (CXXThisExpr 0x9e08a00 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e08ad0 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08a98 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e08a30 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dee010 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e08a78 <col:40, col:50> '<dependent type>'
          (MemberExpr 0x9e08a58 <col:40> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e08a48 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9e08b60 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x9e08b28 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e08af4 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dee050 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e08b0c <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9dee010 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9e08b84 <col:66> '_Integer' lvalue ParmVar 0x9dee090 '__n' '_Integer')
      (DeclRefExpr 0x9e08b9c <col:71> '_Integer' lvalue ParmVar 0x9dee0d0 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0x9e08e40 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0x9e08d30 <line:1690:11, col:80>
    0x9e08d00 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0x9e08e30 <line:1691:11, col:56>
    (CallExpr 0x9e08e00 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x9e08d40 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0x9def7e0 0x9def6b0 0x9def420 0x9def190)
      (DeclRefExpr 0x9e08d80 <col:31> '_InIterator' lvalue ParmVar 0x9dee900 '__beg' '_InIterator')
      (DeclRefExpr 0x9e08d98 <col:38> '_InIterator' lvalue ParmVar 0x9dee940 '__end' '_InIterator')
      (DeclRefExpr 0x9e08db0 <col:45> 'const _Alloc' lvalue ParmVar 0x9dee990 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9e08de8 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0x9e08f10 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0x9e08f00 <line:1700:11, line:1701:19>
    (CallExpr 0x9e08ed8 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0x9e08e58 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0x9deef10 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0x9e08e90 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9e08e70 <col:60> '_Integer' lvalue ParmVar 0x9deeb90 '__beg' '_Integer'))
      (DeclRefExpr 0x9e08ea8 <line:1701:9> '_Integer' lvalue ParmVar 0x9deebd0 '__end' '_Integer')
      (DeclRefExpr 0x9e08ec0 <col:16> 'const _Alloc' lvalue ParmVar 0x9deec20 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9e08fe8 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0x9e08fd8 <col:9, col:44>
    (CallExpr 0x9e08fb0 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0x9e08f28 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0x9def7e0 0x9def6b0 0x9def420 0x9def190)
      (DeclRefExpr 0x9e08f68 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9deedc0 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e08f80 <col:36> '_CharT' lvalue ParmVar 0x9deee00 '__c' '_CharT')
      (DeclRefExpr 0x9e08f98 <col:41> 'const _Alloc' lvalue ParmVar 0x9deee50 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0x9e0abc0 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0x9e09130 <line:1711:4, col:69>
    0x9e09100 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0x9e0abb0 <line:1712:4, col:58>
    (CallExpr 0x9e0ab80 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9e09140 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0x9deed80 0x9deeaf0)
      (DeclRefExpr 0x9e09178 <col:28> '_InIterator' lvalue ParmVar 0x9deefe0 '__beg' '_InIterator')
      (DeclRefExpr 0x9e0ab18 <col:35> '_InIterator' lvalue ParmVar 0x9def020 '__end' '_InIterator')
      (DeclRefExpr 0x9e0ab30 <col:42> 'const _Alloc' lvalue ParmVar 0x9def070 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9e0ab68 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9df75f8 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0x9e0ac58 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9e0ac48 <col:9, col:24>
    (CallExpr 0x9e0ac28 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9e0abe8 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0x9e0acf0 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0x9e0ace0 <col:9, col:24>
    (CallExpr 0x9e0acc0 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9e0ac80 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0x9e0ad48 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9e0ad38 <col:9, col:16>
    (MemberExpr 0x9e0ad18 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9dd8790
      (CXXThisExpr 0x9e0ad08 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9df7610 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0x9e0aed8 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0x9e0aec8 <col:9, col:60>
    (CallExpr 0x9e0aea0 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0ad70 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0ad60 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e0adf8 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0adc0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0ada4 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df15a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9e0ae14 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0ae80 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0ae48 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0ae2c <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df15a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9df7628 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0x9e0b040 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0x9e0aef0 <line:1826:32>)
  (ReturnStmt 0x9e0b030 <line:1827:2, col:56>
    (CallExpr 0x9e0b008 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0af10 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0af00 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0af44 <col:20> 'const _CharT *' lvalue ParmVar 0x9df1700 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e0af5c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df1740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0afe8 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0af98 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0afcc <col:52> 'const _CharT *' lvalue ParmVar 0x9df1700 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9df7640 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9df7658 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0b1d0 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0x9e0b1c0 <col:9, col:61>
    (CallExpr 0x9e0b198 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0b068 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0b058 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e0b0f0 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b0b8 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b09c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df19b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9e0b10c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df19f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0b178 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b140 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b124 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df19b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9df7670 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0b338 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0x9e0b1e8 <line:1884:32>)
  (ReturnStmt 0x9e0b328 <line:1885:2, col:57>
    (CallExpr 0x9e0b300 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0b208 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0b1f8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0b23c <col:21> 'const _CharT *' lvalue ParmVar 0x9df1c30 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e0b254 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df1c70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0b2e0 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b290 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0b2c4 <col:53> 'const _CharT *' lvalue ParmVar 0x9df1c30 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9df7688 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9df76a0 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0x9e0b4c8 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0x9e0b4b8 <col:9, col:69>
    (CallExpr 0x9e0b490 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0b360 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0b350 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e0b3e8 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b3b0 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b394 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df1e60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9e0b404 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df1ea0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0b470 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b438 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b41c <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df1e60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9df76b8 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0x9e0b630 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0x9e0b4e0 <line:1942:32>)
  (ReturnStmt 0x9e0b620 <line:1943:2, col:65>
    (CallExpr 0x9e0b5f8 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0b500 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0b4f0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0b534 <col:29> 'const _CharT *' lvalue ParmVar 0x9df20e0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e0b54c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df2120 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0b5d8 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b588 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0b5bc <col:61> 'const _CharT *' lvalue ParmVar 0x9df20e0 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9df76d0 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0x9e0b6f8 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0x9e0b6e8 <col:9, col:37>
    (CallExpr 0x9e0b6c0 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0b658 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0b648 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0b68c <col:27> '_CharT' lvalue ParmVar 0x9df21f0 '__c' '_CharT')
      (DeclRefExpr 0x9e0b6a4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df2230 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9df76e8 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0b888 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0x9e0b878 <col:9, col:68>
    (CallExpr 0x9e0b850 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0b720 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0b710 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e0b7a8 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b770 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b754 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df2310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9e0b7c4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df2350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0b830 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b7f8 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0b7dc <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df2310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9df7700 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0b9f0 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0x9e0b8a0 <line:2003:32>)
  (ReturnStmt 0x9e0b9e0 <line:2004:2, col:64>
    (CallExpr 0x9e0b9b8 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0b8c0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0b8b0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0b8f4 <col:28> 'const _CharT *' lvalue ParmVar 0x9df2590 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e0b90c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df25d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0b998 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0b948 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0b97c <col:60> 'const _CharT *' lvalue ParmVar 0x9df2590 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9df7718 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0bab8 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0x9e0baa8 <col:9, col:38>
    (CallExpr 0x9e0ba80 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0ba18 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0ba08 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0ba4c <col:28> '_CharT' lvalue ParmVar 0x9df26a0 '__c' '_CharT')
      (DeclRefExpr 0x9e0ba64 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df26e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9df7730 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0x9e0bc48 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0x9e0bc38 <col:9, col:73>
    (CallExpr 0x9e0bc10 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0bae0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0bad0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e0bb68 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0bb30 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0bb14 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df27c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9e0bb84 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df2800 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0bbf0 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0bbb8 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0bb9c <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df27c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9df7748 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0x9e0bdb0 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9e0bc60 <line:2065:32>)
  (ReturnStmt 0x9e0bda0 <line:2066:2, col:69>
    (CallExpr 0x9e0bd78 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0bc80 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0bc70 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0bcb4 <col:33> 'const _CharT *' lvalue ParmVar 0x9df2a40 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e0bccc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df2a80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0bd58 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0bd08 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0bd3c <col:65> 'const _CharT *' lvalue ParmVar 0x9df2a40 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9df7760 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9df7778 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0bf40 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0x9e0bf30 <col:9, col:72>
    (CallExpr 0x9e0bf08 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0bdd8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0bdc8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e0be60 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0be28 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0be0c <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df2c70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9e0be7c <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df2cb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0bee8 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0beb0 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0be94 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df2c70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9df7790 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0c0a8 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9e0bf58 <line:2124:32>)
  (ReturnStmt 0x9e0c098 <line:2125:2, col:68>
    (CallExpr 0x9e0c070 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e0bf78 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9e0bf68 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e0bfac <col:32> 'const _CharT *' lvalue ParmVar 0x9df2ef0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e0bfc4 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df2f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e0c050 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0c000 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e0c034 <col:64> 'const _CharT *' lvalue ParmVar 0x9df2ef0 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9df77a8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0x9df77c0 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0x9df77d8 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e0c1e0 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0x9e0c1d0 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0x9e0c1a8 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0x9e0c0d8 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9e0c0c8 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9e0c168 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0x9e0c100 <col:8> '<bound member function type>' ->_M_check 0x9dd8cd0
          (CXXThisExpr 0x9e0c0f0 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e0c120 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df6990 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9e0c138 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0x9e0c18c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9df69d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9e0c788 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0x9e0c2a0 <line:2174:2, col:39>
    0x9e0c200 "const size_type __size =
      (CallExpr 0x9e0c280 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0c248 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x9e0c238 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9e0c368 <line:2175:2, col:40>
    0x9e0c2c0 "const size_type __osize =
      (CallExpr 0x9e0c348 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0c310 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9e0c2f4 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df6af0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9e0c460 <line:2176:2, col:51>
    0x9e0c380 "const size_type __len =
      (CallExpr 0x9e0c438 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e0c3d0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
        (DeclRefExpr 0x9e0c408 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e0c200 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e0c420 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e0c2c0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e0c630 <line:2178:2, col:64>
    0x9e0c480 "int __r =
      (CallExpr 0x9e0c608 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e0c4d8 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0x9e0c560 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0x9e0c520 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0x9e0c5d0 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e0c598 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9e0c57c <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9df6af0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9e0c5ec <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e0c380 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e0c730 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0x9e0c678 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e0c668 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e0c658 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e0c640 <col:7> 'int' lvalue Var 0x9e0c480 '__r' 'int'))))
    (BinaryOperator 0x9e0c718 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0x9e0c68c <col:4> 'int' lvalue Var 0x9e0c480 '__r' 'int')
      (CallExpr 0x9e0c6f0 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0x9e0c6a4 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0x9dde660 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9e0c6bc <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e0c200 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e0c6d4 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e0c2c0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e0c778 <line:2181:2, col:9>
    (ImplicitCastExpr 0x9e0c768 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e0c74c <col:9> 'int' lvalue Var 0x9e0c480 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e0e9e0 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0x9e0e920 <line:2308:7, col:57>
    0x9e0e8b0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9e0e900 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9e0e8e4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e0e430 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9e0e998 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e0e948 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e0e930 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e0e8b0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9e0e97c <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e0e5e0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9e0e9d0 <line:2310:7, col:14>
    (DeclRefExpr 0x9e0e9b8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e0e8b0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9e0fcd0 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0x9e0fc10 <line:2345:7, col:57>
    0x9e0fba0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9e0fbf0 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9e0fbd4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e0f860 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9e0fc88 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e0fc38 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e0fc20 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e0fba0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9e0fc6c <col:20> 'const _CharT *' lvalue ParmVar 0x9e0f8d0 '__rhs' 'const _CharT *'))
  (ReturnStmt 0x9e0fcc0 <line:2347:7, col:14>
    (DeclRefExpr 0x9e0fca8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e0fba0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0x9e106a8 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0x9e10410 <line:2360:7, col:66>
    0x9e103e0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9e10500 <line:2361:7, col:61>
    0x9e104d0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9e10590 <line:2362:7, col:33>
    0x9e10520 "__string_type __str =
      (ParenListExpr 0x9e10570 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9e10554 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e10090 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9e10658 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e105b8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e105a0 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e10520 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9e10620 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9e10608 <col:32> 'int' 1))
    (DeclRefExpr 0x9e1063c <col:36> '_CharT' lvalue ParmVar 0x9e100d0 '__rhs' '_CharT'))
  (ReturnStmt 0x9e10698 <line:2364:7, col:14>
    (DeclRefExpr 0x9e1067c <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e10520 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e10d58 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0x9e10d48 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e10d20 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e10cd0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e10c00 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (CallExpr 0x9e10c98 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e10c48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e10c30 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e10950 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e10c7c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e10b00 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9e10cb8 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0x9e11ab8 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0x9e11aa8 <line:2435:7, line:2437:24>
    (ParenExpr 0x9e11a90 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0x9e11a78 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9e117d0 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0x9e11780 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e11670 0x9e10c00 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
          (CallExpr 0x9e116f0 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e116b8 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0x9e116a0 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0x9e11310 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0x9e11760 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e11728 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0x9e1170c <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0x9e11560 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0x9e11a60 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0x9e11a38 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9e118c0 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0x9e11938 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e11900 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x9e118e4 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0x9e11310 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9e119a8 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e11970 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0x9e11954 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0x9e11560 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9e11a18 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e119e0 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9e119c4 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0x9e11310 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e12010 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0x9e12000 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e11fd8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e11f80 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e11eb0 0x9e11670 0x9e10c00 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (CallExpr 0x9e11f48 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e11ef8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e11ee0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e11db0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e11f2c <col:28> 'const _CharT *' lvalue ParmVar 0x9e11c00 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9e11f68 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9e125a0 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x9e12590 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e12568 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e12510 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e12440 0x9e11eb0 0x9e11670 0x9e10c00 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
      (CallExpr 0x9e124d8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e12488 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e12470 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e122b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e124bc <col:28> 'const _CharT *' lvalue ParmVar 0x9e12320 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9e124f8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e12bf0 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0x9e12be0 <col:7, col:30>
    (UnaryOperator 0x9e12bc8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9e12bb0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9e12b88 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9e12b30 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e12440 0x9e11eb0 0x9e11670 0x9e10c00 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
          (DeclRefExpr 0x9e12b00 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e12840 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9e12b18 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e129f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e130f0 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0x9e130e0 <col:7, col:30>
    (UnaryOperator 0x9e130c8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9e130b0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9e13088 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9e13030 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e12440 0x9e11eb0 0x9e11670 0x9e10c00 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
          (DeclRefExpr 0x9e13000 <col:16> 'const _CharT *' lvalue ParmVar 0x9e12d40 '__lhs' 'const _CharT *')
          (DeclRefExpr 0x9e13018 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e12ef0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9e13600 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0x9e135f0 <col:7, col:30>
    (UnaryOperator 0x9e135d8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9e135c0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9e13598 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9e13540 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e12440 0x9e11eb0 0x9e11670 0x9e10c00 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800)
          (DeclRefExpr 0x9e13510 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e13390 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9e13528 <col:25> 'const _CharT *' lvalue ParmVar 0x9e13400 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e13c78 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0x9e13c68 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e13c40 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e13c00 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e13b30 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (CallExpr 0x9e13bc8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e13b78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e13b60 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e138a0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e13bac <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e13a50 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9e13be8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9e141b0 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0x9e141a0 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e14178 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e14130 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e14060 0x9e13b30 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (CallExpr 0x9e140f8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e140a8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e14090 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e13f10 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e140dc <col:28> 'const _CharT *' lvalue ParmVar 0x9e13f80 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9e14118 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e14718 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0x9e14708 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e146e0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e146a0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (CallExpr 0x9e14668 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e14618 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e14600 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e144f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e1464c <col:28> 'const _CharT *' lvalue ParmVar 0x9e14300 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9e14688 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e14d88 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0x9e14d78 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e14d50 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e14d10 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e14c40 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (CallExpr 0x9e14cd8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e14c88 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e14c70 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e149b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e14cbc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e14b60 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9e14cf8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9e152c0 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0x9e152b0 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e15288 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e15240 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e15170 0x9e14c40 0x9bffdc0 0x9cb5ca0 0x9cb8850)
      (CallExpr 0x9e15208 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e151b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e151a0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e15020 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e151ec <col:28> 'const _CharT *' lvalue ParmVar 0x9e15090 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9e15228 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e157f0 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0x9e157e0 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e157b8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e15770 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e145d0 0x9e14060 0x9e13b30 0x9bfee30 0x9cb53d0 0x9cb7aa0)
      (CallExpr 0x9e15738 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e156e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e156d0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e155c0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e1571c <col:28> 'const _CharT *' lvalue ParmVar 0x9e15410 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9e15758 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e15e68 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0x9e15e58 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e15e30 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e15df0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e15d20 0x9c9f0d0 0x9cb6090 0x9cb8ca0)
      (CallExpr 0x9e15db8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e15d68 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e15d50 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e15a90 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e15d9c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e15c40 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9e15dd8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9e163a0 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0x9e16390 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e16368 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e16320 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e16250 0x9e15d20 0x9c9f0d0 0x9cb6090 0x9cb8ca0)
      (CallExpr 0x9e162e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e16298 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e16280 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e16100 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e162cc <col:28> 'const _CharT *' lvalue ParmVar 0x9e16170 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9e16308 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e168f8 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0x9e168e8 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e168c0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e16880 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770)
      (CallExpr 0x9e16848 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e167f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e167e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e166d0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e1682c <col:28> 'const _CharT *' lvalue ParmVar 0x9e16520 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9e16868 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e16f68 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0x9e16f58 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e16f30 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e16ef0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e16e20 0x9c9f620 0x9cb64b0 0x9cb9770)
      (CallExpr 0x9e16eb8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e16e68 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e16e50 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e16b90 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e16e9c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e16d40 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9e16ed8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9e174a0 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0x9e17490 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e17468 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e17420 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e17350 0x9e16e20 0x9c9f620 0x9cb64b0 0x9cb9770)
      (CallExpr 0x9e173e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e17398 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e17380 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e17200 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e173cc <col:28> 'const _CharT *' lvalue ParmVar 0x9e17270 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9e17408 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e179d0 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0x9e179c0 <col:7, col:38>
    (CXXOperatorCallExpr 0x9e17998 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9e17950 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e167b0 0x9e16250 0x9e15d20 0x9c9f0d0 0x9cb6090 0x9cb8ca0)
      (CallExpr 0x9e17918 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e178c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e178b0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e177a0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e178fc <col:28> 'const _CharT *' lvalue ParmVar 0x9e175f0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9e17938 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e17ff8 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0x9e17fd8 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e17f88 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e17f70 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e17c90 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9e17fbc <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e17e40 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e19848 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0x9e19838 <line:2697:7, col:63>
    (CallExpr 0x9e19810 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9e196e0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9d567c0)
      (DeclRefExpr 0x9e19714 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9e193b0 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0x9e19780 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e19748 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0x9e1972c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e19560 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9e197f0 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e197b8 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0x9e1979c <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e19560 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e1a688 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0x9e1a678 <col:7, col:51>
    (CallExpr 0x9e1a650 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0x9e1a560 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9e1a530 0x9e19ed0)
      (DeclRefExpr 0x9e1a598 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e1a220 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0x9e1a5b0 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e1a400 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0x9e1a630 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e1a5e0 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9e1a5c8 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e1a220 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0x9e1a618 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0x9e1c480 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0x9e1c450 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0x9e1c428 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9e1c3f0 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (ParenExpr 0x9e1c3c0 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0x9e1c3a8 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0x9e1c370 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x9e1c348 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9e1c310 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (DeclRefExpr 0x9e1c2d8 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0x9e1c2f8 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0x9e1c390 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0x9e1c3d8 <col:72> 'int' 1)))
  (IntegerLiteral 0x9e1c468 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0x9e1c8d0 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0x9e1f050 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0x9e1e0b0 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0x9e1dff8 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9e1df18 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1dec0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
        (DeclRefExpr 0x9e1de8c <col:6> '_InIterator' lvalue ParmVar 0x9e1dbe0 '__beg' '_InIterator')
        (DeclRefExpr 0x9e1dea4 <col:15> '_InIterator' lvalue ParmVar 0x9e1dc20 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9e1dfd0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1df78 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
        (DeclRefExpr 0x9e1df3c <col:24> 'const _Alloc' lvalue ParmVar 0x9e1dc90 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9e1df60 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9e1e0a0 <line:84:4, col:37>
      (CallExpr 0x9e1e080 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e1e048 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9e1e028 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9e1e010 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dde920 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9e1e188 <line:87:2, col:19>
    0x9e1e150 "_CharT __buf[128]")
  (DeclStmt 0x9e1e1f0 <line:88:2, col:21>
    0x9e1e1a0 "size_type __len =
      (IntegerLiteral 0x9e1e1d8 <col:20> 'int' 0)")
  (WhileStmt 0x9e1e4f8 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0x9e1e3b8 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9e1e288 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1e230 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
        (DeclRefExpr 0x9e1e200 <col:9> '_InIterator' lvalue ParmVar 0x9e1dbe0 '__beg' '_InIterator')
        (DeclRefExpr 0x9e1e218 <col:18> '_InIterator' lvalue ParmVar 0x9e1dc20 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9e1e390 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1e348 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (DeclRefExpr 0x9e1e2ac <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9e1e330 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0x9e1e2f8 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0x9e1e2e0 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0x9e1e2c4 <col:42> '_CharT [128]' lvalue Var 0x9e1e150 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0x9e1e318 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0x9e1e4e0 <line:90:4, line:93:4>
      (BinaryOperator 0x9e1e498 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0x9e1e450 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9e1e3d0 <col:6> '_CharT [128]' lvalue Var 0x9e1e150 '__buf' '_CharT [128]')
          (UnaryOperator 0x9e1e438 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9e1e408 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9e1e480 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e1e464 <col:24> '_InIterator' lvalue ParmVar 0x9e1dbe0 '__beg' '_InIterator')))
      (UnaryOperator 0x9e1e4c8 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e1e4b0 <col:8> '_InIterator' lvalue ParmVar 0x9e1dbe0 '__beg' '_InIterator'))))
  (DeclStmt 0x9e1e638 <line:94:2, col:55>
    0x9e1e520 "std::basic_string::_Rep *__r =
      (CallExpr 0x9e1e610 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9e1e578 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e1e59c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9e1e5d8 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e1e5c0 <col:47> 'int' 0))
        (DeclRefExpr 0x9e1e5f4 <col:51> 'const _Alloc' lvalue ParmVar 0x9e1dc90 '__a' 'const _Alloc &'))")
  (CallExpr 0x9e1e700 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0x9e1e648 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0x9e1e6b0 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e1e678 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9e1e660 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0x9e1e6cc <col:29> '_CharT [128]' lvalue Var 0x9e1e150 '__buf' '_CharT [128]')
    (DeclRefExpr 0x9e1e6e4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9e1ee48 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e1e728 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e1ee30 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0x9e1ee18 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e1e7c0 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9e1e768 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
          (DeclRefExpr 0x9e1e738 <col:13> '_InIterator' lvalue ParmVar 0x9e1dbe0 '__beg' '_InIterator')
          (DeclRefExpr 0x9e1e750 <col:22> '_InIterator' lvalue ParmVar 0x9e1dc20 '__end' '_InIterator'))
        (CompoundStmt 0x9e1edf8 <line:99:8, line:110:8>
          (IfStmt 0x9e1ec90 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e1e8a8 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9e1e850 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
              (DeclRefExpr 0x9e1e7e4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0x9e1e818 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0x9e1e7fc <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0x9e1ec70 <line:101:5, line:107:5>
              (DeclStmt 0x9e1ea58 <line:103:7, col:63>
                0x9e1e8e0 "std::basic_string::_Rep *__another =
                  (CallExpr 0x9e1ea30 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9e1e938 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0x9e1e9d8 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0x9e1e990 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
                      (DeclRefExpr 0x9e1e95c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0x9e1e978 <col:49> 'int' 1))
                    (DeclRefExpr 0x9e1e9fc <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0x9e1ea14 <col:59> 'const _Alloc' lvalue ParmVar 0x9e1dc90 '__a' 'const _Alloc &'))")
              (CallExpr 0x9e1eb78 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0x9e1ea68 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0x9e1ead0 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e1ea98 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e1ea80 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e8e0 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0x9e1eb40 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e1eb08 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e1eaec <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0x9e1eb5c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0x9e1ec08 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e1ebb8 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e1eba0 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0x9e1ebec <col:23> 'const _Alloc' lvalue ParmVar 0x9e1dc90 '__a' 'const _Alloc &'))
              (BinaryOperator 0x9e1ec58 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9e1ec28 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0x9e1ec40 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e8e0 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0x9e1edb0 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0x9e1ed68 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0x9e1ed00 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e1ecc8 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e1ecac <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0x9e1ed50 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0x9e1ed1c <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0x9e1ed98 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9e1ed7c <col:33> '_InIterator' lvalue ParmVar 0x9e1dbe0 '__beg' '_InIterator')))
          (UnaryOperator 0x9e1ede0 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9e1edc8 <col:5> '_InIterator' lvalue ParmVar 0x9e1dbe0 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0x9e1ef28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e1ee68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e1ef10 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0x9e1eee0 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e1ee90 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9e1ee78 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9e1eec4 <col:22> 'const _Alloc' lvalue ParmVar 0x9e1dc90 '__a' 'const _Alloc &'))
      (NullStmt 0x9e1ef00 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0x9e1efb0 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e1ef60 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9e1ef44 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9e1ef94 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e1e1a0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9e1f040 <line:118:2, col:25>
    (CallExpr 0x9e1f020 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e1efe8 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9e1efd0 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1e520 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0x9e20188 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0x9e1f920 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0x9e1f868 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9e1f788 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1f730 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
        (DeclRefExpr 0x9e1f6fc <col:6> '_InIterator' lvalue ParmVar 0x9e1f450 '__beg' '_InIterator')
        (DeclRefExpr 0x9e1f714 <col:15> '_InIterator' lvalue ParmVar 0x9e1f490 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9e1f840 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1f7e8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
        (DeclRefExpr 0x9e1f7ac <col:24> 'const _Alloc' lvalue ParmVar 0x9e1f500 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9e1f7d0 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9e1f910 <line:130:4, col:37>
      (CallExpr 0x9e1f8f0 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e1f8b8 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9e1f898 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9e1f880 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dde920 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0x9e1fbc8 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0x9e1fa80 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0x9e1f9b0 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1f960 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c85f60 0x9c86160)
        (DeclRefExpr 0x9e1f998 <col:35> '_InIterator' lvalue ParmVar 0x9e1f450 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0x9e1fa58 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1fa00 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
        (DeclRefExpr 0x9e1f9d0 <col:45> '_InIterator' lvalue ParmVar 0x9e1f450 '__beg' '_InIterator')
        (DeclRefExpr 0x9e1f9e8 <col:54> '_InIterator' lvalue ParmVar 0x9e1f490 '__end' '_InIterator')))
    (CallExpr 0x9e1fb98 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0x9e1fb88 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e1fb6c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63420 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9e1fbb8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e1fb58 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0x9e1fb10 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0x9e1fcf8 <line:136:2, line:137:22>
    0x9e1fbf0 "const size_type __dnew =
      (CXXStaticCastExpr 0x9e1fce0 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0x9e1fcb0 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9e1fc48 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
          (DeclRefExpr 0x9e1fc7c <col:64> '_InIterator' lvalue ParmVar 0x9e1f450 '__beg' '_InIterator')
          (DeclRefExpr 0x9e1fc94 <line:137:15> '_InIterator' lvalue ParmVar 0x9e1f490 '__end' '_InIterator')))")
  (DeclStmt 0x9e1fe38 <line:139:2, col:56>
    0x9e1fd20 "std::basic_string::_Rep *__r =
      (CallExpr 0x9e1fe10 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9e1fd78 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e1fd9c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1fbf0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9e1fdd8 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e1fdc0 <col:48> 'int' 0))
        (DeclRefExpr 0x9e1fdf4 <col:52> 'const _Alloc' lvalue ParmVar 0x9e1f500 '__a' 'const _Alloc &'))")
  (IfStmt 0x9e1ff80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e1fe48 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9e1ff68 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0x9e1ff40 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9e1fe58 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0x9dd98b0 0x9dd9a40 0x9dd9c00 0x9dd9de0 0x9dd9fc0)
        (CallExpr 0x9e1fef0 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e1feb8 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9e1fe9c <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1fd20 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0x9e1ff0c <col:39> '_InIterator' lvalue ParmVar 0x9e1f450 '__beg' '_InIterator')
        (DeclRefExpr 0x9e1ff24 <col:46> '_InIterator' lvalue ParmVar 0x9e1f490 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0x9e20060 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9e1ffa0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9e20048 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0x9e20018 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e1ffc8 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9e1ffb0 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1fd20 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9e1fffc <col:22> 'const _Alloc' lvalue ParmVar 0x9e1f500 '__a' 'const _Alloc &'))
      (NullStmt 0x9e20038 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0x9e200e8 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e20098 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9e2007c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1fd20 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9e200cc <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1fbf0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9e20178 <line:148:2, col:25>
    (CallExpr 0x9e20158 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e20120 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9e20108 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9e1fd20 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9e20cd8 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0x9e20960 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0x9e208a8 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9e207c8 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9e20770 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
        (DeclRefExpr 0x9e2073c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e20530 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9e20758 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0x9e20880 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9e20828 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
        (DeclRefExpr 0x9e207ec <col:23> 'const _Alloc' lvalue ParmVar 0x9e205e0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9e20810 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0x9e20950 <line:158:2, col:35>
      (CallExpr 0x9e20930 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e208f8 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0x9e208d8 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0x9e208c0 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dde920 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9e20aa8 <line:161:7, col:58>
    0x9e20990 "std::basic_string::_Rep *__r =
      (CallExpr 0x9e20a80 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9e209e8 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e20a0c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e20530 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9e20a48 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e20a30 <col:50> 'int' 0))
        (DeclRefExpr 0x9e20a64 <col:54> 'const _Alloc' lvalue ParmVar 0x9e205e0 '__a' 'const _Alloc &'))")
  (IfStmt 0x9e20bb0 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0x9e20ab8 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e20530 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e20b88 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9e20ad0 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9dd9630 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0x9e20b38 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e20b00 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9e20ae8 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9e20990 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0x9e20b54 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e20530 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e20b6c <col:36> '_CharT' lvalue ParmVar 0x9e20570 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0x9e20c38 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e20be8 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9e20bcc <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9e20990 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9e20c1c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e20530 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9e20cc8 <line:166:7, col:30>
    (CallExpr 0x9e20ca8 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e20c70 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e20c58 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9e20990 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0x9e21488 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e21348 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0x9e21328 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e212f0 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9e212d4 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e211e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0x9e213f8 <col:43, col:71> '_Alloc'
    (CallExpr 0x9e213d8 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e213a0 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0x9e21388 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e211e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0x9e21468 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e21430 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0x9e21414 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e211e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0x9e21500 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e214c8 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0x9e214ac <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e211e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0x9e21560 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0x9e21c30 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0x9e21b98 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9def190 0x9e1de20 0x9e1f690 0x9e206a0)
  (CXXUnresolvedConstructExpr 0x9e21be0 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0x9e21c00 <col:45, col:52> '_CharT')
  (DeclRefExpr 0x9e21c18 <col:55> 'const _Alloc' lvalue ParmVar 0x9e21a70 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9e21c58 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0x9e21a70 '__a' 'const _Alloc &')
) (CompoundStmt 0x9e21cb0 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9df7518 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0x9e227a0 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0x9e22330 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0x9def190 0x9e1de20 0x9e1f690 0x9e206a0)
  (CXXOperatorCallExpr 0x9e22548 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9e22500 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
    (CallExpr 0x9e223c0 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e22388 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9e22370 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e221a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9e224d8 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e22410 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e223dc <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e221a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9e22444 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e221e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9e224a0 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9e22758 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9e22710 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
    (CXXOperatorCallExpr 0x9e226d0 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9e22688 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
      (CallExpr 0x9e225c0 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e22588 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9e2256c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e221a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9e22660 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e225f8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e225dc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e221a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e2262c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e221e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e22644 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e22220 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9e226f4 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e221e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0x9e22788 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0x9e227d0 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0x9e22830 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0x9e23360 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0x9e22f50 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0x9def190 0x9e1de20 0x9e1f690 0x9e206a0)
  (CXXOperatorCallExpr 0x9e23110 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9e230c8 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
    (CallExpr 0x9e22fe0 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e22fa8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9e22f90 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e22d20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9e230a0 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e23018 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e22ffc <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e22d20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9e2304c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e22d60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9e23064 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9e23320 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9e232d8 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
    (CXXOperatorCallExpr 0x9e23298 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9e23250 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
      (CallExpr 0x9e23188 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e23150 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9e23134 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e22d20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9e23228 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e231c0 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e231a4 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e22d20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e231f4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e22d60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e2320c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e22da0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9e232bc <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e22d60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9e23344 <col:20> 'const _Alloc' lvalue ParmVar 0x9e22e10 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9e23388 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0x9e22e10 '__a' 'const _Alloc &')
) (CompoundStmt 0x9e233e0 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7538 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0x9e23bf0 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0x9e23ae0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9def190 0x9e1de20 0x9e1f690 0x9e206a0)
  (DeclRefExpr 0x9e23b20 <col:32> 'const _CharT *' lvalue ParmVar 0x9e238f0 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0x9e23bb0 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0x9e23b68 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
    (DeclRefExpr 0x9e23b38 <col:37> 'const _CharT *' lvalue ParmVar 0x9e238f0 '__s' 'const _CharT *')
    (DeclRefExpr 0x9e23b50 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e23930 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9e23bd4 <col:48> 'const _Alloc' lvalue ParmVar 0x9e239a0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9e23c18 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0x9e239a0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9e23c70 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7558 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0x9e24578 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0x9e24318 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0x9def190 0x9e1de20 0x9e1f690 0x9e206a0)
  (DeclRefExpr 0x9e24358 <col:32> 'const _CharT *' lvalue ParmVar 0x9e24180 '__s' 'const _CharT *')
  (ConditionalOperator 0x9e24540 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0x9e24370 <line:215:37> 'const _CharT *' lvalue ParmVar 0x9e24180 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0x9e24478 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9e24430 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
      (DeclRefExpr 0x9e24388 <col:43> 'const _CharT *' lvalue ParmVar 0x9e24180 '__s' 'const _CharT *')
      (CallExpr 0x9e24410 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e243c0 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e243f4 <col:69> 'const _CharT *' lvalue ParmVar 0x9e24180 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0x9e24518 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9e244d0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
      (DeclRefExpr 0x9e2449c <col:11> 'const _CharT *' lvalue ParmVar 0x9e24180 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e244b4 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0x9e2455c <col:23> 'const _Alloc' lvalue ParmVar 0x9e241f0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9e245a0 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0x9e241f0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9e24600 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7578 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0x9e24d58 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0x9e24cd0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9def190 0x9e1de20 0x9e1f690 0x9e206a0)
  (DeclRefExpr 0x9e24d10 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e24ae0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0x9e24d28 <col:37> '_CharT' lvalue ParmVar 0x9e24b20 '__c' '_CharT')
  (DeclRefExpr 0x9e24d40 <col:42> 'const _Alloc' lvalue ParmVar 0x9e24b90 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9e24d80 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0x9e24b90 '__a' 'const _Alloc &')
) (CompoundStmt 0x9e24de0 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9df7598 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0x9e255e8 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0x9e25560 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9def190 0x9e1de20 0x9e1f690 0x9e206a0)
  (DeclRefExpr 0x9e255a0 <col:32> '_InputIterator' lvalue ParmVar 0x9e25310 '__beg' '_InputIterator')
  (DeclRefExpr 0x9e255b8 <col:39> '_InputIterator' lvalue ParmVar 0x9e25350 '__end' '_InputIterator')
  (DeclRefExpr 0x9e255d0 <col:46> 'const _Alloc' lvalue ParmVar 0x9e253c0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9e25610 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0x9e253c0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9e25670 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e26330 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0x9e262d8 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e25ec0 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9e25e68 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
      (CallExpr 0x9e25dd8 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9e25db8 <col:11> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e25da8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9e25e48 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e25e10 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0x9e25df4 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e25b20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9e262b8 <line:247:2, line:253:2>
      (DeclStmt 0x9e25f90 <line:249:4, col:52>
        0x9e25ef0 "const allocator_type __a =
          (CallExpr 0x9e25f70 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e25f38 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0x9e25f28 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9e26160 <line:250:4, col:71>
        0x9e25fd0 "_CharT *__tmp =
          (CallExpr 0x9e26138 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e26078 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0x9e26058 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e26020 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e26004 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e25b20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0x9e260ac <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0x9e25ef0 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0x9e26118 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e260e0 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0x9e260c4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e25b20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0x9e26210 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e261c0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e261a0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e26180 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e26170 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e261f4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9e25ef0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9e26298 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9e26240 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9e26280 <col:12> '_CharT *' lvalue Var 0x9e25fd0 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0x9e26320 <line:254:7, col:15>
    (UnaryOperator 0x9e26308 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e262f8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0x9e273c0 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0x9e26b08 <line:262:46>)
  (CallExpr 0x9e26bf8 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0x9e26b28 <col:7> '<bound member function type>' ->_M_check_length 0x9dd8e90
      (CXXThisExpr 0x9e26b18 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9e26b90 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e26b58 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9e26b48 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9e26bac <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e26880 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e26bc4 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0x9e273a0 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0x9e26d30 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0x9e26c68 <col:11, col:26> '<dependent type>'
        (MemberExpr 0x9e26c30 <col:11> '<bound member function type>' ->_M_disjunct 0x9dd9130
          (CXXThisExpr 0x9e26c20 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e26c50 <col:23> 'const _CharT *' lvalue ParmVar 0x9e26840 '__s' 'const _CharT *'))
      (CallExpr 0x9e26d10 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e26cd8 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0x9e26cb8 <col:31, col:38> '<dependent type>'
            (MemberExpr 0x9e26c98 <col:31> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e26c88 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9e26e80 <line:265:2, col:61>
      (CallExpr 0x9e26e50 <col:9, col:61> '<dependent type>'
        (MemberExpr 0x9e26d58 <col:9> '<bound member function type>' ->_M_replace_safe 0x9dee830
          (CXXThisExpr 0x9e26d48 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9e26d98 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e26d80 <col:35> 'int' 0))
        (CallExpr 0x9e26e00 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e26dc8 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9e26db8 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9e26e1c <col:53> 'const _CharT *' lvalue ParmVar 0x9e26840 '__s' 'const _CharT *')
        (DeclRefExpr 0x9e26e34 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e26880 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9e27380 <line:267:2, line:276:2>
      (DeclStmt 0x9e26fc0 <line:269:4, col:43>
        0x9e26ea0 "const size_type __pos =
          (CXXOperatorCallExpr 0x9e26f98 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9e26f60 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9e26ed4 <col:28> 'const _CharT *' lvalue ParmVar 0x9e26840 '__s' 'const _CharT *')
            (CallExpr 0x9e26f40 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0x9e26f00 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0x9e27268 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e27048 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9e27000 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
          (DeclRefExpr 0x9e26fd0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e26ea0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e26fe8 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e26880 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9e27128 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0x9e2706c <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9e270d8 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9e27098 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9e270f4 <col:25> 'const _CharT *' lvalue ParmVar 0x9e26840 '__s' 'const _CharT *')
          (DeclRefExpr 0x9e2710c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e26880 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9e27248 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0x9e27150 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e26ea0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0x9e27220 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0x9e27168 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9470 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0x9e271d0 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0x9e27190 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9e271ec <col:25> 'const _CharT *' lvalue ParmVar 0x9e26840 '__s' 'const _CharT *')
            (DeclRefExpr 0x9e27204 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e26880 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0x9e27328 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e272d8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e272b8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e27298 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e27288 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e2730c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e26880 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0x9e27370 <line:275:4, col:12>
        (UnaryOperator 0x9e27358 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e27348 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0x9e282c0 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0x9e28268 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e27b38 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e27870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e28240 <line:285:2, line:292:2>
      (CallExpr 0x9e27c08 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0x9e27b60 <col:4> '<bound member function type>' ->_M_check_length 0x9dd8e90
          (CXXThisExpr 0x9e27b50 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9e27ba0 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e27b88 <col:30> 'int' 0))
        (DeclRefExpr 0x9e27bbc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e27870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9e27bd4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9e27d68 <line:287:4, col:46>
        0x9e27c40 "const size_type __len =
          (CXXOperatorCallExpr 0x9e27d40 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9e27cf8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (DeclRefExpr 0x9e27c74 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e27870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e27cd8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e27ca0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9e27c90 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9e27fa8 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0x9e27f10 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9e27e40 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9e27df8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
            (DeclRefExpr 0x9e27d78 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e27c40 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e27dd8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e27da0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9e27d90 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9e27ef0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e27eb8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9e27e98 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9e27e78 <col:36> '<bound member function type>' ->_M_rep 0x9dd89c0
                  (CXXThisExpr 0x9e27e68 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9e27f88 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e27f38 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9e27f28 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9e27f6c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e27c40 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9e28158 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0x9e27fc4 <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9dd9630 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0x9e28100 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9e280b8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (CallExpr 0x9e28030 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9e27ff0 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x9e28098 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e28060 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0x9e28050 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e28124 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e27870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e2813c <col:45> '_CharT' lvalue ParmVar 0x9e278b0 '__c' '_CharT'))
      (CallExpr 0x9e28220 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e281d0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e281b0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e28190 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e28180 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e28204 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e27c40 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e282b0 <line:293:7, col:15>
    (UnaryOperator 0x9e28298 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e28288 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0x9e295a8 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0x9e28a68 <line:301:46>)
  (IfStmt 0x9e29550 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e28a74 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e287e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e29528 <line:303:2, line:319:2>
      (CallExpr 0x9e28b48 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0x9e28aa0 <col:4> '<bound member function type>' ->_M_check_length 0x9dd8e90
          (CXXThisExpr 0x9e28a90 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9e28ae0 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e28ac8 <col:30> 'int' 0))
        (DeclRefExpr 0x9e28afc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e287e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9e28b14 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9e28ca8 <line:305:4, col:46>
        0x9e28b80 "const size_type __len =
          (CXXOperatorCallExpr 0x9e28c80 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9e28c38 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (DeclRefExpr 0x9e28bb4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e287e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e28c18 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e28be0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9e28bd0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9e29290 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0x9e28e50 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9e28d80 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9e28d38 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
            (DeclRefExpr 0x9e28cb8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e28b80 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e28d18 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e28ce0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9e28cd0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9e28e30 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e28df8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9e28dd8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9e28db8 <col:36> '<bound member function type>' ->_M_rep 0x9dd89c0
                  (CXXThisExpr 0x9e28da8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0x9e29278 <line:307:6, line:316:6>
          (IfStmt 0x9e29258 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0x9e28eb0 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0x9e28e78 <col:12> '<bound member function type>' ->_M_disjunct 0x9dd9130
                (CXXThisExpr 0x9e28e68 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9e28e98 <col:24> 'const _CharT *' lvalue ParmVar 0x9e287a0 '__s' 'const _CharT *'))
            (CallExpr 0x9e28f30 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e28ee0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9e28ed0 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9e28f14 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e28b80 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0x9e29238 <line:311:3, line:315:3>
              (DeclStmt 0x9e29080 <line:312:5, col:44>
                0x9e28f60 "const size_type __off =
                  (CXXOperatorCallExpr 0x9e29058 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0x9e29020 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                    (DeclRefExpr 0x9e28f94 <col:29> 'const _CharT *' lvalue ParmVar 0x9e287a0 '__s' 'const _CharT *')
                    (CallExpr 0x9e29000 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0x9e28fc0 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0x9e290f0 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e290a0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e29090 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x9e290d4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e28b80 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0x9e29220 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9e29110 <col:5> 'const _CharT *' lvalue ParmVar 0x9e287a0 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0x9e291f8 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e291b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
                  (CallExpr 0x9e29178 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0x9e29138 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9e29194 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e28f60 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0x9e29440 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0x9e292ac <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9e293e8 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9e293a0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (CallExpr 0x9e29318 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9e292d8 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9e29380 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e29348 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9e29338 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e2940c <col:38> 'const _CharT *' lvalue ParmVar 0x9e287a0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9e29424 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e287e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9e29508 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e294b8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e29498 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e29478 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e29468 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e294ec <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e28b80 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e29598 <line:320:7, col:15>
    (UnaryOperator 0x9e29580 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e29570 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e2a4d0 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0x9e29da8 <line:328:7, col:44>
    0x9e29d00 "const size_type __size =
      (CallExpr 0x9e29d88 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e29d50 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9e29d34 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e29a70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0x9e2a478 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e29db8 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e29d00 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e2a458 <line:330:2, line:336:2>
      (DeclStmt 0x9e29f08 <line:331:4, col:49>
        0x9e29de0 "const size_type __len =
          (CXXOperatorCallExpr 0x9e29ee0 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0x9e29e98 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (DeclRefExpr 0x9e29e14 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e29d00 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e29e78 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e29e40 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0x9e29e30 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9e2a148 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0x9e2a0b0 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9e29fe0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9e29f98 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
            (DeclRefExpr 0x9e29f18 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e29de0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e29f78 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e29f40 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9e29f30 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9e2a090 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e2a058 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9e2a038 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9e2a018 <col:36> '<bound member function type>' ->_M_rep 0x9dd89c0
                  (CXXThisExpr 0x9e2a008 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9e2a128 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e2a0d8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9e2a0c8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9e2a10c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e29de0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9e2a350 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0x9e2a164 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9e2a2a0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9e2a258 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (CallExpr 0x9e2a1d0 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9e2a190 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9e2a238 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e2a200 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9e2a1f0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x9e2a318 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e2a2e0 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0x9e2a2c4 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e29a70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9e2a334 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e29d00 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9e2a438 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e2a3c8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e2a3a8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e2a388 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e2a378 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e2a420 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e29de0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e2a4c0 <line:337:7, col:15>
    (UnaryOperator 0x9e2a4a8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e2a498 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9e2b5c8 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0x9e2ad48 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e2acc8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e2acac <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e2a990 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9e2acfc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2a9d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e2ad14 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0x9e2ae30 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0x9e2ad6c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2aa10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e2ae08 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e2ada0 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e2ad84 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e2a990 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9e2add4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2a9d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e2adec <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2aa10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0x9e2b570 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e2ae48 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2aa10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e2b550 <line:348:2, line:354:2>
      (DeclStmt 0x9e2af98 <line:349:4, col:46>
        0x9e2ae70 "const size_type __len =
          (CXXOperatorCallExpr 0x9e2af70 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2af28 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (DeclRefExpr 0x9e2aea4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2aa10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e2af08 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e2aed0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9e2aec0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9e2b1d8 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0x9e2b140 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9e2b070 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2b028 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
            (DeclRefExpr 0x9e2afa8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2ae70 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e2b008 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e2afd0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9e2afc0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9e2b120 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e2b0e8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9e2b0c8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9e2b0a8 <col:36> '<bound member function type>' ->_M_rep 0x9dd89c0
                  (CXXThisExpr 0x9e2b098 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9e2b1b8 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e2b168 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9e2b158 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9e2b19c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2ae70 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9e2b468 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0x9e2b1f4 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9e2b330 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9e2b2e8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (CallExpr 0x9e2b260 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9e2b220 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9e2b2c8 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e2b290 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9e2b280 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9e2b428 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9e2b3e0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (CallExpr 0x9e2b3a8 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e2b370 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0x9e2b354 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e2a990 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x9e2b3c4 <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2a9d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9e2b44c <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2aa10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9e2b530 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e2b4e0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e2b4c0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e2b4a0 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e2b490 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e2b514 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2ae70 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e2b5b8 <line:355:7, col:15>
    (UnaryOperator 0x9e2b5a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e2b590 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0x9e2cdc0 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0x9e2bdd0 <line:363:47>)
  (CallExpr 0x9e2be58 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0x9e2bdf0 <col:8> '<bound member function type>' ->_M_check 0x9dd8cd0
      (CXXThisExpr 0x9e2bde0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e2be10 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2ba80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e2be28 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0x9e2bf38 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0x9e2be90 <col:8> '<bound member function type>' ->_M_check_length 0x9dd8e90
      (CXXThisExpr 0x9e2be80 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0x9e2bed0 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9e2beb8 <col:34> 'int' 0))
    (DeclRefExpr 0x9e2beec <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e2bf04 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0x9e2cda0 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0x9e2c070 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9e2bfa8 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9e2bf70 <col:12> '<bound member function type>' ->_M_disjunct 0x9dd9130
          (CXXThisExpr 0x9e2bf60 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e2bf90 <col:24> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *'))
      (CallExpr 0x9e2c050 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e2c018 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9e2bff8 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9e2bfd8 <col:32> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e2bfc8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9e2c170 <line:367:10, col:62>
      (CallExpr 0x9e2c140 <col:17, col:62> '<dependent type>'
        (MemberExpr 0x9e2c098 <col:17> '<bound member function type>' ->_M_replace_safe 0x9dee830
          (CXXThisExpr 0x9e2c088 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e2c0b8 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2ba80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9e2c0f0 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e2c0d8 <col:50> 'int' 0))
        (DeclRefExpr 0x9e2c10c <col:54> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9e2c124 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9e2cd78 <line:369:10, line:386:10>
      (DeclStmt 0x9e2c2b0 <line:371:12, col:51>
        0x9e2c190 "const size_type __off =
          (CXXOperatorCallExpr 0x9e2c288 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2c250 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9e2c1c4 <col:36> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
            (CallExpr 0x9e2c230 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0x9e2c1f0 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0x9e2c338 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0x9e2c2d0 <col:12> '<bound member function type>' ->_M_mutate 0x9dde810
          (CXXThisExpr 0x9e2c2c0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e2c2f0 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2ba80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9e2c308 <col:29> 'int' 0)
        (DeclRefExpr 0x9e2c320 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0x9e2c470 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0x9e2c360 <col:12> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0x9e2c448 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9e2c400 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (CallExpr 0x9e2c3c8 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9e2c388 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9e2c3e4 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2c190 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9e2c5f0 <line:374:12, col:43>
        0x9e2c4c0 "_CharT *__p =
          (CXXOperatorCallExpr 0x9e2c5c8 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2c580 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CallExpr 0x9e2c548 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0x9e2c508 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9e2c564 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2ba80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0x9e2cd20 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e2c700 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9e2c6b8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
          (CXXOperatorCallExpr 0x9e2c678 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2c630 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (DeclRefExpr 0x9e2c600 <col:16> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9e2c618 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e2c69c <col:30> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *'))
        (CallExpr 0x9e2c788 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0x9e2c724 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0x9e2c73c <col:22> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *')
          (DeclRefExpr 0x9e2c754 <col:27> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
          (DeclRefExpr 0x9e2c76c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9e2cd00 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9e2c828 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2c7e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
            (DeclRefExpr 0x9e2c7b0 <col:21> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9e2c7c8 <col:28> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *'))
          (CallExpr 0x9e2c938 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0x9e2c84c <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0x9e2c864 <col:22> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *')
            (CXXOperatorCallExpr 0x9e2c8f8 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9e2c8b0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (DeclRefExpr 0x9e2c87c <col:27> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9e2c894 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e2c91c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0x9e2cce0 <line:380:14, line:384:14>
            (DeclStmt 0x9e2ca38 <line:381:9, col:44>
              0x9e2c970 "const size_type __nleft =
                (CXXOperatorCallExpr 0x9e2ca10 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e2c9d8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                  (DeclRefExpr 0x9e2c9a4 <col:35> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *')
                  (DeclRefExpr 0x9e2c9bc <col:41> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *'))")
            (CallExpr 0x9e2caa8 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0x9e2ca48 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0x9e2ca60 <col:24> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *')
              (DeclRefExpr 0x9e2ca78 <col:29> 'const _CharT *' lvalue ParmVar 0x9e2baf0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9e2ca90 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2c970 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0x9e2ccb8 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0x9e2cad0 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0x9e2cb60 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0x9e2cb18 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
                (DeclRefExpr 0x9e2cae8 <col:24> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *')
                (DeclRefExpr 0x9e2cb00 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2c970 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9e2cc00 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9e2cbb8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
                (DeclRefExpr 0x9e2cb84 <col:39> '_CharT *' lvalue Var 0x9e2c4c0 '__p' '_CharT *')
                (DeclRefExpr 0x9e2cb9c <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9e2cc90 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x9e2cc58 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                (DeclRefExpr 0x9e2cc24 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2bb30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9e2cc3c <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2c970 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0x9e2cd68 <line:385:12, col:20>
        (UnaryOperator 0x9e2cd50 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e2cd40 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9e2dac8 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0x9e2d598 <line:395:28>)
  (DeclStmt 0x9e2d678 <line:400:8, col:49>
    0x9e2d5b0 "const size_type __size =
      (CXXOperatorCallExpr 0x9e2d650 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9e2d618 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e2d5e4 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9e2d310 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e2d5fc <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9e2d2d0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0x9e2daa8 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0x9e2d688 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2d5b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e2da60 <line:402:3, line:407:3>
      (DeclStmt 0x9e2d7b0 <line:403:5, col:50>
        0x9e2d6b0 "const size_type __pos =
          (CXXOperatorCallExpr 0x9e2d788 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2d750 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9e2d6e4 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9e2d2d0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0x9e2d730 <col:39, col:49> '<dependent type>'
              (MemberExpr 0x9e2d710 <col:39> '<bound member function type>' ->_M_ibegin 0x9dd8a70
                (CXXThisExpr 0x9e2d700 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0x9e2d860 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0x9e2d7d0 <col:5> '<bound member function type>' ->_M_mutate 0x9dde810
          (CXXThisExpr 0x9e2d7c0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e2d7f0 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2d6b0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e2d808 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2d5b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9e2d840 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9e2d828 <col:40> 'int' 0)))
      (CallExpr 0x9e2d910 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e2d8d8 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0x9e2d8b8 <col:5, col:12> '<dependent type>'
            (MemberExpr 0x9e2d898 <col:5> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e2d888 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0x9e2da50 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0x9e2da30 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0x9e2da08 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2d9c0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CallExpr 0x9e2d988 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0x9e2d948 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9e2d9a4 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2d6b0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0x9e2da98 <line:409:3, col:10>
      (DeclRefExpr 0x9e2da80 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9e2d2d0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9e2f3f8 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0x9e2e310 <line:418:48>)
  (CallExpr 0x9e2e3a0 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0x9e2e330 <col:8> '<bound member function type>' ->_M_check 0x9dd8cd0
      (CXXThisExpr 0x9e2e320 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e2e350 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e2e368 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0x9e2e480 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9e2e3c4 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e2e458 <col:15, col:35> '<dependent type>'
      (MemberExpr 0x9e2e3f0 <col:15> '<bound member function type>' ->_M_limit 0x9dd8ff0
        (CXXThisExpr 0x9e2e3e0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e2e428 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e2e440 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0x9e2e530 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0x9e2e4a8 <col:8> '<bound member function type>' ->_M_check_length 0x9dd8e90
      (CXXThisExpr 0x9e2e498 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e2e4c8 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e2e4e0 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e2e4f8 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0x9e2e598 <line:422:8, col:19>
    0x9e2e560 "bool __left")
  (IfStmt 0x9e2f3d8 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0x9e2e6b8 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9e2e5f0 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9e2e5b8 <col:12> '<bound member function type>' ->_M_disjunct 0x9dd9130
          (CXXThisExpr 0x9e2e5a8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e2e5d8 <col:24> 'const _CharT *' lvalue ParmVar 0x9e2e030 '__s' 'const _CharT *'))
      (CallExpr 0x9e2e698 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e2e660 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9e2e640 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9e2e620 <col:32> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e2e610 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9e2e790 <line:424:10, col:55>
      (CallExpr 0x9e2e760 <col:17, col:55> '<dependent type>'
        (MemberExpr 0x9e2e6e0 <col:17> '<bound member function type>' ->_M_replace_safe 0x9dee830
          (CXXThisExpr 0x9e2e6d0 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e2e700 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e2e718 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e2e730 <col:46> 'const _CharT *' lvalue ParmVar 0x9e2e030 '__s' 'const _CharT *')
        (DeclRefExpr 0x9e2e748 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0x9e2f3b8 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0x9e2ebf8 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0x9e2e9d8 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0x9e2e9c0 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0x9e2e7a0 <col:18> '_Bool' lvalue Var 0x9e2e560 '__left' '_Bool')
            (CXXOperatorCallExpr 0x9e2e998 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9e2e950 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
              (CXXOperatorCallExpr 0x9e2e830 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9e2e7e8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
                (DeclRefExpr 0x9e2e7b8 <col:27> 'const _CharT *' lvalue ParmVar 0x9e2e030 '__s' 'const _CharT *')
                (DeclRefExpr 0x9e2e7d0 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9e2e928 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0x9e2e8e0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
                (CallExpr 0x9e2e8a8 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0x9e2e868 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9e2e8c4 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0x9e2ebd0 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9e2eb88 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
          (CXXOperatorCallExpr 0x9e2eb48 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2eb00 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CXXOperatorCallExpr 0x9e2eac0 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9e2ea78 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (CallExpr 0x9e2ea40 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0x9e2ea00 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9e2ea5c <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e2eae4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e2eb6c <col:34> 'const _CharT *' lvalue ParmVar 0x9e2e030 '__s' 'const _CharT *')))
      (CompoundStmt 0x9e2f1b0 <line:427:3, line:434:3>
        (DeclStmt 0x9e2ed40 <line:429:5, col:38>
          0x9e2ec20 "size_type __off =
            (CXXOperatorCallExpr 0x9e2ed18 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0x9e2ece0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (DeclRefExpr 0x9e2ec54 <col:23> 'const _CharT *' lvalue ParmVar 0x9e2e030 '__s' 'const _CharT *')
              (CallExpr 0x9e2ecc0 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x9e2ec80 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0x9e2ee70 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0x9e2ee60 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9e2ed50 <col:5> '_Bool' lvalue Var 0x9e2e560 '__left' '_Bool'))
          (DeclRefExpr 0x9e2ed68 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e2ec20 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0x9e2ee48 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0x9e2ee28 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9e2ed80 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e2ec20 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0x9e2ee00 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x9e2edc8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                (DeclRefExpr 0x9e2ed98 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9e2edb0 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0x9e2ef08 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0x9e2eea0 <col:5> '<bound member function type>' ->_M_mutate 0x9dde810
            (CXXThisExpr 0x9e2ee90 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9e2eec0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e2eed8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e2eef0 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9e2f150 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0x9e2ef30 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9e2f018 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2efd0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CallExpr 0x9e2ef98 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0x9e2ef58 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9e2efb4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9e2f110 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9e2f0c8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CallExpr 0x9e2f090 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0x9e2f050 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9e2f0ac <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e2ec20 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e2f134 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0x9e2f1a0 <line:433:5, col:13>
          (UnaryOperator 0x9e2f188 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9e2f178 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0x9e2f3a0 <line:436:3, line:440:3>
        (DeclStmt 0x9e2f268 <line:438:5, col:40>
          0x9e2f1e0 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0x9e2f248 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0x9e2f214 <col:30> 'const _CharT *' lvalue ParmVar 0x9e2e030 '__s' 'const _CharT *')
              (DeclRefExpr 0x9e2f22c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0x9e2f390 <line:439:5, col:62>
          (CallExpr 0x9e2f360 <col:12, col:62> '<dependent type>'
            (MemberExpr 0x9e2f288 <col:12> '<bound member function type>' ->_M_replace_safe 0x9dee830
              (CXXThisExpr 0x9e2f278 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0x9e2f2a8 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2df80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9e2f2c0 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2dfc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e2f328 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e2f2f0 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0x9e2f2d8 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e2f1e0 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0x9e2f344 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e2e070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0x9e2fc20 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0x9e2fb08 <line:448:7, line:449:65>
    0x9e2f920 "const size_type __size =
      (CXXOperatorCallExpr 0x9e2fae0 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9e2fa98 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
        (UnaryExprOrTypeTraitExpr 0x9e2f960 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0x9e2fa80 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0x9e2fa48 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0x9e2fa20 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x9e2f9d8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (CXXDependentScopeMemberExpr 0x9e2f988 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9e2f978 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0x9e2f9c0 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9e2fa68 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0x9e2fbf8 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e2fb70 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x9e2fb50 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0x9e2fb38 <col:24> 'const _Alloc' lvalue ParmVar 0x9e2f800 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0x9e2fbc8 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0x9e2fba8 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0x9e2fbe0 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e2f920 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0x9e303b0 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0x9e30180 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e30148 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e300f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
      (CallExpr 0x9e30080 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9e30060 <col:11> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e30050 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0x9e300d8 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0x9e300b8 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0x9e3009c <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9dde920 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0x9e30170 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0x9e302e8 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0x9e30228 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e301f0 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9e301d0 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9e301b0 <col:11> '<bound member function type>' ->_M_rep 0x9dd89c0
            (CXXThisExpr 0x9e301a0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9e302c0 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0x9e30258 <col:2> '<bound member function type>' ->_M_mutate 0x9dde810
        (CXXThisExpr 0x9e30248 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0x9e30278 <col:12> 'int' 0)
      (IntegerLiteral 0x9e30290 <col:15> 'int' 0)
      (IntegerLiteral 0x9e302a8 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0x9e30390 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e30358 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9e30338 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9e30318 <col:7> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e30308 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0x9e31c38 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0x9e30970 <line:472:7, col:48>
    0x9e308d0 "const size_type __old_size =
      (CallExpr 0x9e30950 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e30918 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9e30908 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9e30ae0 <line:473:7, col:64>
    0x9e30990 "const size_type __new_size =
      (CXXOperatorCallExpr 0x9e30ab8 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9e30a80 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CXXOperatorCallExpr 0x9e30a40 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9e309f8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9e309c4 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e308d0 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e309dc <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e307c0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9e30a64 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30780 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e30c40 <line:474:7, col:63>
    0x9e30b00 "const size_type __how_much =
      (CXXOperatorCallExpr 0x9e30c18 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9e30be0 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CXXOperatorCallExpr 0x9e30ba0 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9e30b68 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (DeclRefExpr 0x9e30b34 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e308d0 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e30b4c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9e30bc4 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30780 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e31b58 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0x9e30de8 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9e30d18 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9e30cd0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
        (DeclRefExpr 0x9e30c50 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e30990 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9e30cb0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e30c78 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0x9e30c68 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9e30dc8 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e30d90 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0x9e30d70 <col:44, col:51> '<dependent type>'
            (MemberExpr 0x9e30d50 <col:44> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e30d40 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9e316c0 <line:477:2, line:490:2>
      (DeclStmt 0x9e30e98 <line:479:4, col:46>
        0x9e30e10 "const allocator_type __a =
          (CallExpr 0x9e30e78 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9e30e58 <col:31> '<bound member function type>' ->get_allocator 0x9df1370
              (CXXThisExpr 0x9e30e48 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9e31010 <line:480:4, col:66>
        0x9e30ec0 "std::basic_string::_Rep *__r =
          (CallExpr 0x9e30fe8 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e30f18 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e30f4c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e30990 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9e30fb0 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e30f78 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0x9e30f68 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9e30fcc <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0x9e30e10 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0x9e31170 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0x9e31020 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9e31148 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0x9e31038 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9e310a0 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e31068 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9e31050 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9e30ec0 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0x9e31110 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0x9e310d0 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9e3112c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0x9e31500 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0x9e3118c <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e30b00 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9e314d8 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0x9e311a4 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9e31318 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9e312d0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CXXOperatorCallExpr 0x9e31290 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9e31248 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (CallExpr 0x9e31210 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e311d8 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e311bc <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9e30ec0 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0x9e3122c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e312b4 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e307c0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9e31498 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0x9e31450 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CXXOperatorCallExpr 0x9e31410 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9e313c8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (CallExpr 0x9e31390 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0x9e31350 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9e313ac <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e31434 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30780 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e314bc <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e30b00 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9e315c0 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e31570 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e31550 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e31530 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e31520 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e315a4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9e30e10 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9e316a0 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x9e315f0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9e31680 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e31648 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9e31630 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9e30ec0 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0x9e31b38 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0x9e317b0 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0x9e316e8 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e30b00 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9e31788 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9e31730 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
          (DeclRefExpr 0x9e31700 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30780 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e31718 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e307c0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0x9e31b20 <line:492:2, line:496:2>
        (CallExpr 0x9e31af8 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0x9e317c8 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9470 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9e31938 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9e318f0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CXXOperatorCallExpr 0x9e318b0 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9e31868 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (CallExpr 0x9e31830 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0x9e317f0 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9e3184c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e318d4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e307c0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9e31ab8 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9e31a70 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
            (CXXOperatorCallExpr 0x9e31a30 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0x9e319e8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (CallExpr 0x9e319b0 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0x9e31970 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9e319cc <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30740 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e31a54 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e30780 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e31adc <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e30b00 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0x9e31c18 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e31bc8 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9e31ba8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9e31b88 <col:7> '<bound member function type>' ->_M_rep 0x9dd89c0
          (CXXThisExpr 0x9e31b78 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9e31bfc <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e30990 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0x9df75b0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0x9e32890 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0x9e32870 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0x9e32260 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9e32190 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9e32138 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
        (DeclRefExpr 0x9e320b4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e31fd0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9e32118 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e320e0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9e320d0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9e32240 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e32208 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0x9e321e8 <col:40, col:47> '<dependent type>'
            (MemberExpr 0x9e321c8 <col:40> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e321b8 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9e32848 <line:506:9, line:514:9>
      (IfStmt 0x9e32400 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e32340 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0x9e322f8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
          (DeclRefExpr 0x9e32278 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e31fd0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9e322d8 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e322a0 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0x9e32290 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9e323e8 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0x9e32364 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e31fd0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9e323c8 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e32390 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9e32380 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0x9e324c8 <line:510:4, col:46>
        0x9e32440 "const allocator_type __a =
          (CallExpr 0x9e324a8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9e32488 <col:31> '<bound member function type>' ->get_allocator 0x9df1370
              (CXXThisExpr 0x9e32478 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9e326f0 <line:511:4, col:65>
        0x9e32510 "_CharT *__tmp =
          (CallExpr 0x9e326c8 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e32598 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0x9e32578 <col:20, col:27> '<dependent type>'
                (MemberExpr 0x9e32558 <col:20> '<bound member function type>' ->_M_rep 0x9dd89c0
                  (CXXThisExpr 0x9e32548 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0x9e325cc <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0x9e32440 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0x9e326a0 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0x9e32668 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (DeclRefExpr 0x9e325e4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e31fd0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0x9e32648 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e32610 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0x9e32600 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0x9e327a0 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e32750 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9e32730 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9e32710 <col:4> '<bound member function type>' ->_M_rep 0x9dd89c0
              (CXXThisExpr 0x9e32700 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9e32784 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9e32440 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9e32828 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9e327d0 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9e32810 <col:12> '_CharT *' lvalue Var 0x9e32510 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0x9e33838 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0x9e32e68 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0x9e32da0 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e32d68 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9e32d48 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9e32d28 <col:11> '<bound member function type>' ->_M_rep 0x9dd89c0
            (CXXThisExpr 0x9e32d18 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9e32e48 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e32e10 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0x9e32df0 <col:2, col:9> '<dependent type>'
          (MemberExpr 0x9e32dd0 <col:2> '<bound member function type>' ->_M_rep 0x9dd89c0
            (CXXThisExpr 0x9e32dc0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x9e33018 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0x9e32f30 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e32ef8 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0x9e32ed8 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e32ea0 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9e32e84 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0x9e32ff8 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e32fc0 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0x9e32fa0 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e32f68 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0x9e32f4c <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0x9e33818 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e33168 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9e33110 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
      (CallExpr 0x9e33080 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e33048 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9e33038 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9e330f0 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e330b8 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9e3309c <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9e333e0 <line:527:2, line:531:2>
      (DeclStmt 0x9e33268 <line:528:4, col:29>
        0x9e331c0 "_CharT *__tmp =
          (CallExpr 0x9e33248 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0x9e33208 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0x9e33338 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x9e33288 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9e33318 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e332e0 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9e332c8 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0x9e333c0 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e33370 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0x9e33358 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9e333a4 <col:16> '_CharT *' lvalue Var 0x9e331c0 '__tmp' '_CharT *')))
    (CompoundStmt 0x9e337f8 <line:534:2, line:541:2>
      (DeclStmt 0x9e33580 <line:535:4, line:536:29>
        0x9e33410 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0x9e33558 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9e33478 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0x9e33458 <col:30> '<bound member function type>' ->_M_ibegin 0x9dd8a70
                (CXXThisExpr 0x9e33448 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9e334c8 <col:43, col:51> '<dependent type>'
              (MemberExpr 0x9e334a8 <col:43> '<bound member function type>' ->_M_iend 0x9dd8af0
                (CXXThisExpr 0x9e33498 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9e33538 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e33500 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0x9e334e4 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0x9e33748 <line:537:4, line:538:31>
        0x9e335a0 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0x9e33720 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9e33628 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e335f0 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0x9e335d4 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9e33698 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e33660 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9e33644 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9e33700 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e336c8 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0x9e336b8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0x9e33798 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0x9e33768 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9e33758 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e3377c <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e335a0 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0x9e337e0 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x9e337b0 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e32c30 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0x9e337c8 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e33410 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0x9e35170 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0x9e34268 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e34168 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9e34120 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
      (DeclRefExpr 0x9e340ec <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e34104 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1c270 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9e34238 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0x9e34228 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e3420c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63690 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9e34258 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e341f8 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0x9e341c4 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0x9e342e0 <line:578:7, col:40>
    0x9e34290 "const size_type __pagesize =
      (IntegerLiteral 0x9e342c8 <col:36> 'int' 4096)")
  (DeclStmt 0x9e343a0 <line:579:7, col:63>
    0x9e34300 "const size_type __malloc_header_size =
      (BinaryOperator 0x9e34388 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0x9e34378 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9e34338 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0x9e34360 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0x9e345b0 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0x9e34520 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9e34428 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9e343e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
        (DeclRefExpr 0x9e343b0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e343c8 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33dc0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9e344f8 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9e344b0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (DeclRefExpr 0x9e3444c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9e34498 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0x9e34468 <col:55> 'int' 2)
          (DeclRefExpr 0x9e34480 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33dc0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0x9e34598 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0x9e34538 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0x9e34580 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0x9e34550 <col:15> 'int' 2)
        (DeclRefExpr 0x9e34568 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33dc0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0x9e34798 <line:593:7, col:74>
    0x9e345e0 "size_type __size =
      (CXXOperatorCallExpr 0x9e34770 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0x9e34728 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
        (BinaryOperator 0x9e346f0 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0x9e346b8 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0x9e34690 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9e34648 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
              (DeclRefExpr 0x9e34614 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0x9e34630 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9e346d8 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0x9e34710 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0x9e34888 <line:595:7, col:65>
    0x9e347b0 "const size_type __adj_size =
      (CXXOperatorCallExpr 0x9e34860 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9e34818 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
        (DeclRefExpr 0x9e347e4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e345e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e347fc <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e34300 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e34e68 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0x9e349d8 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9e34910 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9e348c8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
        (DeclRefExpr 0x9e34898 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e347b0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e348b0 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e34290 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9e349b0 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9e34968 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
        (DeclRefExpr 0x9e34934 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e3494c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33dc0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9e34e48 <line:597:2, line:604:2>
      (DeclStmt 0x9e34af8 <line:598:4, col:66>
        0x9e34a00 "const size_type __extra =
          (CXXOperatorCallExpr 0x9e34ad0 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9e34a98 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9e34a34 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e34290 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0x9e34a80 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0x9e34a4c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e347b0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9e34a64 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e34290 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0x9e34b70 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9e34b08 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9e34b58 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0x9e34b20 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e34a00 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0x9e34b40 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0x9e34c78 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e34c08 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9e34bc0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (DeclRefExpr 0x9e34b90 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e34ba8 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1c270 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9e34c60 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0x9e34c2c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e34c44 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1c270 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0x9e34e30 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0x9e34c94 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e345e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9e34e08 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9e34dc0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
          (BinaryOperator 0x9e34d88 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0x9e34d50 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0x9e34d28 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0x9e34ce0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
                (DeclRefExpr 0x9e34cac <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0x9e34cc8 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0x9e34d70 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0x9e34da8 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0x9e34f88 <line:608:7, col:65>
    0x9e34ea0 "void *__place =
      (CallExpr 0x9e34f68 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e34f18 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0x9e34ef8 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0x9e34ee0 <col:40> 'const _Alloc' lvalue ParmVar 0x9e33e30 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0x9e34f4c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e345e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e35048 <line:609:7, col:37>
    0x9e34fb0 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0x9e35008 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0x9e34fe4 <col:24> 'void *' lvalue Var 0x9e34ea0 '__place' 'void *'))")
  (BinaryOperator 0x9e350c0 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9e35070 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9e35058 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9e34fb0 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9e350a4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e33d80 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0x9e35128 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e350f0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9e350d8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9e34fb0 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0x9e35160 <line:619:7, col:14>
    (DeclRefExpr 0x9e35144 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9e34fb0 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0x9df7500 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0x9e35c50 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0x9e35818 <line:628:7, col:64>
    0x9e35710 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0x9e357f0 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9e357a8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
        (CXXDependentScopeMemberExpr 0x9e35758 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0x9e35748 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9e3578c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e355c0 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e35958 <line:629:7, line:630:15>
    0x9e35840 "std::basic_string::_Rep *__r =
      (CallExpr 0x9e35930 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0x9e35894 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0x9e34050 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0x9e358b4 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e35710 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0x9e358e0 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0x9e358d0 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9e35914 <line:630:7> 'const _Alloc' lvalue ParmVar 0x9e35580 '__alloc' 'const _Alloc &'))")
  (IfStmt 0x9e35af8 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9e35978 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9e35968 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0x9e35ad0 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0x9e359ac <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0x9e35a18 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e359e0 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9e359c4 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9e35840 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0x9e35a68 <col:29, col:40> '<dependent type>'
        (MemberExpr 0x9e35a48 <col:29> '<bound member function type>' ->_M_refdata 0x9dd63c0
          (CXXThisExpr 0x9e35a38 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0x9e35a98 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0x9e35a88 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0x9e35bb0 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e35b30 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9e35b14 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9e35840 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0x9e35b78 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0x9e35b68 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0x9e35c40 <line:635:7, col:30>
    (CallExpr 0x9e35c20 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e35be8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9e35bd0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9e35840 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0x9e375f0 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0x9e361f0 <line:643:7, col:44>
    0x9e36150 "const size_type __size =
      (CallExpr 0x9e361d0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e36198 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e36188 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0x9e36290 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0x9e36210 <col:7> '<bound member function type>' ->_M_check_length 0x9dd8e90
      (CXXThisExpr 0x9e36200 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e36230 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e36150 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e36248 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e35ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e36260 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0x9e375d0 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e36330 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e362e8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (DeclRefExpr 0x9e362b8 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e36150 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e362d0 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e35ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9e37468 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e36368 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9e36358 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e36408 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9e363d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e3639c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e35ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e363b4 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e36150 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9e3744c <col:29> '_CharT' lvalue ParmVar 0x9e36030 '__c' '_CharT'))
    (IfStmt 0x9e375b0 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9e37508 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9e374c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (DeclRefExpr 0x9e3748c <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e35ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e374a4 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e36150 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9e37590 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e37540 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0x9e37530 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9e37574 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e35ff0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0x9e38428 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0x9e37fa8 <line:659:2, col:36>
    0x9e37f20 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0x9e37f88 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9e37f54 <col:25> '_InputIterator' lvalue ParmVar 0x9e37b70 '__k1' '_InputIterator')
        (DeclRefExpr 0x9e37f6c <col:31> '_InputIterator' lvalue ParmVar 0x9e37bb0 '__k2' '_InputIterator'))")
  (DeclStmt 0x9e38088 <line:660:2, col:36>
    0x9e37fc0 "const size_type __n1 =
      (CXXOperatorCallExpr 0x9e38060 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9e38028 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e37ff4 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9e37b30 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9e3800c <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9e37af0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0x9e381d0 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0x9e380a8 <col:2> '<bound member function type>' ->_M_check_length 0x9dd8e90
      (CXXThisExpr 0x9e38098 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e380c8 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e37fc0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e38130 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e380f8 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0x9e380e0 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e37f20 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0x9e38190 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0x9e38418 <line:662:2, line:663:21>
    (CallExpr 0x9e383e8 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0x9e38208 <line:662:9> '<bound member function type>' ->_M_replace_safe 0x9dee830
        (CXXThisExpr 0x9e381f8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9e382c8 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9e38290 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9e38228 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9e37af0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9e38270 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9e38250 <col:32> '<bound member function type>' ->_M_ibegin 0x9dd8a70
            (CXXThisExpr 0x9e38240 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x9e382ec <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e37fc0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e38358 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e38320 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9e38304 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e37f20 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0x9e383c8 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e38390 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9e38374 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e37f20 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9e38fb8 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0x9e38d18 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0x9e38c50 <col:7> '<bound member function type>' ->_M_check_length 0x9dd8e90
      (CXXThisExpr 0x9e38c40 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e38c70 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e38920 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e38c88 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e38960 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e38ce0 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0x9e38db8 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0x9e38d50 <col:7> '<bound member function type>' ->_M_mutate 0x9e30820
      (CXXThisExpr 0x9e38d40 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e38d70 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e388e0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e38d88 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e38920 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e38da0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e38960 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9e38f60 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0x9e38de0 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e38960 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e38f38 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0x9e38df8 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9dd9630 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0x9e38ee0 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9e38e98 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
        (CallExpr 0x9e38e60 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0x9e38e20 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9e38e7c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e388e0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9e38f04 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e38960 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e38f1c <col:38> '_CharT' lvalue ParmVar 0x9e389a0 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0x9e38fa8 <line:676:7, col:15>
    (UnaryOperator 0x9e38f90 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e38f80 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9e39a78 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0x9e39878 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0x9e39810 <col:7> '<bound member function type>' ->_M_mutate 0x9e30820
      (CXXThisExpr 0x9e39800 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e39830 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e39470 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e39848 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e394b0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9e39860 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e39560 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9e39a20 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0x9e398a0 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e39560 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e399f8 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9e398b8 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0x9e399a0 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9e39958 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e0ef40 0x9e0f490 0x9e0fa10 0x9e10210)
        (CallExpr 0x9e39920 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x9e398e0 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9e3993c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e39470 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9e399c4 <col:30> 'const _CharT *' lvalue ParmVar 0x9e39520 '__s' 'const _CharT *')
      (DeclRefExpr 0x9e399dc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e39560 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9e39a68 <line:688:7, col:15>
    (UnaryOperator 0x9e39a50 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e39a40 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e3a688 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0x9e3a010 <line:696:39>)
  (DeclStmt 0x9e3a1b0 <line:697:7, col:66>
    0x9e3a180 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9e3a270 <line:698:7, col:62>
    0x9e3a240 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9e3a360 <line:699:7, col:55>
    0x9e3a2a0 "const __size_type __len =
      (CallExpr 0x9e3a340 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9e3a300 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e3a324 <col:49> 'const _CharT *' lvalue ParmVar 0x9e39cf0 '__lhs' 'const _CharT *'))")
  (DeclStmt 0x9e3a3b8 <line:700:7, col:26>
    0x9e3a380 "__string_type __str")
  (CallExpr 0x9e3a510 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3a3e0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e3a3c8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3a380 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9e3a4e8 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3a4a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0f490 0x9e0fa10)
      (DeclRefExpr 0x9e3a414 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9e3a2a0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0x9e3a480 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3a448 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e3a42c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e39ea0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0x9e3a5b0 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3a548 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e3a530 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3a380 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9e3a57c <col:20> 'const _CharT *' lvalue ParmVar 0x9e39cf0 '__lhs' 'const _CharT *')
    (DeclRefExpr 0x9e3a594 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9e3a2a0 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0x9e3a640 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3a5f0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e3a5d4 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3a380 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9e3a624 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e39ea0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9e3a678 <line:704:7, col:14>
    (DeclRefExpr 0x9e3a660 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3a380 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9e3b238 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0x9e3ada0 <line:711:7, col:66>
    0x9e3ad70 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9e3ae60 <line:712:7, col:62>
    0x9e3ae30 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9e3aeb8 <line:713:7, col:26>
    0x9e3ae80 "__string_type __str")
  (DeclStmt 0x9e3af98 <line:714:7, col:45>
    0x9e3aef0 "const __size_type __len =
      (CallExpr 0x9e3af78 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3af40 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9e3af24 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e3aaa0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0x9e3b098 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3afc0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e3afa8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3ae80 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9e3b070 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3b028 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
      (DeclRefExpr 0x9e3aff4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9e3aef0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0x9e3b010 <col:29> 'int' 1)))
  (CallExpr 0x9e3b160 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3b0d0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e3b0b8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3ae80 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9e3b128 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9e3b110 <col:32> 'int' 1))
    (DeclRefExpr 0x9e3b144 <col:36> '_CharT' lvalue ParmVar 0x9e3a8f0 '__lhs' '_CharT'))
  (CallExpr 0x9e3b1f0 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e3b1a0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e3b184 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3ae80 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9e3b1d4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e3aaa0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9e3b228 <line:718:7, col:14>
    (DeclRefExpr 0x9e3b210 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9e3ae80 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9df75f8 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0x9e3be10 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0x9e3bb58 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0x9e3baf0 <col:7> '<bound member function type>' ->_M_check 0x9dd8cd0
      (CXXThisExpr 0x9e3bae0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e3bb10 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b850 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e3bb28 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0x9e3bc20 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9e3bb7c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b810 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e3bbf8 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9e3bba8 <col:13> '<bound member function type>' ->_M_limit 0x9dd8ff0
        (CXXThisExpr 0x9e3bb98 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e3bbc8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b850 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e3bbe0 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b810 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0x9e3bc38 <line:728:46>)
  (IfStmt 0x9e3bdc8 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0x9e3bc44 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b810 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e3bda0 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0x9e3bc5c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9dd9300 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0x9e3bc74 <col:10> '_CharT *' lvalue ParmVar 0x9e3b7d0 '__s' '_CharT *')
      (CXXOperatorCallExpr 0x9e3bd60 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x9e3bd18 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
        (CallExpr 0x9e3bce0 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0x9e3bca0 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9e3bcfc <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b850 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9e3bd84 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b810 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9e3be00 <line:732:7, col:14>
    (DeclRefExpr 0x9e3bde4 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3b810 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9e3d110 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0x9e3c650 <line:740:46>)
  (DeclStmt 0x9e3c710 <line:741:7, col:44>
    0x9e3c670 "const size_type __size =
      (CallExpr 0x9e3c6f0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3c6b8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3c6a8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9e3c7d8 <line:742:7, col:39>
    0x9e3c730 "const _CharT *__data =
      (CallExpr 0x9e3c7b8 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0x9e3c778 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0x9e3c998 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e3c870 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3c818 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
      (DeclRefExpr 0x9e3c7e8 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c3c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9e3c800 <col:18> 'int' 0))
    (ReturnStmt 0x9e3c988 <line:745:2, col:35>
      (ConditionalOperator 0x9e3c968 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0x9e3c910 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3c8c8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
          (DeclRefExpr 0x9e3c894 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e3c8ac <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3c670 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9e3c934 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e3c94c <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0x9e3d0c8 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e3ca30 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3c9e8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
      (DeclRefExpr 0x9e3c9b4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c3c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e3c9cc <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3c670 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9e3d0b0 <line:748:2, line:754:2>
      (ForStmt 0x9e3d088 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e3cb48 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3cb00 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
          (DeclRefExpr 0x9e3ca54 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9e3cad8 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9e3caa0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9e3ca6c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3c670 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9e3ca84 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c3c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9e3cb88 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9e3cb6c <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9e3d068 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0x9e3d028 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0x9e3cc90 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e3cbc8 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0x9e3cc30 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0x9e3cbfc <col:26> 'const _CharT *' lvalue Var 0x9e3c730 '__data' 'const _CharT *')
                (DeclRefExpr 0x9e3cc14 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0x9e3cc78 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x9e3cc44 <col:41> 'const _CharT *' lvalue ParmVar 0x9e3c340 '__s' 'const _CharT *')
                (IntegerLiteral 0x9e3cc60 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0x9e3d000 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9e3cfa8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
              (CallExpr 0x9e3cf68 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e3ccd8 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9e3ce10 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e3cdc8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
                  (CXXOperatorCallExpr 0x9e3cd88 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0x9e3cd40 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
                    (DeclRefExpr 0x9e3cd0c <col:27> 'const _CharT *' lvalue Var 0x9e3c730 '__data' 'const _CharT *')
                    (DeclRefExpr 0x9e3cd24 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0x9e3cdb0 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0x9e3ceb0 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e3ce68 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
                  (DeclRefExpr 0x9e3ce34 <col:6> 'const _CharT *' lvalue ParmVar 0x9e3c340 '__s' 'const _CharT *')
                  (IntegerLiteral 0x9e3ce50 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0x9e3cf40 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e3cf08 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                  (DeclRefExpr 0x9e3ced4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c3c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0x9e3cef0 <col:21> 'int' 1)))
              (IntegerLiteral 0x9e3cf90 <col:27> 'int' 0)))
          (ReturnStmt 0x9e3d058 <line:753:8, col:15>
            (DeclRefExpr 0x9e3d040 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3c380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9e3d100 <line:755:7, col:14>
    (DeclRefExpr 0x9e3d0e4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9df7640 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0x9e3df78 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0x9e3d930 <line:763:7, col:29>
    0x9e3d8e0 "size_type __ret =
      (DeclRefExpr 0x9e3d914 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0x9e3d9f0 <line:764:7, col:44>
    0x9e3d950 "const size_type __size =
      (CallExpr 0x9e3d9d0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3d998 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3d988 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9e3df30 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e3da78 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3da30 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (DeclRefExpr 0x9e3da00 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3d650 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e3da18 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3d950 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9e3df10 <line:766:2, line:772:2>
      (DeclStmt 0x9e3db78 <line:767:4, col:36>
        0x9e3dad0 "const _CharT *__data =
          (CallExpr 0x9e3db58 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x9e3db18 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0x9e3dc58 <line:768:4, col:40>
        0x9e3db90 "const size_type __n =
          (CXXOperatorCallExpr 0x9e3dc30 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0x9e3dbf8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9e3dbc4 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3d950 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9e3dbdc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3d650 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0x9e3de08 <line:769:4, col:67>
        0x9e3dc80 "const _CharT *__p =
          (CallExpr 0x9e3dde0 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e3dcd8 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0x9e3dd88 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9e3dd40 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
              (DeclRefExpr 0x9e3dd0c <col:42> 'const _CharT *' lvalue Var 0x9e3dad0 '__data' 'const _CharT *')
              (DeclRefExpr 0x9e3dd24 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3d650 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e3ddac <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3db90 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9e3ddc4 <col:63> '_CharT' lvalue ParmVar 0x9e3d610 '__c' '_CharT'))")
      (IfStmt 0x9e3def0 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0x9e3de18 <line:770:8> 'const _CharT *' lvalue Var 0x9e3dc80 '__p' 'const _CharT *')
        (BinaryOperator 0x9e3ded8 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0x9e3de30 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3d8e0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9e3deb0 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9e3de78 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9e3de48 <col:14> 'const _CharT *' lvalue Var 0x9e3dc80 '__p' 'const _CharT *')
            (DeclRefExpr 0x9e3de60 <col:20> 'const _CharT *' lvalue Var 0x9e3dad0 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9e3df68 <line:773:7, col:14>
    (DeclRefExpr 0x9e3df4c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3d8e0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9e3ef08 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0x9e3e7b0 <line:781:46>)
  (DeclStmt 0x9e3e870 <line:782:7, col:44>
    0x9e3e7d0 "const size_type __size =
      (CallExpr 0x9e3e850 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3e818 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3e808 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9e3eec0 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e3e8f8 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9e3e8b0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
      (DeclRefExpr 0x9e3e880 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e520 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e3e898 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3e7d0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9e3eea0 <line:784:2, line:793:2>
      (BinaryOperator 0x9e3ea80 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x9e3e91c <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e4e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9e3ea58 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3e950 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
          (CXXUnresolvedConstructExpr 0x9e3ea20 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0x9e3e9f8 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9e3e9c0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (DeclRefExpr 0x9e3e990 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e3e7d0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9e3e9a8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e520 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0x9e3ea3c <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e4e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9e3eb58 <line:786:4, col:36>
        0x9e3eab0 "const _CharT *__data =
          (CallExpr 0x9e3eb38 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x9e3eaf8 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0x9e3ee88 <line:787:4, line:792:22>
        (CompoundStmt 0x9e3eda0 <line:788:6, line:791:6>
          (IfStmt 0x9e3ed80 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9e3ed30 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0x9e3ecd8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
              (CallExpr 0x9e3ec98 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e3eb90 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9e3ec40 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e3ebf8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
                  (DeclRefExpr 0x9e3ebc4 <col:33> 'const _CharT *' lvalue Var 0x9e3eab0 '__data' 'const _CharT *')
                  (DeclRefExpr 0x9e3ebdc <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e4e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9e3ec64 <col:49> 'const _CharT *' lvalue ParmVar 0x9e3e4a0 '__s' 'const _CharT *')
                (DeclRefExpr 0x9e3ec7c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e520 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0x9e3ecc0 <col:62> 'int' 0))
            (ReturnStmt 0x9e3ed70 <line:790:3, col:10>
              (DeclRefExpr 0x9e3ed54 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e4e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9e3ee60 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3ee18 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (UnaryOperator 0x9e3ede8 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9e3edb4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3e4e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9e3ee00 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9e3eef8 <line:794:7, col:14>
    (DeclRefExpr 0x9e3eedc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9df7688 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e3fbd8 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0x9e3f780 <line:802:7, col:38>
    0x9e3f6e0 "size_type __size =
      (CallExpr 0x9e3f760 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e3f728 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9e3f718 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9e3fb90 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e3f790 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3f6e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e3fb78 <line:804:2, line:810:2>
      (IfStmt 0x9e3f8a8 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e3f838 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3f7f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (UnaryOperator 0x9e3f7c0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9e3f7a8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3f6e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e3f7d4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3f450 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9e3f890 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9e3f85c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3f6e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e3f874 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e3f450 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0x9e3fb50 <line:807:4, line:809:15>
        (UnaryOperator 0x9e3f8e0 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9e3f8c4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3f6e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e3f9a0 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9e3f958 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (UnaryOperator 0x9e3f928 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9e3f8f4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3f6e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9e3f940 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0x9e3fb30 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0x9e3fae0 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e3f9f0 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0x9e3fab0 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0x9e3fa78 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0x9e3fa38 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9e3fa94 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3f6e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9e3fac4 <col:45> '_CharT' lvalue ParmVar 0x9e3f400 '__c' '_CharT'))
          (ReturnStmt 0x9e3fb20 <line:809:8, col:15>
            (DeclRefExpr 0x9e3fb04 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e3f6e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9e3fbc8 <line:811:7, col:14>
    (DeclRefExpr 0x9e3fbac <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9e407e0 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0x9e40410 <line:819:46>)
  (ForStmt 0x9e40790 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9e40528 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0x9e4041c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40180 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9e40500 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9e404b8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (DeclRefExpr 0x9e40434 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40140 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9e40498 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e40460 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9e40450 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0x9e40558 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9e40540 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40140 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9e40778 <line:821:2, line:825:2>
      (DeclStmt 0x9e40708 <line:822:4, col:69>
        0x9e40580 "const _CharT *__p =
          (CallExpr 0x9e406e0 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e405d8 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0x9e4060c <col:42> 'const _CharT *' lvalue ParmVar 0x9e40100 '__s' 'const _CharT *')
            (DeclRefExpr 0x9e40624 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40180 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0x9e406c8 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0x9e40690 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0x9e40650 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9e406ac <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40140 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0x9e40758 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0x9e40718 <line:823:8> 'const _CharT *' lvalue Var 0x9e40580 '__p' 'const _CharT *')
        (ReturnStmt 0x9e40748 <line:824:6, col:13>
          (DeclRefExpr 0x9e40730 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40140 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0x9e407d0 <line:826:7, col:14>
    (DeclRefExpr 0x9e407b4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9e41558 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0x9e41010 <line:834:46>)
  (DeclStmt 0x9e410d0 <line:835:7, col:38>
    0x9e41030 "size_type __size =
      (CallExpr 0x9e410b0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e41078 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9e41068 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9e41510 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0x9e41110 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9e410e0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e41030 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e410f8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40d80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9e414f8 <line:837:2, line:846:2>
      (IfStmt 0x9e41228 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e411b8 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9e41170 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (UnaryOperator 0x9e41140 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9e41128 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e41030 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e41154 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40d40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9e41210 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9e411dc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e41030 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e411f4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40d40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9e414e0 <line:840:4, line:845:24>
        (CompoundStmt 0x9e413e8 <line:841:6, line:844:6>
          (IfStmt 0x9e413c8 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0x9e41378 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9e41270 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e412a4 <col:30> 'const _CharT *' lvalue ParmVar 0x9e40d00 '__s' 'const _CharT *')
              (DeclRefExpr 0x9e412bc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e40d80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0x9e41360 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0x9e41328 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0x9e412e8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9e41344 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e41030 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0x9e413b8 <line:843:3, col:10>
              (DeclRefExpr 0x9e413a0 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e41030 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9e414b8 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9e41460 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
          (UnaryOperator 0x9e41430 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9e413fc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e41030 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9e41448 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9e41548 <line:847:7, col:14>
    (DeclRefExpr 0x9e4152c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9e420c0 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0x9e41d90 <line:855:46>)
  (ForStmt 0x9e42070 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e41e68 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9e41e20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (DeclRefExpr 0x9e41d9c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e41ac0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e41e00 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e41dc8 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9e41db8 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9e41ea8 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9e41e8c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e41ac0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x9e42050 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0x9e42010 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0x9e41fe8 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e41ee0 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0x9e41f14 <col:25> 'const _CharT *' lvalue ParmVar 0x9e41a80 '__s' 'const _CharT *')
          (DeclRefExpr 0x9e41f2c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e41b00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0x9e41fd0 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0x9e41f98 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x9e41f58 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9e41fb4 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e41ac0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0x9e42040 <line:858:4, col:11>
        (DeclRefExpr 0x9e42024 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e41ac0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9e420b0 <line:859:7, col:14>
    (DeclRefExpr 0x9e42094 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9df7760 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0x9e42b80 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0x9e42b30 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e42940 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9e428f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (DeclRefExpr 0x9e42878 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e425f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9e428d8 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e428a0 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9e42890 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9e42980 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9e42964 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e425f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x9e42b10 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0x9e42ad0 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0x9e42aa8 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e429b8 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0x9e42a78 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0x9e42a40 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0x9e42a00 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9e42a5c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e425f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e42a8c <col:41> '_CharT' lvalue ParmVar 0x9e425b0 '__c' '_CharT')))
      (ReturnStmt 0x9e42b00 <line:869:4, col:11>
        (DeclRefExpr 0x9e42ae4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e425f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9e42b70 <line:870:7, col:14>
    (DeclRefExpr 0x9e42b54 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9e43880 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0x9e433b0 <line:878:46>)
  (DeclStmt 0x9e434b0 <line:879:7, col:38>
    0x9e433d0 "size_type __size =
      (CallExpr 0x9e43490 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e43458 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9e43408 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9e43838 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e434c0 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e433d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e43820 <line:881:2, line:890:2>
      (IfStmt 0x9e435d8 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e43568 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9e43520 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (UnaryOperator 0x9e434f0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9e434d8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e433d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e43504 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e430e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9e435c0 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9e4358c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e433d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e435a4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e430e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9e43808 <line:884:4, line:889:19>
        (CompoundStmt 0x9e437a8 <line:885:6, line:888:6>
          (IfStmt 0x9e43788 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0x9e43748 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0x9e43720 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e43618 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9e4364c <col:31> 'const _CharT *' lvalue ParmVar 0x9e430a0 '__s' 'const _CharT *')
                (DeclRefExpr 0x9e43664 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e43120 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0x9e43708 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0x9e436d0 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0x9e43690 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9e436ec <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e433d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0x9e43778 <line:887:3, col:10>
              (DeclRefExpr 0x9e4375c <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e433d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9e437f0 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9e437bc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e433d0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9e43870 <line:891:7, col:14>
    (DeclRefExpr 0x9e43854 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9df77a8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9dd86b0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9e44498 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0x9e440e0 <line:899:7, col:38>
    0x9e44040 "size_type __size =
      (CallExpr 0x9e440c0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e44088 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9e44078 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9e44450 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e440f0 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e44040 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9e44438 <line:901:2, line:910:2>
      (IfStmt 0x9e44208 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9e44198 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9e44150 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (UnaryOperator 0x9e44120 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9e44108 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e44040 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9e44134 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e43db0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9e441f0 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9e441bc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e44040 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9e441d4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e43db0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9e44420 <line:904:4, line:909:19>
        (CompoundStmt 0x9e443c0 <line:905:6, line:908:6>
          (IfStmt 0x9e443a0 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0x9e44360 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0x9e44338 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e44248 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0x9e44308 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0x9e442d0 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0x9e44290 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9e442ec <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e44040 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9e4431c <col:48> '_CharT' lvalue ParmVar 0x9e43d70 '__c' '_CharT')))
            (ReturnStmt 0x9e44390 <line:907:3, col:10>
              (DeclRefExpr 0x9e44374 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e44040 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9e44408 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9e443d4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9e44040 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9e44488 <line:911:7, col:14>
    (DeclRefExpr 0x9e4446c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e1cf30 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9e45080 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0x9e44a40 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0x9e449d0 <col:7> '<bound member function type>' ->_M_check 0x9dd8cd0
      (CXXThisExpr 0x9e449c0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e449f0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e44830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e44a08 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9e44b08 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9e44a64 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e44870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e44ae0 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9e44a90 <col:13> '<bound member function type>' ->_M_limit 0x9dd8ff0
        (CXXThisExpr 0x9e44a80 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e44ab0 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e44830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e44ac8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e44870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9e44bd8 <line:921:7, col:45>
    0x9e44b30 "const size_type __osize =
      (CallExpr 0x9e44bb8 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e44b80 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9e44b64 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e448c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9e44cd0 <line:922:7, col:53>
    0x9e44bf0 "const size_type __len =
      (CallExpr 0x9e44ca8 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9e44c40 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
        (DeclRefExpr 0x9e44c78 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e44870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e44c90 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e44b30 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e44f28 <line:923:7, col:77>
    0x9e44cf0 "int __r =
      (CallExpr 0x9e44f00 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e44d48 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9e44e50 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9e44e08 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
          (CallExpr 0x9e44dd0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9e44d90 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9e44dec <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e44830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9e44ec8 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e44e90 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x9e44e74 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e448c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9e44ee4 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e44bf0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e45028 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0x9e44f70 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e44f60 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e44f50 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e44f38 <col:12> 'int' lvalue Var 0x9e44cf0 '__r' 'int'))))
    (BinaryOperator 0x9e45010 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0x9e44f84 <col:2> 'int' lvalue Var 0x9e44cf0 '__r' 'int')
      (CallExpr 0x9e44fe8 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0x9e44f9c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9dde660 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9e44fb4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e44870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e44fcc <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e44b30 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e45070 <line:926:7, col:14>
    (ImplicitCastExpr 0x9e45060 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e45044 <col:14> 'int' lvalue Var 0x9e44cf0 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0x9e45e68 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0x9e456c8 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0x9e45658 <col:7> '<bound member function type>' ->_M_check 0x9dd8cd0
      (CXXThisExpr 0x9e45648 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e45678 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45420 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e45690 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0x9e45788 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e45708 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9e456ec <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e454b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9e4573c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e454f0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e45754 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9e45850 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9e457ac <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45460 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e45828 <col:14, col:35> '<dependent type>'
      (MemberExpr 0x9e457d8 <col:14> '<bound member function type>' ->_M_limit 0x9dd8ff0
        (CXXThisExpr 0x9e457c8 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e457f8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45420 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e45810 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45460 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0x9e45928 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0x9e45868 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45530 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e45900 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e45898 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0x9e45880 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e454b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9e458cc <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e454f0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e458e4 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45530 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9e45a30 <line:939:7, col:51>
    0x9e45950 "const size_type __len =
      (CallExpr 0x9e45a08 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e459a0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
        (DeclRefExpr 0x9e459d8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45460 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e459f0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45530 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e45d10 <line:940:7, line:941:39>
    0x9e45a50 "int __r =
      (CallExpr 0x9e45ce8 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e45aa8 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9e45bb0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9e45b68 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
          (CallExpr 0x9e45b30 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9e45af0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9e45b4c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45420 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0x9e45ca8 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9e45c60 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
          (CallExpr 0x9e45c28 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e45bf0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9e45bd4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e454b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x9e45c44 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e454f0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9e45ccc <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e45950 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e45e10 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0x9e45d58 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e45d48 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e45d38 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e45d20 <col:12> 'int' lvalue Var 0x9e45a50 '__r' 'int'))))
    (BinaryOperator 0x9e45df8 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x9e45d6c <col:2> 'int' lvalue Var 0x9e45a50 '__r' 'int')
      (CallExpr 0x9e45dd0 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x9e45d84 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9dde660 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9e45d9c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45460 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e45db4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e45530 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e45e58 <line:944:7, col:14>
    (ImplicitCastExpr 0x9e45e48 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e45e2c <col:14> 'int' lvalue Var 0x9e45a50 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0x9e468c0 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0x9e46358 <line:952:37>)
  (DeclStmt 0x9e46410 <line:953:7, col:44>
    0x9e46370 "const size_type __size =
      (CallExpr 0x9e463f0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e463b8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9e463a8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9e464f8 <line:954:7, col:57>
    0x9e46430 "const size_type __osize =
      (CallExpr 0x9e464d8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e46488 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e464bc <col:53> 'const _CharT *' lvalue ParmVar 0x9e46240 '__s' 'const _CharT *'))")
  (DeclStmt 0x9e465f0 <line:955:7, col:56>
    0x9e46510 "const size_type __len =
      (CallExpr 0x9e465c8 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9e46560 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
        (DeclRefExpr 0x9e46598 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e46370 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e465b0 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e46430 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e46768 <line:956:7, col:60>
    0x9e46610 "int __r =
      (CallExpr 0x9e46740 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e46668 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0x9e466f0 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0x9e466b0 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9e4670c <col:49> 'const _CharT *' lvalue ParmVar 0x9e46240 '__s' 'const _CharT *')
        (DeclRefExpr 0x9e46724 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e46510 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e46868 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0x9e467b0 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e467a0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e46790 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e46778 <col:12> 'int' lvalue Var 0x9e46610 '__r' 'int'))))
    (BinaryOperator 0x9e46850 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0x9e467c4 <col:2> 'int' lvalue Var 0x9e46610 '__r' 'int')
      (CallExpr 0x9e46828 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0x9e467dc <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9dde660 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9e467f4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e46370 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e4680c <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e46430 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e468b0 <line:959:7, col:14>
    (ImplicitCastExpr 0x9e468a0 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e46884 <col:14> 'int' lvalue Var 0x9e46610 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0x9e474f8 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0x9e46e40 <line:967:37>)
  (CallExpr 0x9e46ed0 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0x9e46e60 <col:7> '<bound member function type>' ->_M_check 0x9dd8cd0
      (CXXThisExpr 0x9e46e50 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e46e80 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e46c60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e46e98 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9e46f98 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9e46ef4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e46ca0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e46f70 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x9e46f20 <col:14> '<bound member function type>' ->_M_limit 0x9dd8ff0
        (CXXThisExpr 0x9e46f10 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e46f40 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e46c60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e46f58 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e46ca0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9e47088 <line:970:7, col:57>
    0x9e46fc0 "const size_type __osize =
      (CallExpr 0x9e47068 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e47018 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9e4704c <col:53> 'const _CharT *' lvalue ParmVar 0x9e46d10 '__s' 'const _CharT *'))")
  (DeclStmt 0x9e47180 <line:971:7, col:54>
    0x9e470a0 "const size_type __len =
      (CallExpr 0x9e47158 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9e470f0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
        (DeclRefExpr 0x9e47128 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e46ca0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e47140 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e46fc0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e47380 <line:972:7, col:68>
    0x9e471a0 "int __r =
      (CallExpr 0x9e47358 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e471f8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9e47300 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9e472b8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
          (CallExpr 0x9e47280 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9e47240 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9e4729c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e46c60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9e47324 <col:57> 'const _CharT *' lvalue ParmVar 0x9e46d10 '__s' 'const _CharT *')
        (DeclRefExpr 0x9e4733c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e470a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e474a0 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0x9e473c8 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e473b8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e473a8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e47390 <col:12> 'int' lvalue Var 0x9e471a0 '__r' 'int'))))
    (BinaryOperator 0x9e47488 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0x9e473dc <col:2> 'int' lvalue Var 0x9e471a0 '__r' 'int')
      (CallExpr 0x9e47460 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0x9e473f4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9dde660 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9e4740c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e46ca0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e47424 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e46fc0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e474e8 <line:975:7, col:14>
    (ImplicitCastExpr 0x9e474d8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e474bc <col:14> 'int' lvalue Var 0x9e471a0 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0x9e48078 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0x9e47ac0 <line:984:47>)
  (CallExpr 0x9e47b50 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0x9e47ae0 <col:7> '<bound member function type>' ->_M_check 0x9dd8cd0
      (CXXThisExpr 0x9e47ad0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9e47b00 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e478a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9e47b18 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9e47c18 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9e47b74 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e478e0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9e47bf0 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x9e47ba0 <col:14> '<bound member function type>' ->_M_limit 0x9dd8ff0
        (CXXThisExpr 0x9e47b90 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9e47bc0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e478a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9e47bd8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e478e0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9e47d20 <line:987:7, col:51>
    0x9e47c40 "const size_type __len =
      (CallExpr 0x9e47cf8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9e47c90 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
        (DeclRefExpr 0x9e47cc8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e478e0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e47ce0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e47990 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9e47f20 <line:988:7, col:68>
    0x9e47d40 "int __r =
      (CallExpr 0x9e47ef8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e47d98 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9e47ea0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9e47e58 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e3abc0 0x9e39fc0 0x9cb6fc0 0x9e0e720 0x9e10210 0x9e0fa10)
          (CallExpr 0x9e47e20 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9e47de0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9e47e3c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e478a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9e47ec4 <col:57> 'const _CharT *' lvalue ParmVar 0x9e47950 '__s' 'const _CharT *')
        (DeclRefExpr 0x9e47edc <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9e47c40 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9e48020 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0x9e47f68 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9e47f58 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9e47f48 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9e47f30 <col:12> 'int' lvalue Var 0x9e47d40 '__r' 'int'))))
    (BinaryOperator 0x9e48008 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x9e47f7c <col:2> 'int' lvalue Var 0x9e47d40 '__r' 'int')
      (CallExpr 0x9e47fe0 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x9e47f94 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9dde660 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9e47fac <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e478e0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9e47fc4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9e47990 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9e48068 <line:991:7, col:14>
    (ImplicitCastExpr 0x9e48058 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9e4803c <col:14> 'int' lvalue Var 0x9e47d40 '__r' 'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9e4a740 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0x9e48810 <line:1000:7, col:61>
    0x9e487e0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9e489b0 <line:1001:7, col:66>
    0x9e48980 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9e48aa0 <line:1002:7, col:67>
    0x9e48a70 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x9e48b60 <line:1003:7, col:60>
    0x9e48b30 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9e48c20 <line:1004:7, col:61>
    0x9e48bf0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9e48d10 <line:1005:7, col:44>
    0x9e48ce0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x9e48e00 <line:1006:7, col:69>
    0x9e48dd0 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0x9e48e80 <line:1008:7, col:34>
    0x9e48e30 "__size_type __extracted =
      (IntegerLiteral 0x9e48e68 <col:33> 'int' 0)")
  (DeclStmt 0x9e48fc0 <line:1009:7, col:63>
    0x9e48f40 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x9e48f98 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9e490d0 <line:1010:7, col:58>
    0x9e49050 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9e490b0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9e49084 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9e490a0 <col:52> '_Bool' false))")
  (IfStmt 0x9e4a568 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e490e0 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0x9e49050 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9e4a548 <line:1012:2, line:1058:2>
      (IfStmt 0x9e4a318 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e490f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e4a2d8 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0x9e49158 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e49120 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9e49108 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e48570 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9e49208 <line:1017:8, col:25>
            0x9e491d0 "_CharT __buf[128]")
          (DeclStmt 0x9e49270 <line:1018:8, col:29>
            0x9e49220 "__size_type __len =
              (IntegerLiteral 0x9e49258 <col:28> 'int' 0)")
          (DeclStmt 0x9e49338 <line:1019:8, col:43>
            0x9e49290 "const streamsize __w =
              (CallExpr 0x9e49318 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e492e0 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e492c4 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x9e494a8 <line:1020:8, line:1021:51>
            0x9e49350 "const __size_type __n =
              (ConditionalOperator 0x9e49488 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0x9e493c8 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0x9e493b8 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9e49384 <col:32> 'const streamsize':'const int' lvalue Var 0x9e49290 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0x9e493a0 <col:38> 'int' 0))
                (CXXStaticCastExpr 0x9e49400 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0x9e493e0 <col:67> 'const streamsize':'const int' lvalue Var 0x9e49290 '__w' 'const streamsize':'const int'))
                (CallExpr 0x9e49468 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e49430 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e49418 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e48570 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0x9e49648 <line:1022:8, col:73>
            0x9e49510 "const __ctype_type &__ct =
              (CallExpr 0x9e49628 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x9e49550 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9d46c60)
                (CallExpr 0x9e49608 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e495d0 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e495b8 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x9e49728 <line:1023:8, col:47>
            0x9e49680 "const __int_type __eof =
              (CallExpr 0x9e49708 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9e496e0 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9e49840 <line:1024:8, col:46>
            0x9e49740 "__int_type __c =
              (CallExpr 0x9e49820 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e497e8 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9e497c8 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e49790 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9e49774 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x9e4a048 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0x9e49b30 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0x9e499a8 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9e498c8 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e49880 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
                  (DeclRefExpr 0x9e49850 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e48e30 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9e49868 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9e49350 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9e49990 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9e49968 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9e49910 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9e49934 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e49740 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9e4994c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9e49680 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9e49b18 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0x9e49af0 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e499d8 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9e499c0 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x9e49510 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0x9e49a48 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0x9e49ad0 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9e49a90 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9e49ab4 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e49740 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0x9e4a028 <line:1030:3, line:1039:3>
              (IfStmt 0x9e49dd0 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9e49c38 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e49be0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
                  (DeclRefExpr 0x9e49b48 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e49220 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0x9e49bc8 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0x9e49b90 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0x9e49b78 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0x9e49b60 <col:25> '_CharT [128]' lvalue Var 0x9e491d0 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0x9e49bb0 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0x9e49db8 <line:1032:7, line:1035:7>
                  (CallExpr 0x9e49d48 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e49c78 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x9e49c5c <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e48570 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0x9e49cac <col:22> '_CharT [128]' lvalue Var 0x9e491d0 '__buf' '_CharT [128]')
                    (BinaryOperator 0x9e49d30 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0x9e49cf8 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0x9e49ce0 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0x9e49cc4 <col:36> '_CharT [128]' lvalue Var 0x9e491d0 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0x9e49d18 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0x9e49da0 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0x9e49d6c <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e49220 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0x9e49d88 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0x9e49ee8 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0x9e49e50 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e49dec <col:5> '_CharT [128]' lvalue Var 0x9e491d0 '__buf' '_CharT [128]')
                  (UnaryOperator 0x9e49e38 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9e49e04 <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e49220 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0x9e49ec8 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9e49e88 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9e49eac <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e49740 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9e49f18 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9e49f00 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e48e30 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9e4a010 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x9e49f2c <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e49740 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9e49ff0 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e49fb8 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x9e49f98 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9e49f60 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x9e49f44 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0x9e4a0e0 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e4a078 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9e4a05c <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e48570 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0x9e4a0ac <col:21> '_CharT [128]' lvalue Var 0x9e491d0 '__buf' '_CharT [128]')
            (DeclRefExpr 0x9e4a0c4 <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e49220 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0x9e4a230 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0x9e4a188 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9e4a130 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e4a154 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e49740 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x9e4a16c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9e49680 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x9e4a210 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9e4a1ac <col:3> 'typename __ios_base::iostate' lvalue Var 0x9e48f40 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9e4a1e8 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0x9e4a2b8 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e4a268 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9e4a24c <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9e4a2a0 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9e4a428 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e4a338 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e4a410 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0x9e4a3e0 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e4a360 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9e4a348 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9e4a3b8 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9e4a400 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0x9e4a528 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e4a448 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e4a510 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0x9e4a4f0 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e4a470 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9e4a458 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9e4a4c8 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9e4a638 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0x9e4a5a0 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9e4a584 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e48e30 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9e4a618 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9e4a5b4 <col:2> 'typename __ios_base::iostate' lvalue Var 0x9e48f40 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9e4a5f0 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9e4a6f8 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0x9e4a654 <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0x9e48f40 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9e4a6d8 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e4a688 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9e4a66c <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9e4a6bc <col:16> 'typename __ios_base::iostate' lvalue Var 0x9e48f40 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9e4a730 <line:1064:7, col:14>
    (DeclRefExpr 0x9e4a714 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e483c0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0x9e4c638 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0x9e4af50 <line:1072:7, col:61>
    0x9e4af20 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9e4b0f0 <line:1073:7, col:66>
    0x9e4b0c0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9e4b1b0 <line:1074:7, col:67>
    0x9e4b180 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x9e4b250 <line:1075:7, col:60>
    0x9e4b220 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9e4b310 <line:1076:7, col:61>
    0x9e4b2e0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9e4b390 <line:1078:7, col:34>
    0x9e4b340 "__size_type __extracted =
      (IntegerLiteral 0x9e4b378 <col:33> 'int' 0)")
  (DeclStmt 0x9e4b468 <line:1079:7, col:47>
    0x9e4b3b0 "const __size_type __n =
      (CallExpr 0x9e4b438 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e4b400 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x9e4b3e4 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e4ac50 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9e4b580 <line:1080:7, col:63>
    0x9e4b500 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x9e4b558 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x9e4b670 <line:1081:7, col:57>
    0x9e4b5f0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9e4b650 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0x9e4b624 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x9e4b640 <col:52> '_Bool' true))")
  (IfStmt 0x9e4c460 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0x9e4b680 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0x9e4b5f0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9e4c440 <line:1083:2, line:1122:2>
      (IfStmt 0x9e4c210 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e4b698 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9e4c1e8 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0x9e4b6f8 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e4b6c0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9e4b6a8 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e4ac50 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x9e4b800 <line:1087:8, col:65>
            0x9e4b740 "const __int_type __idelim =
              (CallExpr 0x9e4b7e0 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9e4b7a0 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0x9e4b7c4 <col:57> '_CharT' lvalue ParmVar 0x9e4ac90 '__delim' '_CharT'))")
          (DeclStmt 0x9e4b8c0 <line:1088:8, col:47>
            0x9e4b820 "const __int_type __eof =
              (CallExpr 0x9e4b8a0 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9e4b878 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x9e4b9e0 <line:1089:8, col:46>
            0x9e4b8e0 "__int_type __c =
              (CallExpr 0x9e4b9c0 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9e4b988 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x9e4b968 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9e4b930 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x9e4b914 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x9e4be30 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0x9e4bc18 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0x9e4bb48 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9e4ba68 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x9e4ba20 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
                  (DeclRefExpr 0x9e4b9f0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e4b340 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x9e4ba08 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9e4b3b0 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x9e4bb30 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x9e4bb08 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9e4bab0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9e4bad4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e4b8e0 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x9e4baec <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9e4b820 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x9e4bc00 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0x9e4bbd8 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9e4bb80 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9e4bba4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e4b8e0 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0x9e4bbbc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9e4b740 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0x9e4be10 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0x9e4bcc8 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9e4bc30 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9e4ac50 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0x9e4bca8 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9e4bc68 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9e4bc8c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e4b8e0 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x9e4bd00 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9e4bce8 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e4b340 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x9e4bdf8 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x9e4bd14 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e4b8e0 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x9e4bdd8 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e4bda0 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x9e4bd80 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9e4bd48 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x9e4bd2c <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0x9e4c1c8 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0x9e4bec8 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9e4be70 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9e4be94 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e4b8e0 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x9e4beac <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9e4b820 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x9e4bf50 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9e4beec <col:3> 'typename __ios_base::iostate' lvalue Var 0x9e4b500 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x9e4bf28 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0x9e4c1a8 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0x9e4bff0 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9e4bf98 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9e4bfbc <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0x9e4b8e0 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0x9e4bfd4 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9e4b740 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0x9e4c110 <line:1103:3, line:1106:3>
                (UnaryOperator 0x9e4c030 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x9e4c014 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e4b340 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0x9e4c0f0 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9e4c0b8 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0x9e4c098 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9e4c060 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0x9e4c044 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0x9e4c188 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9e4c128 <col:3> 'typename __ios_base::iostate' lvalue Var 0x9e4b500 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0x9e4c160 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x9e4c320 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e4c230 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e4c308 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0x9e4c2d8 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e4c258 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9e4c240 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9e4c2b0 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x9e4c2f8 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0x9e4c420 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9e4c340 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9e4c408 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0x9e4c3e8 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9e4c368 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9e4c350 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9e4c3c0 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9e4c530 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0x9e4c498 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9e4c47c <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x9e4b340 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x9e4c510 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9e4c4ac <col:2> 'typename __ios_base::iostate' lvalue Var 0x9e4b500 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x9e4c4e8 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x9e4c5f0 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0x9e4c54c <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0x9e4b500 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x9e4c5d0 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e4c580 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9e4c564 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9e4c5b4 <col:16> 'typename __ios_base::iostate' lvalue Var 0x9e4b500 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9e4c628 <line:1127:7, col:14>
    (DeclRefExpr 0x9e4c60c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9e4aaa0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9e4e7f8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9e4e7e8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9dd8700 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9dd86e8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa165620 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa165610 <col:9, col:29>
    (ImplicitCastExpr 0xa165600 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa1655e0 <col:17, col:29> 'char *' lvalue ._M_p 0x9e4ed80
        (MemberExpr 0xa1655c0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e4edb0
          (CXXThisExpr 0xa1654a0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa165488 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa165478 <col:9, col:59>
    (UnaryOperator 0xa165460 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa165448 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa165430 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa165418 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa165400 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa1653e0 <col:44, col:52> 'char *'
                (MemberExpr 0xa1653c0 <col:44> '<bound member function type>' ->_M_data 0x9e4ee30
                  (CXXThisExpr 0xa1653b0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9dfa6d8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9dfa6c0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa164dd8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa164dc8 <col:9, col:26>
    (ImplicitCastExpr 0xa164db8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa164d98 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9e6ed50
        (ImplicitCastExpr 0xa164d88 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa164d50 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa164d30 <col:16> '<bound member function type>' ->_M_rep 0x9e4f100
              (CXXThisExpr 0xa164c08 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa164bf0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa164be0 <col:9, col:32>
    (BinaryOperator 0xa164bc8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa164b98 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa164b78 <col:16, col:22> '<bound member function type>' ->size 0x9e560a0
          (CXXThisExpr 0xa164b68 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa164bb8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e02108 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa165cc0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa165748 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa1656f0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa1656e0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa165674 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9e57640 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa1656c0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa1656a0 <col:13, col:19> '<bound member function type>' ->size 0x9e560a0
          (CXXThisExpr 0xa165690 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa165718 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa165708 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02574 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa165738 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e02560 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e02530 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa165cb0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa165ca0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa165c88 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa165c40 <col:9, col:17> 'char *'
          (MemberExpr 0xa165c20 <col:9> '<bound member function type>' ->_M_data 0x9e4ee30
            (CXXThisExpr 0xa165c10 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa165c78 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa165c5c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9e57640 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa164628 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa164488 <line:180:4, col:62>
    0xa1642b0 "void *__p =
      (CXXReinterpretCastExpr 0xa164470 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa164458 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa164400 <col:41> 'size_type []' lvalue Var 0x9e96c80 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa164618 <line:181:4, col:39>
    (UnaryOperator 0xa164600 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa1645e8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa1645d8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa1645bc <col:36> 'void *' lvalue Var 0xa1642b0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa164298 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa164278 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa163fa0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa163f58 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa163f48 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9df846c <col:8> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa163f80 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa163f30 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa163d90 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa163f18 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa163ef8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa163ee8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa163eb0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x9e96e00 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa163f90 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9df8558 <col:50> '_Bool' false))))
    (CompoundStmt 0xa164260 <line:236:6, line:245:6>
      (NullStmt 0x9df8590 <line:238:67>)
      (IfStmt 0xa164240 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa164098 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa164070 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa164060 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9df85c0 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0bf0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa164048 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa164028 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9e96450
                (ImplicitCastExpr 0xa164018 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa163ff0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9df8658 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9df8640 <col:10> 'int' 1)))
          (IntegerLiteral 0x9df8698 <col:16> 'int' 0))
        (CompoundStmt 0xa164228 <line:241:3, line:244:3>
          (NullStmt 0x9df8718 <line:242:63>)
          (CXXMemberCallExpr 0xa164208 <line:243:5, col:19> 'void'
            (MemberExpr 0xa1641d0 <col:5> '<bound member function type>' ->_M_destroy 0x9e97ab0
              (CXXThisExpr 0xa1640b0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa1641f0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x9e97990 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa1634f0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9e73dd8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9e73dc8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9dd8700 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9dd86e8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa163d30 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa163d20 <col:9, col:29>
    (ImplicitCastExpr 0xa163d10 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa163cf0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9e74360
        (MemberExpr 0xa163cd0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e74390
          (CXXThisExpr 0xa163bb0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa163b98 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa163b88 <col:9, col:59>
    (UnaryOperator 0xa163b70 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa163b58 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa163b40 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa163b28 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa163b10 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa163af0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa163ad0 <col:44> '<bound member function type>' ->_M_data 0x9e74410
                  (CXXThisExpr 0xa163ac0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9dfa6d8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9dfa6c0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa163440 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa163420 <col:9, col:51> 'void'
    (CXXTemporary 0xa1633a0)
    (CXXMemberCallExpr 0xa1633b8 <col:9, col:51> 'void'
      (MemberExpr 0xa163314 <col:9, col:19> '<bound member function type>' ->_M_dispose 0x9e979e0
        (CXXMemberCallExpr 0xa1632e8 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa1632c8 <col:9> '<bound member function type>' ->_M_rep 0x9e74700
            (ImplicitCastExpr 0xa163308 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa15c060 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa163410 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa163400 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa1633a8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa1633a0)
            (CXXMemberCallExpr 0xa163368 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa163348 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9e8e200
                (ImplicitCastExpr 0xa163388 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa163338 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa165f70 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa165f60 <col:9, col:26>
    (ImplicitCastExpr 0xa165f50 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa165f30 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9e962d0
        (ImplicitCastExpr 0xa165f20 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa165f00 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa165ee0 <col:16> '<bound member function type>' ->_M_rep 0x9e74700
              (CXXThisExpr 0xa165dc0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa165da8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa165d98 <col:9, col:32>
    (BinaryOperator 0xa165d80 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa165d50 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa165d30 <col:16, col:22> '<bound member function type>' ->size 0x9e7b610
          (CXXThisExpr 0xa165d20 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa165d70 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e02108 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa166610 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa166098 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa166040 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa166030 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa165fc4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9e7cb70 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa166010 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa165ff0 <col:13, col:19> '<bound member function type>' ->size 0x9e7b610
          (CXXThisExpr 0xa165fe0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa166068 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa166058 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02574 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa166088 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9e02560 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9e02530 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa166600 <line:859:2, col:22>
    (ImplicitCastExpr 0xa1665f0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa1665d8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa166590 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa166570 <col:9> '<bound member function type>' ->_M_data 0x9e74410
            (CXXThisExpr 0xa166560 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa1665c8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1665ac <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9e7cb70 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa166b40 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa166b30 <col:9, col:24>
    (ImplicitCastExpr 0xa166b20 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa166b00 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa166ae0 <col:16> '<bound member function type>' ->_M_data 0x9e74410
          (CXXThisExpr 0xa166ad0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa164800 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa1647f0 <col:9, col:16>
    (CXXConstructExpr 0xa1647c8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa1647b8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa1647a8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa164760 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9e74390
            (CXXThisExpr 0xa164640 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0x9e9a228 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0x9e9a2d0 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9e9a2b8 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0x9e9a288 <col:36> 'long' 1)
    (IntegerLiteral 0x9e9a2a0 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0x9e9a370 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9e9a358 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9e9a328 <col:37> 'long' 1)
    (IntegerLiteral 0x9e9a340 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0x9e9a410 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9e9a3f8 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9e9a3c8 <col:37> 'long' 1)
    (IntegerLiteral 0x9e9a3e0 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0x9e9a4b0 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9e9a498 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0x9e9a468 <col:35> 'long' 1)
    (IntegerLiteral 0x9e9a480 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0x9e9a550 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9e9a538 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9e9a508 <col:38> 'long' 1)
    (IntegerLiteral 0x9e9a520 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0x9e9a5f0 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9e9a5d8 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9e9a5a8 <col:38> 'long' 1)
    (IntegerLiteral 0x9e9a5c0 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0x9e9a7b0 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0x9e9a798 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0x9e9a758 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0x9e9a718 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0x9e9a6d8 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0x9e9a698 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0x9e9a678 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9e9a644 <col:35> 'const category':'const int' lvalue Var 0x9e9a250 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0x9e9a688 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9e9a65c <col:43> 'const category':'const int' lvalue Var 0x9e9a2f0 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0x9e9a6c8 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0x9e9a6b0 <col:53> 'const category':'const int' lvalue Var 0x9e9a390 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0x9e9a708 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0x9e9a6f0 <col:9> 'const category':'const int' lvalue Var 0x9e9a430 'time' 'const category':'const int')))
      (ImplicitCastExpr 0x9e9a748 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0x9e9a730 <col:17> 'const category':'const int' lvalue Var 0x9e9a4d0 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0x9e9a788 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0x9e9a770 <col:28> 'const category':'const int' lvalue Var 0x9e9a570 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0x9e9c670 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0x9e9c660 <col:7, col:41>
    (UnaryOperator 0x9e9c648 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0x9e9c630 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0x9e9c610 <col:16, col:40> '_Bool'
          (MemberExpr 0x9e9c5d8 <col:16, col:30> '<bound member function type>' ->operator== 0x9e9b600
            (CXXThisExpr 0x9e9c5c8 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0x9e9c5f8 <col:33> 'const class std::locale' lvalue ParmVar 0x9e9b680 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0x9e9c0c8 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9e9c070 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0x9e9c040 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0x9e9c058 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0x9ea1890 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ea1878 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0x9ea1930 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0x9ea1920 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0x9ea1910 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9ea18c4 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0x9e9cb30 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0x9ea18e0 <col:61> 'int' 1)
  (IntegerLiteral 0x9ea18f8 <col:65> 'int' 0))
) (CompoundStmt 0x9ea1970 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0x9ea18b8 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9ea18a0 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0x9ea1aa0 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0x9ea1a78 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9ea1a68 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ea19a4 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9dd1080 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9ea1a38 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9ea1a14 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9e9c900
        (CXXThisExpr 0x9ea19e8 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0x9ea1a50 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0x9ea1cf8 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0x9ea1ab8 <line:407:60>)
  (IfStmt 0x9ea1cd8 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0x9ea1bd0 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0x9ea1b90 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9ea1b80 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ea1ae8 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0bf0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9ea1b38 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9ea1b18 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9e9c900
            (CXXThisExpr 0x9ea1b08 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0x9ea1b68 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9ea1b50 <col:65> 'int' 1)))
      (IntegerLiteral 0x9ea1bb8 <col:71> 'int' 1))
    (CompoundStmt 0x9ea1cb8 <line:409:2, line:415:2>
      (NullStmt 0x9ea1be8 <line:410:63>)
      (IfStmt 0x9ea1c58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea1bf8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea1c40 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0x9ea1c28 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9ea1c18 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9ea1c08 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0x9ea1c98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea1c78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea1c88 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0x9ea26c0 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0x9ea45a8 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0x9ea4580 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9ea4570 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ea44ec <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9dd1080 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9ea4540 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9ea4520 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9ea2e20
        (CXXThisExpr 0x9ea4510 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0x9ea4558 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0x9ea4800 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0x9ea45c0 <line:516:60>)
  (IfStmt 0x9ea47e0 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0x9ea46d8 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0x9ea4698 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9ea4688 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ea45f0 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0bf0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9ea4640 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9ea4620 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9ea2e20
            (CXXThisExpr 0x9ea4610 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0x9ea4670 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9ea4658 <col:65> 'int' 1)))
      (IntegerLiteral 0x9ea46c0 <col:71> 'int' 1))
    (CompoundStmt 0x9ea47c0 <line:518:2, line:524:2>
      (NullStmt 0x9ea46f0 <line:519:63>)
      (IfStmt 0x9ea4760 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea4700 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9ea4748 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0x9ea4730 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9ea4720 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9ea4710 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0x9ea47a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9ea4780 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9ea4790 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0x9ea4e78 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0x9ea4868 <line:541:7, col:24>
    0x9ea4820 "bool __ret =
      (CXXBoolLiteralExpr 0x9ea4858 <col:20> '_Bool' true)")
  (IfStmt 0x9ea4e20 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0x9ea48f8 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9ea48e8 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0x9ea48d0 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0x9ea48c0 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0x9ea4888 <col:11> 'char **' lvalue ->_M_names 0x9ea2f40
              (CXXThisExpr 0x9ea4878 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0x9ea48a8 <col:20> 'int' 1))))
    (ForStmt 0x9ea4df8 <line:544:2, line:545:66>
      (DeclStmt 0x9ea4970 <line:544:7, col:21>
        0x9ea4910 "size_t __i =
          (ImplicitCastExpr 0x9ea4960 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ea4948 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0x9ea4a50 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0x9ea4a40 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9ea4980 <col:23> '_Bool' lvalue Var 0x9ea4820 '__ret' '_Bool'))
        (BinaryOperator 0x9ea4a28 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0x9ea4a08 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ea4998 <col:32> 'size_t':'unsigned int' lvalue Var 0x9ea4910 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9ea4a18 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0x9ea49f0 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0x9ea49e0 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0x9ea49b0 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0x9e9c090 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0x9ea49c8 <col:59> 'int' 1)))))
      (UnaryOperator 0x9ea4a80 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0x9ea4a68 <col:64> 'size_t':'unsigned int' lvalue Var 0x9ea4910 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0x9ea4de0 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0x9ea4a94 <col:4> '_Bool' lvalue Var 0x9ea4820 '__ret' '_Bool')
        (BinaryOperator 0x9ea4dc8 <col:12, col:66> '_Bool' '=='
          (CallExpr 0x9ea4d48 <col:12, col:61> 'int'
            (ImplicitCastExpr 0x9ea4d38 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ea4bc4 <col:12> 'int (const char *, const char *)' lvalue Function 0x9ea4ab0 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0x9ea4d80 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9ea4d70 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9ea4c48 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0x9ea4c28 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0x9ea4bf0 <col:29> 'char **' lvalue ->_M_names 0x9ea2f40
                      (CXXThisExpr 0x9ea4be0 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0x9ea4c38 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9ea4c10 <col:38> 'size_t':'unsigned int' lvalue Var 0x9ea4910 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0x9ea4da0 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9ea4d90 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9ea4d08 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0x9ea4cf8 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0x9ea4c70 <col:44> 'char **' lvalue ->_M_names 0x9ea2f40
                      (CXXThisExpr 0x9ea4c60 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0x9ea4ce0 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0x9ea4cc0 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9ea4c90 <col:53> 'size_t':'unsigned int' lvalue Var 0x9ea4910 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0x9ea4cd0 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9ea4ca8 <col:59> 'int' 1)))))))
          (IntegerLiteral 0x9ea4db0 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9ea4e68 <line:546:7, col:14>
    (ImplicitCastExpr 0x9ea4e58 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9ea4e3c <col:14> '_Bool' lvalue Var 0x9ea4820 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0x9ea4f70 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0x9ea4f48 <col:9, col:46> '<dependent type>'
    (MemberExpr 0x9ea4ea8 <col:9> '<bound member function type>' ->_M_install_facet 0x9ea4160
      (CXXThisExpr 0x9ea4e98 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0x9ea4f18 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0x9ea4ef0 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0x9ea4f2c <col:39> '_Facet *' lvalue ParmVar 0x9ea4260 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0x9ea78d0 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ea78b8 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9ea7904 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0x9ea68b0 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x9ea79f8 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x9ea79e8 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ea7998 <col:44> '__c_locale (void)' lvalue CXXMethod 0x9e9d2d0 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0x9ea7a60 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9ea78f8 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ea78e0 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9ea7a70 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0x9ea6a00 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x9ea7b88 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x9ea7b78 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ea7b08 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0x9e9cf90 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0x9ea7b20 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9ea69c0 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0x9ea7bf0 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x9ea7d00 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0x9ea7cf0 <col:9, col:59>
    (CallExpr 0x9ea7cc0 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea7c28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea7c18 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x9ea7c5c <col:33> 'const _CharT *' lvalue ParmVar 0x9ea6b40 '__lo1' 'const _CharT *')
      (DeclRefExpr 0x9ea7c74 <col:40> 'const _CharT *' lvalue ParmVar 0x9ea6b90 '__hi1' 'const _CharT *')
      (DeclRefExpr 0x9ea7c8c <col:47> 'const _CharT *' lvalue ParmVar 0x9ea6be0 '__lo2' 'const _CharT *')
      (DeclRefExpr 0x9ea7ca4 <col:54> 'const _CharT *' lvalue ParmVar 0x9ea6c30 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9ea7dc8 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0x9ea7db8 <col:9, col:45>
    (CallExpr 0x9ea7d90 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea7d28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea7d18 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x9ea7d5c <col:35> 'const _CharT *' lvalue ParmVar 0x9ea6d80 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9ea7d74 <col:41> 'const _CharT *' lvalue ParmVar 0x9ea6dd0 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9ea7e90 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0x9ea7e80 <col:9, col:40>
    (CallExpr 0x9ea7e58 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ea7df0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ea7de0 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x9ea7e24 <col:30> 'const _CharT *' lvalue ParmVar 0x9ea6ef0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9ea7e3c <col:36> 'const _CharT *' lvalue ParmVar 0x9ea6f40 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0x9ea7f28 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0x9ea7f08 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0x9ea7ea4 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0x9e9d0b0 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0x9ea7ee8 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0x9ea67d0
      (CXXThisExpr 0x9ea7ed8 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0x9ea8178 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9eac2b0 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eac298 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0x9eac350 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0x9eac0e0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9eac7a0 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0x9eac780 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0x9eac5b0 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0x9eac470 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0x9eac410 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x9eac400 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9eac3ac <col:6> 'int (const char *, const char *)' lvalue Function 0x9ea4ab0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9eac438 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9eac3c4 <col:23> 'const char *' lvalue ParmVar 0x9eac0a0 '__s' 'const char *'))
          (ImplicitCastExpr 0x9eac448 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9eac3dc <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9eac458 <col:36> 'int' 0))
      (BinaryOperator 0x9eac598 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0x9eac538 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x9eac528 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9eac488 <col:9> 'int (const char *, const char *)' lvalue Function 0x9ea4ab0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9eac560 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9eac4a0 <col:26> 'const char *' lvalue ParmVar 0x9eac0a0 '__s' 'const char *'))
          (ImplicitCastExpr 0x9eac570 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9eac500 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9eac580 <col:43> 'int' 0)))
    (CompoundStmt 0x9eac768 <line:808:4, line:811:4>
      (CallExpr 0x9eac678 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eac5f8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9eac5e8 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x9eac640 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9eac630 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0x9eac740 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eac6a8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9eac698 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x9eac6f0 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9eac6e0 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0x9eac724 <col:58> 'const char *' lvalue ParmVar 0x9eac0a0 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0x9eac7b8 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0x9ead058 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0x9eacc70 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0x9eacb48 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9e9bea0
      (CXXThisExpr 0x9eacb38 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0x9eacc30 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0x9eacbe8 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0x9eacbb0 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0x9eacba0 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eacb80 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
              (DeclRefExpr 0x9eacb68 <col:28> 'const class std::locale' lvalue ParmVar 0x9eac930 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0x9eacbf8 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9eacbc8 <col:45> 'int' 1))))
  (IfStmt 0x9eacdb8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eacc88 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9eacda0 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0x9eacd78 <col:4, col:46> '<dependent type>'
        (MemberExpr 0x9eaccd4 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0x9ea4160
          (ImplicitCastExpr 0x9eaccc8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eacca8 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9e9bea0
              (CXXThisExpr 0x9eacc98 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0x9eacd48 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x9eacd20 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0x9eacd5c <col:43> '_Facet *' lvalue ParmVar 0x9eac9a0 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0x9eace90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eacdd8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9eace78 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0x9eace48 <line:52:4, col:33> 'void'
        (MemberExpr 0x9eace24 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0x9ea34a0
          (ImplicitCastExpr 0x9eace18 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eacdf8 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9e9bea0
              (CXXThisExpr 0x9eacde8 <col:4> 'class std::locale *' this)))))
      (NullStmt 0x9eace68 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x9eacf60 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0x9eacf50 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0x9eacf38 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0x9eacf28 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0x9eaceec <col:17, col:26> 'char **' lvalue ->_M_names 0x9ea2f40
            (ImplicitCastExpr 0x9eacee0 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9eacec0 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9e9bea0
                (CXXThisExpr 0x9eaceb0 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0x9eacf10 <col:35> 'int' 0))))
  (BinaryOperator 0x9ead040 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0x9ead000 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0x9eacff0 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0x9eacfb4 <col:7, col:16> 'char **' lvalue ->_M_names 0x9ea2f40
          (ImplicitCastExpr 0x9eacfa8 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eacf88 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x9e9bea0
              (CXXThisExpr 0x9eacf78 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0x9eacfd8 <col:25> 'int' 0))
    (ImplicitCastExpr 0x9ead030 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0x9ead018 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0x9ead6b8 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0x9ead388 <line:64:7, col:44>
    0x9ead250 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0x9ead348 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0x9ead300 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0x9ead2c8 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0x9ead2b8 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9ead298 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0x9e9bea0
                (CXXThisExpr 0x9ead288 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0x9ead310 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ead2e0 <col:42> 'int' 1)))")
  (IfStmt 0x9ead4d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9ead398 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9ead4b8 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0x9ead490 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0x9ead3cc <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0x9ea3fd0
          (ImplicitCastExpr 0x9ead3c0 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9ead3a8 <col:4> 'class std::locale::_Impl *' lvalue Var 0x9ead250 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0x9ead404 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
          (DeclRefExpr 0x9ead3ec <col:28> 'const class std::locale' lvalue ParmVar 0x9ead100 '__other' 'const class std::locale &'))
        (UnaryOperator 0x9ead478 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x9ead450 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0x9ead590 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9ead4f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9ead578 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0x9ead548 <line:71:4, col:31> 'void'
        (MemberExpr 0x9ead524 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0x9ea34a0
          (ImplicitCastExpr 0x9ead518 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9ead500 <col:4> 'class std::locale::_Impl *' lvalue Var 0x9ead250 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0x9ead568 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0x9ead6a8 <line:74:7, col:26>
    (ExprWithCleanups 0x9ead688 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0x9ead610)
      (CXXConstructExpr 0x9ead660 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0x9ead650 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0x9ead640 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0x9ead628 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0x9ead618 <col:14, col:21> 'class std::locale' (CXXTemporary 0x9ead610)
                (CXXConstructExpr 0x9ead5e0 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0x9ead5d0 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0x9ead5b8 <col:21> 'class std::locale::_Impl *' lvalue Var 0x9ead250 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0x9eae3e0 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0x9eaddc0 <line:83:7, col:50>
    0x9eadd90 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0x9eadf20 <line:84:7, col:73>
    0x9eade30 "const __collate_type &__collate =
      (CallExpr 0x9eadf00 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9eade70 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0x9ea5250)
        (UnaryOperator 0x9eadee8 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0x9eaded8 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0x9eae3d0 <line:85:7, line:86:50>
    (ParenExpr 0x9eae3b8 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0x9eae390 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9eae348 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (CallExpr 0x9eae300 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eadf48 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9eadf30 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0x9eade30 '__collate' 'const __collate_type &'))
          (CallExpr 0x9eadfd0 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eadf98 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9eadf7c <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ead970 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x9eae118 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0x9eae0d0 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
            (CallExpr 0x9eae040 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eae008 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9eadfec <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ead970 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9eae0b0 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eae078 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0x9eae05c <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ead970 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0x9eae190 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eae158 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9eae13c <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9eadb20 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x9eae2d8 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9eae290 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
            (CallExpr 0x9eae200 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eae1c8 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0x9eae1ac <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9eadb20 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9eae270 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eae238 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0x9eae21c <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9eadb20 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0x9eae330 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0x9eb1e70 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0x9eb1b90 <line:94:7, col:44>
    0x9eb1ab0 "const size_t __i =
      (CallExpr 0x9eb1b70 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb1b38 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9eb1b10 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x9eb1cc0 <line:95:7, col:64>
    0x9eb1c10 "const locale::facet **__facets =
      (ImplicitCastExpr 0x9eb1cb0 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9eb1c8c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9ea2e80
          (ImplicitCastExpr 0x9eb1c80 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eb1c5c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
              (DeclRefExpr 0x9eb1c44 <col:40> 'const class std::locale' lvalue ParmVar 0x9eae470 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0x9eb1e60 <line:96:7, line:98:53>
    (ParenExpr 0x9eb1e48 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0x9eb1e30 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0x9eb1d70 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0x9eb1d50 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9eb1cd0 <col:15> 'const size_t':'const unsigned int' lvalue Var 0x9eb1ab0 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0x9eb1d60 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0x9eb1d2c <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9ea2ec0
              (ImplicitCastExpr 0x9eb1d20 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0x9eb1d00 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
                  (DeclRefExpr 0x9eb1ce8 <col:21> 'const class std::locale' lvalue ParmVar 0x9eae470 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0x9eb1e18 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0x9eb1dd8 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9eb1db8 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9eb1d88 <col:39> 'const class locale::facet **' lvalue Var 0x9eb1c10 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9eb1dc8 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9eb1da0 <col:48> 'const size_t':'const unsigned int' lvalue Var 0x9eb1ab0 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0x9eb2508 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0x9eb2120 <line:108:7, col:44>
    0x9eb2040 "const size_t __i =
      (CallExpr 0x9eb2100 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb20c8 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9eb20a0 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x9eb2220 <line:109:7, col:64>
    0x9eb2170 "const locale::facet **__facets =
      (ImplicitCastExpr 0x9eb2210 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9eb21ec <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9ea2e80
          (ImplicitCastExpr 0x9eb21e0 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9eb21bc <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
              (DeclRefExpr 0x9eb21a4 <col:40> 'const class std::locale' lvalue ParmVar 0x9eb1f00 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x9eb2420 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0x9eb2388 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0x9eb22d0 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0x9eb22b0 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9eb2230 <col:11> 'const size_t':'const unsigned int' lvalue Var 0x9eb2040 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9eb22c0 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0x9eb228c <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9ea2ec0
            (ImplicitCastExpr 0x9eb2280 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9eb2260 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
                (DeclRefExpr 0x9eb2248 <col:18> 'const class std::locale' lvalue ParmVar 0x9eb1f00 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0x9eb2370 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9eb2360 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x9eb2350 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0x9eb2338 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0x9eb2318 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0x9eb22e8 <col:52> 'const class locale::facet **' lvalue Var 0x9eb2170 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0x9eb2328 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9eb2300 <col:61> 'const size_t':'const unsigned int' lvalue Var 0x9eb2040 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0x9eb2400 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0x9eb23f0 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eb23d4 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9c63270 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9eb24f8 <line:113:7, col:56>
    (CXXDynamicCastExpr 0x9eb24e0 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0x9eb24b8 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0x9eb24a8 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x9eb2490 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9eb2470 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9eb243c <col:43> 'const class locale::facet **' lvalue Var 0x9eb2170 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9eb2480 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9eb2454 <col:52> 'const size_t':'const unsigned int' lvalue Var 0x9eb2040 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0x9eb2890 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0x9eb2880 <col:7, col:14>
    (IntegerLiteral 0x9eb2868 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0x9eb2c98 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0x9eb2c88 <col:7, col:14>
    (ImplicitCastExpr 0x9eb2c78 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9eb2c60 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x9eb3fb0 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0x9eb3138 <line:140:7, col:44>
    0x9eb30b0 "const string_type __one =
      (ParenListExpr 0x9eb3118 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9eb30e4 <col:31> 'const _CharT *' lvalue ParmVar 0x9eb2e80 '__lo1' 'const _CharT *')
        (DeclRefExpr 0x9eb30fc <col:38> 'const _CharT *' lvalue ParmVar 0x9eb2ed0 '__hi1' 'const _CharT *'))")
  (DeclStmt 0x9eb31d8 <line:141:7, col:44>
    0x9eb3150 "const string_type __two =
      (ParenListExpr 0x9eb31b8 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9eb3184 <col:31> 'const _CharT *' lvalue ParmVar 0x9eb2f20 '__lo2' 'const _CharT *')
        (DeclRefExpr 0x9eb319c <col:38> 'const _CharT *' lvalue ParmVar 0x9eb2f70 '__hi2' 'const _CharT *'))")
  (DeclStmt 0x9eb32a8 <line:143:7, col:40>
    0x9eb3200 "const _CharT *__p =
      (CallExpr 0x9eb3288 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb3250 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9eb3234 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb30b0 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9eb3458 <line:144:7, col:59>
    0x9eb32d0 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x9eb3430 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb33e8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (CallExpr 0x9eb3358 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb3320 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb3304 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb30b0 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9eb33c8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb3390 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb3374 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb30b0 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x9eb3528 <line:145:7, col:40>
    0x9eb3480 "const _CharT *__q =
      (CallExpr 0x9eb3508 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb34d0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9eb34b4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb3150 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9eb36d8 <line:146:7, col:59>
    0x9eb3550 "const _CharT *__qend =
      (CXXOperatorCallExpr 0x9eb36b0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb3668 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (CallExpr 0x9eb35d8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb35a0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb3584 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb3150 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9eb3648 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb3610 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb35f4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb3150 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0x9eb3f88 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0x9eb3f58 <line:152:2, line:168:2>
      (DeclStmt 0x9eb37c0 <line:153:4, col:42>
        0x9eb3700 "const int __res =
          (CallExpr 0x9eb3798 <col:22, col:41> '<dependent type>'
            (MemberExpr 0x9eb3748 <col:22> '<bound member function type>' ->_M_compare 0x9eb27d0
              (CXXThisExpr 0x9eb3738 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0x9eb3768 <col:33> 'const _CharT *' lvalue Var 0x9eb3200 '__p' 'const _CharT *')
            (DeclRefExpr 0x9eb3780 <col:38> 'const _CharT *' lvalue Var 0x9eb3480 '__q' 'const _CharT *'))")
      (IfStmt 0x9eb3840 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0x9eb37f8 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9eb37e8 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0x9eb37d0 <col:8> 'const int' lvalue Var 0x9eb3700 '__res' 'const int')))
        (ReturnStmt 0x9eb3830 <line:155:6, col:13>
          (ImplicitCastExpr 0x9eb3820 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0x9eb3804 <col:13> 'const int' lvalue Var 0x9eb3700 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0x9eb3990 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9eb385c <col:4> 'const _CharT *' lvalue Var 0x9eb3200 '__p' 'const _CharT *')
        (CallExpr 0x9eb3970 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb3920 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x9eb3954 <col:39> 'const _CharT *' lvalue Var 0x9eb3200 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0x9eb3ae0 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9eb39b0 <col:4> 'const _CharT *' lvalue Var 0x9eb3480 '__q' 'const _CharT *')
        (CallExpr 0x9eb3ac0 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb3a70 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x9eb3aa4 <col:39> 'const _CharT *' lvalue Var 0x9eb3480 '__q' 'const _CharT *')))
      (IfStmt 0x9eb3ea8 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0x9eb3c60 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9eb3b88 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb3b30 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
            (DeclRefExpr 0x9eb3b00 <col:8> 'const _CharT *' lvalue Var 0x9eb3200 '__p' 'const _CharT *')
            (DeclRefExpr 0x9eb3b18 <col:15> 'const _CharT *' lvalue Var 0x9eb32d0 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0x9eb3c38 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb3be0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
            (DeclRefExpr 0x9eb3bac <col:25> 'const _CharT *' lvalue Var 0x9eb3480 '__q' 'const _CharT *')
            (DeclRefExpr 0x9eb3bc4 <col:32> 'const _CharT *' lvalue Var 0x9eb3550 '__qend' 'const _CharT *')))
        (ReturnStmt 0x9eb3c90 <line:160:6, col:13>
          (IntegerLiteral 0x9eb3c78 <col:13> 'int' 0))
        (IfStmt 0x9eb3e88 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9eb3d28 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb3cd0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
            (DeclRefExpr 0x9eb3ca0 <col:13> 'const _CharT *' lvalue Var 0x9eb3200 '__p' 'const _CharT *')
            (DeclRefExpr 0x9eb3cb8 <col:20> 'const _CharT *' lvalue Var 0x9eb32d0 '__pend' 'const _CharT *'))
          (ReturnStmt 0x9eb3d80 <line:162:6, col:14>
            (UnaryOperator 0x9eb3d68 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0x9eb3d50 <col:14> 'int' 1)))
          (IfStmt 0x9eb3e68 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9eb3e18 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0x9eb3dc0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
              (DeclRefExpr 0x9eb3d90 <col:13> 'const _CharT *' lvalue Var 0x9eb3480 '__q' 'const _CharT *')
              (DeclRefExpr 0x9eb3da8 <col:20> 'const _CharT *' lvalue Var 0x9eb3550 '__qend' 'const _CharT *'))
            (ReturnStmt 0x9eb3e58 <line:164:6, col:13>
              (IntegerLiteral 0x9eb3e40 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0x9eb3ef8 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9eb3ec4 <col:4> 'const _CharT *' lvalue Var 0x9eb3200 '__p' 'const _CharT *'))
      (UnaryOperator 0x9eb3f40 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9eb3f0c <col:4> 'const _CharT *' lvalue Var 0x9eb3480 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9eb53b0 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0x9eb4538 <line:176:7, col:24>
    0x9eb4500 "string_type __ret")
  (DeclStmt 0x9eb45d8 <line:179:7, col:42>
    0x9eb4550 "const string_type __str =
      (ParenListExpr 0x9eb45b8 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x9eb4584 <col:31> 'const _CharT *' lvalue ParmVar 0x9eb42b0 '__lo' 'const _CharT *')
        (DeclRefExpr 0x9eb459c <col:37> 'const _CharT *' lvalue ParmVar 0x9eb4300 '__hi' 'const _CharT *'))")
  (DeclStmt 0x9eb46a8 <line:181:7, col:40>
    0x9eb4600 "const _CharT *__p =
      (CallExpr 0x9eb4688 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eb4650 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9eb4634 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb4550 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x9eb4858 <line:182:7, col:59>
    0x9eb46d0 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x9eb4830 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb47e8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (CallExpr 0x9eb4758 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb4720 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb4704 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb4550 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x9eb47c8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eb4790 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x9eb4774 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x9eb4550 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x9eb4980 <line:184:7, col:39>
    0x9eb4870 "size_t __len =
      (BinaryOperator 0x9eb4968 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0x9eb4938 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9eb4910 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9eb48d8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9eb48a4 <col:23> 'const _CharT *' lvalue ParmVar 0x9eb4300 '__hi' 'const _CharT *')
            (DeclRefExpr 0x9eb48bc <col:30> 'const _CharT *' lvalue ParmVar 0x9eb42b0 '__lo' 'const _CharT *')))
        (IntegerLiteral 0x9eb4950 <col:38> 'int' 2))")
  (DeclStmt 0x9eb4a58 <line:186:7, col:38>
    0x9eb49c0 "_CharT *__c =
      (CXXNewExpr 0x9eb4a18 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0x9eb49f4 <col:32> 'size_t':'unsigned int' lvalue Var 0x9eb4870 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0x9eb52b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eb4a68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9eb5298 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0x9eb5270 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0x9eb5240 <line:194:6, line:214:6>
          (DeclStmt 0x9eb4b58 <line:196:8, col:52>
            0x9eb4a80 "size_t __res =
              (CallExpr 0x9eb4b30 <col:23, col:51> '<dependent type>'
                (MemberExpr 0x9eb4ac8 <col:23> '<bound member function type>' ->_M_transform 0x9eb2bc0
                  (CXXThisExpr 0x9eb4ab8 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0x9eb4ae8 <col:36> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *')
                (DeclRefExpr 0x9eb4b00 <col:41> 'const _CharT *' lvalue Var 0x9eb4600 '__p' 'const _CharT *')
                (DeclRefExpr 0x9eb4b18 <col:46> 'size_t':'unsigned int' lvalue Var 0x9eb4870 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0x9eb4e78 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0x9eb4bb8 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0x9eb4b98 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9eb4b68 <col:12> 'size_t':'unsigned int' lvalue Var 0x9eb4a80 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9eb4ba8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9eb4b80 <col:21> 'size_t':'unsigned int' lvalue Var 0x9eb4870 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0x9eb4e58 <line:200:3, line:205:3>
              (BinaryOperator 0x9eb4c50 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0x9eb4bd0 <col:5> 'size_t':'unsigned int' lvalue Var 0x9eb4870 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0x9eb4c38 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0x9eb4c18 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9eb4be8 <col:13> 'size_t':'unsigned int' lvalue Var 0x9eb4a80 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0x9eb4c28 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x9eb4c00 <col:21> 'int' 1))))
              (BinaryOperator 0x9eb4ce0 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0x9eb4c80 <col:5, col:15> 'void'
                  (DeclRefExpr 0x9eb4c68 <col:15> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *'))
                (BinaryOperator 0x9eb4cc8 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0x9eb4c98 <col:20> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *')
                  (IntegerLiteral 0x9eb4cb0 <col:26> 'int' 0)))
              (BinaryOperator 0x9eb4d70 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0x9eb4cf8 <col:5> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *')
                (CXXNewExpr 0x9eb4d30 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0x9eb4d10 <col:22> 'size_t':'unsigned int' lvalue Var 0x9eb4870 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0x9eb4e40 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9eb4d88 <col:5> 'size_t':'unsigned int' lvalue Var 0x9eb4a80 '__res' 'size_t':'unsigned int')
                (CallExpr 0x9eb4e18 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0x9eb4db0 <col:13> '<bound member function type>' ->_M_transform 0x9eb2bc0
                    (CXXThisExpr 0x9eb4da0 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0x9eb4dd0 <col:26> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *')
                  (DeclRefExpr 0x9eb4de8 <col:31> 'const _CharT *' lvalue Var 0x9eb4600 '__p' 'const _CharT *')
                  (DeclRefExpr 0x9eb4e00 <col:36> 'size_t':'unsigned int' lvalue Var 0x9eb4870 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0x9eb4f18 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb4eb0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb4e94 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x9eb4500 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0x9eb4ee4 <col:21> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *')
            (DeclRefExpr 0x9eb4efc <col:26> 'size_t':'unsigned int' lvalue Var 0x9eb4a80 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0x9eb5070 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9eb4f3c <col:8> 'const _CharT *' lvalue Var 0x9eb4600 '__p' 'const _CharT *')
            (CallExpr 0x9eb5050 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eb5000 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0x9eb5034 <col:43> 'const _CharT *' lvalue Var 0x9eb4600 '__p' 'const _CharT *')))
          (IfStmt 0x9eb5148 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9eb5118 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9eb50c0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
              (DeclRefExpr 0x9eb5090 <col:12> 'const _CharT *' lvalue Var 0x9eb4600 '__p' 'const _CharT *')
              (DeclRefExpr 0x9eb50a8 <col:19> 'const _CharT *' lvalue Var 0x9eb46d0 '__pend' 'const _CharT *'))
            (BreakStmt 0x9eb5140 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0x9eb5198 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9eb5164 <col:8> 'const _CharT *' lvalue Var 0x9eb4600 '__p' 'const _CharT *'))
          (CallExpr 0x9eb5220 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eb51c8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9eb51ac <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x9eb4500 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0x9eb5208 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0x9eb5338 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9eb52d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9eb5320 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0x9eb52f8 <line:218:4, col:14> 'void'
        (DeclRefExpr 0x9eb52e0 <col:14> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *'))
      (NullStmt 0x9eb5310 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x9eb5370 <line:222:7, col:17> 'void'
    (DeclRefExpr 0x9eb5354 <col:17> '_CharT *' lvalue Var 0x9eb49c0 '__c' '_CharT *'))
  (ReturnStmt 0x9eb53a0 <line:224:7, col:14>
    (DeclRefExpr 0x9eb5388 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0x9eb4500 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x9eb78f0 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0x9eb57a0 <line:232:7, col:30>
    0x9eb5740 "unsigned long __val =
      (ImplicitCastExpr 0x9eb5790 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9eb5778 <col:29> 'int' 0))")
  (ForStmt 0x9eb7858 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9eb5828 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9eb57e0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (DeclRefExpr 0x9eb57b0 <col:14> 'const _CharT *' lvalue ParmVar 0x9eb55c0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x9eb57c8 <col:21> 'const _CharT *' lvalue ParmVar 0x9eb5610 '__hi' 'const _CharT *'))
    (UnaryOperator 0x9eb5868 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9eb584c <col:29> 'const _CharT *' lvalue ParmVar 0x9eb55c0 '__lo' 'const _CharT *'))
    (BinaryOperator 0x9eb7840 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0x9eb587c <line:234:2> 'unsigned long' lvalue Var 0x9eb5740 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0x9eb7818 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb77d0 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (UnaryOperator 0x9eb58b0 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9eb5894 <col:5> 'const _CharT *' lvalue ParmVar 0x9eb55c0 '__lo' 'const _CharT *'))
        (ParenExpr 0x9eb77b8 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0x9eb77a0 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0x9eb5920 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0x9eb5908 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0x9eb58f8 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x9eb58c4 <col:14> 'unsigned long' lvalue Var 0x9eb5740 '__val' 'unsigned long'))
                (IntegerLiteral 0x9eb58e0 <col:23> 'int' 7)))
            (ParenExpr 0x9eb7788 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0x9eb7770 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0x9eb7728 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x9eb5934 <col:9> 'unsigned long' lvalue Var 0x9eb5740 '__val' 'unsigned long'))
                (ParenExpr 0x9eb7710 <col:18, line:237:17> 'int'
                  (BinaryOperator 0x9eb76f8 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0x9eb76e8 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9eb76ac <line:236:19, line:237:5> 'const int' lvalue Var 0x9eb74a0 '__digits' 'const int'))
                    (IntegerLiteral 0x9eb76d0 <col:16> 'int' 7))))))))))
  (ReturnStmt 0x9eb78e0 <line:238:7, col:37>
    (CXXStaticCastExpr 0x9eb78c8 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0x9eb78b8 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0x9eb78a8 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0x9eb787c <col:32> 'unsigned long' lvalue Var 0x9eb5740 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0x9eba278 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb98c0 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9eb9890 <col:23> 'long' 1)
    (IntegerLiteral 0x9eb98a8 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0x9eba288 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9948 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9eb9918 <col:18> 'long' 1)
    (IntegerLiteral 0x9eb9930 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0x9eba298 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb99c8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9eb9998 <col:20> 'long' 1)
    (IntegerLiteral 0x9eb99b0 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0x9eba2a8 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9a48 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9eb9a18 <col:18> 'long' 1)
    (IntegerLiteral 0x9eb9a30 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0x9eba2b8 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9ac8 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x9eb9a98 <col:22> 'long' 1)
    (IntegerLiteral 0x9eb9ab0 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0x9eba2c8 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9b48 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0x9eb9b18 <col:19> 'long' 1)
    (IntegerLiteral 0x9eb9b30 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0x9eba2d8 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9bc8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9eb9b98 <col:18> 'long' 1)
    (IntegerLiteral 0x9eb9bb0 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0x9eba2e8 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9c48 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9eb9c18 <col:20> 'long' 1)
    (IntegerLiteral 0x9eb9c30 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0x9eba2f8 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9cc8 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0x9eb9c98 <col:24> 'long' 1)
    (IntegerLiteral 0x9eb9cb0 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0x9eba308 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9d48 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x9eb9d18 <col:22> 'long' 1)
    (IntegerLiteral 0x9eb9d30 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0x9eba318 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9dc8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9eb9d98 <col:23> 'long' 1)
    (IntegerLiteral 0x9eb9db0 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0x9eba328 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9e48 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9eb9e18 <col:21> 'long' 1)
    (IntegerLiteral 0x9eb9e30 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0x9eba338 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9ec8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9eb9e98 <col:20> 'long' 1)
    (IntegerLiteral 0x9eb9eb0 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0x9eba348 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9f48 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9eb9f18 <col:21> 'long' 1)
    (IntegerLiteral 0x9eb9f30 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0x9eba358 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eb9fc8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9eb9f98 <col:23> 'long' 1)
    (IntegerLiteral 0x9eb9fb0 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0x9eba368 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eba078 <col:25, col:46> 'long' '|'
    (BinaryOperator 0x9eba048 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0x9eba014 <col:25> 'long' EnumConstant 0x9eb9b60 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9eba02c <col:35> 'long' EnumConstant 0x9eb9c60 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9eba060 <col:46> 'long' EnumConstant 0x9eb9ae0 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0x9eba378 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eba128 <col:23, col:41> 'long' '|'
    (BinaryOperator 0x9eba0f8 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0x9eba0c4 <col:23> 'long' EnumConstant 0x9eb9960 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9eba0dc <col:32> 'long' EnumConstant 0x9eb9be0 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9eba110 <col:41> 'long' EnumConstant 0x9eb9a60 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0x9eba388 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eba1a8 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0x9eba174 <col:24> 'long' EnumConstant 0x9eb9ce0 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0x9eba18c <col:40> 'long' EnumConstant 0x9eb99e0 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0x9eba398 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9eba228 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9eba1f8 <col:29> 'long' 1)
    (IntegerLiteral 0x9eba210 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9eba5e0 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0x9eba5d0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9eba5b8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9eba5a0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9eba528 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9eba518 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9eba508 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9eba4e0 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9eba3b0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9eba588 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9eba578 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9eba568 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9eba540 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9eba3f0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9ebb680 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0x9ebb670 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9ebb658 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9ebb640 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9ebb5c8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebb5b8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebb5a8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ebb580 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9eba600 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9ebb628 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebb618 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebb608 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ebb5e0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9eba640 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9ebb8b0 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0x9ebb8a0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9ebb888 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9ebb870 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9ebb7f8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebb7e8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebb7d8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ebb7b0 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebb6a0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9ebb858 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebb848 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebb838 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ebb810 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebb6e0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0x9ebba60 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0x9ebba50 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9ebba38 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0x9ebba20 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9ebba08 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebb9f8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebb9e8 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9ebb9c0 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebb8d0 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9ebc160 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0x9ebc150 <col:5, col:24>
    (ImplicitCastExpr 0x9ebc140 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9ebc128 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9ebbbf8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebbab0 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9ebbca8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9ebbc98 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebbc60 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb510 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9ebbc40 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebbc10 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebbab0 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9ebbc50 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebbc28 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebbaf0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9ebc388 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0x9ebc378 <col:5, col:24>
    (ImplicitCastExpr 0x9ebc368 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9ebc350 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9ebc298 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebc190 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9ebc328 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9ebc318 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebc300 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9ebc2e0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebc2b0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebc190 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9ebc2f0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebc2c8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebc1d0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9ebc5a8 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0x9ebc598 <col:5, col:24>
    (ImplicitCastExpr 0x9ebc588 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9ebc570 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9ebc4b8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebc3b0 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9ebc548 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9ebc538 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebc520 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb740 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9ebc500 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebc4d0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebc3b0 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9ebc510 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9ebc4e8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ebc3f0 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0x9ebc9a8 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebc650 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9ebc620 <col:18> 'long' 1)
    (IntegerLiteral 0x9ebc638 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0x9ebc9b8 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebc6d8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9ebc6a8 <col:18> 'long' 1)
    (IntegerLiteral 0x9ebc6c0 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0x9ebc9c8 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebc758 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9ebc728 <col:18> 'long' 1)
    (IntegerLiteral 0x9ebc740 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0x9ebc9d8 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebc7d8 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0x9ebc7a8 <col:17> 'long' 1)
    (IntegerLiteral 0x9ebc7c0 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0x9ebc9e8 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebc858 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9ebc828 <col:18> 'long' 1)
    (IntegerLiteral 0x9ebc840 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0x9ebc9f8 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebc8d8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9ebc8a8 <col:20> 'long' 1)
    (IntegerLiteral 0x9ebc8c0 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0x9ebca08 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebc958 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9ebc928 <col:29> 'long' 1)
    (IntegerLiteral 0x9ebc940 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9ebcc50 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0x9ebcc40 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9ebcc28 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9ebcc10 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9ebcb98 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebcb88 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebcb78 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9ebcb50 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebca20 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9ebcbf8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebcbe8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebcbd8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9ebcbb0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebca60 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9ebce80 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0x9ebce70 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9ebce58 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9ebce40 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9ebcdc8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebcdb8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebcda8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9ebcd80 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebcc70 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9ebce28 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebce18 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebce08 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9ebcde0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebccb0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9ebd0b0 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0x9ebd0a0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9ebd088 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9ebd070 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9ebcff8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebcfe8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebcfd8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9ebcfb0 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebcea0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9ebd058 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebd048 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebd038 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9ebd010 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebcee0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0x9ebd260 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0x9ebd250 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9ebd238 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0x9ebd220 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9ebd208 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebd1f8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebd1e8 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9ebd1c0 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd0d0 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9ebd520 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0x9ebd510 <col:5, col:24>
    (ImplicitCastExpr 0x9ebd500 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9ebd4e8 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9ebd3f8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd2b0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9ebd4a8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9ebd498 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebd460 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9ebd440 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ebd410 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd2b0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9ebd450 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ebd428 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd2f0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9ebd748 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0x9ebd738 <col:5, col:24>
    (ImplicitCastExpr 0x9ebd728 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9ebd710 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9ebd658 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd550 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9ebd6e8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9ebd6d8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebd6c0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcae0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9ebd6a0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ebd670 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd550 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9ebd6b0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ebd688 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd590 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9ebd968 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0x9ebd958 <col:5, col:24>
    (ImplicitCastExpr 0x9ebd948 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9ebd930 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9ebd878 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd770 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9ebd908 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9ebd8f8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebd8e0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcf40 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9ebd8c0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ebd890 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd770 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9ebd8d0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9ebd8a8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9ebd7b0 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0x9ebdc38 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ebd9e0 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0x9ebdc48 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebda68 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9ebda38 <col:21> 'long' 1)
    (IntegerLiteral 0x9ebda50 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0x9ebdc58 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebdae8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9ebdab8 <col:21> 'long' 1)
    (IntegerLiteral 0x9ebdad0 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0x9ebdc68 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebdb68 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9ebdb38 <col:21> 'long' 1)
    (IntegerLiteral 0x9ebdb50 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0x9ebdc78 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebdbe8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9ebdbb8 <col:28> 'long' 1)
    (IntegerLiteral 0x9ebdbd0 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9ebdec0 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0x9ebdeb0 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9ebde98 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9ebde80 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0x9ebde08 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebddf8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebdde8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ebddc0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebdc90 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9ebde68 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebde58 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebde48 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ebde20 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebdcd0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9ebe0f0 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0x9ebe0e0 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9ebe0c8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9ebe0b0 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0x9ebe038 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebe028 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebe018 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ebdff0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebdee0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9ebe098 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebe088 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebe078 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ebe050 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebdf20 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9ebe320 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0x9ebe310 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9ebe2f8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9ebe2e0 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0x9ebe268 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebe258 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebe248 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ebe220 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe110 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9ebe2c8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebe2b8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebe2a8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ebe280 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe150 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0x9ebe4d0 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0x9ebe4c0 <col:5, col:47>
    (CXXFunctionalCastExpr 0x9ebe4a8 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0x9ebe490 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0x9ebe478 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9ebe468 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9ebe458 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9ebe430 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe340 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9ebe790 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0x9ebe780 <col:5, col:24>
    (ImplicitCastExpr 0x9ebe770 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9ebe758 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9ebe668 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe520 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9ebe718 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9ebe708 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebe6d0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9ebdf80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9ebe6b0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebe680 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe520 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9ebe6c0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebe698 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe560 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9ebe9b8 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0x9ebe9a8 <col:5, col:24>
    (ImplicitCastExpr 0x9ebe998 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9ebe980 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9ebe8c8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe7c0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9ebe958 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9ebe948 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebe930 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9ebdd50 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9ebe910 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebe8e0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe7c0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9ebe920 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebe8f8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe800 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9ebebd8 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0x9ebebc8 <col:5, col:24>
    (ImplicitCastExpr 0x9ebebb8 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9ebeba0 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9ebeae8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe9e0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9ebeb78 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9ebeb68 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ebeb50 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9ebe1b0 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9ebeb30 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebeb00 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebe9e0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9ebeb40 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9ebeb18 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9ebea20 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0x9ebedc8 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ebec50 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0x9ebedd8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ebeca8 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0x9ebede8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ebecf8 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0x9ebedf8 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9ebed78 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9ebed48 <col:28> 'long' 1)
    (IntegerLiteral 0x9ebed60 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0x9ec2a24 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb98e0 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0x9ec2a84 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9960 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0x9ec2ae4 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb99e0 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0x9ec2b44 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9a60 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0x9ec2ba4 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9ae0 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0x9ec2c04 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9b60 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0x9ec2c64 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9be0 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0x9ec2cc4 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9c60 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0x9ec2d24 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9ce0 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0x9ec2d84 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9d60 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0x9ec2de4 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9de0 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0x9ec2e44 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9e60 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0x9ec2ea4 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9ee0 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0x9ec2f04 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9f60 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0x9ec2f64 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eb9fe0 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0x9ec2fc4 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eba090 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0x9ec3024 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eba140 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0x9ec3084 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9eba1c0 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0x9ec3134 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0x9ebda80 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0x9ec3194 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0x9ebdb00 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0x9ec31f4 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0x9ebdb80 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0x9ec3254 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0x9ebda00 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0x9ec3304 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0x9ebc670 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0x9ec3364 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0x9ebc6f0 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0x9ec33c4 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0x9ebc770 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0x9ec3424 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0x9ebc7f0 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0x9ec3484 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0x9ebc870 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0x9ec34e4 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0x9ebc8f0 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0x9ec3594 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9ebec70 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0x9ec35f4 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9ebecc0 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0x9ec3654 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9ebed10 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0x9ec6260 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0x9ec6248 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0x9ec41b0 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0x9ec62a0 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0x9ec6288 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0x9ec4110 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0x9ec62e0 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0x9ec62c8 <col:46> 'int' lvalue ParmVar 0x9ec4160 '__index' 'int'))
), _M_refcount((IntegerLiteral 0x9ec6308 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0x9ec6348 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0x9ec6438 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0x9ec6410 <col:28, col:76> 'void'
    (ImplicitCastExpr 0x9ec6400 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ec637c <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0x9dd1080 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9ec63d0 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9ec63b0 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0x9ec40b0
        (CXXThisExpr 0x9ec63a0 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0x9ec63e8 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0x9ec6678 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0x9ec6450 <line:481:62>)
  (DeclStmt 0x9ec6590 <line:482:9, col:77>
    0x9ec6470 "int __res =
      (CallExpr 0x9ec6568 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9ec6558 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec64bc <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9dd0bf0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9ec6510 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9ec64f0 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0x9ec40b0
            (CXXThisExpr 0x9ec64e0 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0x9ec6540 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0x9ec6528 <col:75> 'int' 1)))")
  (IfStmt 0x9ec6620 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0x9ec65e0 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0x9ec65d0 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ec65a0 <col:13> 'int' lvalue Var 0x9ec6470 '__res' 'int'))
      (IntegerLiteral 0x9ec65b8 <col:22> 'int' 0))
    (CompoundStmt 0x9ec6608 <line:484:11, line:486:11>
      (NullStmt 0x9ec65f8 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0x9ec6668 <line:487:9, col:16>
    (ImplicitCastExpr 0x9ec6658 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0x9ec663c <col:16> 'int' lvalue Var 0x9ec6470 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0x9ec66b0 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0x9ec6698 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0x9ec66f0 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0x9ec66d8 <col:40> 'int' 0))
) (CompoundStmt 0x9ec6720 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0x9ec4928 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ec48d0 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0x9ec67b8 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0x9ec67a8 <col:7, col:14>
    (ImplicitCastExpr 0x9ec6798 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0x9ec6774 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
        (CXXThisExpr 0x9ec6748 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0x9ec6910 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0x9ec6858 <line:565:7, col:32>
    0x9ec67e0 "fmtflags __old =
      (ImplicitCastExpr 0x9ec6848 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9ec6828 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
          (CXXThisExpr 0x9ec6818 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9ec68c0 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0x9ec6878 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
      (CXXThisExpr 0x9ec6868 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9ec68b0 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9ec6898 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ec51d0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9ec6900 <line:567:7, col:14>
    (ImplicitCastExpr 0x9ec68f0 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9ec68d8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9ec67e0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0x9d68a38 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0x9d68930 <line:581:7, col:32>
    0x9ec6940 "fmtflags __old =
      (ImplicitCastExpr 0x9ec69a8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9ec6988 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
          (CXXThisExpr 0x9ec6978 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x9d689d8 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d689c8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d68998 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebbb90 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d68950 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
      (CXXThisExpr 0x9d68940 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9d68988 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d68970 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ec52c0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d68a28 <line:583:7, col:14>
    (ImplicitCastExpr 0x9d68a18 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d689fc <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9ec6940 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0x9d68d68 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0x9d68ad8 <line:598:7, col:32>
    0x9d68a60 "fmtflags __old =
      (ImplicitCastExpr 0x9d68ac8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x9d68aa8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
          (CXXThisExpr 0x9d68a98 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x9d68bd0 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d68bc0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d68ba8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebc230 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d68af8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
      (CXXThisExpr 0x9d68ae8 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9d68b88 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9d68b78 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d68b40 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb950 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x9d68b30 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9d68b18 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ec53c0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0x9d68d08 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d68cf8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d68ce0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebbb90 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d68c08 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
      (CXXThisExpr 0x9d68bf8 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0x9d68cc8 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0x9d68ca0 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9d68c90 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9d68c78 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9d68c58 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9d68c28 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ec5380 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9d68c68 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9d68c40 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ec53c0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0x9d68d58 <line:601:7, col:14>
    (ImplicitCastExpr 0x9d68d48 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d68d2c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x9d68a60 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0x9d68e78 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0x9d68e50 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x9d68e40 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9d68e28 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebc230 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x9d68d98 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x9ec3da0
      (CXXThisExpr 0x9d68d88 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x9d68e08 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9d68df8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9d68de0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb950 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x9d68dd0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9d68db8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9ec54b0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0x9d68ee0 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0x9d68ed0 <col:7, col:14>
    (ImplicitCastExpr 0x9d68ec0 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x9d68ea0 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0x9ec3d20
        (CXXThisExpr 0x9d68e90 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0x9d69030 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0x9d68f78 <line:633:7, col:38>
    0x9d68f00 "streamsize __old =
      (ImplicitCastExpr 0x9d68f68 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9d68f48 <col:26> 'streamsize':'int' lvalue ->_M_precision 0x9ec3d20
          (CXXThisExpr 0x9d68f38 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9d68fe0 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0x9d68f98 <col:7> 'streamsize':'int' lvalue ->_M_precision 0x9ec3d20
      (CXXThisExpr 0x9d68f88 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9d68fd0 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d68fb8 <col:22> 'streamsize':'int' lvalue ParmVar 0x9ec5680 '__prec' 'streamsize':'int')))
  (ReturnStmt 0x9d69020 <line:635:7, col:14>
    (ImplicitCastExpr 0x9d69010 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d68ff8 <col:14> 'streamsize':'int' lvalue Var 0x9d68f00 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0x9d690a0 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0x9d69090 <col:7, col:14>
    (ImplicitCastExpr 0x9d69080 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x9d69060 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0x9ec3d60
        (CXXThisExpr 0x9d69050 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0x9d691f0 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0x9d69138 <line:656:7, col:34>
    0x9d690c0 "streamsize __old =
      (ImplicitCastExpr 0x9d69128 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x9d69108 <col:26> 'streamsize':'int' lvalue ->_M_width 0x9ec3d60
          (CXXThisExpr 0x9d690f8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x9d691a0 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0x9d69158 <col:7> 'streamsize':'int' lvalue ->_M_width 0x9ec3d60
      (CXXThisExpr 0x9d69148 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x9d69190 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d69178 <col:18> 'streamsize':'int' lvalue ParmVar 0x9ec57f0 '__wide' 'streamsize':'int')))
  (ReturnStmt 0x9d691e0 <line:658:7, col:14>
    (ImplicitCastExpr 0x9d691d0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9d691b8 <col:14> 'streamsize':'int' lvalue Var 0x9d690c0 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0x9ec6238 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0x9d69278 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0x9d69268 <col:7, col:14>
    (CXXConstructExpr 0x9d69240 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0x9d69220 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x9ec4c50
        (CXXThisExpr 0x9d69210 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0x9d692d0 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0x9d692c0 <col:7, col:14>
    (MemberExpr 0x9d692a0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x9ec4c50
      (CXXThisExpr 0x9d69290 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0x9d69558 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0x9d69500 <line:744:7, line:745:47>
    0x9d69300 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9d694e0 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9d693b8 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0x9d693a0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9d69380 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9d69334 <col:25> 'int' lvalue ParmVar 0x9ec5c50 '__ix' 'int'))
            (ImplicitCastExpr 0x9d69390 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9d69360 <col:32> 'int' lvalue ->_M_word_size 0x9ec4a60
                (CXXThisExpr 0x9d69350 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9d69438 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9d69418 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9d693e0 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9ec4ac0
              (CXXThisExpr 0x9d693d0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9d69428 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d69400 <col:14> 'int' lvalue ParmVar 0x9ec5c50 '__ix' 'int')))
        (CXXMemberCallExpr 0x9d694a8 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9d69460 <col:22> '<bound member function type>' ->_M_grow_words 0x9ec4be0
            (CXXThisExpr 0x9d69450 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9d694d0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d69480 <col:36> 'int' lvalue ParmVar 0x9ec5c50 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9d69498 <col:42> '_Bool' true)))")
  (ReturnStmt 0x9d69548 <line:746:7, col:21>
    (MemberExpr 0x9d69528 <col:14, col:21> 'long' lvalue ._M_iword 0x9ec4770
      (DeclRefExpr 0x9d69510 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9d69300 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0x9d697d8 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0x9d69780 <line:765:7, line:766:48>
    0x9d69580 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x9d69760 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x9d69638 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0x9d69620 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x9d69600 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x9d695b4 <col:25> 'int' lvalue ParmVar 0x9ec5d50 '__ix' 'int'))
            (ImplicitCastExpr 0x9d69610 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x9d695e0 <col:32> 'int' lvalue ->_M_word_size 0x9ec4a60
                (CXXThisExpr 0x9d695d0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x9d696b8 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x9d69698 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x9d69660 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9ec4ac0
              (CXXThisExpr 0x9d69650 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x9d696a8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d69680 <col:14> 'int' lvalue ParmVar 0x9ec5d50 '__ix' 'int')))
        (CXXMemberCallExpr 0x9d69728 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x9d696e0 <col:22> '<bound member function type>' ->_M_grow_words 0x9ec4be0
            (CXXThisExpr 0x9d696d0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x9d69750 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x9d69700 <col:36> 'int' lvalue ParmVar 0x9ec5d50 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x9d69718 <col:42> '_Bool' false)))")
  (ReturnStmt 0x9d697c8 <line:767:7, col:21>
    (MemberExpr 0x9d697a8 <col:14, col:21> 'void *' lvalue ._M_pword 0x9ec4730
      (DeclRefExpr 0x9d69790 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x9d69580 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0x9d699f8 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0x9d699a0 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6997c <col:5, col:12> '<bound member function type>' .setf 0x9ec5310
      (DeclRefExpr 0x9d698e4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d69800 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d699c0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6995c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec29f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d699e8 <line:799:5, col:12>
    (DeclRefExpr 0x9d699cc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d69800 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0x9d69bb8 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0x9d69b60 <line:806:5, col:38> 'void'
    (MemberExpr 0x9d69afc <col:5, col:12> '<bound member function type>' .unsetf 0x9ec5550
      (DeclRefExpr 0x9d69ae4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d69a20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d69b80 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d69b3c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec29f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d69ba8 <line:807:5, col:12>
    (DeclRefExpr 0x9d69b8c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d69a20 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0x9d69db8 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0x9d69d60 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d69d3c <col:5, col:12> '<bound member function type>' .setf 0x9ec5310
      (DeclRefExpr 0x9d69ca4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d69be0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d69d80 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d69d1c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d69da8 <line:815:5, col:12>
    (DeclRefExpr 0x9d69d8c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d69be0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0x9d69f78 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0x9d69f20 <line:822:5, col:37> 'void'
    (MemberExpr 0x9d69ebc <col:5, col:12> '<bound member function type>' .unsetf 0x9ec5550
      (DeclRefExpr 0x9d69ea4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d69de0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d69f40 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d69efc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d69f68 <line:823:5, col:12>
    (DeclRefExpr 0x9d69f4c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d69de0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0x9d6a178 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0x9d6a120 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6a0fc <col:5, col:12> '<bound member function type>' .setf 0x9ec5310
      (DeclRefExpr 0x9d6a064 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d69fa0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6a140 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6a0dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2db0 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6a168 <line:831:5, col:12>
    (DeclRefExpr 0x9d6a14c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d69fa0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0x9d6a338 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0x9d6a2e0 <line:838:5, col:38> 'void'
    (MemberExpr 0x9d6a27c <col:5, col:12> '<bound member function type>' .unsetf 0x9ec5550
      (DeclRefExpr 0x9d6a264 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6a1a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6a300 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6a2bc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2db0 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6a328 <line:839:5, col:12>
    (DeclRefExpr 0x9d6a30c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6a1a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0x9d6a538 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0x9d6a4e0 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6a4bc <col:5, col:12> '<bound member function type>' .setf 0x9ec5310
      (DeclRefExpr 0x9d6a424 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6a360 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6a500 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6a49c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2e10 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6a528 <line:847:5, col:12>
    (DeclRefExpr 0x9d6a50c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6a360 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0x9d6a6f8 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0x9d6a6a0 <line:854:5, col:36> 'void'
    (MemberExpr 0x9d6a63c <col:5, col:12> '<bound member function type>' .unsetf 0x9ec5550
      (DeclRefExpr 0x9d6a624 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6a560 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6a6c0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6a67c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2e10 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6a6e8 <line:855:5, col:12>
    (DeclRefExpr 0x9d6a6cc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6a560 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0x9d6a8f8 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0x9d6a8a0 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6a87c <col:5, col:12> '<bound member function type>' .setf 0x9ec5310
      (DeclRefExpr 0x9d6a7e4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6a720 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6a8c0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6a85c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2e70 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6a8e8 <line:863:5, col:12>
    (DeclRefExpr 0x9d6a8cc <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6a720 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0x9d6aab8 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0x9d6aa60 <line:870:5, col:35> 'void'
    (MemberExpr 0x9d6a9fc <col:5, col:12> '<bound member function type>' .unsetf 0x9ec5550
      (DeclRefExpr 0x9d6a9e4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6a920 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6aa80 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6aa3c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2e70 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6aaa8 <line:871:5, col:12>
    (DeclRefExpr 0x9d6aa8c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6a920 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0x9d6acb8 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0x9d6ac60 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6ac3c <col:5, col:12> '<bound member function type>' .setf 0x9ec5310
      (DeclRefExpr 0x9d6aba4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6aae0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6ac80 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6ac1c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6aca8 <line:879:5, col:12>
    (DeclRefExpr 0x9d6ac8c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6aae0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0x9d6ae78 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0x9d6ae20 <line:886:5, col:38> 'void'
    (MemberExpr 0x9d6adbc <col:5, col:12> '<bound member function type>' .unsetf 0x9ec5550
      (DeclRefExpr 0x9d6ada4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6ace0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6ae40 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6adfc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6ae68 <line:887:5, col:12>
    (DeclRefExpr 0x9d6ae4c <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6ace0 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0x9d6b078 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0x9d6b020 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6affc <col:6, col:13> '<bound member function type>' .setf 0x9ec5310
      (DeclRefExpr 0x9d6af64 <col:6> 'class std::ios_base' lvalue ParmVar 0x9d6aea0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6b040 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6afdc <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ed0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6b068 <line:895:6, col:13>
    (DeclRefExpr 0x9d6b04c <col:13> 'class std::ios_base' lvalue ParmVar 0x9d6aea0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0x9d6b238 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0x9d6b1e0 <line:902:6, col:37> 'void'
    (MemberExpr 0x9d6b17c <col:6, col:13> '<bound member function type>' .unsetf 0x9ec5550
      (DeclRefExpr 0x9d6b164 <col:6> 'class std::ios_base' lvalue ParmVar 0x9d6b0a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6b200 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6b1bc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ed0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6b228 <line:903:6, col:13>
    (DeclRefExpr 0x9d6b20c <col:13> 'class std::ios_base' lvalue ParmVar 0x9d6b0a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0x9d6b490 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0x9d6b420 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6b3fc <col:6, col:13> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6b324 <col:6> 'class std::ios_base' lvalue ParmVar 0x9d6b260 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6b448 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6b39c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b70 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6b458 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6b3dc <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6b480 <line:912:6, col:13>
    (DeclRefExpr 0x9d6b464 <col:13> 'class std::ios_base' lvalue ParmVar 0x9d6b260 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0x9d6b6f0 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0x9d6b680 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6b65c <col:5, col:12> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6b584 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6b4c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6b6a8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6b5fc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2bd0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6b6b8 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6b63c <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6b6e0 <line:920:5, col:12>
    (DeclRefExpr 0x9d6b6c4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6b4c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0x9d6b950 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0x9d6b8e0 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6b8bc <col:5, col:12> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6b7e4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6b720 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6b908 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6b85c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c90 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6b918 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6b89c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6b940 <line:928:5, col:12>
    (DeclRefExpr 0x9d6b924 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6b720 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0x9d6bbb0 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0x9d6bb40 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6bb1c <col:5, col:12> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6ba44 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6b980 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6bb68 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6babc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2a50 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6bb78 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6bafc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6bba0 <line:937:5, col:12>
    (DeclRefExpr 0x9d6bb84 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6b980 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0x9d6be10 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0x9d6bda0 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6bd7c <col:5, col:12> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6bca4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6bbe0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6bdc8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6bd1c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6bdd8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6bd5c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6be00 <line:945:5, col:12>
    (DeclRefExpr 0x9d6bde4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6bbe0 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0x9d6c070 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0x9d6c000 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6bfdc <col:5, col:12> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6bf04 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6be40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6c028 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6bf7c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6c038 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6bfbc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6c060 <line:953:5, col:12>
    (DeclRefExpr 0x9d6c044 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6be40 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0x9d6c2d0 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0x9d6c260 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6c23c <col:5, col:12> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6c164 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6c0a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6c288 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c1dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ab0 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6c298 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c21c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec3050 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6c2c0 <line:962:5, col:12>
    (DeclRefExpr 0x9d6c2a4 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6c0a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0x9d6c530 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0x9d6c4c0 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9d6c49c <col:5, col:12> '<bound member function type>' .setf 0x9ec5440
      (DeclRefExpr 0x9d6c3c4 <col:5> 'class std::ios_base' lvalue ParmVar 0x9d6c300 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9d6c4e8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c43c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2cf0 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x9d6c4f8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9d6c47c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec3050 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9d6c520 <line:970:5, col:12>
    (DeclRefExpr 0x9d6c504 <col:12> 'class std::ios_base' lvalue ParmVar 0x9d6c300 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0x9ee21c8 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0x9ee23f0 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0x9ee22a0 <line:208:2, col:30>
    0x9ee21e0 "std::locale __tmp =
      (ParenListExpr 0x9ee2280 <col:14, col:29> 'class std::locale'
        (CallExpr 0x9ee2260 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee2228 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee2218 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0x9ee2310 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ee22c0 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9ee22b0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9ee22f4 <col:14> 'const class std::locale' lvalue ParmVar 0x9edf420 '__loc' 'const class std::locale &'))
  (BinaryOperator 0x9ee2378 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0x9ee2340 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0x9edf300
      (CXXThisExpr 0x9ee2330 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9ee2360 <col:18> 'const class std::locale' lvalue ParmVar 0x9edf420 '__loc' 'const class std::locale &'))
  (ReturnStmt 0x9ee23e0 <line:211:2, col:9>
    (CXXConstructExpr 0x9ee23b8 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x9ee23a8 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x9ee2390 <col:9> 'class std::locale' lvalue Var 0x9ee21e0 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0x9ee2468 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0x9ee2458 <col:9, col:16>
    (MemberExpr 0x9ee2438 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0x9edf300
      (CXXThisExpr 0x9ee2428 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0x9ee2530 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0x9ee2520 <col:9, col:37>
    (CallExpr 0x9ee24f8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ee2490 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ee2480 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ee24c4 <col:29> 'char_type *' lvalue ParmVar 0x9edf560 '__s' 'char_type *')
      (DeclRefExpr 0x9ee24dc <col:34> 'streamsize':'int' lvalue ParmVar 0x9edf5a0 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ee1e00 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ee1df0 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ee1dd8 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ee1db8 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee1d54 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ee1dc8 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee1d94 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9ee2610 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0x9ee2600 <col:9, col:50>
    (CallExpr 0x9ee25d8 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ee2558 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ee2548 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ee258c <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x9edf6e0 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x9ee25a4 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9edf770 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0x9ee25bc <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9edf800 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9ee1ef0 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ee1ee0 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ee1ec8 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ee1ea8 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee1e44 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ee1eb8 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee1e84 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9ee26d8 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0x9ee26c8 <col:9, col:42>
    (CallExpr 0x9ee26a0 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ee2638 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ee2628 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ee266c <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x9edf960 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0x9ee2684 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9edf9d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0x9ee2768 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0x9ee2758 <col:19, col:37>
    (CallExpr 0x9ee2738 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ee2700 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0x9ee26f0 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0x9ee29f0 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0x9ee28f8 <line:265:2, col:55>
    0x9ee2790 "const streamsize __ret =
      (CXXOperatorCallExpr 0x9ee28d0 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee2898 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CallExpr 0x9ee2810 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee27d8 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee27c8 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9ee2878 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee2840 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee2830 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0x9ee29e0 <line:266:2, col:41>
    (ConditionalOperator 0x9ee29c0 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0x9ee29b0 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9ee29a0 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9ee2908 <col:9> 'const streamsize':'const int' lvalue Var 0x9ee2790 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0x9ee2920 <col:17> 'const streamsize':'const int' lvalue Var 0x9ee2790 '__ret' 'const streamsize':'const int')
      (CallExpr 0x9ee2980 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee2948 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9ee2938 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0x9ee2d18 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0x9ee2ac0 <line:279:2, col:37>
    0x9ee2a10 "int_type __ret =
      (CallExpr 0x9ee2aa0 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee2a68 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0x9ee2cd0 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0x9ee2c10 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0x9ee2ad0 <line:280:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0x9ee2be8 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0x9ee2bc0 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee2b08 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0x9ee2b88 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ee2b50 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0x9ee2b40 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9ee2ba4 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee2a10 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0x9ee2c00 <col:22> '_Bool' true))
    (BinaryOperator 0x9ee2cb8 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9ee2c34 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee2a10 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9ee2c98 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee2c60 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9ee2c50 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0x9ee2d08 <line:283:2, col:9>
    (DeclRefExpr 0x9ee2cec <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee2a10 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0x9ee31b8 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0x9ee2d78 <line:297:2, col:16>
    0x9ee2d40 "int_type __ret")
  (IfStmt 0x9ee3170 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0x9ee2ef0 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9ee2d88 <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9ee2eb8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee2e70 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (CallExpr 0x9ee2de8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee2db0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee2da0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9ee2e50 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee2e18 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee2e08 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9ee2ee0 <col:53> '_Bool' true))
    (CompoundStmt 0x9ee30c0 <line:299:4, line:302:4>
      (BinaryOperator 0x9ee3028 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9ee2f14 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee2d40 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9ee3008 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee2f50 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9ee2ff0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9ee2fd0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ee2f98 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9ee2f88 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9ee30a0 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee3050 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9ee3040 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9ee3088 <col:18> 'int' 1)))
    (BinaryOperator 0x9ee3158 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9ee30d8 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee2d40 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9ee3138 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee3100 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9ee30f0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9ee31a8 <line:305:2, col:9>
    (DeclRefExpr 0x9ee318c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee2d40 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0x9ee35c0 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0x9ee3218 <line:319:2, col:16>
    0x9ee31e0 "int_type __ret")
  (IfStmt 0x9ee3578 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0x9ee3390 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9ee3228 <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9ee3358 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee3310 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (CallExpr 0x9ee3288 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee3250 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee3240 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9ee32f0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee32b8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee32a8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9ee3380 <col:53> '_Bool' true))
    (BinaryOperator 0x9ee34c8 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0x9ee33b4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee31e0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9ee34a8 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee33f0 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0x9ee3490 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0x9ee3470 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ee3438 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x9ee3428 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0x9ee3560 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9ee34e0 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee31e0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9ee3540 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ee3508 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9ee34f8 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9ee35b0 <line:324:2, col:9>
    (DeclRefExpr 0x9ee3594 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee31e0 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9ee3690 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0x9ee3680 <col:9, col:37>
    (CallExpr 0x9ee3658 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ee35f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ee35e0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ee3624 <col:29> 'char_type *' lvalue ParmVar 0x9edfdb0 '__s' 'char_type *')
      (DeclRefExpr 0x9ee363c <col:34> 'streamsize':'int' lvalue ParmVar 0x9edfdf0 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0x9eea760 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0x9ee36e8 <line:353:2, col:16>
    0x9ee36b0 "int_type __ret")
  (DeclStmt 0x9eea200 <line:354:2, col:53>
    0x9ee3700 "const bool __testpos =
      (CXXOperatorCallExpr 0x9eea1d8 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9ee3808 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (CallExpr 0x9ee3780 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee3748 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee3738 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9ee37e8 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ee37b0 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0x9ee37a0 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0x9eea718 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0x9eea3f0 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0x9eea210 <line:355:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x9eea3c8 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0x9eea250 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9eea240 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9eea228 <col:24> 'const _Bool' lvalue Var 0x9ee3700 '__testpos' 'const _Bool')))
        (UnaryOperator 0x9eea3b0 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x9eea388 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eea288 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0x9eea2bc <col:26> 'char_type':'_CharT' lvalue ParmVar 0x9edff00 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9eea370 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0x9eea320 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9eea2e8 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9eea2d8 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0x9eea358 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0x9eea340 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0x9eea3e0 <col:50> '_Bool' false))
    (BinaryOperator 0x9eea528 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0x9eea414 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee36b0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9eea508 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eea440 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9eea430 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x9eea4e8 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eea498 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0x9eea4cc <col:53> 'char_type':'_CharT' lvalue ParmVar 0x9edff00 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0x9eea700 <line:359:4, line:362:4>
      (CallExpr 0x9eea5b8 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eea550 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9eea540 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x9eea5a0 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x9eea588 <col:19> 'int' 1)))
      (BinaryOperator 0x9eea6e8 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9eea5d8 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee36b0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9eea6c8 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eea610 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9eea6b0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9eea690 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eea658 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9eea648 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0x9eea750 <line:363:2, col:9>
    (DeclRefExpr 0x9eea734 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ee36b0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0x9eeac20 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0x9eea7c8 <line:378:2, col:16>
    0x9eea790 "int_type __ret")
  (IfStmt 0x9eeabd8 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0x9eea940 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9eea7d8 <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9eea908 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9eea8c0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (CallExpr 0x9eea838 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eea800 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9eea7f0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9eea8a0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eea868 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9eea858 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9eea930 <col:53> '_Bool' true))
    (CompoundStmt 0x9eeab28 <line:380:4, line:383:4>
      (CallExpr 0x9eea9e0 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eea978 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9eea968 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x9eea9c8 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x9eea9b0 <col:19> 'int' 1)))
      (BinaryOperator 0x9eeab10 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9eeaa00 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eea790 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9eeaaf0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eeaa38 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9eeaad8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9eeaab8 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eeaa80 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9eeaa70 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0x9eeabc0 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x9eeab40 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eea790 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9eeaba0 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eeab68 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9eeab58 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x9eeac10 <line:386:2, col:9>
    (DeclRefExpr 0x9eeabf4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eea790 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0x9eeb1a8 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0x9eeac88 <line:405:2, col:16>
    0x9eeac50 "int_type __ret")
  (IfStmt 0x9eeb160 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0x9eeae00 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0x9eeac98 <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9eeadc8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9eead80 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (CallExpr 0x9eeacf8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eeacc0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x9eeacb0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x9eead60 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eead28 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x9eead18 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x9eeadf0 <col:53> '_Bool' true))
    (CompoundStmt 0x9eeb018 <line:407:4, line:411:4>
      (BinaryOperator 0x9eeaec0 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0x9eeae90 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0x9eeae70 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9eeae38 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x9eeae28 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9eeaea4 <col:22> 'char_type':'_CharT' lvalue ParmVar 0x9ee0090 '__c' 'char_type':'_CharT'))
      (CallExpr 0x9eeaf38 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eeaee8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9eeaed8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9eeaf20 <col:18> 'int' 1))
      (BinaryOperator 0x9eeb000 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0x9eeaf58 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eeac50 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9eeafe0 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eeaf90 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0x9eeafc4 <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9ee0090 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0x9eeb148 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0x9eeb034 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eeac50 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x9eeb128 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eeb060 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9eeb050 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x9eeb108 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eeb0b8 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0x9eeb0ec <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9ee0090 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0x9eeb198 <line:414:2, col:9>
    (DeclRefExpr 0x9eeb17c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eeac50 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9eeb278 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0x9eeb268 <col:9, col:37>
    (CallExpr 0x9eeb240 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eeb1d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9eeb1c8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9eeb20c <col:29> 'const char_type *' lvalue ParmVar 0x9ee0180 '__s' 'const char_type *')
      (DeclRefExpr 0x9eeb224 <col:34> 'streamsize':'int' lvalue ParmVar 0x9ee01c0 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0x9eeb290 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0x9eeb2e8 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0x9eeb338 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0x9eeb388 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0x9eeb3d8 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0x9eeb428 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0x9eeb4b8 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0x9eeb4b0)
  (CXXTemporaryObjectExpr 0x9eeb480 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0x9eeb588 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0x9eeb5d8 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0x9eeb5c8 <col:23, col:30>
    (MemberExpr 0x9eeb5a8 <col:30> 'char_type *const' lvalue ->_M_in_beg 0x9edf180
      (CXXThisExpr 0x9eeb598 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0x9eeb630 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0x9eeb620 <col:23, col:30>
    (MemberExpr 0x9eeb600 <col:30> 'char_type *const' lvalue ->_M_in_cur 0x9edf1c0
      (CXXThisExpr 0x9eeb5f0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0x9eeb688 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0x9eeb678 <col:23, col:30>
    (MemberExpr 0x9eeb658 <col:30> 'char_type *const' lvalue ->_M_in_end 0x9edf200
      (CXXThisExpr 0x9eeb648 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0x9eeb708 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0x9eeb6e8 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9eeb6b0 <col:24> 'char_type *' lvalue ->_M_in_cur 0x9edf1c0
      (CXXThisExpr 0x9eeb6a0 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eeb6d0 <col:37> 'int' lvalue ParmVar 0x9ee0550 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0x9eeb840 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0x9eeb768 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9eeb730 <col:2> 'char_type *' lvalue ->_M_in_beg 0x9edf180
      (CXXThisExpr 0x9eeb720 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eeb750 <col:14> 'char_type *' lvalue ParmVar 0x9ee0620 '__gbeg' 'char_type *'))
  (BinaryOperator 0x9eeb7c8 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9eeb790 <col:2> 'char_type *' lvalue ->_M_in_cur 0x9edf1c0
      (CXXThisExpr 0x9eeb780 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eeb7b0 <col:14> 'char_type *' lvalue ParmVar 0x9ee0670 '__gnext' 'char_type *'))
  (BinaryOperator 0x9eeb828 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0x9eeb7f0 <col:2> 'char_type *' lvalue ->_M_in_end 0x9edf200
      (CXXThisExpr 0x9eeb7e0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eeb810 <col:14> 'char_type *' lvalue ParmVar 0x9ee06c0 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0x9eeb8a0 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0x9eeb890 <col:23, col:30>
    (MemberExpr 0x9eeb870 <col:30> 'char_type *const' lvalue ->_M_out_beg 0x9edf240
      (CXXThisExpr 0x9eeb860 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0x9eeb8f8 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0x9eeb8e8 <col:22, col:29>
    (MemberExpr 0x9eeb8c8 <col:29> 'char_type *const' lvalue ->_M_out_cur 0x9edf280
      (CXXThisExpr 0x9eeb8b8 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0x9eeb950 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0x9eeb940 <col:23, col:30>
    (MemberExpr 0x9eeb920 <col:30> 'char_type *const' lvalue ->_M_out_end 0x9edf2c0
      (CXXThisExpr 0x9eeb910 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0x9eeb9d0 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0x9eeb9b0 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9eeb978 <col:24> 'char_type *' lvalue ->_M_out_cur 0x9edf280
      (CXXThisExpr 0x9eeb968 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eeb998 <col:38> 'int' lvalue ParmVar 0x9ee0950 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0x9eebaf0 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0x9eeba78 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0x9eeb9f8 <col:2> 'char_type *' lvalue ->_M_out_beg 0x9edf240
      (CXXThisExpr 0x9eeb9e8 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0x9eeba60 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0x9eeba28 <col:15> 'char_type *' lvalue ->_M_out_cur 0x9edf280
        (CXXThisExpr 0x9eeba18 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9eeba48 <col:28> 'char_type *' lvalue ParmVar 0x9ee0a20 '__pbeg' 'char_type *')))
  (BinaryOperator 0x9eebad8 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0x9eebaa0 <col:2> 'char_type *' lvalue ->_M_out_end 0x9edf2c0
      (CXXThisExpr 0x9eeba90 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eebac0 <col:15> 'char_type *' lvalue ParmVar 0x9ee0a70 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0x9eebb08 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0x9eebb38 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0x9eebb28 <col:9, col:16>
    (CXXThisExpr 0x9eebb18 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0x9ee1fe0 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ee1fd0 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ee1fb8 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ee1f98 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee1f34 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ee1fa8 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee1f74 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9eebbe0 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0x9eebbd0 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x9eebbb0 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x9eebb90 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9eebb78 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9eebb60 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0x9ee20d0 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9ee20c0 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9ee20a8 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9ee2088 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee2024 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9ee2098 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9ee2064 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9eebc88 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0x9eebc78 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x9eebc58 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x9eebc38 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x9eebc20 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x9eebc08 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0x9eebcc8 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0x9eebcb8 <col:16, col:23>
    (IntegerLiteral 0x9eebca0 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0x9eebd08 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0x9eebcf8 <col:21, col:28>
    (IntegerLiteral 0x9eebce0 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0x9eebda8 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0x9eebd98 <col:9, col:33>
    (CallExpr 0x9eebd78 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eebd40 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0x9eec230 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0x9eebe80 <line:681:2, col:37>
    0x9eebdd0 "int_type __ret =
      (CallExpr 0x9eebe60 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eebe28 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0x9eebfd8 <line:682:2, line:683:14>
    0x9eebea0 "const bool __testeof =
      (CallExpr 0x9eebfb0 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eebef8 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0x9eebf78 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eebf40 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0x9eebf30 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9eebf94 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eebdd0 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x9eec1e8 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0x9eec010 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9eec000 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9eebfe8 <col:7> 'const _Bool' lvalue Var 0x9eebea0 '__testeof' 'const _Bool')))
    (CompoundStmt 0x9eec1d0 <line:685:4, line:688:4>
      (BinaryOperator 0x9eec138 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x9eec024 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eebdd0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x9eec118 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9eec060 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x9eec100 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x9eec0e0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eec0a8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9eec098 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x9eec1b0 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eec160 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9eec150 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x9eec198 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0x9eec220 <line:689:2, col:9>
    (DeclRefExpr 0x9eec204 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x9eebdd0 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0x9ee2140 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9ee2118 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0x9eec2d8 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0x9eec2c8 <col:9, col:33>
    (CallExpr 0x9eec2a8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eec270 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0x9ee21a8 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9ee2180 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0x9eec378 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0x9eec368 <col:9, col:33>
    (CallExpr 0x9eec348 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eec310 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0x9eec5d8 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0x9eec5b8 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9eec4a8 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9eec460 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (CallExpr 0x9eec3d8 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eec3a0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9eec390 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0x9eec440 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9eec408 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x9eec3f8 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0x9eec530 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eec4e0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9eec4d0 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9eec518 <col:16> 'int' 1))
    (CallExpr 0x9eec598 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9eec560 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9eec550 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0x9eec658 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0x9eec638 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9eec600 <col:38> 'char_type *' lvalue ->_M_in_cur 0x9edf1c0
      (CXXThisExpr 0x9eec5f0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eec620 <col:51> 'streamsize':'int' lvalue ParmVar 0x9ee1890 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0x9eec6d8 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0x9eec6b8 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9eec680 <col:38> 'char_type *' lvalue ->_M_out_cur 0x9edf280
      (CXXThisExpr 0x9eec670 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9eec6a0 <col:52> 'streamsize':'int' lvalue ParmVar 0x9ee1980 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0x9eec708 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0x9eec6ec <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ee1ad0 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0x9eec790 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0x9eec778 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ee1ad0 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0x9eec820 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0x9eec808 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ee1ad0 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0x9eec8b0 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0x9eec898 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ee1ad0 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0x9eec940 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0x9eec928 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ee1ad0 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0x9eec9d0 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0x9eec9b8 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ee1ad0 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0x9eeca60 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0x9eeca48 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ee1ad0 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0x9eecaf8 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0x9eecb40 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0x9eecb30 <col:44, col:52>
    (UnaryOperator 0x9eecb18 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eecb08 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0x9ef1b48 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0x9eee020 <line:48:7, col:27>
    0x9eedfd0 "streamsize __ret =
      (IntegerLiteral 0x9eee008 <col:26> 'int' 0)")
  (WhileStmt 0x9ef1af8 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0x9eee080 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9eee060 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9eee030 <col:14> 'streamsize':'int' lvalue Var 0x9eedfd0 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9eee070 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9eee048 <col:22> 'streamsize':'int' lvalue ParmVar 0x9eeded0 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9ef1ad8 <line:50:2, line:73:2>
      (DeclStmt 0x9ef0f28 <line:51:4, col:61>
        0x9eee0a0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x9ef0f00 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9ef0ec8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (CallExpr 0x9eee120 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eee0e8 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x9eee0d8 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9eee188 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9eee150 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9eee140 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x9ef1648 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ef0f60 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9ef0f50 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9ef0f38 <col:8> 'const streamsize':'const int' lvalue Var 0x9eee0a0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x9ef1620 <line:53:6, line:60:6>
          (DeclStmt 0x9ef1020 <line:54:8, col:50>
            0x9ef0f80 "const streamsize __remaining =
              (BinaryOperator 0x9ef1008 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x9ef0fe8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9ef0fb4 <col:39> 'streamsize':'int' lvalue ParmVar 0x9eeded0 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x9ef0ff8 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9ef0fcc <col:45> 'streamsize':'int' lvalue Var 0x9eedfd0 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9ef13c0 <line:55:8, col:65>
            0x9ef1040 "const streamsize __len =
              (ImplicitCastExpr 0x9ef13b0 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x9ef1388 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9ef1378 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ef1318 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x9ef1270 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9cd40c0 'min')))
                  (DeclRefExpr 0x9ef10d0 <col:42> 'const streamsize':'const int' lvalue Var 0x9eee0a0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x9ef10e8 <col:53> 'const streamsize':'const int' lvalue Var 0x9ef0f80 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9ef14c8 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ef13f8 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0x9ef142c <col:26> 'char_type *' lvalue ParmVar 0x9eede90 '__s' 'char_type *')
            (CallExpr 0x9ef1490 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ef1458 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x9ef1448 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9ef14ac <col:45> 'const streamsize':'const int' lvalue Var 0x9ef1040 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x9ef1530 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9ef14f0 <col:8> 'streamsize':'int' lvalue Var 0x9eedfd0 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x9ef1520 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9ef1508 <col:17> 'const streamsize':'const int' lvalue Var 0x9ef1040 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x9ef1580 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9ef1550 <col:8> 'char_type *' lvalue ParmVar 0x9eede90 '__s' 'char_type *')
            (DeclRefExpr 0x9ef1568 <col:15> 'const streamsize':'const int' lvalue Var 0x9ef1040 '__len' 'const streamsize':'const int'))
          (CallExpr 0x9ef1600 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ef15b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ef15a0 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ef15e4 <col:27> 'const streamsize':'const int' lvalue Var 0x9ef1040 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9ef1ab8 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x9ef16b8 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9ef1698 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9ef1664 <col:8> 'streamsize':'int' lvalue Var 0x9eedfd0 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9ef16a8 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9ef167c <col:16> 'streamsize':'int' lvalue ParmVar 0x9eeded0 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9ef1aa0 <line:63:6, line:72:6>
          (DeclStmt 0x9ef1780 <line:64:8, col:42>
            0x9ef16e0 "const int_type __c =
              (CallExpr 0x9ef1760 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ef1728 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ef1718 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0x9ef1a80 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0x9ef18a0 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x9ef1878 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ef17b0 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ef17e4 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9ef16e0 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0x9ef1858 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ef1820 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9ef1a60 <line:66:3, line:69:3>
              (CallExpr 0x9ef1a08 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ef18e0 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0x9ef1960 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9ef1948 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9ef1914 <col:26> 'char_type *' lvalue ParmVar 0x9eede90 '__s' 'char_type *')))
                (CallExpr 0x9ef19e8 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ef1998 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9ef19cc <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9ef16e0 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0x9ef1a48 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9ef1a2c <col:7> 'streamsize':'int' lvalue Var 0x9eedfd0 '__ret' 'streamsize':'int')))
            (BreakStmt 0x9ef1a78 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9ef1b38 <line:74:7, col:14>
    (ImplicitCastExpr 0x9ef1b28 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9ef1b0c <col:14> 'streamsize':'int' lvalue Var 0x9eedfd0 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0x9ef2ad8 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0x9ef1fa0 <line:82:7, col:27>
    0x9ef1f50 "streamsize __ret =
      (IntegerLiteral 0x9ef1f88 <col:26> 'int' 0)")
  (WhileStmt 0x9ef2a88 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0x9ef2000 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x9ef1fe0 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9ef1fb0 <col:14> 'streamsize':'int' lvalue Var 0x9ef1f50 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x9ef1ff0 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9ef1fc8 <col:22> 'streamsize':'int' lvalue ParmVar 0x9ef1e50 '__n' 'streamsize':'int')))
    (CompoundStmt 0x9ef2a68 <line:84:2, line:107:2>
      (DeclStmt 0x9ef2188 <line:85:4, col:61>
        0x9ef2020 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x9ef2160 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x9ef2128 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (CallExpr 0x9ef20a0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ef2068 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x9ef2058 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x9ef2108 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ef20d0 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x9ef20c0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x9ef2680 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ef21c0 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9ef21b0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9ef2198 <col:8> 'const streamsize':'const int' lvalue Var 0x9ef2020 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x9ef2658 <line:87:6, line:94:6>
          (DeclStmt 0x9ef2280 <line:88:8, col:50>
            0x9ef21e0 "const streamsize __remaining =
              (BinaryOperator 0x9ef2268 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x9ef2248 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9ef2214 <col:39> 'streamsize':'int' lvalue ParmVar 0x9ef1e50 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x9ef2258 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9ef222c <col:45> 'streamsize':'int' lvalue Var 0x9ef1f50 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x9ef23f8 <line:89:8, col:65>
            0x9ef22a0 "const streamsize __len =
              (ImplicitCastExpr 0x9ef23e8 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x9ef23c0 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9ef23b0 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9ef2388 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x9ef1270 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9cd40c0 'min')))
                  (DeclRefExpr 0x9ef2328 <col:42> 'const streamsize':'const int' lvalue Var 0x9ef2020 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x9ef2340 <col:53> 'const streamsize':'const int' lvalue Var 0x9ef21e0 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x9ef2500 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ef2430 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0x9ef24b0 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ef2478 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9ef2468 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9ef24cc <col:40> 'const char_type *' lvalue ParmVar 0x9ef1e10 '__s' 'const char_type *')
            (DeclRefExpr 0x9ef24e4 <col:45> 'const streamsize':'const int' lvalue Var 0x9ef22a0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x9ef2568 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9ef2528 <col:8> 'streamsize':'int' lvalue Var 0x9ef1f50 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x9ef2558 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9ef2540 <col:17> 'const streamsize':'const int' lvalue Var 0x9ef22a0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x9ef25b8 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9ef2588 <col:8> 'const char_type *' lvalue ParmVar 0x9ef1e10 '__s' 'const char_type *')
            (DeclRefExpr 0x9ef25a0 <col:15> 'const streamsize':'const int' lvalue Var 0x9ef22a0 '__len' 'const streamsize':'const int'))
          (CallExpr 0x9ef2638 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ef25e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9ef25d8 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9ef261c <col:27> 'const streamsize':'const int' lvalue Var 0x9ef22a0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x9ef2a48 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0x9ef26f0 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x9ef26d0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9ef269c <col:8> 'streamsize':'int' lvalue Var 0x9ef1f50 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x9ef26e0 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9ef26b4 <col:16> 'streamsize':'int' lvalue ParmVar 0x9ef1e50 '__n' 'streamsize':'int')))
        (CompoundStmt 0x9ef2a30 <line:97:6, line:106:6>
          (DeclStmt 0x9ef2858 <line:98:8, col:69>
            0x9ef2710 "int_type __c =
              (CallExpr 0x9ef2838 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ef2758 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ef2748 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0x9ef2818 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ef27b0 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0x9ef2800 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0x9ef27e4 <col:64> 'const char_type *' lvalue ParmVar 0x9ef1e10 '__s' 'const char_type *'))))")
          (IfStmt 0x9ef2a10 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0x9ef2978 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x9ef2950 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ef2888 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9ef28bc <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0x9ef2710 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9ef2930 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9ef28f8 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x9ef29f0 <line:100:3, line:103:3>
              (UnaryOperator 0x9ef29a8 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x9ef298c <col:7> 'streamsize':'int' lvalue Var 0x9ef1f50 '__ret' 'streamsize':'int'))
              (UnaryOperator 0x9ef29d8 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9ef29bc <col:7> 'const char_type *' lvalue ParmVar 0x9ef1e10 '__s' 'const char_type *')))
            (BreakStmt 0x9ef2a08 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x9ef2ac8 <line:108:7, col:14>
    (ImplicitCastExpr 0x9ef2ab8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9ef2a9c <col:14> 'streamsize':'int' lvalue Var 0x9ef1f50 '__ret' 'streamsize':'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0x9ef3678 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0x9ef3020 <line:120:7, col:27>
    0x9ef2fd0 "streamsize __ret =
      (IntegerLiteral 0x9ef3008 <col:26> 'int' 0)")
  (BinaryOperator 0x9ef3058 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0x9ef3030 <col:7> '_Bool' lvalue ParmVar 0x9ef2ea0 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0x9ef3048 <col:17> '_Bool' true))
  (DeclStmt 0x9ef3188 <line:122:7, col:55>
    0x9ef30e0 "typename _Traits::int_type __c =
      (CallExpr 0x9ef3168 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ef3130 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9ef3114 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9ef2ce0 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0x9ef3628 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0x9ef3288 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0x9ef3260 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9ef31b8 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ef31dc <col:36> 'typename _Traits::int_type' lvalue Var 0x9ef30e0 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9ef3240 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9ef3218 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0x9ef3608 <line:124:2, line:133:2>
      (BinaryOperator 0x9ef33a8 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x9ef329c <col:4> 'typename _Traits::int_type' lvalue Var 0x9ef30e0 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9ef3388 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ef32d0 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0x9ef32b4 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9ef2e50 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0x9ef3368 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9ef3328 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0x9ef334c <col:47> 'typename _Traits::int_type' lvalue Var 0x9ef30e0 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0x9ef3518 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0x9ef3490 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9ef33e8 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x9ef340c <col:29> 'typename _Traits::int_type' lvalue Var 0x9ef30e0 '__c' 'typename _Traits::int_type')
          (CallExpr 0x9ef3470 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9ef3448 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0x9ef3500 <line:127:6, line:130:6>
          (BinaryOperator 0x9ef34e0 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0x9ef34b4 <col:8> '_Bool' lvalue ParmVar 0x9ef2ea0 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0x9ef34d0 <col:18> '_Bool' false))
          (BreakStmt 0x9ef34f8 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0x9ef3550 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0x9ef3534 <col:6> 'streamsize':'int' lvalue Var 0x9ef2fd0 '__ret' 'streamsize':'int'))
      (BinaryOperator 0x9ef35f0 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0x9ef3564 <col:4> 'typename _Traits::int_type' lvalue Var 0x9ef30e0 '__c' 'typename _Traits::int_type')
        (CallExpr 0x9ef35d0 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ef3598 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0x9ef357c <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9ef2ce0 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0x9ef3668 <line:134:7, col:14>
    (ImplicitCastExpr 0x9ef3658 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x9ef363c <col:14> 'streamsize':'int' lvalue Var 0x9ef2fd0 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0x9ef3c30 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0x9ef3b68 <line:142:7, col:19>
    0x9ef3b30 "bool __ineof")
  (ReturnStmt 0x9ef3c20 <line:143:7, col:60>
    (CallExpr 0x9ef3bf8 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9ef3b78 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9ef2f90)
      (DeclRefExpr 0x9ef3bac <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9ef3880 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9ef3bc4 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9ef39f0 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9ef3bdc <col:53> '_Bool' lvalue Var 0x9ef3b30 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x9f06ef0 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x9f06f48 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x9f06f98 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x9f06fe8 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x9f07038 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x9f07088 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x9f070d8 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x9f07128 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x9f07178 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x9f071c8 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x9f07218 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x9f07268 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x9f07848 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f07828 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f07300 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f072d0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f072b4 <line:87:24> 'int' EnumConstant 0x9f06f10 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f072e8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f073f8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f073e8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f073c0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f073a8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f07378 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f07360 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f07318 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f07348 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f07330 <line:87:24> 'int' EnumConstant 0x9f06f10 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f07390 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f07810 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f077f0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f07458 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f07428 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f07410 <line:87:24> 'int' EnumConstant 0x9f06f10 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f07440 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f07550 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f07540 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f07518 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f07500 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f074d0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f074b8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f07470 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f074a0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f07488 <line:87:24> 'int' EnumConstant 0x9f06f10 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f074e8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f077d8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f077b8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f075b0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f07580 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f07568 <line:87:24> 'int' EnumConstant 0x9f06f10 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f07598 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f076a8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f07698 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f07670 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f07658 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f07628 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f07610 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f075c8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f075f8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f075e0 <line:87:24> 'int' EnumConstant 0x9f06f10 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f07640 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f077a0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f07790 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f07768 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f07750 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f07720 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f07708 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f076c0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f076f0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f076d8 <line:87:24> 'int' EnumConstant 0x9f06f10 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f07738 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x9f07e28 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f07e08 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f078e0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f078b0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f07894 <line:88:24> 'int' EnumConstant 0x9f06f60 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f078c8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f079d8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f079c8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f079a0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f07988 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f07958 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f07940 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f078f8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f07928 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f07910 <line:88:24> 'int' EnumConstant 0x9f06f60 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f07970 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f07df0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f07dd0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f07a38 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f07a08 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f079f0 <line:88:24> 'int' EnumConstant 0x9f06f60 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f07a20 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f07b30 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f07b20 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f07af8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f07ae0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f07ab0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f07a98 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f07a50 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f07a80 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f07a68 <line:88:24> 'int' EnumConstant 0x9f06f60 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f07ac8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f07db8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f07d98 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f07b90 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f07b60 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f07b48 <line:88:24> 'int' EnumConstant 0x9f06f60 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f07b78 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f07c88 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f07c78 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f07c50 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f07c38 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f07c08 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f07bf0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f07ba8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f07bd8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f07bc0 <line:88:24> 'int' EnumConstant 0x9f06f60 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f07c20 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f07d80 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f07d70 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f07d48 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f07d30 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f07d00 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f07ce8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f07ca0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f07cd0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f07cb8 <line:88:24> 'int' EnumConstant 0x9f06f60 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f07d18 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x9f08408 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f083e8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f07ec0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f07e90 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f07e74 <line:89:24> 'int' EnumConstant 0x9f06fb0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f07ea8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f07fb8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f07fa8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f07f80 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f07f68 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f07f38 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f07f20 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f07ed8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f07f08 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f07ef0 <line:89:24> 'int' EnumConstant 0x9f06fb0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f07f50 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f083d0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f083b0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f08018 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f07fe8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f07fd0 <line:89:24> 'int' EnumConstant 0x9f06fb0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f08000 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f08110 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f08100 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f080d8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f080c0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f08090 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f08078 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f08030 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f08060 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f08048 <line:89:24> 'int' EnumConstant 0x9f06fb0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f080a8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f08398 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f08378 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f08170 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f08140 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f08128 <line:89:24> 'int' EnumConstant 0x9f06fb0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f08158 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f08268 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f08258 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f08230 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f08218 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f081e8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f081d0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f08188 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f081b8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f081a0 <line:89:24> 'int' EnumConstant 0x9f06fb0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f08200 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f08360 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f08350 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f08328 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f08310 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f082e0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f082c8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f08280 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f082b0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f08298 <line:89:24> 'int' EnumConstant 0x9f06fb0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f082f8 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x9f089e8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f089c8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f084a0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f08470 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f08454 <line:90:24> 'int' EnumConstant 0x9f07000 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f08488 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f08598 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f08588 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f08560 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f08548 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f08518 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f08500 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f084b8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f084e8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f084d0 <line:90:24> 'int' EnumConstant 0x9f07000 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f08530 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f089b0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f08990 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f085f8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f085c8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f085b0 <line:90:24> 'int' EnumConstant 0x9f07000 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f085e0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f086f0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f086e0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f086b8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f086a0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f08670 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f08658 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f08610 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f08640 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f08628 <line:90:24> 'int' EnumConstant 0x9f07000 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f08688 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f08978 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f08958 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f08750 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f08720 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f08708 <line:90:24> 'int' EnumConstant 0x9f07000 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f08738 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f08848 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f08838 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f08810 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f087f8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f087c8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f087b0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f08768 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f08798 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f08780 <line:90:24> 'int' EnumConstant 0x9f07000 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f087e0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f08940 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f08930 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f08908 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f088f0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f088c0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f088a8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f08860 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f08890 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f08878 <line:90:24> 'int' EnumConstant 0x9f07000 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f088d8 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x9f15478 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f15458 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f08a80 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f08a50 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f08a34 <line:91:25> 'int' EnumConstant 0x9f07050 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f08a68 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f08b78 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f08b68 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f08b40 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f08b28 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f08af8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f08ae0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f08a98 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f08ac8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f08ab0 <line:91:25> 'int' EnumConstant 0x9f07050 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f08b10 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f15440 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f15420 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f08bd8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f08ba8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f08b90 <line:91:25> 'int' EnumConstant 0x9f07050 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f08bc0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f08cd0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f08cc0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f08c98 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f08c80 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f08c50 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f08c38 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f08bf0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f08c20 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f08c08 <line:91:25> 'int' EnumConstant 0x9f07050 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f08c68 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f15408 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f153e8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f08d30 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f08d00 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f08ce8 <line:91:25> 'int' EnumConstant 0x9f07050 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f08d18 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f08e28 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f08e18 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f08df0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f08dd8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f08da8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f08d90 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f08d48 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f08d78 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f08d60 <line:91:25> 'int' EnumConstant 0x9f07050 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f08dc0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f153d0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f153c0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f15398 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f08ed0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f08ea0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f08e88 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f08e40 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f08e70 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f08e58 <line:91:25> 'int' EnumConstant 0x9f07050 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f08eb8 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x9f15a58 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f15a38 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f15510 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f154e0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f154c4 <line:92:24> 'int' EnumConstant 0x9f070a0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f154f8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f15608 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f155f8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f155d0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f155b8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f15588 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f15570 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f15528 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f15558 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f15540 <line:92:24> 'int' EnumConstant 0x9f070a0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f155a0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f15a20 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f15a00 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f15668 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f15638 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f15620 <line:92:24> 'int' EnumConstant 0x9f070a0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f15650 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f15760 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f15750 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f15728 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f15710 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f156e0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f156c8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f15680 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f156b0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f15698 <line:92:24> 'int' EnumConstant 0x9f070a0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f156f8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f159e8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f159c8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f157c0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f15790 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f15778 <line:92:24> 'int' EnumConstant 0x9f070a0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f157a8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f158b8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f158a8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f15880 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f15868 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f15838 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f15820 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f157d8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f15808 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f157f0 <line:92:24> 'int' EnumConstant 0x9f070a0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f15850 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f159b0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f159a0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f15978 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f15960 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f15930 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f15918 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f158d0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f15900 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f158e8 <line:92:24> 'int' EnumConstant 0x9f070a0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f15948 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x9f16038 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f16018 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f15af0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f15ac0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f15aa4 <line:93:24> 'int' EnumConstant 0x9f070f0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f15ad8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f15be8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f15bd8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f15bb0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f15b98 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f15b68 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f15b50 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f15b08 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f15b38 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f15b20 <line:93:24> 'int' EnumConstant 0x9f070f0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f15b80 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f16000 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f15fe0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f15c48 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f15c18 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f15c00 <line:93:24> 'int' EnumConstant 0x9f070f0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f15c30 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f15d40 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f15d30 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f15d08 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f15cf0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f15cc0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f15ca8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f15c60 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f15c90 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f15c78 <line:93:24> 'int' EnumConstant 0x9f070f0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f15cd8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f15fc8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f15fa8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f15da0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f15d70 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f15d58 <line:93:24> 'int' EnumConstant 0x9f070f0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f15d88 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f15e98 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f15e88 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f15e60 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f15e48 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f15e18 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f15e00 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f15db8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f15de8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f15dd0 <line:93:24> 'int' EnumConstant 0x9f070f0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f15e30 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f15f90 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f15f80 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f15f58 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f15f40 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f15f10 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f15ef8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f15eb0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f15ee0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f15ec8 <line:93:24> 'int' EnumConstant 0x9f070f0 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f15f28 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x9f16618 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f165f8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f160d0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f160a0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f16084 <line:94:24> 'int' EnumConstant 0x9f07140 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f160b8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f161c8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f161b8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f16190 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f16178 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f16148 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f16130 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f160e8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f16118 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f16100 <line:94:24> 'int' EnumConstant 0x9f07140 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f16160 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f165e0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f165c0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f16228 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f161f8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f161e0 <line:94:24> 'int' EnumConstant 0x9f07140 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f16210 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f16320 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f16310 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f162e8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f162d0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f162a0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f16288 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f16240 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f16270 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f16258 <line:94:24> 'int' EnumConstant 0x9f07140 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f162b8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f165a8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f16588 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f16380 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f16350 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f16338 <line:94:24> 'int' EnumConstant 0x9f07140 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f16368 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f16478 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f16468 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f16440 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f16428 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f163f8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f163e0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f16398 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f163c8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f163b0 <line:94:24> 'int' EnumConstant 0x9f07140 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f16410 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f16570 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f16560 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f16538 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f16520 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f164f0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f164d8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f16490 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f164c0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f164a8 <line:94:24> 'int' EnumConstant 0x9f07140 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f16508 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x9f16bf8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f16bd8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f166b0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f16680 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f16664 <line:95:24> 'int' EnumConstant 0x9f07190 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f16698 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f167a8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f16798 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f16770 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f16758 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f16728 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f16710 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f166c8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f166f8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f166e0 <line:95:24> 'int' EnumConstant 0x9f07190 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f16740 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f16bc0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f16ba0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f16808 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f167d8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f167c0 <line:95:24> 'int' EnumConstant 0x9f07190 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f167f0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f16900 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f168f0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f168c8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f168b0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f16880 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f16868 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f16820 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f16850 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f16838 <line:95:24> 'int' EnumConstant 0x9f07190 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f16898 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f16b88 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f16b68 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f16960 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f16930 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f16918 <line:95:24> 'int' EnumConstant 0x9f07190 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f16948 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f16a58 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f16a48 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f16a20 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f16a08 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f169d8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f169c0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f16978 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f169a8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f16990 <line:95:24> 'int' EnumConstant 0x9f07190 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f169f0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f16b50 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f16b40 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f16b18 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f16b00 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f16ad0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f16ab8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f16a70 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f16aa0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f16a88 <line:95:24> 'int' EnumConstant 0x9f07190 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f16ae8 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x9f171d8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f171b8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f16c90 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f16c60 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f16c44 <line:96:24> 'int' EnumConstant 0x9f071e0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f16c78 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f16d88 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f16d78 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f16d50 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f16d38 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f16d08 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f16cf0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f16ca8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f16cd8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f16cc0 <line:96:24> 'int' EnumConstant 0x9f071e0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f16d20 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f171a0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f17180 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f16de8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f16db8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f16da0 <line:96:24> 'int' EnumConstant 0x9f071e0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f16dd0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f16ee0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f16ed0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f16ea8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f16e90 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f16e60 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f16e48 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f16e00 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f16e30 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f16e18 <line:96:24> 'int' EnumConstant 0x9f071e0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f16e78 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f17168 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f17148 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f16f40 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f16f10 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f16ef8 <line:96:24> 'int' EnumConstant 0x9f071e0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f16f28 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f17038 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f17028 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f17000 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f16fe8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f16fb8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f16fa0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f16f58 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f16f88 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f16f70 <line:96:24> 'int' EnumConstant 0x9f071e0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f16fd0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f17130 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f17120 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f170f8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f170e0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f170b0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f17098 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f17050 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f17080 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f17068 <line:96:24> 'int' EnumConstant 0x9f071e0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f170c8 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x9f177b8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f17798 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f17270 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f17240 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f17224 <line:97:24> 'int' EnumConstant 0x9f07230 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f17258 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f17368 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f17358 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f17330 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f17318 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f172e8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f172d0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f17288 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f172b8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f172a0 <line:97:24> 'int' EnumConstant 0x9f07230 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f17300 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f17780 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f17760 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f173c8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f17398 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f17380 <line:97:24> 'int' EnumConstant 0x9f07230 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f173b0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f174c0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f174b0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f17488 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f17470 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f17440 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f17428 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f173e0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f17410 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f173f8 <line:97:24> 'int' EnumConstant 0x9f07230 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f17458 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f17748 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f17728 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f17520 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f174f0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f174d8 <line:97:24> 'int' EnumConstant 0x9f07230 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f17508 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f17618 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f17608 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f175e0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f175c8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f17598 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f17580 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f17538 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f17568 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f17550 <line:97:24> 'int' EnumConstant 0x9f07230 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f175b0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f17710 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f17700 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f176d8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f176c0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f17690 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f17678 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f17630 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f17660 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f17648 <line:97:24> 'int' EnumConstant 0x9f07230 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f176a8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x9f17d98 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f17d78 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f17850 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f17820 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f17804 <line:98:24> 'int' EnumConstant 0x9f07280 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f17838 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f17948 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f17938 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f17910 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f178f8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f178c8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f178b0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f17868 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f17898 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f17880 <line:98:24> 'int' EnumConstant 0x9f07280 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f178e0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f17d60 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f17d40 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f179a8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f17978 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f17960 <line:98:24> 'int' EnumConstant 0x9f07280 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f17990 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f17aa0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f17a90 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f17a68 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f17a50 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f17a20 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f17a08 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f179c0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f179f0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f179d8 <line:98:24> 'int' EnumConstant 0x9f07280 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f17a38 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f17d28 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f17d08 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f17b00 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f17ad0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f17ab8 <line:98:24> 'int' EnumConstant 0x9f07280 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f17ae8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f17bf8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f17be8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f17bc0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f17ba8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f17b78 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f17b60 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f17b18 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f17b48 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f17b30 <line:98:24> 'int' EnumConstant 0x9f07280 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f17b90 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f17cf0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f17ce0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f17cb8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f17ca0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f17c70 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f17c58 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f17c10 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f17c40 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f17c28 <line:98:24> 'int' EnumConstant 0x9f07280 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f17c88 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0x9f1b150 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b134 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3d5f0 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0x9f1b1c0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b1a4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3d840 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0x9f1b230 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b214 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3da90 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0x9f1b2a0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b284 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3dce0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0x9f1b310 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b2f4 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3df30 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0x9f1b380 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b364 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3e180 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0x9f1b3f0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b3d4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3e3d0 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0x9f1b4f0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9f1b4d8 <col:32, col:54> 'int' '|'
    (BinaryOperator 0x9f1b498 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0x9f1b478 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0x9f1b444 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3da90 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0x9f1b488 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0x9f1b45c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3dce0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0x9f1b4c8 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0x9f1b4b0 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3ed10 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0x9f1b560 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b544 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3eac0 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0x9f1b5d0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x9f1b5b4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3ed10 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0x9f1b690 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x9f1b678 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0x9f1b658 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0x9f1b624 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3da90 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0x9f1b668 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0x9f1b63c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9d3dce0 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0x9f23660 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0x9f23750 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f23718 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0x9f237b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0x9f23810 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f237d8 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x9f237c0 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9f22f50 '__s' 'istream_type &')))
), _M_c((CallExpr 0x9f238c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f23888 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0x9f23920 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x9f23930 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0x9f23070 '__s' 'streambuf_type *')
), _M_c((CallExpr 0x9f239e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f239a8 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0x9f23a40 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0x9f23b40 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0x9f23b30 <line:121:2, col:43>
    (CallExpr 0x9f23b10 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f23a88 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x9f23af0 <col:35, col:42> '<dependent type>'
        (MemberExpr 0x9f23ad0 <col:35> '<bound member function type>' ->_M_get 0x9f23580
          (CXXThisExpr 0x9f23ac0 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x9f23d50 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0x9f23b58 <line:130:25>)
  (IfStmt 0x9f23cf8 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0x9f23b78 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9f22db0
      (CXXThisExpr 0x9f23b68 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9f23ce0 <line:132:4, line:135:4>
      (CallExpr 0x9f23c00 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f23bc8 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0x9f23ba8 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9f22db0
            (CXXThisExpr 0x9f23b98 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0x9f23cc8 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0x9f23c30 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9f22e00
          (CXXThisExpr 0x9f23c20 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x9f23ca8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f23c70 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x9f23d40 <line:136:2, col:10>
    (UnaryOperator 0x9f23d28 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f23d18 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0x9f24040 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0x9f23d70 <line:145:25>)
  (DeclStmt 0x9f23df0 <line:147:2, col:35>
    0x9f23d90 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0x9f23dd8 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9f23dc8 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0x9f23ff8 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0x9f23e10 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9f22db0
      (CXXThisExpr 0x9f23e00 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9f23fe0 <line:149:4, line:152:4>
      (BinaryOperator 0x9f23f08 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9f23e48 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x9f23e30 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x9f23d90 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0x9f23ee8 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f23eb0 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0x9f23e90 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0x9f22db0
              (CXXThisExpr 0x9f23e80 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0x9f23fc8 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0x9f23f30 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9f22e00
          (CXXThisExpr 0x9f23f20 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x9f23fa8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f23f70 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x9f24030 <line:153:2, col:9>
    (DeclRefExpr 0x9f24014 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x9f23d90 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0x9f241b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0x9f241a0 <col:9, col:45>
    (CXXOperatorCallExpr 0x9f24178 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9f24120 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440)
      (CallExpr 0x9f24090 <col:16, col:26> '<dependent type>'
        (MemberExpr 0x9f24070 <col:16> '<bound member function type>' ->_M_at_eof 0x9f23600
          (CXXThisExpr 0x9f24060 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0x9f24100 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f240c8 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9f240ac <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9f23400 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0x9f24750 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0x9f24280 <line:168:2, col:43>
    0x9f241d0 "const int_type __eof =
      (CallExpr 0x9f24260 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f24228 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0x9f242f0 <line:169:2, col:24>
    0x9f242a0 "int_type __ret =
      (DeclRefExpr 0x9f242d4 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f241d0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0x9f24708 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0x9f24310 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0x9f22db0
      (CXXThisExpr 0x9f24300 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x9f246f0 <line:171:4, line:179:4>
      (IfStmt 0x9f246d0 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0x9f243f8 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x9f243d0 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f24350 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0x9f24398 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9f22e00
              (CXXThisExpr 0x9f24388 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f243b8 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f241d0 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0x9f24458 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0x9f2440c <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f242a0 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0x9f24438 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9f22e00
            (CXXThisExpr 0x9f24428 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0x9f246b0 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0x9f245d8 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0x9f245b0 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f24490 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0x9f24580 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0x9f24568 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0x9f244c4 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f242a0 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0x9f24548 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f24510 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0x9f244f0 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0x9f22db0
                        (CXXThisExpr 0x9f244e0 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0x9f24594 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f241d0 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0x9f24638 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0x9f24600 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x9f22e00
              (CXXThisExpr 0x9f245f0 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9f24620 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f242a0 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0x9f24698 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0x9f24660 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0x9f22db0
              (CXXThisExpr 0x9f24650 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9f24680 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0x9f24740 <line:180:2, col:9>
    (DeclRefExpr 0x9f24724 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x9f242a0 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0x9f24938 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0x9f24830 <line:186:2, col:43>
    0x9f24780 "const int_type __eof =
      (CallExpr 0x9f24810 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f247d8 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0x9f24928 <line:187:2, col:49>
    (CallExpr 0x9f24900 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f24860 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x9f248c8 <col:34, col:41> '<dependent type>'
        (MemberExpr 0x9f248a8 <col:34> '<bound member function type>' ->_M_get 0x9f23580
          (CXXThisExpr 0x9f24898 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9f248e4 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9f24780 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x9f24e88 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0x9f24e78 <col:7, col:27>
    (CallExpr 0x9f24e58 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f24e08 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x9f24df0 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9f24b50 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0x9f24e3c <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9f24cc0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x9f253b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0x9f253a0 <col:7, col:28>
    (UnaryOperator 0x9f25388 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9f25368 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f25318 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9f25300 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9f25080 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0x9f2534c <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x9f251f0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0x9f26d28 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9f26cf0 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x9f26cd8 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f26560 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0x9f26dd8 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0x9f26db8 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0x9f26470
    (CXXThisExpr 0x9f26da8 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x9f26e30 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x9f26e40 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0x9f266a0 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0x9f26ec8 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0x9f26ea8 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0x9f26470
    (CXXThisExpr 0x9f26e98 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x9f26f20 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0x9f271f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0x9f27198 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0x9f27128 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0x9f26f70 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9f26f60 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0x9f26f40 <col:7> '_Bool' lvalue ->_M_failed 0x9f264b0
            (CXXThisExpr 0x9f26f30 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0x9f27100 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f26fb0 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0x9f27068 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f27018 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0x9f26ff8 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0x9f26470
              (CXXThisExpr 0x9f26fe8 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9f2704c <col:42> '_CharT' lvalue ParmVar 0x9f267a0 '__c' '_CharT'))
        (CallExpr 0x9f270e0 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f270a8 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0x9f27180 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0x9f27150 <col:4> '_Bool' lvalue ->_M_failed 0x9f264b0
        (CXXThisExpr 0x9f27140 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x9f27170 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x9f271e0 <line:244:2, col:10>
    (UnaryOperator 0x9f271c8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f271b8 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0x9f27240 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0x9f27230 <col:9, col:17>
    (UnaryOperator 0x9f27218 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f27208 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0x9f27290 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0x9f27280 <col:9, col:17>
    (UnaryOperator 0x9f27268 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f27258 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x9f272e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0x9f272d0 <col:9, col:17>
    (UnaryOperator 0x9f272b8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f272a8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0x9f27358 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0x9f27348 <col:9, col:16>
    (MemberExpr 0x9f27328 <col:16> 'const _Bool' lvalue ->_M_failed 0x9f264b0
      (CXXThisExpr 0x9f27318 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0x9f276e8 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0x9f27690 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0x9f27620 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0x9f27418 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0x9f27408 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f2736c <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f27440 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0x9f273c8 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f273b8 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0x9f27398 <col:24> '_Bool' lvalue ->_M_failed 0x9f264b0
                (CXXThisExpr 0x9f27388 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0x9f27450 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f273e0 <col:35> '_Bool' true)))
      (CallExpr 0x9f275f8 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0x9f2745c <line:271:9> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0x9f275c0 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x9f27568 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f252d0 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0)
          (CallExpr 0x9f27528 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f274c0 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x9f27488 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9f27478 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x9f274f4 <col:47> 'const _CharT *' lvalue ParmVar 0x9f26b90 '__ws' 'const _CharT *')
            (DeclRefExpr 0x9f2750c <col:53> 'streamsize':'int' lvalue ParmVar 0x9f26bd0 '__len' 'streamsize':'int'))
          (DeclRefExpr 0x9f2754c <col:63> 'streamsize':'int' lvalue ParmVar 0x9f26bd0 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0x9f275e8 <line:272:5> '_Bool' false)))
    (BinaryOperator 0x9f27678 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0x9f27648 <col:4> '_Bool' lvalue ->_M_failed 0x9f264b0
        (CXXThisExpr 0x9f27638 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x9f27668 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x9f276d8 <line:274:2, col:10>
    (UnaryOperator 0x9f276c0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9f276b0 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9f284f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0x9f284a8 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0x9f28230 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0x9f281b0 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0x9f28110 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9f280f4 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f27c70 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0x9f28198 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0x9f28160 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0x9f28144 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f27e00 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0x9f28218 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9f281e0 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0x9f281c8 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f27f90 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9f28488 <line:287:2, line:292:2>
      (DeclStmt 0x9f28288 <line:288:4, col:16>
        0x9f28250 "bool __ineof")
      (CallExpr 0x9f28388 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9f28298 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9ef2f90)
        (CXXDependentScopeMemberExpr 0x9f282e8 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9f282cc <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f27c70 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0x9f28338 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0x9f2831c <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f27f90 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0x9f2836c <col:61> '_Bool' lvalue Var 0x9f28250 '__ineof' '_Bool'))
      (IfStmt 0x9f28468 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0x9f283d8 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9f283c8 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f283b0 <col:9> '_Bool' lvalue Var 0x9f28250 '__ineof' '_Bool')))
        (BinaryOperator 0x9f28450 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9f28408 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9f283ec <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f27f90 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0x9f28440 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f284e0 <line:293:7, col:14>
    (DeclRefExpr 0x9f284c4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f27f90 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9f28eb0 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0x9f28d58 <line:302:7, col:48>
    0x9f28c90 "const streamsize __num =
      (CXXOperatorCallExpr 0x9f28d30 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9f28cf8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9f28cc4 <col:32> '_CharT *' lvalue ParmVar 0x9f28990 '__last' '_CharT *')
        (DeclRefExpr 0x9f28cdc <col:41> '_CharT *' lvalue ParmVar 0x9f28940 '__first' '_CharT *'))")
  (IfStmt 0x9f28e68 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0x9f28da8 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9f28d98 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f28d68 <col:11> 'const streamsize':'const int' lvalue Var 0x9f28c90 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9f28d80 <col:19> 'int' 0))
    (CallExpr 0x9f28e40 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f28dd8 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9f28dc0 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f28b20 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9f28e0c <col:18> '_CharT *' lvalue ParmVar 0x9f28940 '__first' '_CharT *')
      (DeclRefExpr 0x9f28e24 <col:27> 'const streamsize':'const int' lvalue Var 0x9f28c90 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9f28ea0 <line:305:7, col:14>
    (DeclRefExpr 0x9f28e84 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f28b20 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9f29870 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0x9f29718 <line:314:7, col:48>
    0x9f29650 "const streamsize __num =
      (CXXOperatorCallExpr 0x9f296f0 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9f296b8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9f29684 <col:32> 'const _CharT *' lvalue ParmVar 0x9f29350 '__last' 'const _CharT *')
        (DeclRefExpr 0x9f2969c <col:41> 'const _CharT *' lvalue ParmVar 0x9f29300 '__first' 'const _CharT *'))")
  (IfStmt 0x9f29828 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0x9f29768 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9f29758 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f29728 <col:11> 'const streamsize':'const int' lvalue Var 0x9f29650 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x9f29740 <col:19> 'int' 0))
    (CallExpr 0x9f29800 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f29798 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9f29780 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f294e0 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9f297cc <col:18> 'const _CharT *' lvalue ParmVar 0x9f29300 '__first' 'const _CharT *')
      (DeclRefExpr 0x9f297e4 <col:27> 'const streamsize':'const int' lvalue Var 0x9f29650 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9f29860 <line:317:7, col:14>
    (DeclRefExpr 0x9f29844 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f294e0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0x9f2b0f8 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0x9f2a160 <line:326:7, col:78>
    0x9f2a130 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9f2a250 <line:327:7, col:71>
    0x9f2a220 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9f2a310 <line:328:7, col:74>
    0x9f2a2e0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9f2a400 <line:329:7, col:68>
    0x9f2a3d0 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9f2b0b0 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0x9f2a4c8 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9f2a428 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9f2a410 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f29cc0 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9f2a4b0 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9f2a478 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9f2a45c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f29e50 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9f2b090 <line:332:2, line:351:2>
      (DeclStmt 0x9f2a7f8 <line:333:4, col:42>
        0x9f2a540 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9f2a7c0 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9f2a574 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f29cc0 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9f2a8d8 <line:334:4, col:32>
        0x9f2a830 "int_type __c =
          (CallExpr 0x9f2a8b8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f2a880 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9f2a864 <col:19> 'streambuf_type *' lvalue Var 0x9f2a540 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9f2b078 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0x9f2a9d8 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0x9f2a9b0 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9f2a908 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0x9f2a92c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2a830 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9f2a990 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9f2a968 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0x9f2b060 <line:336:6, line:350:6>
          (DeclStmt 0x9f2ab78 <line:337:8, col:59>
            0x9f2aa00 "const streamsize __n =
              (CXXOperatorCallExpr 0x9f2ab50 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9f2ab18 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                (CallExpr 0x9f2aa88 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2aa50 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2aa34 <col:31> 'streambuf_type *' lvalue Var 0x9f2a540 '__sb' 'streambuf_type *')))
                (CallExpr 0x9f2aaf8 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2aac0 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2aaa4 <col:47> 'streambuf_type *' lvalue Var 0x9f2a540 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9f2b040 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0x9f2abc8 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9f2abb8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9f2ab88 <col:12> 'const streamsize':'const int' lvalue Var 0x9f2aa00 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0x9f2aba0 <col:18> 'int' 1))
            (CompoundStmt 0x9f2ae70 <line:339:3, line:344:3>
              (CallExpr 0x9f2acd0 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9f2ac08 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x9f2ac2c <col:23> '_CharT *' lvalue ParmVar 0x9f29ea0 '__result' '_CharT *')
                (CallExpr 0x9f2ac98 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2ac60 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2ac44 <col:33> 'streambuf_type *' lvalue Var 0x9f2a540 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0x9f2acb4 <col:47> 'const streamsize':'const int' lvalue Var 0x9f2aa00 '__n' 'const streamsize':'const int'))
              (CallExpr 0x9f2ad60 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f2ad10 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f2acf8 <col:5> 'streambuf_type *' lvalue Var 0x9f2a540 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9f2ad44 <col:24> 'const streamsize':'const int' lvalue Var 0x9f2aa00 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0x9f2adb0 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x9f2ad80 <col:5> '_CharT *' lvalue ParmVar 0x9f29ea0 '__result' '_CharT *')
                (DeclRefExpr 0x9f2ad98 <col:17> 'const streamsize':'const int' lvalue Var 0x9f2aa00 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0x9f2ae58 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0x9f2add0 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2a830 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9f2ae38 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2ae00 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2ade8 <col:11> 'streambuf_type *' lvalue Var 0x9f2a540 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0x9f2b028 <line:346:3, line:349:3>
              (BinaryOperator 0x9f2af70 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0x9f2aed8 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9f2aec0 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9f2ae90 <col:6> '_CharT *' lvalue ParmVar 0x9f29ea0 '__result' '_CharT *')))
                (CallExpr 0x9f2af50 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9f2af10 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9f2af34 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2a830 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0x9f2b010 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9f2af88 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2a830 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9f2aff0 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2afb8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2afa0 <col:11> 'streambuf_type *' lvalue Var 0x9f2a540 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0x9f2b0e8 <line:352:7, col:14>
    (DeclRefExpr 0x9f2b0cc <col:14> '_CharT *' lvalue ParmVar 0x9f29ea0 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0x9f2cc68 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0x9f2bad0 <line:361:7, col:78>
    0x9f2baa0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9f2bbc0 <line:362:7, col:71>
    0x9f2bb90 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9f2bc80 <line:363:7, col:74>
    0x9f2bc50 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9f2bd70 <line:364:7, col:68>
    0x9f2bd40 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9f2cc20 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0x9f2be38 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9f2bd98 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9f2bd80 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2b610 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9f2be20 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9f2bde8 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9f2bdcc <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2b7a0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9f2cbf8 <line:367:2, line:392:2>
      (DeclStmt 0x9f2bf28 <line:368:4, col:59>
        0x9f2be70 "const int_type __ival =
          (CallExpr 0x9f2bf08 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9f2bec8 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0x9f2beec <col:53> 'const _CharT' lvalue ParmVar 0x9f2b810 '__val' 'const _CharT &'))")
      (DeclStmt 0x9f2c028 <line:369:4, col:42>
        0x9f2bfa0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9f2bff0 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9f2bfd4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2b610 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9f2c0e8 <line:370:4, col:32>
        0x9f2c040 "int_type __c =
          (CallExpr 0x9f2c0c8 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f2c090 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9f2c074 <col:19> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9f2c9b8 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0x9f2c2b8 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0x9f2c1e8 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0x9f2c1c0 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9f2c118 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f2c13c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2c040 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9f2c1a0 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9f2c178 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0x9f2c2a0 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0x9f2c278 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9f2c220 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9f2c244 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2c040 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0x9f2c25c <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x9f2be70 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0x9f2c9a0 <line:373:6, line:386:6>
          (DeclStmt 0x9f2c458 <line:374:8, col:53>
            0x9f2c2e0 "streamsize __n =
              (CXXOperatorCallExpr 0x9f2c430 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9f2c3f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                (CallExpr 0x9f2c368 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2c330 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2c314 <col:25> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *')))
                (CallExpr 0x9f2c3d8 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2c3a0 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2c384 <col:41> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9f2c980 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0x9f2c4a8 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9f2c498 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9f2c468 <col:12> 'streamsize':'int' lvalue Var 0x9f2c2e0 '__n' 'streamsize':'int'))
              (IntegerLiteral 0x9f2c480 <col:18> 'int' 1))
            (CompoundStmt 0x9f2c8c0 <line:376:3, line:383:3>
              (DeclStmt 0x9f2c638 <line:377:5, line:378:19>
                0x9f2c4f0 "const _CharT *__p =
                  (CallExpr 0x9f2c610 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9f2c548 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0x9f2c5c0 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f2c588 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0x9f2c56c <col:43> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0x9f2c5dc <line:378:8> 'streamsize':'int' lvalue Var 0x9f2c2e0 '__n' 'streamsize':'int')
                    (DeclRefExpr 0x9f2c5f4 <col:13> 'const _CharT' lvalue ParmVar 0x9f2b810 '__val' 'const _CharT &'))")
              (IfStmt 0x9f2c778 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0x9f2c648 <line:379:9> 'const _CharT *' lvalue Var 0x9f2c4f0 '__p' 'const _CharT *')
                (BinaryOperator 0x9f2c760 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0x9f2c660 <col:7> 'streamsize':'int' lvalue Var 0x9f2c2e0 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0x9f2c738 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f2c700 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                    (DeclRefExpr 0x9f2c678 <col:13> 'const _CharT *' lvalue Var 0x9f2c4f0 '__p' 'const _CharT *')
                    (CallExpr 0x9f2c6e0 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9f2c6a8 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0x9f2c690 <col:19> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0x9f2c800 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f2c7b0 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f2c794 <col:5> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9f2c7e4 <col:24> 'streamsize':'int' lvalue Var 0x9f2c2e0 '__n' 'streamsize':'int'))
              (BinaryOperator 0x9f2c8a8 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9f2c820 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2c040 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9f2c888 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f2c850 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f2c838 <col:11> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0x9f2c968 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x9f2c8e0 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2c040 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9f2c948 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f2c910 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f2c8f8 <col:9> 'streambuf_type *' lvalue Var 0x9f2bfa0 '__sb' 'streambuf_type *')))))))
      (IfStmt 0x9f2cbd8 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0x9f2cac0 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0x9f2ca98 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9f2c9f0 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9f2ca14 <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2c040 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9f2ca78 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9f2ca50 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0x9f2cb40 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9f2caf0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9f2cad4 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2b610 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0x9f2cb24 <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0x9f2c040 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0x9f2cbc0 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9f2cb70 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9f2cb58 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2b610 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0x9f2cba8 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9f2cc58 <line:393:7, col:14>
    (DeclRefExpr 0x9f2cc3c <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2b610 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0x9f2f678 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0x9f2f628 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f2f5c0 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9f2f5a4 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2f380 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0x9f2f5f4 <col:18> 'const _CharT *' lvalue ParmVar 0x9f2f3f0 '__ws' 'const _CharT *')
    (DeclRefExpr 0x9f2f60c <col:24> 'int' lvalue ParmVar 0x9f2f440 '__len' 'int'))
  (ReturnStmt 0x9f2f668 <line:116:7, col:14>
    (DeclRefExpr 0x9f2f64c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9f2f380 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0x9f2fba0 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0x9f2fb50 <line:125:7, line:126:17>
    (DeclStmt 0x9f2f9d0 <line:125:12, col:23>
      0x9f2f980 "int __j =
        (IntegerLiteral 0x9f2f9b8 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0x9f2fa30 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0x9f2fa10 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f2f9e0 <col:25> 'int' lvalue Var 0x9f2f980 '__j' 'int'))
      (ImplicitCastExpr 0x9f2fa20 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f2f9f8 <col:31> 'int' lvalue ParmVar 0x9f2f810 '__len' 'int')))
    (BinaryOperator 0x9f2faa8 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0x9f2fa60 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0x9f2fa48 <col:38> 'int' lvalue Var 0x9f2f980 '__j' 'int'))
      (UnaryOperator 0x9f2fa90 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9f2fa74 <col:47> '_OutIter' lvalue ParmVar 0x9f2f750 '__s' '_OutIter')))
    (BinaryOperator 0x9f2fb38 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0x9f2fad8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9f2fac0 <col:3> '_OutIter' lvalue ParmVar 0x9f2f750 '__s' '_OutIter'))
      (ArraySubscriptExpr 0x9f2fb20 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0x9f2faec <col:9> 'const _CharT *' lvalue ParmVar 0x9f2f7c0 '__ws' 'const _CharT *')
        (DeclRefExpr 0x9f2fb04 <col:14> 'int' lvalue Var 0x9f2f980 '__j' 'int'))))
  (ReturnStmt 0x9f2fb90 <line:127:7, col:14>
    (DeclRefExpr 0x9f2fb74 <col:14> '_OutIter' lvalue ParmVar 0x9f2f750 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0x9f32398 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0x9f32388 <col:9, col:36>
    (CallExpr 0x9f32360 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f322f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f322e8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f3232c <col:28> 'mask':'unsigned short' lvalue ParmVar 0x9f2ff30 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9f32344 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9f2ff90 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0x9f32478 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0x9f32468 <col:9, col:45>
    (CallExpr 0x9f32440 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f323c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f323b0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f323f4 <col:28> 'const char_type *' lvalue ParmVar 0x9f300d0 '__lo' 'const char_type *')
      (DeclRefExpr 0x9f3240c <col:34> 'const char_type *' lvalue ParmVar 0x9f30120 '__hi' 'const char_type *')
      (DeclRefExpr 0x9f32424 <col:40> 'mask *' lvalue ParmVar 0x9f30190 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f32558 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0x9f32548 <col:9, col:48>
    (CallExpr 0x9f32520 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f324a0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f32490 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f324d4 <col:33> 'mask':'unsigned short' lvalue ParmVar 0x9f302d0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9f324ec <col:38> 'const char_type *' lvalue ParmVar 0x9f30320 '__lo' 'const char_type *')
      (DeclRefExpr 0x9f32504 <col:44> 'const char_type *' lvalue ParmVar 0x9f30370 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f32638 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0x9f32628 <col:9, col:49>
    (CallExpr 0x9f32600 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f32580 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f32570 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f325b4 <col:34> 'mask':'unsigned short' lvalue ParmVar 0x9f304b0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x9f325cc <col:39> 'const char_type *' lvalue ParmVar 0x9f30500 '__lo' 'const char_type *')
      (DeclRefExpr 0x9f325e4 <col:45> 'const char_type *' lvalue ParmVar 0x9f30550 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0x9f326e0 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0x9f326d0 <col:9, col:36>
    (CallExpr 0x9f326b0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f32660 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f32650 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f32694 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9f30630 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f327a8 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0x9f32798 <col:9, col:43>
    (CallExpr 0x9f32770 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f32708 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f326f8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f3273c <col:33> 'char_type *' lvalue ParmVar 0x9f30770 '__lo' 'char_type *')
      (DeclRefExpr 0x9f32754 <col:39> 'const char_type *' lvalue ParmVar 0x9f307c0 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9f32850 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0x9f32840 <col:9, col:36>
    (CallExpr 0x9f32820 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f327d0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f327c0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f32804 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9f308d0 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f32918 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0x9f32908 <col:9, col:43>
    (CallExpr 0x9f328e0 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f32878 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f32868 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f328ac <col:33> 'char_type *' lvalue ParmVar 0x9f309a0 '__lo' 'char_type *')
      (DeclRefExpr 0x9f328c4 <col:39> 'const char_type *' lvalue ParmVar 0x9f309f0 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0x9f329c0 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0x9f329b0 <col:9, col:34>
    (CallExpr 0x9f32990 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f32940 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f32930 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f32974 <col:31> 'char' lvalue ParmVar 0x9f30ac0 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9f32aa0 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0x9f32a90 <col:9, col:47>
    (CallExpr 0x9f32a68 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f329e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f329d8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f32a1c <col:31> 'const char *' lvalue ParmVar 0x9f30be0 '__lo' 'const char *')
      (DeclRefExpr 0x9f32a34 <col:37> 'const char *' lvalue ParmVar 0x9f30c30 '__hi' 'const char *')
      (DeclRefExpr 0x9f32a4c <col:43> 'char_type *' lvalue ParmVar 0x9f30c80 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9f32b68 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0x9f32b58 <col:9, col:45>
    (CallExpr 0x9f32b30 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f32ac8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f32ab8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f32afc <col:32> 'char_type':'_CharT' lvalue ParmVar 0x9f30dc0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x9f32b14 <col:37> 'char' lvalue ParmVar 0x9f30e00 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9f32c68 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0x9f32c58 <col:9, col:58>
    (CallExpr 0x9f32c28 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f32b90 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f32b80 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x9f32bc4 <col:32> 'const char_type *' lvalue ParmVar 0x9f30f20 '__lo' 'const char_type *')
      (DeclRefExpr 0x9f32bdc <col:38> 'const char_type *' lvalue ParmVar 0x9f30f70 '__hi' 'const char_type *')
      (DeclRefExpr 0x9f32bf4 <col:44> 'char' lvalue ParmVar 0x9f30fb0 '__dfault' 'char')
      (DeclRefExpr 0x9f32c0c <col:54> 'char *' lvalue ParmVar 0x9f31000 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0x9f322c0 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f322a8 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9f32c7c </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0x9f31180 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9f32d20 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0x9f32d30 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9f363d0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9f363b8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9f36328 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9f363a8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9f36390 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9f36380 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9f36358 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9f36340 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9f39998 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9f39980 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9f399a8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9f399d0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f399b8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9f399f8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9f399e0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9f39a08 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9f39a30 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f39a18 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9f39b20 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9f39b10 <col:9, col:36>
    (CXXMemberCallExpr 0x9f39ae0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9f39ac0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9f37c10
        (CXXThisExpr 0x9f39a58 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39b00 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9f39aa8 <col:33> 'char_type':'char' lvalue ParmVar 0x9f36e80 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f39c30 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9f39c20 <col:9, col:43>
    (CXXMemberCallExpr 0x9f39bd8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9f39bb8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9f37d40
        (CXXThisExpr 0x9f39b38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39c00 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39b88 <col:33> 'char_type *' lvalue ParmVar 0x9f36fc0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9f39c10 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39ba0 <col:39> 'const char_type *' lvalue ParmVar 0x9f37030 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9f39d10 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9f39d00 <col:9, col:36>
    (CXXMemberCallExpr 0x9f39cd0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9f39cb0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9f37e00
        (CXXThisExpr 0x9f39c48 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39cf0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9f39c98 <col:33> 'char_type':'char' lvalue ParmVar 0x9f37140 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f39e20 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9f39e10 <col:9, col:43>
    (CXXMemberCallExpr 0x9f39dc8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9f39da8 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9f37f30
        (CXXThisExpr 0x9f39d28 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39df0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39d78 <col:33> 'char_type *' lvalue ParmVar 0x9f37210 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9f39e00 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39d90 <col:39> 'const char_type *' lvalue ParmVar 0x9f37260 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9f3a0b8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9f39f80 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f39e98 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f39e88 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9f39e64 <col:6> 'char' lvalue ->_M_widen_ok 0x9f35fc0
          (CXXThisExpr 0x9f39e38 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9f39f70 <line:868:4, col:51>
      (ImplicitCastExpr 0x9f39f60 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f39f48 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9f39f38 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f39eb8 <col:11> 'char [256]' lvalue ->_M_widen 0x9f360e0
              (CXXThisExpr 0x9f39ea8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f39f20 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f39f10 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f39f00 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9f39ed8 <col:47> 'char' lvalue ParmVar 0x9f37330 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9f39fd0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9f39fb0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9f396e0
      (CXXThisExpr 0x9f39fa0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9f3a0a8 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9f3a078 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9f3a058 <col:9, col:15> '<bound member function type>' ->do_widen 0x9f39130
        (CXXThisExpr 0x9f39ff0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3a098 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3a040 <col:24> 'char' lvalue ParmVar 0x9f37330 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9f3a4f8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9f3a2e0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9f3a140 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9f3a130 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a120 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9f3a0e8 <col:6> 'char' lvalue ->_M_widen_ok 0x9f35fc0
            (CXXThisExpr 0x9f3a0d8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9f3a108 <col:21> 'int' 1))
    (CompoundStmt 0x9f3a2c8 <line:895:4, line:898:4>
      (CallExpr 0x9f3a218 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9f3a208 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3a158 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9f3a250 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9f3a240 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9f3a170 <col:23> 'char_type *' lvalue ParmVar 0x9f374d0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9f3a270 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9f3a260 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f3a188 <col:29> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9f3a280 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f3a1f0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9f3a1d0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f3a1a0 <col:35> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9f3a1e0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f3a1b8 <col:42> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *')))))
      (ReturnStmt 0x9f3a2b8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9f3a2a8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3a28c <col:13> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9f3a3b8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9f3a350 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f3a340 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f3a330 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9f3a310 <col:7> 'char' lvalue ->_M_widen_ok 0x9f35fc0
            (CXXThisExpr 0x9f3a300 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9f3a398 <line:900:4, col:18> 'void'
      (MemberExpr 0x9f3a378 <col:4> '<bound member function type>' ->_M_widen_init 0x9f396e0
        (CXXThisExpr 0x9f3a368 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9f3a4e8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9f3a490 <col:9, col:40> 'const char *'
      (MemberExpr 0x9f3a470 <col:9, col:15> '<bound member function type>' ->do_widen 0x9f392b0
        (CXXThisExpr 0x9f3a3d8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3a4b8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3a428 <col:24> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9f3a4c8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3a440 <col:30> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9f3a4d8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3a458 <col:36> 'char_type *' lvalue ParmVar 0x9f374d0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9f3aa40 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9f3a6c8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f3a5e0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f3a5d0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f3a5b8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9f3a5a8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f3a528 <col:6> 'char [256]' lvalue ->_M_narrow 0x9f361d0
              (CXXThisExpr 0x9f3a518 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f3a590 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f3a580 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f3a570 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9f3a548 <col:43> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9f3a6b8 <line:926:4, col:52>
      (ImplicitCastExpr 0x9f3a6a8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f3a690 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9f3a680 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f3a600 <col:11> 'char [256]' lvalue ->_M_narrow 0x9f361d0
              (CXXThisExpr 0x9f3a5f0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f3a668 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f3a658 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f3a648 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9f3a620 <col:48> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9f3a820 <line:927:2, col:43>
    0x9f3a6f0 "const char __t =
      (CXXMemberCallExpr 0x9f3a7d8 <col:19, col:42> 'char'
        (MemberExpr 0x9f3a7b8 <col:19> '<bound member function type>' ->do_narrow 0x9f393d0
          (CXXThisExpr 0x9f3a7a8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9f3a800 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a778 <col:29> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9f3a810 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a790 <col:34> 'char' lvalue ParmVar 0x9f37650 '__dfault' 'char')))")
  (IfStmt 0x9f3a9e8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9f3a8a0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9f3a870 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a860 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a830 <col:6> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char')))
      (ImplicitCastExpr 0x9f3a890 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a880 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a848 <col:13> 'char' lvalue ParmVar 0x9f37650 '__dfault' 'char'))))
    (BinaryOperator 0x9f3a9d0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9f3a990 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9f3a980 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9f3a900 <col:4> 'char [256]' lvalue ->_M_narrow 0x9f361d0
            (CXXThisExpr 0x9f3a8f0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9f3a968 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9f3a958 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9f3a948 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9f3a920 <col:41> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9f3a9c0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3a9a4 <col:49> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9f3aa30 <line:930:2, col:9>
    (ImplicitCastExpr 0x9f3aa20 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9f3aa04 <col:9> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9f3af40 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9f3acf8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f3ab60 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f3ab18 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9f3ab08 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3aa60 <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f3ab40 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9f3aae0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9f3aad0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f3aac0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9f3aa88 <col:23> 'char' lvalue ->_M_narrow_ok 0x9f36210
                  (CXXThisExpr 0x9f3aa78 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9f3aaa8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9f3ab50 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f3aaf8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9f3ace0 <line:960:4, line:963:4>
      (CallExpr 0x9f3ac30 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9f3ac20 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3ab6c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9f3ac68 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9f3ac58 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9f3ab84 <col:23> 'char *' lvalue ParmVar 0x9f37850 '__to' 'char *')))
        (ImplicitCastExpr 0x9f3ac88 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9f3ac78 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9f3ab9c <col:29> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9f3ac98 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f3ac08 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9f3abe8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9f3abb4 <col:35> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9f3abf8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9f3abcc <col:42> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9f3acd0 <line:962:6, col:13>
        (ImplicitCastExpr 0x9f3acc0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3aca4 <col:13> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9f3add0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9f3ad68 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f3ad58 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f3ad48 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9f3ad28 <col:7> 'char' lvalue ->_M_narrow_ok 0x9f36210
            (CXXThisExpr 0x9f3ad18 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9f3adb0 <line:965:4, col:19> 'void'
      (MemberExpr 0x9f3ad90 <col:4> '<bound member function type>' ->_M_narrow_init 0x9f39660
        (CXXThisExpr 0x9f3ad80 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9f3af30 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9f3aec0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9f3aea0 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9f39590
        (CXXThisExpr 0x9f3adf0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3aef0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae40 <col:25> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9f3af00 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae58 <col:31> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9f3af10 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3ae70 <col:37> 'char' lvalue ParmVar 0x9f37800 '__dfault' 'char'))
      (ImplicitCastExpr 0x9f3af20 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae88 <col:47> 'char *' lvalue ParmVar 0x9f37850 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9f3afb0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9f3afa0 <col:9, col:16>
    (ImplicitCastExpr 0x9f3af90 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9f3af70 <col:16> 'const mask *const' lvalue ->_M_table 0x9f35f80
        (CXXThisExpr 0x9f3af60 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9f3b000 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9f3aff0 <col:9, col:16>
    (ImplicitCastExpr 0x9f3afe0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9f3afc4 <col:16> 'char' lvalue ParmVar 0x9f37fa0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9f3b188 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9f3b0d8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9f3b0c8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f3b014 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9f3b110 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9f3b100 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3b02c <col:19> 'char_type *' lvalue ParmVar 0x9f39250 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9f3b130 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9f3b120 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3b044 <col:27> 'const char *' lvalue ParmVar 0x9f391b0 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9f3b140 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9f3b0b0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9f3b090 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3b05c <col:33> 'const char *' lvalue ParmVar 0x9f39200 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9f3b0a0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3b074 <col:40> 'const char *' lvalue ParmVar 0x9f391b0 '__lo' 'const char *')))))
  (ReturnStmt 0x9f3b178 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9f3b168 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9f3b14c <col:9> 'const char *' lvalue ParmVar 0x9f39200 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9f3b1d8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9f3b1c8 <col:9, col:16>
    (ImplicitCastExpr 0x9f3b1b8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9f3b1a0 <col:16> 'char_type':'char' lvalue ParmVar 0x9f39330 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9f3b360 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9f3b2b0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9f3b2a0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f3b1ec <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9f3b2e8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9f3b2d8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9f3b204 <col:19> 'char *' lvalue ParmVar 0x9f39530 '__dest' 'char *')))
    (ImplicitCastExpr 0x9f3b308 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9f3b2f8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3b21c <col:27> 'const char_type *' lvalue ParmVar 0x9f39450 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9f3b318 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9f3b288 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9f3b268 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3b234 <col:33> 'const char_type *' lvalue ParmVar 0x9f394a0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9f3b278 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3b24c <col:40> 'const char_type *' lvalue ParmVar 0x9f39450 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9f3b350 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9f3b340 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9f3b324 <col:9> 'const char_type *' lvalue ParmVar 0x9f394a0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9f420d8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f420c0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9f42100 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f420e8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0x9f357a8 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f35790 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0x9f35840 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0x9f34470 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9f358a0 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0x9f35ae8 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x9f363d0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x9f363b8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x9f36328 <col:45> 'int' 1)
    (ImplicitCastExpr 0x9f363a8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x9f36390 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x9f36380 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x9f36358 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x9f36340 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x9f39998 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9f39980 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9f399a8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9f399d0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f399b8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9f399f8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9f399e0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9f39a08 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9f39a30 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f39a18 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9f39b20 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9f39b10 <col:9, col:36>
    (CXXMemberCallExpr 0x9f39ae0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9f39ac0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9f37c10
        (CXXThisExpr 0x9f39a58 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39b00 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9f39aa8 <col:33> 'char_type':'char' lvalue ParmVar 0x9f36e80 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f39c30 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9f39c20 <col:9, col:43>
    (CXXMemberCallExpr 0x9f39bd8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9f39bb8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9f37d40
        (CXXThisExpr 0x9f39b38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39c00 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39b88 <col:33> 'char_type *' lvalue ParmVar 0x9f36fc0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9f39c10 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39ba0 <col:39> 'const char_type *' lvalue ParmVar 0x9f37030 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9f39d10 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9f39d00 <col:9, col:36>
    (CXXMemberCallExpr 0x9f39cd0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x9f39cb0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9f37e00
        (CXXThisExpr 0x9f39c48 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39cf0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x9f39c98 <col:33> 'char_type':'char' lvalue ParmVar 0x9f37140 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9f39e20 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9f39e10 <col:9, col:43>
    (CXXMemberCallExpr 0x9f39dc8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x9f39da8 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9f37f30
        (CXXThisExpr 0x9f39d28 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f39df0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39d78 <col:33> 'char_type *' lvalue ParmVar 0x9f37210 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9f39e00 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f39d90 <col:39> 'const char_type *' lvalue ParmVar 0x9f37260 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9f3a0b8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x9f39f80 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f39e98 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f39e88 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9f39e64 <col:6> 'char' lvalue ->_M_widen_ok 0x9f35fc0
          (CXXThisExpr 0x9f39e38 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9f39f70 <line:868:4, col:51>
      (ImplicitCastExpr 0x9f39f60 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f39f48 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9f39f38 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f39eb8 <col:11> 'char [256]' lvalue ->_M_widen 0x9f360e0
              (CXXThisExpr 0x9f39ea8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f39f20 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f39f10 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f39f00 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x9f39ed8 <col:47> 'char' lvalue ParmVar 0x9f37330 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9f39fd0 <line:869:2, col:22> 'void'
    (MemberExpr 0x9f39fb0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9f396e0
      (CXXThisExpr 0x9f39fa0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9f3a0a8 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9f3a078 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9f3a058 <col:9, col:15> '<bound member function type>' ->do_widen 0x9f39130
        (CXXThisExpr 0x9f39ff0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3a098 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3a040 <col:24> 'char' lvalue ParmVar 0x9f37330 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9f3a4f8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9f3a2e0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9f3a140 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9f3a130 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a120 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9f3a0e8 <col:6> 'char' lvalue ->_M_widen_ok 0x9f35fc0
            (CXXThisExpr 0x9f3a0d8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9f3a108 <col:21> 'int' 1))
    (CompoundStmt 0x9f3a2c8 <line:895:4, line:898:4>
      (CallExpr 0x9f3a218 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9f3a208 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3a158 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9f3a250 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9f3a240 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9f3a170 <col:23> 'char_type *' lvalue ParmVar 0x9f374d0 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9f3a270 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9f3a260 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f3a188 <col:29> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9f3a280 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f3a1f0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9f3a1d0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f3a1a0 <col:35> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9f3a1e0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f3a1b8 <col:42> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *')))))
      (ReturnStmt 0x9f3a2b8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9f3a2a8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3a28c <col:13> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9f3a3b8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9f3a350 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f3a340 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f3a330 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9f3a310 <col:7> 'char' lvalue ->_M_widen_ok 0x9f35fc0
            (CXXThisExpr 0x9f3a300 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9f3a398 <line:900:4, col:18> 'void'
      (MemberExpr 0x9f3a378 <col:4> '<bound member function type>' ->_M_widen_init 0x9f396e0
        (CXXThisExpr 0x9f3a368 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9f3a4e8 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9f3a490 <col:9, col:40> 'const char *'
      (MemberExpr 0x9f3a470 <col:9, col:15> '<bound member function type>' ->do_widen 0x9f392b0
        (CXXThisExpr 0x9f3a3d8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3a4b8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3a428 <col:24> 'const char *' lvalue ParmVar 0x9f37430 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9f3a4c8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3a440 <col:30> 'const char *' lvalue ParmVar 0x9f37480 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9f3a4d8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3a458 <col:36> 'char_type *' lvalue ParmVar 0x9f374d0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9f3aa40 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x9f3a6c8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f3a5e0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9f3a5d0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f3a5b8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9f3a5a8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f3a528 <col:6> 'char [256]' lvalue ->_M_narrow 0x9f361d0
              (CXXThisExpr 0x9f3a518 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f3a590 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f3a580 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f3a570 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9f3a548 <col:43> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x9f3a6b8 <line:926:4, col:52>
      (ImplicitCastExpr 0x9f3a6a8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9f3a690 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x9f3a680 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9f3a600 <col:11> 'char [256]' lvalue ->_M_narrow 0x9f361d0
              (CXXThisExpr 0x9f3a5f0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f3a668 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f3a658 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f3a648 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9f3a620 <col:48> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9f3a820 <line:927:2, col:43>
    0x9f3a6f0 "const char __t =
      (CXXMemberCallExpr 0x9f3a7d8 <col:19, col:42> 'char'
        (MemberExpr 0x9f3a7b8 <col:19> '<bound member function type>' ->do_narrow 0x9f393d0
          (CXXThisExpr 0x9f3a7a8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9f3a800 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a778 <col:29> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9f3a810 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a790 <col:34> 'char' lvalue ParmVar 0x9f37650 '__dfault' 'char')))")
  (IfStmt 0x9f3a9e8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x9f3a8a0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9f3a870 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a860 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a830 <col:6> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char')))
      (ImplicitCastExpr 0x9f3a890 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f3a880 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9f3a848 <col:13> 'char' lvalue ParmVar 0x9f37650 '__dfault' 'char'))))
    (BinaryOperator 0x9f3a9d0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x9f3a990 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x9f3a980 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9f3a900 <col:4> 'char [256]' lvalue ->_M_narrow 0x9f361d0
            (CXXThisExpr 0x9f3a8f0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9f3a968 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9f3a958 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9f3a948 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9f3a920 <col:41> 'char_type':'char' lvalue ParmVar 0x9f37610 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x9f3a9c0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3a9a4 <col:49> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9f3aa30 <line:930:2, col:9>
    (ImplicitCastExpr 0x9f3aa20 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9f3aa04 <col:9> 'const char' lvalue Var 0x9f3a6f0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9f3af40 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9f3acf8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f3ab60 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f3ab18 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9f3ab08 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3aa60 <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f3ab40 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9f3aae0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9f3aad0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f3aac0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x9f3aa88 <col:23> 'char' lvalue ->_M_narrow_ok 0x9f36210
                  (CXXThisExpr 0x9f3aa78 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x9f3aaa8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9f3ab50 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f3aaf8 <col:42> '_Bool' true))))
    (CompoundStmt 0x9f3ace0 <line:960:4, line:963:4>
      (CallExpr 0x9f3ac30 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9f3ac20 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f3ab6c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9f3ac68 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9f3ac58 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9f3ab84 <col:23> 'char *' lvalue ParmVar 0x9f37850 '__to' 'char *')))
        (ImplicitCastExpr 0x9f3ac88 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9f3ac78 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9f3ab9c <col:29> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x9f3ac98 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f3ac08 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9f3abe8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9f3abb4 <col:35> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9f3abf8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x9f3abcc <col:42> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *')))))
      (ReturnStmt 0x9f3acd0 <line:962:6, col:13>
        (ImplicitCastExpr 0x9f3acc0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3aca4 <col:13> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9f3add0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9f3ad68 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f3ad58 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9f3ad48 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9f3ad28 <col:7> 'char' lvalue ->_M_narrow_ok 0x9f36210
            (CXXThisExpr 0x9f3ad18 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9f3adb0 <line:965:4, col:19> 'void'
      (MemberExpr 0x9f3ad90 <col:4> '<bound member function type>' ->_M_narrow_init 0x9f39660
        (CXXThisExpr 0x9f3ad80 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9f3af30 <line:966:2, col:51>
    (CXXMemberCallExpr 0x9f3aec0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x9f3aea0 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9f39590
        (CXXThisExpr 0x9f3adf0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9f3aef0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae40 <col:25> 'const char_type *' lvalue ParmVar 0x9f37770 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9f3af00 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae58 <col:31> 'const char_type *' lvalue ParmVar 0x9f377c0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9f3af10 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9f3ae70 <col:37> 'char' lvalue ParmVar 0x9f37800 '__dfault' 'char'))
      (ImplicitCastExpr 0x9f3af20 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9f3ae88 <col:47> 'char *' lvalue ParmVar 0x9f37850 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x9f3afb0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x9f3afa0 <col:9, col:16>
    (ImplicitCastExpr 0x9f3af90 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9f3af70 <col:16> 'const mask *const' lvalue ->_M_table 0x9f35f80
        (CXXThisExpr 0x9f3af60 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9f3b000 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9f3aff0 <col:9, col:16>
    (ImplicitCastExpr 0x9f3afe0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x9f3afc4 <col:16> 'char' lvalue ParmVar 0x9f37fa0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9f3b188 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9f3b0d8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9f3b0c8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f3b014 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9f3b110 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9f3b100 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3b02c <col:19> 'char_type *' lvalue ParmVar 0x9f39250 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9f3b130 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9f3b120 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f3b044 <col:27> 'const char *' lvalue ParmVar 0x9f391b0 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9f3b140 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9f3b0b0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9f3b090 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3b05c <col:33> 'const char *' lvalue ParmVar 0x9f39200 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9f3b0a0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f3b074 <col:40> 'const char *' lvalue ParmVar 0x9f391b0 '__lo' 'const char *')))))
  (ReturnStmt 0x9f3b178 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9f3b168 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9f3b14c <col:9> 'const char *' lvalue ParmVar 0x9f39200 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9f3b1d8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9f3b1c8 <col:9, col:16>
    (ImplicitCastExpr 0x9f3b1b8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9f3b1a0 <col:16> 'char_type':'char' lvalue ParmVar 0x9f39330 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9f3b360 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9f3b2b0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9f3b2a0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f3b1ec <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9d10560 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9f3b2e8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9f3b2d8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9f3b204 <col:19> 'char *' lvalue ParmVar 0x9f39530 '__dest' 'char *')))
    (ImplicitCastExpr 0x9f3b308 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9f3b2f8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9f3b21c <col:27> 'const char_type *' lvalue ParmVar 0x9f39450 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9f3b318 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9f3b288 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9f3b268 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3b234 <col:33> 'const char_type *' lvalue ParmVar 0x9f394a0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9f3b278 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9f3b24c <col:40> 'const char_type *' lvalue ParmVar 0x9f39450 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9f3b350 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9f3b340 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9f3b324 <col:9> 'const char_type *' lvalue ParmVar 0x9f394a0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x9f420d8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f420c0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9f42100 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f420e8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9f42710 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f426f8 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0x9f42720 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x9f42d48 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f42d30 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x9f43368 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f43350 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0x9f43728 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0x9f43718 <col:5, col:56>
    (ImplicitCastExpr 0x9f43708 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0x9f436f0 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0x9f436c0 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f436b0 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0x9f43680 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0x9f43670 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0x9f435f0 <col:12> 'const mask *const' lvalue ->_M_table 0x9f35f80
                  (CXXThisExpr 0x9f435e0 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0x9f43658 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0x9f43648 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0x9f43638 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0x9f43610 <col:48> 'char' lvalue ParmVar 0x9f434f0 '__c' 'char')))))))
        (ImplicitCastExpr 0x9f436e0 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f436d0 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x9f43694 <col:56> 'mask':'unsigned short' lvalue ParmVar 0x9f434b0 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0x9f43b78 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0x9f43b28 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0x9f439b8 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0x9f43998 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f43964 <col:12> 'const char *' lvalue ParmVar 0x9f437c0 '__low' 'const char *'))
      (ImplicitCastExpr 0x9f439a8 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f4397c <col:20> 'const char *' lvalue ParmVar 0x9f43810 '__high' 'const char *')))
    (BinaryOperator 0x9f43b10 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0x9f43a00 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0x9f439e8 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0x9f439d0 <col:8> 'mask *' lvalue ParmVar 0x9f43860 '__vec' 'mask *')))
      (ImplicitCastExpr 0x9f43b00 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0x9f43ae8 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0x9f43ad8 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0x9f43a28 <col:18> 'const mask *const' lvalue ->_M_table 0x9f35f80
              (CXXThisExpr 0x9f43a18 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9f43ac0 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9f43ab0 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9f43aa0 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0x9f43a78 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0x9f43a60 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0x9f43a48 <col:55> 'const char *' lvalue ParmVar 0x9f437c0 '__low' 'const char *'))))))))))
  (ReturnStmt 0x9f43b68 <line:52:5, col:12>
    (ImplicitCastExpr 0x9f43b58 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9f43b3c <col:12> 'const char *' lvalue ParmVar 0x9f43810 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x9f44038 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0x9f43fe8 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0x9f43fa0 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0x9f43df8 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x9f43dd8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f43da4 <col:12> 'const char *' lvalue ParmVar 0x9f43c50 '__low' 'const char *'))
        (ImplicitCastExpr 0x9f43de8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f43dbc <col:20> 'const char *' lvalue ParmVar 0x9f43ca0 '__high' 'const char *')))
      (UnaryOperator 0x9f43f88 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9f43f78 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9f43f60 <col:9, col:60> 'int'
            (BinaryOperator 0x9f43f48 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0x9f43f18 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9f43f08 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0x9f43ed8 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0x9f43ec8 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0x9f43e20 <col:10> 'const mask *const' lvalue ->_M_table 0x9f35f80
                        (CXXThisExpr 0x9f43e10 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0x9f43eb0 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0x9f43ea0 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0x9f43e90 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0x9f43e68 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0x9f43e58 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0x9f43e40 <col:47> 'const char *' lvalue ParmVar 0x9f43c50 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0x9f43f38 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9f43f28 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0x9f43eec <col:57> 'mask':'unsigned short' lvalue ParmVar 0x9f43c00 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0x9f43fd0 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x9f43fb8 <col:9> 'const char *' lvalue ParmVar 0x9f43c50 '__low' 'const char *')))
  (ReturnStmt 0x9f44028 <line:62:5, col:12>
    (ImplicitCastExpr 0x9f44018 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9f43ffc <col:12> 'const char *' lvalue ParmVar 0x9f43c50 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x9f44500 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0x9f444b0 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0x9f44468 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0x9f442b8 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x9f44298 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f44264 <col:12> 'const char *' lvalue ParmVar 0x9f44110 '__low' 'const char *'))
        (ImplicitCastExpr 0x9f442a8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9f4427c <col:20> 'const char *' lvalue ParmVar 0x9f44160 '__high' 'const char *')))
      (BinaryOperator 0x9f44450 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0x9f44420 <col:8, col:59> 'int'
          (BinaryOperator 0x9f44408 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0x9f443d8 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f443c8 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0x9f44398 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0x9f44388 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0x9f442e0 <col:9> 'const mask *const' lvalue ->_M_table 0x9f35f80
                      (CXXThisExpr 0x9f442d0 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0x9f44370 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0x9f44360 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0x9f44350 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0x9f44328 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0x9f44318 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0x9f44300 <col:46> 'const char *' lvalue ParmVar 0x9f44110 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0x9f443f8 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f443e8 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0x9f443ac <col:56> 'mask':'unsigned short' lvalue ParmVar 0x9f440c0 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0x9f44438 <col:64> 'int' 0)))
    (UnaryOperator 0x9f44498 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x9f44480 <col:9> 'const char *' lvalue ParmVar 0x9f44110 '__low' 'const char *')))
  (ReturnStmt 0x9f444f0 <line:72:5, col:12>
    (ImplicitCastExpr 0x9f444e0 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9f444c4 <col:12> 'const char *' lvalue ParmVar 0x9f44110 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0x9f44b68 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f448f8 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0x9f448c4 <col:26> 'int' EnumConstant 0x9f44890 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9f448e0 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0x9f44b78 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f44944 <col:23> 'int' EnumConstant 0x9f44910 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0x9f44b88 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f449c8 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0x9f44994 <col:27> 'int' EnumConstant 0x9f44960 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9f449b0 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0x9f44b98 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f44a48 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0x9f44a14 <col:17> 'int' EnumConstant 0x9f44890 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9f44a30 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0x9f44ba8 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f44ac8 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0x9f44a94 <col:17> 'int' EnumConstant 0x9f44960 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x9f44ab0 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0x9f44bb8 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f44b14 <col:12> 'int' EnumConstant 0x9f449e0 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0x9f44f58 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f44e38 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x9f44e04 <col:15> 'int' EnumConstant 0x9f44dd0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x9f44e20 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0x9f44f68 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f44eb8 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x9f44e84 <col:15> 'int' EnumConstant 0x9f44dd0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x9f44ea0 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0x9f44f78 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f44f08 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0x9f45d68 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f45d50 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9f45d74 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0x9f45880 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0x9f45e08 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0x9f45e68 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0x9f45ec8 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0x9f45f18 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0x9f48488 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0x9f484e8 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0x9f48538 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0x9f485a0 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0x9f48600 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0x9f48658 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0x9f486d8 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0x9f48aa0 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0x9f48a80 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0x9f48968 <line:1618:11> '_Bool' lvalue ->_M_allocated 0x9f45840
      (CXXThisExpr 0x9f48958 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0x9f48a60 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0x9f489b8 <line:1620:4, col:14> 'void'
        (MemberExpr 0x9f48998 <col:14> 'const char *' lvalue ->_M_grouping 0x9f45430
          (CXXThisExpr 0x9f48988 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x9f48a00 <line:1621:4, col:14> 'void'
        (MemberExpr 0x9f489e0 <col:14> 'const _CharT *' lvalue ->_M_truename 0x9f45510
          (CXXThisExpr 0x9f489d0 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x9f48a48 <line:1622:4, col:14> 'void'
        (MemberExpr 0x9f48a28 <col:14> 'const _CharT *' lvalue ->_M_falsename 0x9f45590
          (CXXThisExpr 0x9f48a18 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0x9f49c60 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f49c48 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9f49ce4 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0x9f491c0 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9f49d78 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0x9f49e38 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0x9f49e18 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9f49df8 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9f49be0
      (CXXThisExpr 0x9f49de8 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0x9f49c88 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f49c70 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9f49e4c </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0x9f492f0 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0x9f49ee8 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0x9f492b0 '__cache' '__cache_type *')
) (CompoundStmt 0x9f49f90 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0x9f49f70 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9f49f50 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9f49be0
      (CXXThisExpr 0x9f49f40 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9f49cb0 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f49c98 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9f49fa4 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0x9f49450 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9f4a038 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0x9f4a0f8 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0x9f4a0d8 <col:9, col:38> '<dependent type>'
    (MemberExpr 0x9f4a0a0 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9f49be0
      (CXXThisExpr 0x9f4a090 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0x9f4a0c0 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9f49410 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0x9f4a1a0 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0x9f4a190 <col:9, col:39>
    (CallExpr 0x9f4a170 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4a138 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4a128 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0x9f4a230 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0x9f4a220 <col:9, col:39>
    (CallExpr 0x9f4a200 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4a1c8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4a1b8 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0x9f4a2c0 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0x9f4a2b0 <col:9, col:34>
    (CallExpr 0x9f4a290 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4a258 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4a248 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0x9f4a350 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0x9f4a340 <col:9, col:34>
    (CallExpr 0x9f4a320 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4a2e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4a2d8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0x9f4a3e0 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0x9f4a3d0 <col:9, col:35>
    (CallExpr 0x9f4a3b0 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f4a378 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f4a368 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0x9f4a470 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0x9f4a460 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9f4a428 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9f4a408 <col:16> '__cache_type *const' lvalue ->_M_data 0x9f490e0
        (CXXThisExpr 0x9f4a3f8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0x9f4a500 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0x9f4a4f0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9f4a4b8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9f4a498 <col:16> '__cache_type *const' lvalue ->_M_data 0x9f490e0
        (CXXThisExpr 0x9f4a488 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0x9f4a590 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0x9f4a580 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9f4a548 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9f4a528 <col:16> '__cache_type *const' lvalue ->_M_data 0x9f490e0
        (CXXThisExpr 0x9f4a518 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0x9f4a620 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0x9f4a610 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9f4a5d8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9f4a5b8 <col:16> '__cache_type *const' lvalue ->_M_data 0x9f490e0
        (CXXThisExpr 0x9f4a5a8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0x9f4a6b0 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0x9f4a6a0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9f4a668 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9f4a648 <col:16> '__cache_type *const' lvalue ->_M_data 0x9f490e0
        (CXXThisExpr 0x9f4a638 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0x9f49cd8 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9f49cc0 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0x9f4a908 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9f4f100 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f4f0e8 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0x9f4f1a0 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0x9f4ef30 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9f4f628 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0x9f4f608 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0x9f4f3b8 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0x9f4f2c0 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0x9f4f260 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x9f4f250 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f4f1fc <col:6> 'int (const char *, const char *)' lvalue Function 0x9ea4ab0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9f4f288 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f4f214 <col:23> 'const char *' lvalue ParmVar 0x9f4eef0 '__s' 'const char *'))
          (ImplicitCastExpr 0x9f4f298 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9f4f22c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9f4f2a8 <col:36> 'int' 0))
      (BinaryOperator 0x9f4f3a0 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0x9f4f340 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x9f4f330 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f4f2d8 <col:9> 'int (const char *, const char *)' lvalue Function 0x9ea4ab0 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9f4f368 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f4f2f0 <col:26> 'const char *' lvalue ParmVar 0x9f4eef0 '__s' 'const char *'))
          (ImplicitCastExpr 0x9f4f378 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9f4f308 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9f4f388 <col:43> 'int' 0)))
    (CompoundStmt 0x9f4f5e8 <line:1886:4, line:1891:4>
      (DeclStmt 0x9f4f418 <line:1887:6, col:22>
        0x9f4f3e0 "__c_locale __tmp")
      (CallExpr 0x9f4f4c0 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4f458 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4f448 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9f4f48c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0x9f4f3e0 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0x9f4f4a4 <col:38> 'const char *' lvalue ParmVar 0x9f4eef0 '__s' 'const char *'))
      (CallExpr 0x9f4f548 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4f4f8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4f4e8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9f4f52c <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0x9f4f3e0 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0x9f4f5c8 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f4f578 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9f4f568 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x9f4f5ac <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0x9f4f3e0 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0x9f4f640 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0x9f547d0 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f547b8 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9f547dc </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0x9f4f9d0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9f54880 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x9f549a8 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0x9f54998 <col:9, col:58>
    (CallExpr 0x9f54968 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f548b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f548a8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f548ec <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f4fad0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54904 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f4fb10 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f5491c <col:42> 'class std::ios_base' lvalue ParmVar 0x9f4fb60 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f54934 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f4fbd0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f5494c <col:55> '_Bool' lvalue ParmVar 0x9f4fc20 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x9f54ac0 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0x9f54ab0 <col:9, col:58>
    (CallExpr 0x9f54a80 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f549d0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f549c0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f54a04 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f4fd70 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54a1c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f4fdb0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54a34 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f4fe00 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f54a4c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f4fe70 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f54a64 <col:55> 'long' lvalue ParmVar 0x9f4fec0 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x9f54bd8 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0x9f54bc8 <col:9, col:58>
    (CallExpr 0x9f54b98 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f54ae8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f54ad8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f54b1c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f50010 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54b34 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f50050 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54b4c <col:42> 'class std::ios_base' lvalue ParmVar 0x9f500a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f54b64 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f50110 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f54b7c <col:55> 'unsigned short' lvalue ParmVar 0x9f50160 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x9f54cf0 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0x9f54ce0 <col:9, col:58>
    (CallExpr 0x9f54cb0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f54c00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f54bf0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f54c34 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f502b0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54c4c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f502f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54c64 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f50340 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f54c7c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f503b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f54c94 <col:55> 'unsigned int' lvalue ParmVar 0x9f50400 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9f54e08 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0x9f54df8 <col:9, col:58>
    (CallExpr 0x9f54dc8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f54d18 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f54d08 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f54d4c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f50550 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54d64 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f50590 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54d7c <col:42> 'class std::ios_base' lvalue ParmVar 0x9f505e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f54d94 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f50650 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f54dac <col:55> 'unsigned long' lvalue ParmVar 0x9f506a0 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x9f54f20 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0x9f54f10 <col:9, col:58>
    (CallExpr 0x9f54ee0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f54e30 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f54e20 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f54e64 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f507f0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54e7c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f50830 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54e94 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f50880 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f54eac <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f508f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f54ec4 <col:55> 'long long' lvalue ParmVar 0x9f50940 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9f55038 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0x9f55028 <col:9, col:58>
    (CallExpr 0x9f54ff8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f54f48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f54f38 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f54f7c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f50a90 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54f94 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f50ad0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f54fac <col:42> 'class std::ios_base' lvalue ParmVar 0x9f50b20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f54fc4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f50b90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f54fdc <col:55> 'unsigned long long' lvalue ParmVar 0x9f50be0 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x9f55150 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0x9f55140 <col:9, col:58>
    (CallExpr 0x9f55110 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f55060 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f55050 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f55094 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f51450 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f550ac <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f51490 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f550c4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f514e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f550dc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f51550 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f550f4 <col:55> 'float' lvalue ParmVar 0x9f515a0 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x9f55268 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0x9f55258 <col:9, col:58>
    (CallExpr 0x9f55228 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f55178 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f55168 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f551ac <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f516f0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f551c4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f51730 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f551dc <col:42> 'class std::ios_base' lvalue ParmVar 0x9f51780 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f551f4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f517f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f5520c <col:55> 'double' lvalue ParmVar 0x9f51840 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9f55380 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0x9f55370 <col:9, col:58>
    (CallExpr 0x9f55340 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f55290 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f55280 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f552c4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f51990 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f552dc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f519d0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f552f4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f51a20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5530c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f51a90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f55324 <col:55> 'long double' lvalue ParmVar 0x9f51ae0 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x9f57990 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0x9f57980 <col:9, col:58>
    (CallExpr 0x9f57950 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f578a0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f57890 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f578d4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9f51c30 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f578ec <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9f51c70 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f57904 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f51cc0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5791c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f51d30 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f57934 <col:55> 'void *' lvalue ParmVar 0x9f51d80 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0x9f579a8 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0x9f587d8 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0x9f57a38 <line:2120:4, col:18>
    0x9f579d0 "int __ret =
      (UnaryOperator 0x9f57a20 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9f57a08 <col:17> 'int' 1))")
  (IfStmt 0x9f58790 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0x9f57a98 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0x9f57a78 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9f57a48 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0x9f52900 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9f57a88 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f57a60 <col:17> 'int' 10)))
    (CompoundStmt 0x9f57e10 <line:2122:6, line:2125:6>
      (IfStmt 0x9f57df0 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0x9f57cf0 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9f57b50 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9f57b08 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
            (DeclRefExpr 0x9f57ab0 <col:12> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9f57ae8 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x9f57ad0 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x9f57cc8 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0x9f57c80 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
            (DeclRefExpr 0x9f57b74 <col:35> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9f57c60 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0x9f57c38 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x9f57bf0 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                (CXXUnresolvedConstructExpr 0x9f57bb8 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0x9f57ba0 <col:57> 'char'48))
                (DeclRefExpr 0x9f57bd4 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0x9f52900 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0x9f57dd8 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x9f57d08 <col:3> 'int' lvalue Var 0x9f579d0 '__ret' 'int')
          (CXXOperatorCallExpr 0x9f57db0 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9f57d78 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9f57d20 <col:11> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9f57d58 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9f57d40 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0x9f58778 <line:2127:6, line:2134:6>
      (IfStmt 0x9f58758 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0x9f57fb8 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9f57ec8 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9f57e80 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
            (DeclRefExpr 0x9f57e24 <col:12> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9f57e60 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x9f57e48 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x9f57f90 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0x9f57f48 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
            (DeclRefExpr 0x9f57eec <col:35> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9f57f28 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0x9f57f10 <col:50> 'char'57))))
        (BinaryOperator 0x9f580a0 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x9f57fd0 <col:3> 'int' lvalue Var 0x9f579d0 '__ret' 'int')
          (CXXOperatorCallExpr 0x9f58078 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9f58040 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9f57fe8 <col:11> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9f58020 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9f58008 <col:25> 'char'48))))
        (IfStmt 0x9f58738 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0x9f58248 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9f58158 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9f58110 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
              (DeclRefExpr 0x9f580b8 <col:17> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9f580f0 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0x9f580d8 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0x9f58220 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0x9f581d8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
              (DeclRefExpr 0x9f5817c <col:40> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9f581b8 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0x9f581a0 <col:55> 'char'102))))
          (BinaryOperator 0x9f583d0 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0x9f58260 <col:3> 'int' lvalue Var 0x9f579d0 '__ret' 'int')
            (CXXOperatorCallExpr 0x9f583a8 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9f58360 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
              (IntegerLiteral 0x9f58278 <col:11> 'int' 10)
              (ParenExpr 0x9f58348 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0x9f58320 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f582e8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                  (DeclRefExpr 0x9f58290 <col:17> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0x9f582c8 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0x9f582b0 <col:31> 'char'97))))))
          (IfStmt 0x9f58718 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0x9f58578 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9f58488 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9f58440 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
                (DeclRefExpr 0x9f583e8 <col:17> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9f58420 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0x9f58408 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0x9f58550 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9f58508 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
                (DeclRefExpr 0x9f584ac <col:40> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9f584e8 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0x9f584d0 <col:55> 'char'70))))
            (BinaryOperator 0x9f58700 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x9f58590 <col:3> 'int' lvalue Var 0x9f579d0 '__ret' 'int')
              (CXXOperatorCallExpr 0x9f586d8 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9f58690 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                (IntegerLiteral 0x9f585a8 <col:11> 'int' 10)
                (ParenExpr 0x9f58678 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0x9f58650 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f58618 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                    (DeclRefExpr 0x9f585c0 <col:17> '_CharT2' lvalue ParmVar 0x9f52940 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0x9f585f8 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0x9f585e0 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0x9f587c8 <line:2135:4, col:11>
    (DeclRefExpr 0x9f587ac <col:11> 'int' lvalue Var 0x9f579d0 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0x9f58c68 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0x9f58878 <line:2143:4, col:18>
    0x9f58810 "int __ret =
      (UnaryOperator 0x9f58860 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9f58848 <col:17> 'int' 1))")
  (DeclStmt 0x9f58a58 <line:2144:4, col:73>
    0x9f588d0 "const char_type *__q =
      (CallExpr 0x9f58a30 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f589b0 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9f589e4 <col:54> 'const _CharT2 *' lvalue ParmVar 0x9f52dc0 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0x9f589fc <col:62> 'size_t':'unsigned int' lvalue ParmVar 0x9f52e00 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0x9f58a14 <col:69> '_CharT2' lvalue ParmVar 0x9f52e40 '__c' '_CharT2'))")
  (IfStmt 0x9f58c20 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0x9f58a68 <line:2145:8> 'const char_type *' lvalue Var 0x9f588d0 '__q' 'const char_type *')
    (CompoundStmt 0x9f58c08 <line:2146:6, line:2150:6>
      (BinaryOperator 0x9f58b28 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0x9f58a80 <col:8> 'int' lvalue Var 0x9f58810 '__ret' 'int')
        (CXXOperatorCallExpr 0x9f58b00 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9f58ac8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (DeclRefExpr 0x9f58a98 <col:16> 'const char_type *' lvalue Var 0x9f588d0 '__q' 'const char_type *')
          (DeclRefExpr 0x9f58ab0 <col:22> 'const _CharT2 *' lvalue ParmVar 0x9f52dc0 '__zero' 'const _CharT2 *')))
      (IfStmt 0x9f58be8 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0x9f58b80 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0x9f58b70 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0x9f58b40 <col:12> 'int' lvalue Var 0x9f58810 '__ret' 'int'))
          (IntegerLiteral 0x9f58b58 <col:20> 'int' 15))
        (CompoundAssignOperator 0x9f58bc8 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0x9f58b98 <col:3> 'int' lvalue Var 0x9f58810 '__ret' 'int')
          (IntegerLiteral 0x9f58bb0 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f58c58 <line:2151:4, col:11>
    (DeclRefExpr 0x9f58c3c <col:11> 'int' lvalue Var 0x9f58810 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x9f58d90 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0x9f58d80 <col:9, col:61>
    (CallExpr 0x9f58d50 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9f58c98 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f58cd4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9f531e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f58cec <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9f53220 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f58d04 <col:45> 'class std::ios_base' lvalue ParmVar 0x9f53270 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f58d1c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f532e0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f58d34 <col:58> 'long' lvalue ParmVar 0x9f53330 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x9f58eb0 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0x9f58ea0 <col:9, col:61>
    (CallExpr 0x9f58e70 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9f58db8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f58df4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9f53410 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f58e0c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9f53450 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f58e24 <col:45> 'class std::ios_base' lvalue ParmVar 0x9f534a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f58e3c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f53510 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f58e54 <col:58> 'unsigned short' lvalue ParmVar 0x9f53560 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x9f58fd0 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0x9f58fc0 <col:9, col:61>
    (CallExpr 0x9f58f90 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9f58ed8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f58f14 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9f53640 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f58f2c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9f53680 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f58f44 <col:45> 'class std::ios_base' lvalue ParmVar 0x9f536d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f58f5c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f53740 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f58f74 <col:58> 'unsigned int' lvalue ParmVar 0x9f53790 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9f590f0 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0x9f590e0 <col:9, col:61>
    (CallExpr 0x9f590b0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9f58ff8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f59034 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9f53870 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f5904c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9f538b0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f59064 <col:45> 'class std::ios_base' lvalue ParmVar 0x9f53900 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5907c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f53970 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f59094 <col:58> 'unsigned long' lvalue ParmVar 0x9f539c0 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x9f59210 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0x9f59200 <col:9, col:61>
    (CallExpr 0x9f591d0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9f59118 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f59154 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9f53aa0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f5916c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9f53ae0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f59184 <col:45> 'class std::ios_base' lvalue ParmVar 0x9f53b30 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5919c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f53ba0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f591b4 <col:58> 'long long' lvalue ParmVar 0x9f53bf0 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9f59330 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0x9f59320 <col:9, col:61>
    (CallExpr 0x9f592f0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9f59238 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f59274 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9f53cd0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f5928c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x9f53d10 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f592a4 <col:45> 'class std::ios_base' lvalue ParmVar 0x9f53d60 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f592bc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f53dd0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f592d4 <col:58> 'unsigned long long' lvalue ParmVar 0x9f53e20 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0x9f59678 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0x9f5d288 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f5d270 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9f5d294 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0x9f59a20 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9f5d330 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0x9f5d440 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0x9f5d430 <col:9, col:50>
    (CallExpr 0x9f5d400 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5d368 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5d358 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5d39c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f59b20 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5d3b4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f59b70 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5d3cc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f59bd0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5d3e4 <col:47> '_Bool' lvalue ParmVar 0x9f59c10 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0x9f5d540 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0x9f5d530 <col:9, col:50>
    (CallExpr 0x9f5d500 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5d468 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5d458 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5d49c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f59d50 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5d4b4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f59da0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5d4cc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f59de0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5d4e4 <col:47> 'long' lvalue ParmVar 0x9f59e30 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0x9f5d640 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0x9f5d630 <col:9, col:50>
    (CallExpr 0x9f5d600 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5d568 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5d558 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5d59c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f59f70 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5d5b4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f59fc0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5d5cc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f5a000 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5d5e4 <col:47> 'unsigned long' lvalue ParmVar 0x9f5a050 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0x9f5d740 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0x9f5d730 <col:9, col:50>
    (CallExpr 0x9f5d700 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5d668 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5d658 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5d69c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5a190 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5d6b4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f5a1e0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5d6cc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f5a220 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5d6e4 <col:47> 'long long' lvalue ParmVar 0x9f5a270 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9f5d840 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0x9f5d830 <col:9, col:50>
    (CallExpr 0x9f5d800 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5d768 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5d758 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5d79c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5a3b0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5d7b4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f5a400 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5d7cc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f5a440 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5d7e4 <col:47> 'unsigned long long' lvalue ParmVar 0x9f5a490 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0x9f5d940 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0x9f5d930 <col:9, col:50>
    (CallExpr 0x9f5d900 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5d868 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5d858 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5d89c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5a5d0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5d8b4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f5a620 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5d8cc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f5a660 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5d8e4 <col:47> 'double' lvalue ParmVar 0x9f5a6b0 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0x9f5da40 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0x9f5da30 <col:9, col:50>
    (CallExpr 0x9f5da00 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5d968 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5d958 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5d99c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5a7f0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5d9b4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f5a840 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5d9cc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f5a880 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5d9e4 <col:47> 'long double' lvalue ParmVar 0x9f5a8d0 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0x9f5db40 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0x9f5db30 <col:9, col:50>
    (CallExpr 0x9f5db00 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5da68 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9f5da58 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9f5da9c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5aa10 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5dab4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9f5aa60 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9f5dacc <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9f5aaa0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5dae4 <col:47> 'const void *' lvalue ParmVar 0x9f5aaf0 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0x9f5db58 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0x9f5dc58 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0x9f5dc48 <col:9, col:52>
    (CallExpr 0x9f5dc18 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9f5db78 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f5dbb4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5c640 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5dbcc <col:35> 'class std::ios_base' lvalue ParmVar 0x9f5c690 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5dbe4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9f5c6d0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5dbfc <col:49> 'long' lvalue ParmVar 0x9f5c720 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0x9f5dd60 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0x9f5dd50 <col:9, col:52>
    (CallExpr 0x9f5dd20 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9f5dc80 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f5dcbc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5c800 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5dcd4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9f5c850 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5dcec <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9f5c890 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5dd04 <col:49> 'unsigned long' lvalue ParmVar 0x9f5c8e0 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0x9f5de68 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0x9f5de58 <col:9, col:52>
    (CallExpr 0x9f5de28 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9f5dd88 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f5ddc4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5c9c0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5dddc <col:35> 'class std::ios_base' lvalue ParmVar 0x9f5ca10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5ddf4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9f5ca50 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5de0c <col:49> 'long long' lvalue ParmVar 0x9f5caa0 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9f5df70 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0x9f5df60 <col:9, col:52>
    (CallExpr 0x9f5df30 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9f5de90 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f5decc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9f5cb80 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f5dee4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9f5cbd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f5defc <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9f5cc10 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9f5df14 <col:49> 'unsigned long long' lvalue ParmVar 0x9f5cc60 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0x9f5e2b8 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f5e6e0 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0x9f5e6d0 <col:7, col:72>
    (CallExpr 0x9f5e6a8 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5e610 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f5e5f0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5e570 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f5e5d8 <col:40> 'const class std::locale' lvalue ParmVar 0x9f5e390 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f5e670 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b330 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f5e690 <col:69> '_CharT' lvalue ParmVar 0x9f5e340 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f5eaf8 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0x9f5eae8 <col:7, col:72>
    (CallExpr 0x9f5eac0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5ea30 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f5ea10 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5e990 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f5e9f8 <col:40> 'const class std::locale' lvalue ParmVar 0x9f5e7b0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f5ea84 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b3a0 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f5eaa4 <col:69> '_CharT' lvalue ParmVar 0x9f5e760 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f5ef08 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0x9f5eef8 <col:7, col:72>
    (CallExpr 0x9f5eed0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5ee40 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f5ee20 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5eda0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f5ee08 <col:40> 'const class std::locale' lvalue ParmVar 0x9f5ebc0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f5ee94 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b510 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f5eeb4 <col:69> '_CharT' lvalue ParmVar 0x9f5eb70 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f5f318 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0x9f5f308 <col:7, col:72>
    (CallExpr 0x9f5f2e0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5f250 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f5f230 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5f1b0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f5f218 <col:40> 'const class std::locale' lvalue ParmVar 0x9f5efd0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f5f2a4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b100 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f5f2c4 <col:69> '_CharT' lvalue ParmVar 0x9f5ef80 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f5f728 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0x9f5f718 <col:7, col:72>
    (CallExpr 0x9f5f6f0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5f660 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f5f640 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5f5c0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f5f628 <col:40> 'const class std::locale' lvalue ParmVar 0x9f5f3e0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f5f6b4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b170 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f5f6d4 <col:69> '_CharT' lvalue ParmVar 0x9f5f390 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f5fb38 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0x9f5fb28 <col:7, col:72>
    (CallExpr 0x9f5fb00 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5fa70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f5fa50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5f9d0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f5fa38 <col:40> 'const class std::locale' lvalue ParmVar 0x9f5f7f0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f5fac4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b1e0 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f5fae4 <col:69> '_CharT' lvalue ParmVar 0x9f5f7a0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f5ff48 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0x9f5ff38 <col:7, col:72>
    (CallExpr 0x9f5ff10 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f5fe80 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f5fe60 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f5fde0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f5fe48 <col:40> 'const class std::locale' lvalue ParmVar 0x9f5fc00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f5fed4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b250 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f5fef4 <col:69> '_CharT' lvalue ParmVar 0x9f5fbb0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f60368 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0x9f60358 <col:7, col:72>
    (CallExpr 0x9f60330 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f602a0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f60280 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f60200 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f60268 <col:40> 'const class std::locale' lvalue ParmVar 0x9f60010 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f602f4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b580 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f60314 <col:69> '_CharT' lvalue ParmVar 0x9f5ffc0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f60778 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0x9f60768 <col:7, col:73>
    (CallExpr 0x9f60740 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f606b0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f60690 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f60610 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f60678 <col:40> 'const class std::locale' lvalue ParmVar 0x9f60430 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f60704 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b2c0 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f60724 <col:70> '_CharT' lvalue ParmVar 0x9f603e0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f60b88 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0x9f60b78 <col:7, col:72>
    (CallExpr 0x9f60b50 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f60ac0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f60aa0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f60a20 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f60a88 <col:40> 'const class std::locale' lvalue ParmVar 0x9f60840 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f60b14 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b5f0 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f60b34 <col:69> '_CharT' lvalue ParmVar 0x9f607f0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f60f98 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0x9f60f88 <col:7, col:72>
    (CallExpr 0x9f60f60 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f60ed0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f60eb0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f60e30 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f60e98 <col:40> 'const class std::locale' lvalue ParmVar 0x9f60c50 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f60f24 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x9f1b410 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9f60f44 <col:69> '_CharT' lvalue ParmVar 0x9f60c00 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f61360 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0x9f61350 <col:7, col:58>
    (CallExpr 0x9f61330 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f612e0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f612c0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f61240 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f612a8 <col:40> 'const class std::locale' lvalue ParmVar 0x9f61060 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f61314 <col:55> '_CharT' lvalue ParmVar 0x9f61010 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9f61730 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0x9f61720 <col:7, col:58>
    (CallExpr 0x9f61700 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f616b0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9f61690 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f61610 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9f61678 <col:40> 'const class std::locale' lvalue ParmVar 0x9f61430 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9f616e4 <col:55> '_CharT' lvalue ParmVar 0x9f613e0 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0x9f629d8 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0x9f62218 <line:56:2, col:49>
    0x9f62090 "const size_t __i =
      (CallExpr 0x9f621f8 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f621c0 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9f62188 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0x9f62310 <line:57:2, col:59>
    0x9f62260 "const locale::facet **__caches =
      (ImplicitCastExpr 0x9f62300 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x9f622dc <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0x9ea2f00
          (ImplicitCastExpr 0x9f622d0 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9f622ac <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
              (DeclRefExpr 0x9f62294 <col:35> 'const class std::locale' lvalue ParmVar 0x9f61f00 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x9f62850 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0x9f623a8 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f62398 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9f62388 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x9f62370 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x9f62350 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x9f62320 <col:7> 'const class locale::facet **' lvalue Var 0x9f62260 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9f62360 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9f62338 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9f62090 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0x9f62830 <line:59:4, line:72:4>
      (DeclStmt 0x9f624e0 <line:60:6, col:41>
        0x9f62490 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0x9f624c8 <col:40> 'int' 0)")
      (IfStmt 0x9f626c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f624f0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f626b0 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0x9f62610 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0x9f62500 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x9f62490 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0x9f625d8 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0x9f62690 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f62640 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9f62628 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x9f62490 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0x9f62674 <col:19> 'const class std::locale' lvalue ParmVar 0x9f61f00 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0x9f62750 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f626e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f62738 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0x9f62710 <line:68:3, col:10> 'void'
            (DeclRefExpr 0x9f626f8 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0x9f62490 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0x9f62728 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0x9f62808 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0x9f627b4 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0x9ea4460
          (ImplicitCastExpr 0x9f627a8 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9f62784 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0x9e9bea0
              (DeclRefExpr 0x9f6276c <col:6> 'const class std::locale' lvalue ParmVar 0x9f61f00 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0x9f627d4 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0x9f62490 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0x9f627ec <col:45> 'const size_t':'const unsigned int' lvalue Var 0x9f62090 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0x9f629c8 <line:73:2, col:67>
    (CXXStaticCastExpr 0x9f629b0 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0x9f62950 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0x9f62930 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0x9f62900 <col:54> 'const class locale::facet **' lvalue Var 0x9f62260 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0x9f62940 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9f62918 <col:63> 'const size_t':'const unsigned int' lvalue Var 0x9f62090 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0x9f69ef0 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0x9f62cd8 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9f62ca8 <col:7> '_Bool' lvalue ->_M_allocated 0x9f45840
      (CXXThisExpr 0x9f62c98 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0x9f62cc8 <col:22> '_Bool' true))
  (DeclStmt 0x9f62f60 <line:83:7, col:73>
    0x9f62de0 "const numpunct<_CharT> &__np =
      (CallExpr 0x9f62f40 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9f62ec0 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
        (DeclRefExpr 0x9f62f28 <col:67> 'const class std::locale' lvalue ParmVar 0x9f62bb0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9f62fe0 <line:85:7, col:27>
    0x9f62f80 "char *__grouping =
      (ImplicitCastExpr 0x9f62fd0 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0x9f62fb8 <col:26> 'int' 0))")
  (DeclStmt 0x9f63070 <line:86:7, col:29>
    0x9f63020 "_CharT *__truename =
      (IntegerLiteral 0x9f63058 <col:28> 'int' 0)")
  (DeclStmt 0x9f630e0 <line:87:7, col:30>
    0x9f63090 "_CharT *__falsename =
      (IntegerLiteral 0x9f630c8 <col:29> 'int' 0)")
  (IfStmt 0x9f69dd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f630f0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9f69d78 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0x9f631f8 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0x9f63110 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9f45470
          (CXXThisExpr 0x9f63100 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9f631d8 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f631a0 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x9f63180 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f63148 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9f63130 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9f632a0 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0x9f63210 <col:4> 'char *' lvalue Var 0x9f62f80 '__grouping' 'char *')
        (CXXNewExpr 0x9f63260 <col:17, col:21> 'char *'
          (MemberExpr 0x9f63238 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9f45470
            (CXXThisExpr 0x9f63228 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9f633a8 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f63328 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x9f63308 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f632d0 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9f632b8 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9f6335c <col:25> 'char *' lvalue Var 0x9f62f80 '__grouping' 'char *')
        (MemberExpr 0x9f63388 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9f45470
          (CXXThisExpr 0x9f63378 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9f63418 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0x9f633e0 <col:4> 'const char *' lvalue ->_M_grouping 0x9f45430
          (CXXThisExpr 0x9f633d0 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9f63400 <col:18> 'char *' lvalue Var 0x9f62f80 '__grouping' 'char *'))
      (BinaryOperator 0x9f68fc0 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0x9f63440 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0x9f454b0
          (CXXThisExpr 0x9f63430 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0x9f68fa8 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0x9f68f90 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0x9f63558 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0x9f63470 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x9f45470
                (CXXThisExpr 0x9f63460 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0x9f63540 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0x9f63530 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0x9f63500 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0x9f634d8 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0x9f634a0 <col:37> 'const char *' lvalue ->_M_grouping 0x9f45430
                        (CXXThisExpr 0x9f63490 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0x9f634c0 <col:49> 'int' 0))))
                (IntegerLiteral 0x9f63518 <col:55> 'int' 0)))
            (ParenExpr 0x9f68f78 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0x9f68f50 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0x9f68ef8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
                (ArraySubscriptExpr 0x9f635b8 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0x9f63580 <col:13> 'const char *' lvalue ->_M_grouping 0x9f45430
                    (CXXThisExpr 0x9f63570 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0x9f635a0 <col:25> 'int' 0))
                (DeclRefExpr 0x9f68ed8 <line:97:9, col:44> 'const char':'const char' lvalue Var 0x9f640b0 '__max' 'const char':'const char'))))))
      (BinaryOperator 0x9f690d0 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0x9f68fe8 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9f45550
          (CXXThisExpr 0x9f68fd8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9f690b0 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f69078 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x9f69058 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f69020 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9f69008 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9f69178 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9f690e8 <col:4> '_CharT *' lvalue Var 0x9f63020 '__truename' '_CharT *')
        (CXXNewExpr 0x9f69138 <col:17, col:21> '_CharT *'
          (MemberExpr 0x9f69110 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9f45550
            (CXXThisExpr 0x9f69100 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9f69280 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f69200 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x9f691e0 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f691a8 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9f69190 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9f69234 <col:25> '_CharT *' lvalue Var 0x9f63020 '__truename' '_CharT *')
        (MemberExpr 0x9f69260 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x9f45550
          (CXXThisExpr 0x9f69250 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9f692f0 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0x9f692b8 <col:4> 'const _CharT *' lvalue ->_M_truename 0x9f45510
          (CXXThisExpr 0x9f692a8 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9f692d8 <col:18> '_CharT *' lvalue Var 0x9f63020 '__truename' '_CharT *'))
      (BinaryOperator 0x9f69400 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0x9f69318 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9f455d0
          (CXXThisExpr 0x9f69308 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9f693e0 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f693a8 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0x9f69388 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f69350 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0x9f69338 <col:24> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9f694a8 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0x9f69418 <col:4> '_CharT *' lvalue Var 0x9f63090 '__falsename' '_CharT *')
        (CXXNewExpr 0x9f69468 <col:18, col:22> '_CharT *'
          (MemberExpr 0x9f69440 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9f455d0
            (CXXThisExpr 0x9f69430 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9f695b0 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f69530 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0x9f69510 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f694d8 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9f694c0 <col:4> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9f69564 <col:26> '_CharT *' lvalue Var 0x9f63090 '__falsename' '_CharT *')
        (MemberExpr 0x9f69590 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x9f455d0
          (CXXThisExpr 0x9f69580 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9f69620 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0x9f695e8 <col:4> 'const _CharT *' lvalue ->_M_falsename 0x9f45590
          (CXXThisExpr 0x9f695d8 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9f69608 <col:19> '_CharT *' lvalue Var 0x9f63090 '__falsename' '_CharT *'))
      (BinaryOperator 0x9f696d8 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9f69648 <col:4> '_CharT' lvalue ->_M_decimal_point 0x9f45610
          (CXXThisExpr 0x9f69638 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9f696b8 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f69680 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9f69668 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0x9f69790 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9f69700 <col:4> '_CharT' lvalue ->_M_thousands_sep 0x9f45650
          (CXXThisExpr 0x9f696f0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9f69770 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9f69738 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9f69720 <col:23> 'const numpunct<_CharT>' lvalue Var 0x9f62de0 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0x9f699f0 <line:112:4, col:64>
        0x9f69870 "const ctype<_CharT> &__ct =
          (CallExpr 0x9f699d0 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x9f69950 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
            (DeclRefExpr 0x9f699b8 <col:58> 'const class std::locale' lvalue ParmVar 0x9f62bb0 '__loc' 'const class std::locale &'))")
      (CallExpr 0x9f69bb0 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f69a18 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9f69a00 <col:4> 'const ctype<_CharT>' lvalue Var 0x9f69870 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x9f69a6c <col:15, col:27> 'const char *' lvalue Var 0x9f44be0 '_S_atoms_out' 'const char *')
        (BinaryOperator 0x9f69b68 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0x9f69b48 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f69aac <col:8, col:20> 'const char *' lvalue Var 0x9f44be0 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0x9f69b58 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x9f69aec <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44b30 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0x9f69b90 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0x9f45730
          (CXXThisExpr 0x9f69b80 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0x9f69d50 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f69bf0 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9f69bd8 <col:4> 'const ctype<_CharT>' lvalue Var 0x9f69870 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x9f69c44 <col:15, col:27> 'const char *' lvalue Var 0x9f44c30 '_S_atoms_in' 'const char *')
        (BinaryOperator 0x9f69d08 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0x9f69ce8 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f69c84 <col:8, col:20> 'const char *' lvalue Var 0x9f44c30 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0x9f69cf8 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x9f69cc4 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44f20 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0x9f69d30 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0x9f45800
          (CXXThisExpr 0x9f69d20 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0x9f69ed0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9f69df0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9f69eb0 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0x9f69e28 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0x9f69e18 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0x9f69e00 <col:14> 'char *' lvalue Var 0x9f62f80 '__grouping' 'char *')))
      (CXXDeleteExpr 0x9f69e58 <line:123:4, col:14> 'void'
        (DeclRefExpr 0x9f69e40 <col:14> '_CharT *' lvalue Var 0x9f63020 '__truename' '_CharT *'))
      (CXXDeleteExpr 0x9f69e88 <line:124:4, col:14> 'void'
        (DeclRefExpr 0x9f69e70 <col:14> '_CharT *' lvalue Var 0x9f63090 '__falsename' '_CharT *'))
      (NullStmt 0x9f69ea0 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0x9f6f3d0 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0x9f6a750 <line:149:7, col:50>
    0x9f6a720 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x9f6a840 <line:150:7, col:69>
    0x9f6a810 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9f6a948 <line:151:7, col:37>
    0x9f6a910 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9f6aa10 <line:152:7, col:45>
    0x9f6a970 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9f6a9e0 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0x9f6a9bc <col:29, col:34> '<bound member function type>' ._M_getloc 0x9ec5b60
          (ImplicitCastExpr 0x9f6aa00 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f6a9a4 <col:29> 'class std::ios_base' lvalue ParmVar 0x9f6a460 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9f6aad8 <line:153:7, col:45>
    0x9f6aa50 "const __cache_type *__lc =
      (CallExpr 0x9f6aab8 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0x9f6aa84 <col:34> '__use_cache<__cache_type>' lvalue Var 0x9f6a910 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9f6aa9c <col:39> 'const class std::locale' lvalue Var 0x9f6a970 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9f6aba8 <line:154:7, col:46>
    0x9f6ab20 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9f6ab70 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x9f6ab54 <col:29> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9f6ac18 <line:155:7, col:34>
    0x9f6abc0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9f6ac00 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0x9f6ad20 <line:158:7, col:38>
    0x9f6ac30 "bool __testeof =
      (CXXOperatorCallExpr 0x9f6acf8 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9f6ac98 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
        (DeclRefExpr 0x9f6ac64 <col:24> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')
        (DeclRefExpr 0x9f6ac7c <col:33> '_InIter' lvalue ParmVar 0x9f6a410 '__end' '_InIter'))")
  (IfStmt 0x9f6b680 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0x9f6ad58 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f6ad48 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f6ad30 <col:12> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')))
    (CompoundStmt 0x9f6b660 <line:162:2, line:175:2>
      (BinaryOperator 0x9f6adb8 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0x9f6ad6c <col:4> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x9f6ada0 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9f6ad84 <col:11> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))
      (DeclStmt 0x9f6af28 <line:164:4, col:58>
        0x9f6ade0 "const bool __plus =
          (CXXOperatorCallExpr 0x9f6af00 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6aea0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (DeclRefExpr 0x9f6ae14 <col:24> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9f6ae88 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0x9f6ae2c <col:31> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9f6ae64 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44d10 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0x9f6b640 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0x9f6b350 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0x9f6b218 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0x9f6b078 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0x9f6b060 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0x9f6af38 <col:9> 'const _Bool' lvalue Var 0x9f6ade0 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0x9f6b038 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f6afd8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (DeclRefExpr 0x9f6af50 <col:19> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x9f6afc0 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f6af68 <col:26> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x9f6af9c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44cd0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x9f6b200 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0x9f6b1e8 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0x9f6b1d0 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x9f6b0a8 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f6b08c <col:13> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9f6b1a8 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f6b148 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                    (DeclRefExpr 0x9f6b0dc <col:38> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x9f6b110 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f6b0f4 <col:45> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x9f6b338 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0x9f6b320 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0x9f6b2f8 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0x9f6b298 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f6b230 <col:13> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9f6b260 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f6b248 <col:20> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x9f6b628 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0x9f6b478 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0x9f6b468 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f6b418 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0x9f6b368 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
            (ConditionalOperator 0x9f6b3d8 <col:18, col:33> 'char'
              (ImplicitCastExpr 0x9f6b3c8 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f6b380 <col:18> 'const _Bool' lvalue Var 0x9f6ade0 '__plus' 'const _Bool'))
              (CharacterLiteral 0x9f6b398 <col:27> 'char'43)
              (CharacterLiteral 0x9f6b3b0 <col:33> 'char'45)))
          (IfStmt 0x9f6b608 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f6b540 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0x9f6b4e8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
              (UnaryOperator 0x9f6b4b8 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9f6b49c <col:14> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter'))
              (DeclRefExpr 0x9f6b4cc <col:23> '_InIter' lvalue ParmVar 0x9f6a410 '__end' '_InIter'))
            (BinaryOperator 0x9f6b5b0 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0x9f6b564 <col:3> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9f6b598 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9f6b57c <col:10> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))
            (BinaryOperator 0x9f6b5f0 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0x9f6b5c8 <col:3> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9f6b5e0 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9f6b6f8 <line:178:7, col:36>
    0x9f6b6b0 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0x9f6b6e8 <col:31> '_Bool' false)")
  (DeclStmt 0x9f6b770 <line:179:7, col:24>
    0x9f6b720 "int __sep_pos =
      (IntegerLiteral 0x9f6b758 <col:23> 'int' 0)")
  (WhileStmt 0x9f6bec0 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0x9f6b7a8 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f6b798 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f6b780 <col:15> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')))
    (CompoundStmt 0x9f6bea8 <line:181:2, line:201:2>
      (IfStmt 0x9f6be88 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0x9f6ba20 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0x9f6b918 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0x9f6b900 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x9f6b7d8 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0x9f6b7bc <col:9> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x9f6b8d8 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x9f6b878 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f6b80c <col:34> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9f6b840 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f6b824 <col:41> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9f6b9f8 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6b998 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (DeclRefExpr 0x9f6b92c <col:11> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9f6b960 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0x9f6b944 <col:18> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9f6ba38 <line:184:6>)
        (IfStmt 0x9f6be68 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9f6bb28 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6bac8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (DeclRefExpr 0x9f6ba40 <col:13> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x9f6bab0 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0x9f6ba58 <col:20> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9f6ba8c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44dd0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0x9f6be40 <line:186:6, line:198:6>
            (IfStmt 0x9f6bc68 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0x9f6bb78 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f6bb68 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f6bb4c <col:13> '_Bool' lvalue Var 0x9f6b6b0 '__found_mantissa' '_Bool')))
              (CompoundStmt 0x9f6bc50 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0x9f6bbe8 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9f6bbd8 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f6bbc0 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9f6bb8c <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                  (CharacterLiteral 0x9f6bba8 <col:15> 'char'48))
                (BinaryOperator 0x9f6bc38 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x9f6bc0c <col:5> '_Bool' lvalue Var 0x9f6b6b0 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0x9f6bc28 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0x9f6bca0 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9f6bc84 <col:10> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int'))
            (IfStmt 0x9f6be20 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0x9f6bd58 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0x9f6bd00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
                (UnaryOperator 0x9f6bcd0 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x9f6bcb4 <col:14> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter'))
                (DeclRefExpr 0x9f6bce4 <col:23> '_InIter' lvalue ParmVar 0x9f6a410 '__end' '_InIter'))
              (BinaryOperator 0x9f6bdc8 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0x9f6bd7c <col:3> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                (UnaryOperator 0x9f6bdb0 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0x9f6bd94 <col:10> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))
              (BinaryOperator 0x9f6be08 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0x9f6bde0 <col:3> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x9f6bdf8 <col:15> '_Bool' true))))
          (BreakStmt 0x9f6be60 <line:200:6>)))))
  (DeclStmt 0x9f6bf28 <line:204:7, col:31>
    0x9f6bee0 "bool __found_dec =
      (CXXBoolLiteralExpr 0x9f6bf18 <col:26> '_Bool' false)")
  (DeclStmt 0x9f6bf88 <line:205:7, col:31>
    0x9f6bf40 "bool __found_sci =
      (CXXBoolLiteralExpr 0x9f6bf78 <col:26> '_Bool' false)")
  (DeclStmt 0x9f6bff8 <line:206:7, col:30>
    0x9f6bfa0 "string __found_grouping =
      (CXXConstructExpr 0x9f6bfd8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x9f6c0d8 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9f6c020 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x9f6c008 <col:11> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x9f6c0a8 <line:208:2, col:29> 'void'
      (MemberExpr 0x9f6c06c <col:2, col:19> '<bound member function type>' .reserve 0x9e56be0
        (DeclRefExpr 0x9f6c054 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x9f6c0c8 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f6c090 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9f6c210 <line:209:7, col:65>
    0x9f6c110 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x9f6c1e8 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9f6c1a0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (DeclRefExpr 0x9f6c144 <col:37> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9f6c17c <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44dd0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x9f6ef88 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0x9f6c270 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x9f6c238 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x9f6c220 <col:12> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *')))
    (WhileStmt 0x9f6d360 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0x9f6c2b0 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9f6c2a0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f6c284 <col:10> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')))
      (CompoundStmt 0x9f6d340 <line:214:4, line:258:4>
        (DeclStmt 0x9f6c3d8 <line:215:6, col:54>
          0x9f6c2e0 "const int __digit =
            (CallExpr 0x9f6c3b0 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0x9f6c328 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0x9f6c368 <col:34> 'const char_type *' lvalue Var 0x9f6c110 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0x9f6c380 <col:46> 'int' 10)
              (DeclRefExpr 0x9f6c398 <col:50> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT'))")
        (IfStmt 0x9f6d198 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0x9f6c440 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0x9f6c430 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f6c3e8 <col:10> 'const int' lvalue Var 0x9f6c2e0 '__digit' 'const int'))
            (UnaryOperator 0x9f6c418 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0x9f6c400 <col:22> 'int' 1)))
          (CompoundStmt 0x9f6c578 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0x9f6c510 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0x9f6c500 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f6c4e8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0x9f6c458 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
              (ImplicitCastExpr 0x9f6c4d8 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0x9f6c4c0 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0x9f6c4a0 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0x9f6c470 <col:13> 'char'48))
                  (ImplicitCastExpr 0x9f6c4b0 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9f6c484 <col:19> 'const int' lvalue Var 0x9f6c2e0 '__digit' 'const int')))))
            (BinaryOperator 0x9f6c560 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0x9f6c534 <col:3> '_Bool' lvalue Var 0x9f6b6b0 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0x9f6c550 <col:22> '_Bool' true)))
          (IfStmt 0x9f6d178 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0x9f6c718 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0x9f6c6c0 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9f6c658 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f6c5f8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (DeclRefExpr 0x9f6c590 <col:15> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0x9f6c5c0 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f6c5a8 <col:22> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *')))
                (UnaryOperator 0x9f6c6a8 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9f6c698 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f6c67c <col:12> '_Bool' lvalue Var 0x9f6bee0 '__found_dec' '_Bool'))))
              (UnaryOperator 0x9f6c700 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f6c6f0 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f6c6d8 <col:28> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool'))))
            (CompoundStmt 0x9f6c7f0 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0x9f6c788 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0x9f6c778 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f6c760 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0x9f6c730 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                (CharacterLiteral 0x9f6c748 <col:13> 'char'46))
              (BinaryOperator 0x9f6c7d8 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x9f6c7ac <col:3> '_Bool' lvalue Var 0x9f6bee0 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0x9f6c7c8 <col:17> '_Bool' true)))
            (IfStmt 0x9f6d158 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0x9f6cae8 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0x9f6cab8 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0x9f6ca60 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0x9f6ca48 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0x9f6c910 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x9f6c890 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                        (DeclRefExpr 0x9f6c808 <col:16> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x9f6c878 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0x9f6c820 <col:23> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9f6c854 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44e50 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0x9f6ca20 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0x9f6c9c0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                        (DeclRefExpr 0x9f6c934 <col:12> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x9f6c9a8 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0x9f6c94c <col:19> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9f6c984 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44ed0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0x9f6caa0 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9f6ca90 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9f6ca74 <col:12> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool'))))
                (DeclRefExpr 0x9f6cad0 <col:27> '_Bool' lvalue Var 0x9f6b6b0 '__found_mantissa' '_Bool'))
              (CompoundStmt 0x9f6d130 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0x9f6cb58 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9f6cb48 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f6cb30 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9f6cb00 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                  (CharacterLiteral 0x9f6cb18 <col:13> 'char'101))
                (BinaryOperator 0x9f6cba8 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0x9f6cb7c <col:3> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0x9f6cb98 <col:17> '_Bool' true))
                (IfStmt 0x9f6d110 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x9f6cc60 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f6cc08 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
                    (UnaryOperator 0x9f6cbd8 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0x9f6cbc0 <col:9> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter'))
                    (DeclRefExpr 0x9f6cbec <col:18> '_InIter' lvalue ParmVar 0x9f6a410 '__end' '_InIter'))
                  (CompoundStmt 0x9f6d090 <line:237:5, line:244:5>
                    (BinaryOperator 0x9f6ccd0 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0x9f6cc84 <col:7> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0x9f6ccb8 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0x9f6cc9c <col:14> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))
                    (DeclStmt 0x9f6ce38 <line:239:7, col:61>
                      0x9f6ccf0 "const bool __plus =
                        (CXXOperatorCallExpr 0x9f6ce10 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0x9f6cdb0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                          (DeclRefExpr 0x9f6cd24 <col:27> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x9f6cd98 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0x9f6cd3c <col:34> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x9f6cd74 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44d10 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0x9f6d070 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0x9f6cf70 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0x9f6ce48 <col:11> 'const _Bool' lvalue Var 0x9f6ccf0 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0x9f6cf48 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0x9f6cee8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                          (DeclRefExpr 0x9f6ce60 <col:21> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x9f6ced0 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0x9f6ce78 <col:28> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x9f6ceac <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44cd0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0x9f6d040 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9f6d030 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9f6d018 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9f6cf88 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                        (ConditionalOperator 0x9f6cff8 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0x9f6cfe8 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x9f6cfa0 <col:19> 'const _Bool' lvalue Var 0x9f6ccf0 '__plus' 'const _Bool'))
                          (CharacterLiteral 0x9f6cfb8 <col:28> 'char'43)
                          (CharacterLiteral 0x9f6cfd0 <col:34> 'char'45)))
                      (ContinueStmt 0x9f6d068 <line:243:9>)))
                  (CompoundStmt 0x9f6d0f8 <line:246:5, line:249:5>
                    (BinaryOperator 0x9f6d0d8 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0x9f6d0ac <col:7> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0x9f6d0c8 <col:19> '_Bool' true))
                    (BreakStmt 0x9f6d0f0 <line:248:7>))))
              (BreakStmt 0x9f6d150 <line:252:8>))))
        (IfStmt 0x9f6d320 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9f6d258 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6d200 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
            (UnaryOperator 0x9f6d1d0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9f6d1b4 <col:12> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter'))
            (DeclRefExpr 0x9f6d1e4 <col:21> '_InIter' lvalue ParmVar 0x9f6a410 '__end' '_InIter'))
          (BinaryOperator 0x9f6d2c8 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x9f6d27c <col:8> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9f6d2b0 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f6d294 <col:15> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))
          (BinaryOperator 0x9f6d308 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9f6d2e0 <col:8> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9f6d2f8 <col:20> '_Bool' true)))))
    (WhileStmt 0x9f6ef70 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0x9f6d3a0 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9f6d390 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f6d374 <col:10> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')))
      (CompoundStmt 0x9f6ef58 <line:261:4, line:348:4>
        (IfStmt 0x9f6edb0 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0x9f6d4f8 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x9f6d3d0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9f6d3b4 <col:10> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x9f6d4d0 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9f6d470 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f6d404 <col:35> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9f6d438 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9f6d41c <col:42> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x9f6d7d8 <line:265:8, line:285:8>
            (IfStmt 0x9f6d7b8 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0x9f6d590 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0x9f6d538 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9f6d528 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f6d510 <col:8> '_Bool' lvalue Var 0x9f6bee0 '__found_dec' '_Bool')))
                (UnaryOperator 0x9f6d578 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9f6d568 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f6d54c <col:24> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool'))))
              (CompoundStmt 0x9f6d798 <line:267:5, line:282:5>
                (IfStmt 0x9f6d778 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0x9f6d5d0 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0x9f6d5c0 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9f6d5a8 <col:11> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int')))
                  (CompoundStmt 0x9f6d6e8 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0x9f6d678 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9f6d668 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9f6d650 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9f6d5dc <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9f6d638 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9f6d628 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9f6d618 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9f6d5f4 <col:42> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int')))))
                    (BinaryOperator 0x9f6d6d0 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0x9f6d69c <col:4> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int')
                      (IntegerLiteral 0x9f6d6b8 <col:16> 'int' 0)))
                  (CompoundStmt 0x9f6d760 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0x9f6d738 <line:279:4, col:17> 'void'
                      (MemberExpr 0x9f6d718 <col:4, col:11> '<bound member function type>' .clear 0x9e56c50
                        (DeclRefExpr 0x9f6d700 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')))
                    (BreakStmt 0x9f6d758 <line:280:4>))))
              (BreakStmt 0x9f6d7b0 <line:284:5>)))
          (IfStmt 0x9f6ed90 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f6d8b8 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0x9f6d858 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f6d7ec <col:15> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9f6d820 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9f6d804 <col:22> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *')))
            (CompoundStmt 0x9f6dbf0 <line:287:8, line:300:8>
              (IfStmt 0x9f6dbd0 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0x9f6d960 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0x9f6d908 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9f6d8f8 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9f6d8dc <col:8> '_Bool' lvalue Var 0x9f6bee0 '__found_dec' '_Bool')))
                  (UnaryOperator 0x9f6d948 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9f6d938 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9f6d91c <col:24> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool'))))
                (CompoundStmt 0x9f6dba8 <line:289:5, line:297:5>
                  (IfStmt 0x9f6dac8 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0x9f6d9f8 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0x9f6d9b0 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0x9f6d990 <col:11, col:28> '<bound member function type>' .size 0x9e560a0
                          (ImplicitCastExpr 0x9f6d9e8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0x9f6d978 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0x9f6daa0 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9f6da90 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9f6da78 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9f6da04 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9f6da60 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9f6da50 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9f6da40 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9f6da1c <col:47> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0x9f6db40 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0x9f6db30 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9f6db18 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0x9f6dae4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                    (CharacterLiteral 0x9f6db00 <col:17> 'char'46))
                  (BinaryOperator 0x9f6db90 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0x9f6db64 <col:7> '_Bool' lvalue Var 0x9f6bee0 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0x9f6db80 <col:21> '_Bool' true)))
                (BreakStmt 0x9f6dbc8 <line:299:5>)))
            (CompoundStmt 0x9f6ed78 <line:302:8, line:342:8>
              (DeclStmt 0x9f6dd40 <line:303:3, line:304:45>
                0x9f6dc20 "const char_type *__q =
                  (CallExpr 0x9f6dd18 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f6dc98 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f6dccc <col:25> 'const char_type *' lvalue Var 0x9f6c110 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0x9f6dce8 <col:37> 'int' 10)
                    (DeclRefExpr 0x9f6dd00 <col:41> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x9f6ed58 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0x9f6dd50 <line:305:7> 'const char_type *' lvalue Var 0x9f6dc20 '__q' 'const char_type *')
                (CompoundStmt 0x9f6df40 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0x9f6deb0 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9f6dd68 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0x9f6de88 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0x9f6de40 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                      (CharacterLiteral 0x9f6dd80 <col:17> 'char'48)
                      (ParenExpr 0x9f6de28 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0x9f6de00 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0x9f6ddc8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                          (DeclRefExpr 0x9f6dd94 <col:24> 'const char_type *' lvalue Var 0x9f6dc20 '__q' 'const char_type *')
                          (DeclRefExpr 0x9f6ddac <col:30> 'const char_type *' lvalue Var 0x9f6c110 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0x9f6def8 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x9f6ded0 <col:7> '_Bool' lvalue Var 0x9f6b6b0 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0x9f6dee8 <col:26> '_Bool' true))
                  (UnaryOperator 0x9f6df28 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x9f6df10 <col:9> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int')))
                (IfStmt 0x9f6ed38 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0x9f6e220 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0x9f6e1f0 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0x9f6e198 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0x9f6e180 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0x9f6e048 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0x9f6dfe8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                            (DeclRefExpr 0x9f6df5c <col:13> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x9f6dfd0 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0x9f6df74 <col:20> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x9f6dfac <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44e50 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0x9f6e158 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0x9f6e0f8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                            (DeclRefExpr 0x9f6e06c <col:9> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x9f6e0e0 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0x9f6e084 <col:16> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x9f6e0bc <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44ed0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0x9f6e1d8 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0x9f6e1c8 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0x9f6e1ac <col:9> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0x9f6e208 <col:24> '_Bool' lvalue Var 0x9f6b6b0 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0x9f6ed10 <line:314:5, line:339:5>
                    (IfStmt 0x9f6e3c8 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0x9f6e2f0 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0x9f6e2e0 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0x9f6e270 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0x9f6e250 <col:11, col:28> '<bound member function type>' .size 0x9e560a0
                              (ImplicitCastExpr 0x9f6e290 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0x9f6e238 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0x9f6e2c8 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0x9f6e2b8 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x9f6e29c <col:39> '_Bool' lvalue Var 0x9f6bee0 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0x9f6e3a0 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9f6e390 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9f6e378 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9f6e308 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0x9f6e360 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0x9f6e350 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0x9f6e340 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0x9f6e320 <col:47> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0x9f6e440 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9f6e430 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9f6e418 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9f6e3e4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                      (CharacterLiteral 0x9f6e400 <col:17> 'char'101))
                    (BinaryOperator 0x9f6e490 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0x9f6e464 <col:7> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0x9f6e480 <col:21> '_Bool' true))
                    (IfStmt 0x9f6ecf0 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0x9f6e548 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0x9f6e4f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
                        (UnaryOperator 0x9f6e4c0 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0x9f6e4a8 <col:13> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter'))
                        (DeclRefExpr 0x9f6e4d4 <col:22> '_InIter' lvalue ParmVar 0x9f6a410 '__end' '_InIter'))
                      (CompoundStmt 0x9f6ec70 <line:323:9, line:333:9>
                        (BinaryOperator 0x9f6e5b8 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0x9f6e56c <col:4> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0x9f6e5a0 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0x9f6e584 <col:11> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))
                        (DeclStmt 0x9f6e728 <line:325:4, col:58>
                          0x9f6e5e0 "const bool __plus =
                            (CXXOperatorCallExpr 0x9f6e700 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0x9f6e6a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                              (DeclRefExpr 0x9f6e614 <col:24> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0x9f6e688 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0x9f6e62c <col:31> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                                (DeclRefExpr 0x9f6e664 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44d10 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0x9f6ec50 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0x9f6eb50 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0x9f6ea18 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0x9f6e878 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0x9f6e860 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0x9f6e738 <col:9> 'const _Bool' lvalue Var 0x9f6e5e0 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0x9f6e838 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0x9f6e7d8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                                    (DeclRefExpr 0x9f6e750 <col:19> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0x9f6e7c0 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0x9f6e768 <col:26> 'const _CharT *' lvalue Var 0x9f6ab20 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0x9f6e79c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44cd0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0x9f6ea00 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0x9f6e9e8 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0x9f6e9d0 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0x9f6e8a8 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0x9f6e88c <col:13> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0x9f6e9a8 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0x9f6e948 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                                      (DeclRefExpr 0x9f6e8dc <col:9> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0x9f6e910 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0x9f6e8f4 <col:16> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0x9f6eb38 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0x9f6eb20 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0x9f6eaf8 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0x9f6ea98 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                                  (DeclRefExpr 0x9f6ea30 <col:13> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0x9f6ea60 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0x9f6ea48 <col:20> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0x9f6ec20 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0x9f6ec10 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0x9f6ebf8 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0x9f6eb68 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9f6a520 '__xtrc' 'string &')
                            (ConditionalOperator 0x9f6ebd8 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0x9f6ebc8 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0x9f6eb80 <col:19> 'const _Bool' lvalue Var 0x9f6e5e0 '__plus' 'const _Bool'))
                              (CharacterLiteral 0x9f6eb98 <col:28> 'char'43)
                              (CharacterLiteral 0x9f6ebb0 <col:34> 'char'45)))
                          (ContinueStmt 0x9f6ec48 <line:332:6>)))
                      (CompoundStmt 0x9f6ecd8 <line:335:9, line:338:9>
                        (BinaryOperator 0x9f6ecb8 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0x9f6ec8c <col:4> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0x9f6eca8 <col:16> '_Bool' true))
                        (BreakStmt 0x9f6ecd0 <line:337:4>))))
                  (BreakStmt 0x9f6ed30 <line:341:5>))))))
        (IfStmt 0x9f6ef38 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9f6ee70 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9f6ee18 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
            (UnaryOperator 0x9f6ede8 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9f6edcc <col:12> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter'))
            (DeclRefExpr 0x9f6edfc <col:21> '_InIter' lvalue ParmVar 0x9f6a410 '__end' '_InIter'))
          (BinaryOperator 0x9f6eee0 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x9f6ee94 <col:8> 'char_type':'_CharT' lvalue Var 0x9f6abc0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9f6eec8 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f6eeac <col:15> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))
          (BinaryOperator 0x9f6ef20 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9f6eef8 <col:8> '_Bool' lvalue Var 0x9f6ac30 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9f6ef10 <col:20> '_Bool' true))))))
  (IfStmt 0x9f6f388 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f6f010 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x9f6efe0 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0x9f6efbc <col:11, col:28> '<bound member function type>' .size 0x9e560a0
          (ImplicitCastExpr 0x9f6f000 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x9f6efa4 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x9f6f370 <line:353:9, line:362:9>
      (IfStmt 0x9f6f178 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0x9f6f0a0 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0x9f6f048 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f6f038 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f6f01c <col:9> '_Bool' lvalue Var 0x9f6bee0 '__found_dec' '_Bool')))
          (UnaryOperator 0x9f6f088 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f6f078 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f6f05c <col:25> '_Bool' lvalue Var 0x9f6bf40 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0x9f6f150 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0x9f6f140 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f6f128 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0x9f6f0b8 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0x9f6f110 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0x9f6f100 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0x9f6f0f0 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0x9f6f0d0 <col:44> 'int' lvalue Var 0x9f6b720 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0x9f6f350 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0x9f6f2b8 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0x9f6f290 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0x9f6f1b8 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x9f6a080 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x9f6f1f0 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9f6f1d8 <col:39> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9f6f240 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0x9f6f224 <col:11> 'const __cache_type *' lvalue Var 0x9f6aa50 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x9f6f274 <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0x9f6bfa0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x9f6f338 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9f6f2cc <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f6a4d0 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9f6f328 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f6f304 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f6f3c0 <line:364:7, col:14>
    (DeclRefExpr 0x9f6f3a4 <col:14> '_InIter' lvalue ParmVar 0x9f6a3d0 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0x9f74c48 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0x9f6fb40 <line:374:9, col:57>
    0x9f6fb10 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x9f6fbc8 <line:375:2, col:33>
    0x9f6fb60 "Using__gnu_cxx::;")
  (DeclStmt 0x9f6fd50 <line:376:2, col:66>
    0x9f6fd20 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9f6fe40 <line:377:2, col:67>
    0x9f6fe10 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9f6ff48 <line:378:2, col:32>
    0x9f6ff10 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9f70010 <line:379:2, col:40>
    0x9f6ff70 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9f6ffe0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9f6ffbc <col:24, col:29> '<bound member function type>' ._M_getloc 0x9ec5b60
          (ImplicitCastExpr 0x9f70000 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f6ffa4 <col:24> 'class std::ios_base' lvalue ParmVar 0x9f6f7c0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9f700d8 <line:380:2, col:40>
    0x9f70050 "const __cache_type *__lc =
      (CallExpr 0x9f700b8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9f70084 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9f6ff10 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9f7009c <col:34> 'const class std::locale' lvalue Var 0x9f6ff70 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9f701a8 <line:381:2, col:41>
    0x9f70120 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9f70170 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9f70154 <col:24> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9f70218 <line:382:2, col:29>
    0x9f701c0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9f70200 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0x9f70400 <line:385:2, line:386:62>
    0x9f70280 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9f703d8 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9f703c8 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f703b0 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9f70330 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9f7030c <col:41, col:46> '<bound member function type>' .flags 0x9ec5160
            (ImplicitCastExpr 0x9f70350 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9f702b4 <col:41> 'class std::ios_base' lvalue ParmVar 0x9f6f7c0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9f703a0 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f7037c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x9f70570 <line:387:2, col:49>
    0x9f70420 "const bool __oct =
      (BinaryOperator 0x9f704f0 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0x9f704d0 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f704b0 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f70454 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f70280 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9f704e0 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f704c0 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f7048c <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0x9f70770 <line:388:2, col:67>
    0x9f70590 "int __base =
      (ConditionalOperator 0x9f70720 <col:15, col:66> 'int'
        (ImplicitCastExpr 0x9f70710 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f705c4 <col:15> 'const _Bool' lvalue Var 0x9f70420 '__oct' 'const _Bool'))
        (IntegerLiteral 0x9f705e0 <col:23> 'int' 8)
        (ParenExpr 0x9f706f8 <col:27, col:66> 'int'
          (ConditionalOperator 0x9f706d8 <col:28, col:64> 'int'
            (BinaryOperator 0x9f70690 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0x9f70670 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9f70650 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9f705f8 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f70280 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0x9f70680 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9f70660 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9f7062c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0x9f706a8 <col:59> 'int' 16)
            (IntegerLiteral 0x9f706c0 <col:64> 'int' 10))))")
  (DeclStmt 0x9f70880 <line:391:2, col:33>
    0x9f70790 "bool __testeof =
      (CXXOperatorCallExpr 0x9f70858 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9f707f8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
        (DeclRefExpr 0x9f707c4 <col:19> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter')
        (DeclRefExpr 0x9f707dc <col:28> '_InIter' lvalue ParmVar 0x9f6f770 '__end' '_InIter'))")
  (DeclStmt 0x9f708f8 <line:394:2, col:25>
    0x9f708a0 "bool __negative =
      (CXXBoolLiteralExpr 0x9f708e8 <col:20> '_Bool' false)")
  (IfStmt 0x9f710f8 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0x9f70930 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f70920 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f70908 <col:7> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')))
    (CompoundStmt 0x9f710d8 <line:396:4, line:408:4>
      (BinaryOperator 0x9f70990 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9f70944 <col:6> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x9f70978 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9f7095c <col:13> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter')))
      (BinaryOperator 0x9f70ad0 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0x9f709a8 <col:6> '_Bool' lvalue Var 0x9f708a0 '__negative' '_Bool')
        (CXXOperatorCallExpr 0x9f70aa8 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9f70a48 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
          (DeclRefExpr 0x9f709c0 <col:19> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0x9f70a30 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0x9f709d8 <col:26> 'const _CharT *' lvalue Var 0x9f70120 '__lit' 'const _CharT *')
            (DeclRefExpr 0x9f70a0c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44cd0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0x9f710b8 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0x9f70f00 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0x9f70dc8 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0x9f70c28 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0x9f70c10 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0x9f70ae8 <col:11> '_Bool' lvalue Var 0x9f708a0 '__negative' '_Bool')
                (CXXOperatorCallExpr 0x9f70be8 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f70b88 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (DeclRefExpr 0x9f70b00 <col:25> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x9f70b70 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f70b18 <col:32> 'const _CharT *' lvalue Var 0x9f70120 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x9f70b4c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44d10 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x9f70db0 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0x9f70d98 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0x9f70d80 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x9f70c58 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f70c3c <col:8> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9f70d58 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f70cf8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                    (DeclRefExpr 0x9f70c8c <col:33> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x9f70cc0 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f70ca4 <col:40> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x9f70ee8 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0x9f70ed0 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0x9f70ea8 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0x9f70e48 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f70de0 <col:8> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9f70e10 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f70df8 <col:15> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x9f710a0 <line:402:8, line:407:8>
          (IfStmt 0x9f71080 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f70fb8 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9f70f60 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
              (UnaryOperator 0x9f70f30 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9f70f18 <col:9> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter'))
              (DeclRefExpr 0x9f70f44 <col:18> '_InIter' lvalue ParmVar 0x9f6f770 '__end' '_InIter'))
            (BinaryOperator 0x9f71028 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0x9f70fdc <col:5> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9f71010 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9f70ff4 <col:12> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter')))
            (BinaryOperator 0x9f71068 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0x9f71040 <col:5> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9f71058 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9f71168 <line:412:2, col:27>
    0x9f71120 "bool __found_zero =
      (CXXBoolLiteralExpr 0x9f71158 <col:22> '_Bool' false)")
  (DeclStmt 0x9f711e0 <line:413:2, col:19>
    0x9f71190 "int __sep_pos =
      (IntegerLiteral 0x9f711c8 <col:18> 'int' 0)")
  (WhileStmt 0x9f71fd0 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0x9f71218 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f71208 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f711f0 <col:10> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')))
    (CompoundStmt 0x9f71fb8 <line:415:4, line:454:4>
      (IfStmt 0x9f71d90 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0x9f71490 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0x9f71388 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0x9f71370 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x9f71248 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9f7122c <col:11> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x9f71348 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0x9f712e8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f7127c <col:36> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9f712b0 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f71294 <col:43> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9f71468 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0x9f71408 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (DeclRefExpr 0x9f7139c <col:6> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9f713d0 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9f713b4 <col:13> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9f714a8 <line:418:8>)
        (IfStmt 0x9f71d70 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0x9f71688 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9f71598 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9f71538 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f714b0 <col:15> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0x9f71520 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9f714c8 <col:22> 'const _CharT *' lvalue Var 0x9f70120 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9f714fc <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44dd0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0x9f71670 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0x9f71658 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0x9f715e8 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9f715d8 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f715bc <col:13> '_Bool' lvalue Var 0x9f71120 '__found_zero' '_Bool')))
                (BinaryOperator 0x9f71640 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0x9f71630 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9f715fc <col:29> 'int' lvalue Var 0x9f70590 '__base' 'int'))
                  (IntegerLiteral 0x9f71618 <col:39> 'int' 10)))))
          (CompoundStmt 0x9f718a0 <line:421:8, line:428:8>
            (BinaryOperator 0x9f716c8 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0x9f716a0 <col:3> '_Bool' lvalue Var 0x9f71120 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0x9f716b8 <col:18> '_Bool' true))
            (UnaryOperator 0x9f716f8 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9f716e0 <col:5> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int'))
            (IfStmt 0x9f717c0 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0x9f71760 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0x9f71750 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x9f71740 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0x9f7170c <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f70280 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0x9f71728 <col:22> 'int' 0))
              (BinaryOperator 0x9f717a8 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0x9f71778 <col:5> 'int' lvalue Var 0x9f70590 '__base' 'int')
                (IntegerLiteral 0x9f71790 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0x9f71880 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0x9f71820 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0x9f71810 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9f717dc <col:7> 'int' lvalue Var 0x9f70590 '__base' 'int'))
                (IntegerLiteral 0x9f717f8 <col:17> 'int' 8))
              (BinaryOperator 0x9f71868 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0x9f71838 <col:5> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int')
                (IntegerLiteral 0x9f71850 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0x9f71d50 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0x9f71b28 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0x9f718c0 <line:429:15> '_Bool' lvalue Var 0x9f71120 '__found_zero' '_Bool')
              (ParenExpr 0x9f71b10 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0x9f71af8 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0x9f719c0 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f71960 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                    (DeclRefExpr 0x9f718d8 <col:12> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9f71948 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f718f0 <col:19> 'const _CharT *' lvalue Var 0x9f70120 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9f71924 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44d50 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0x9f71ad0 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f71a70 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                    (DeclRefExpr 0x9f719e4 <col:8> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9f71a58 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f719fc <col:15> 'const _CharT *' lvalue Var 0x9f70120 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9f71a34 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44d90 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0x9f71d30 <line:432:8, line:442:8>
              (IfStmt 0x9f71bf0 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0x9f71b90 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0x9f71b80 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9f71b70 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9f71b40 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f70280 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0x9f71b58 <col:22> 'int' 0))
                (BinaryOperator 0x9f71bd8 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0x9f71ba8 <col:5> 'int' lvalue Var 0x9f70590 '__base' 'int')
                  (IntegerLiteral 0x9f71bc0 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0x9f71d10 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0x9f71c50 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0x9f71c40 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9f71c0c <col:7> 'int' lvalue Var 0x9f70590 '__base' 'int'))
                  (IntegerLiteral 0x9f71c28 <col:17> 'int' 16))
                (CompoundStmt 0x9f71cf0 <line:436:5, line:439:5>
                  (BinaryOperator 0x9f71c90 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0x9f71c68 <col:7> '_Bool' lvalue Var 0x9f71120 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0x9f71c80 <col:22> '_Bool' false))
                  (BinaryOperator 0x9f71cd8 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0x9f71ca8 <col:7> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int')
                    (IntegerLiteral 0x9f71cc0 <col:19> 'int' 0)))
                (BreakStmt 0x9f71d08 <line:441:5>)))
            (BreakStmt 0x9f71d48 <line:444:8>))))
      (IfStmt 0x9f71f98 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f71e50 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9f71df8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
          (UnaryOperator 0x9f71dc8 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9f71dac <col:12> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter'))
          (DeclRefExpr 0x9f71ddc <col:21> '_InIter' lvalue ParmVar 0x9f6f770 '__end' '_InIter'))
        (CompoundStmt 0x9f71f40 <line:447:8, line:451:8>
          (BinaryOperator 0x9f71ec0 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9f71e74 <col:3> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9f71ea8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f71e8c <col:10> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter')))
          (IfStmt 0x9f71f20 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0x9f71f00 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9f71ef0 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f71ed8 <col:8> '_Bool' lvalue Var 0x9f71120 '__found_zero' '_Bool')))
            (BreakStmt 0x9f71f18 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0x9f71f80 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x9f71f58 <col:8> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0x9f71f70 <col:20> '_Bool' true)))))
  (DeclStmt 0x9f721a8 <line:458:2, line:459:42>
    0x9f71ff0 "const size_t __len =
      (ImplicitCastExpr 0x9f72198 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0x9f72180 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0x9f72160 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0x9f72068 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0x9f72058 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0x9f72024 <col:24> 'int' lvalue Var 0x9f70590 '__base' 'int'))
              (IntegerLiteral 0x9f72040 <col:34> 'int' 16))
            (BinaryOperator 0x9f72120 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0x9f72100 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0x9f7209c <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44f20 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0x9f72110 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x9f720dc <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44dd0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0x9f72150 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f72138 <col:35> 'int' lvalue Var 0x9f70590 '__base' 'int')))))")
  (DeclStmt 0x9f72218 <line:462:2, col:25>
    0x9f721c0 "string __found_grouping =
      (CXXConstructExpr 0x9f721f8 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x9f722f8 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9f72240 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9f72228 <col:6> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x9f722c8 <line:464:4, col:31> 'void'
      (MemberExpr 0x9f7228c <col:4, col:21> '<bound member function type>' .reserve 0x9e56be0
        (DeclRefExpr 0x9f72274 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x9f721c0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x9f722e8 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f722b0 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9f72368 <line:465:2, col:25>
    0x9f72320 "bool __testfail =
      (CXXBoolLiteralExpr 0x9f72358 <col:20> '_Bool' false)")
  (DeclStmt 0x9f723c8 <line:466:2, col:29>
    0x9f72380 "bool __testoverflow =
      (CXXBoolLiteralExpr 0x9f723b8 <col:24> '_Bool' false)")
  (DeclStmt 0x9f72808 <line:467:2, line:470:49>
    0x9f72400 "const __unsigned_type __max =
      (ConditionalOperator 0x9f727e8 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0x9f72590 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0x9f72578 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0x9f72434 <col:5> '_Bool' lvalue Var 0x9f708a0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x9f72540 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0x9f726d0 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f72698 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (CXXDependentScopeMemberExpr 0x9f72660 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0x9f727b0 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0x9f728a0 <line:471:2, col:47>
    0x9f72820 "const __unsigned_type __smax =
      (BinaryOperator 0x9f72888 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0x9f72854 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f72400 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x9f7286c <col:41> 'int' lvalue Var 0x9f70590 '__base' 'int'))")
  (DeclStmt 0x9f72910 <line:472:2, col:30>
    0x9f728c0 "__unsigned_type __result =
      (IntegerLiteral 0x9f728f8 <col:29> 'int' 0)")
  (DeclStmt 0x9f72980 <line:473:2, col:17>
    0x9f72930 "int __digit =
      (IntegerLiteral 0x9f72968 <col:16> 'int' 0)")
  (DeclStmt 0x9f72aa0 <line:474:2, col:60>
    0x9f729a0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x9f72a78 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x9f72a30 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (DeclRefExpr 0x9f729d4 <col:32> 'const _CharT *' lvalue Var 0x9f70120 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9f72a0c <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x9f44dd0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x9f73f78 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0x9f72b00 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x9f72ac8 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0x9f72ab0 <col:7> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *')))
    (WhileStmt 0x9f73210 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0x9f72b40 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9f72b30 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f72b14 <col:12> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')))
      (CompoundStmt 0x9f731f0 <line:479:6, line:498:6>
        (BinaryOperator 0x9f72c30 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0x9f72b54 <col:8> 'int' lvalue Var 0x9f72930 '__digit' 'int')
          (CallExpr 0x9f72c08 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0x9f72b80 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0x9f72bc0 <col:26> 'const char_type *' lvalue Var 0x9f729a0 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0x9f72bd8 <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9f71ff0 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0x9f72bf0 <col:45> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')))
        (IfStmt 0x9f72cc0 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0x9f72ca0 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0x9f72c90 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f72c48 <col:12> 'int' lvalue Var 0x9f72930 '__digit' 'int'))
            (UnaryOperator 0x9f72c78 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0x9f72c60 <col:24> 'int' 1)))
          (BreakStmt 0x9f72cb8 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0x9f73048 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9f72d58 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9f72d10 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
            (DeclRefExpr 0x9f72cdc <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0x9f72cf4 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f72820 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0x9f72da8 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9f72d7c <col:3> '_Bool' lvalue Var 0x9f72380 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0x9f72d98 <col:20> '_Bool' true))
          (CompoundStmt 0x9f73028 <line:487:3, line:492:3>
            (CompoundAssignOperator 0x9f72df0 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9f72dc0 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x9f72dd8 <col:17> 'int' lvalue Var 0x9f70590 '__base' 'int'))
            (CXXOperatorCallExpr 0x9f72f80 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0x9f72f40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebbb90 0x9ebd390 0x9ebe600)
              (DeclRefExpr 0x9f72e10 <col:5> '_Bool' lvalue Var 0x9f72380 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0x9f72f18 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x9f72ed0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
                (DeclRefExpr 0x9f72e28 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0x9f72ea8 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f72e70 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                  (DeclRefExpr 0x9f72e40 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f72400 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x9f72e58 <col:42> 'int' lvalue Var 0x9f72930 '__digit' 'int'))))
            (CompoundAssignOperator 0x9f72fd8 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9f72fa4 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x9f72fbc <col:17> 'int' lvalue Var 0x9f72930 '__digit' 'int'))
            (UnaryOperator 0x9f73010 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9f72ff8 <col:7> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int'))))
        (IfStmt 0x9f731d0 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9f73108 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9f730b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
            (UnaryOperator 0x9f73080 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9f73064 <col:14> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter'))
            (DeclRefExpr 0x9f73094 <col:23> '_InIter' lvalue ParmVar 0x9f6f770 '__end' '_InIter'))
          (BinaryOperator 0x9f73178 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9f7312c <col:3> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9f73160 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f73144 <col:10> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter')))
          (BinaryOperator 0x9f731b8 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x9f73190 <col:3> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9f731a8 <col:15> '_Bool' true)))))
    (WhileStmt 0x9f73f60 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0x9f73250 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9f73240 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9f73224 <col:12> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')))
      (CompoundStmt 0x9f73f48 <line:501:6, line:546:6>
        (IfStmt 0x9f73da0 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0x9f733a8 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x9f73280 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0x9f73264 <col:12> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x9f73380 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x9f73320 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f732b4 <col:37> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9f732e8 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x9f732cc <col:44> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x9f73598 <line:505:3, line:518:3>
            (IfStmt 0x9f73578 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0x9f733e8 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x9f733d8 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9f733c0 <col:9> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int')))
              (CompoundStmt 0x9f73500 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0x9f73490 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9f73480 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f73468 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9f733f4 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9f721c0 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0x9f73450 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0x9f73440 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0x9f73430 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0x9f7340c <col:47> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int')))))
                (BinaryOperator 0x9f734e8 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0x9f734b4 <col:9> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int')
                  (IntegerLiteral 0x9f734d0 <col:21> 'int' 0)))
              (CompoundStmt 0x9f73560 <line:514:7, line:517:7>
                (BinaryOperator 0x9f73540 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0x9f73518 <col:9> '_Bool' lvalue Var 0x9f72320 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0x9f73530 <col:22> '_Bool' true))
                (BreakStmt 0x9f73558 <line:516:9>))))
          (IfStmt 0x9f73d80 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f73678 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0x9f73618 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f735ac <col:17> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9f735e0 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0x9f735c4 <col:24> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *')))
            (BreakStmt 0x9f736a0 <line:520:3>)
            (CompoundStmt 0x9f73d58 <line:522:3, line:540:3>
              (DeclStmt 0x9f737e0 <line:523:5, line:524:50>
                0x9f736c0 "const char_type *__q =
                  (CallExpr 0x9f737b8 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f73738 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9f7376c <col:27> 'const char_type *' lvalue Var 0x9f729a0 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0x9f73784 <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9f71ff0 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0x9f7379c <col:46> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x9f73828 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0x9f73808 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x9f737f0 <col:10> 'const char_type *' lvalue Var 0x9f736c0 '__q' 'const char_type *'))
                (BreakStmt 0x9f73820 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0x9f738f0 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0x9f73844 <col:5> 'int' lvalue Var 0x9f72930 '__digit' 'int')
                (CXXOperatorCallExpr 0x9f738c8 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f73890 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                  (DeclRefExpr 0x9f7385c <col:15> 'const char_type *' lvalue Var 0x9f736c0 '__q' 'const char_type *')
                  (DeclRefExpr 0x9f73874 <col:21> 'const char_type *' lvalue Var 0x9f729a0 '__lit_zero' 'const char_type *')))
              (IfStmt 0x9f739b0 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0x9f73948 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0x9f73938 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9f73908 <col:9> 'int' lvalue Var 0x9f72930 '__digit' 'int'))
                  (IntegerLiteral 0x9f73920 <col:19> 'int' 15))
                (CompoundAssignOperator 0x9f73990 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0x9f73960 <col:7> 'int' lvalue Var 0x9f72930 '__digit' 'int')
                  (IntegerLiteral 0x9f73978 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0x9f73d38 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9f73a48 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f73a00 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
                  (DeclRefExpr 0x9f739cc <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x9f739e4 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f72820 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0x9f73a98 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x9f73a6c <col:7> '_Bool' lvalue Var 0x9f72380 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0x9f73a88 <col:24> '_Bool' true))
                (CompoundStmt 0x9f73d18 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0x9f73ae0 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9f73ab0 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x9f73ac8 <col:21> 'int' lvalue Var 0x9f70590 '__base' 'int'))
                  (CXXOperatorCallExpr 0x9f73c70 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x9f73c30 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebbb90 0x9ebd390 0x9ebe600)
                    (DeclRefExpr 0x9f73b00 <col:9> '_Bool' lvalue Var 0x9f72380 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0x9f73c08 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0x9f73bc0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
                      (DeclRefExpr 0x9f73b18 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0x9f73b98 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x9f73b60 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                        (DeclRefExpr 0x9f73b30 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f72400 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0x9f73b48 <col:46> 'int' lvalue Var 0x9f72930 '__digit' 'int'))))
                  (CompoundAssignOperator 0x9f73cc8 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9f73c94 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x9f73cac <col:21> 'int' lvalue Var 0x9f72930 '__digit' 'int'))
                  (UnaryOperator 0x9f73d00 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x9f73ce8 <col:11> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int')))))))
        (IfStmt 0x9f73f28 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9f73e60 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9f73e08 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
            (UnaryOperator 0x9f73dd8 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9f73dbc <col:14> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter'))
            (DeclRefExpr 0x9f73dec <col:23> '_InIter' lvalue ParmVar 0x9f6f770 '__end' '_InIter'))
          (BinaryOperator 0x9f73ed0 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9f73e84 <col:3> 'char_type':'_CharT' lvalue Var 0x9f701c0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9f73eb8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9f73e9c <col:10> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter')))
          (BinaryOperator 0x9f73f10 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x9f73ee8 <col:3> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9f73f00 <col:15> '_Bool' true))))))
  (IfStmt 0x9f742b8 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f74000 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x9f73fd0 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0x9f73fac <col:6, col:23> '<bound member function type>' .size 0x9e560a0
          (ImplicitCastExpr 0x9f73ff0 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x9f73f94 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9f721c0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x9f742a0 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0x9f740a8 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0x9f74098 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f74080 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x9e58060 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0x9f7400c <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9f721c0 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0x9f74068 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9f74058 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9f74048 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f74024 <col:44> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int')))))
      (IfStmt 0x9f74280 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0x9f741e8 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0x9f741c0 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0x9f740e4 <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x9f6a080 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x9f74120 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0x9f74104 <col:34> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9f74170 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0x9f74154 <col:6> 'const __cache_type *' lvalue Var 0x9f70050 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x9f741a4 <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0x9f721c0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x9f74268 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9f741fc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f6f830 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9f74258 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f74234 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9f74ae0 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0x9f74468 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0x9f74428 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0x9f74410 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0x9f74368 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0x9f74310 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9f74300 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x9f742f0 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9f742d4 <col:8> 'int' lvalue Var 0x9f71190 '__sep_pos' 'int'))))
            (UnaryOperator 0x9f74350 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9f74340 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f74324 <col:22> '_Bool' lvalue Var 0x9f71120 '__found_zero' '_Bool'))))
          (UnaryOperator 0x9f743f8 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f743e8 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0x9f743b8 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0x9f74398 <col:39, col:56> '<bound member function type>' .size 0x9e560a0
                  (ImplicitCastExpr 0x9f743d8 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0x9f74380 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0x9f721c0 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0x9f74458 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f7443c <col:9> '_Bool' lvalue Var 0x9f72320 '__testfail' '_Bool')))
    (CompoundStmt 0x9f74548 <line:565:4, line:568:4>
      (BinaryOperator 0x9f744b0 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0x9f74480 <col:6> '_ValueT' lvalue ParmVar 0x9f6f8a0 '__v' '_ValueT &')
        (IntegerLiteral 0x9f74498 <col:12> 'int' 0))
      (BinaryOperator 0x9f74530 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9f744c8 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f6f830 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0x9f74520 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9f744fc <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0x9f74ac0 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0x9f74578 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9f74560 <col:11> '_Bool' lvalue Var 0x9f72380 '__testoverflow' '_Bool'))
      (CompoundStmt 0x9f749a8 <line:570:4, line:577:4>
        (IfStmt 0x9f74908 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0x9f74698 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0x9f74584 <line:571:10> '_Bool' lvalue Var 0x9f708a0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x9f74660 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0x9f747b8 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x9f746b0 <col:8> '_ValueT' lvalue ParmVar 0x9f6f8a0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x9f74780 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0x9f748f0 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x9f747d0 <col:8> '_ValueT' lvalue ParmVar 0x9f6f8a0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x9f748a0 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0x9f74990 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9f74924 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f6f830 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9f74980 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f7495c <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0x9f74aa8 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0x9f749c0 <col:4> '_ValueT' lvalue ParmVar 0x9f6f8a0 '__v' '_ValueT &')
        (ConditionalOperator 0x9f74a88 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0x9f74a78 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f749d8 <col:10> '_Bool' lvalue Var 0x9f708a0 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0x9f74a40 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9f74a08 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9f749f0 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0x9f74a60 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f728c0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0x9f74c00 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f74b18 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9f74afc <col:6> '_Bool' lvalue Var 0x9f70790 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0x9f74bd8 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f74bc8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f74b90 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f74b24 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f6f830 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9f74b80 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f74b5c <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9f74c38 <line:583:2, col:9>
    (DeclRefExpr 0x9f74c1c <col:9> '_InIter' lvalue ParmVar 0x9f6f730 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x9f77638 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0x9f775f0 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0x9f75398 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9f75388 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0x9f75370 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9f75348 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9f75338 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f75320 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0x9f752a0 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0x9f7527c <col:13, col:18> '<bound member function type>' .flags 0x9ec5160
                (ImplicitCastExpr 0x9f752c0 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0x9f75224 <col:13> 'class std::ios_base' lvalue ParmVar 0x9f75010 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0x9f75310 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f752ec <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec29f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0x9f75970 <line:595:9, line:612:9>
      (DeclStmt 0x9f75438 <line:599:4, col:17>
        0x9f753c0 "long __l =
          (ImplicitCastExpr 0x9f75428 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0x9f75410 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0x9f753f8 <col:16> 'int' 1)))")
      (BinaryOperator 0x9f75558 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0x9f75448 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9f74f80 '__beg' 'iter_type':'_InIter')
        (CallExpr 0x9f75528 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0x9f75470 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9f754ac <col:34> 'iter_type':'_InIter' lvalue ParmVar 0x9f74f80 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0x9f754c4 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0x9f74fc0 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0x9f754dc <col:48> 'class std::ios_base' lvalue ParmVar 0x9f75010 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x9f754f4 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0x9f7550c <col:61> 'long' lvalue Var 0x9f753c0 '__l' 'long')))
      (IfStmt 0x9f75950 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0x9f75640 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0x9f755c0 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0x9f755a0 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0x9f75570 <col:8> 'long' lvalue Var 0x9f753c0 '__l' 'long'))
            (ImplicitCastExpr 0x9f755b0 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0x9f75588 <col:15> 'int' 0)))
          (BinaryOperator 0x9f75628 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0x9f75608 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0x9f755d8 <col:20> 'long' lvalue Var 0x9f753c0 '__l' 'long'))
            (ImplicitCastExpr 0x9f75618 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0x9f755f0 <col:27> 'int' 1))))
        (BinaryOperator 0x9f756c8 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x9f75658 <col:6> '_Bool' lvalue ParmVar 0x9f750d0 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0x9f756b0 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0x9f756a0 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0x9f75690 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0x9f75678 <col:17> 'long' lvalue Var 0x9f753c0 '__l' 'long')))))
        (CompoundStmt 0x9f75930 <line:604:6, line:611:6>
          (BinaryOperator 0x9f75708 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x9f756e0 <col:8> '_Bool' lvalue ParmVar 0x9f750d0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x9f756f8 <col:14> '_Bool' true))
          (BinaryOperator 0x9f75788 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0x9f75720 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0x9f75778 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f75754 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0x9f75910 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f75830 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9f757d0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f757a0 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x9f74f80 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x9f757b8 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x9f74fc0 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0x9f758e8 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9f758d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f758c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9f75854 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9f758b0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f7588c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0x9f775b0 <line:614:9, line:680:2>
      (DeclStmt 0x9f75a70 <line:616:4, col:50>
        0x9f75a40 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x9f75b78 <line:617:4, col:34>
        0x9f75b40 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x9f75c40 <line:618:4, col:42>
        0x9f75ba0 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9f75c10 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x9f75bec <col:26, col:31> '<bound member function type>' ._M_getloc 0x9ec5b60
              (ImplicitCastExpr 0x9f75c30 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9f75bd4 <col:26> 'class std::ios_base' lvalue ParmVar 0x9f75010 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9f75d08 <line:619:4, col:42>
        0x9f75c80 "const __cache_type *__lc =
          (CallExpr 0x9f75ce8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x9f75cb4 <col:31> '__use_cache<__cache_type>' lvalue Var 0x9f75b40 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x9f75ccc <col:36> 'const class std::locale' lvalue Var 0x9f75ba0 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x9f75d68 <line:621:4, col:23>
        0x9f75d20 "bool __testf =
          (CXXBoolLiteralExpr 0x9f75d58 <col:19> '_Bool' true)")
      (DeclStmt 0x9f75dc8 <line:622:4, col:23>
        0x9f75d80 "bool __testt =
          (CXXBoolLiteralExpr 0x9f75db8 <col:19> '_Bool' true)")
      (DeclStmt 0x9f75f08 <line:623:4, col:47>
        0x9f75de0 "bool __donef =
          (CXXOperatorCallExpr 0x9f75ee0 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x9f75e80 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (CXXDependentScopeMemberExpr 0x9f75e30 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9f75e14 <col:19> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x9f75e68 <col:46> 'int' 0))")
      (DeclStmt 0x9f76048 <line:624:4, col:46>
        0x9f75f20 "bool __donet =
          (CXXOperatorCallExpr 0x9f76020 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9f75fc0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (CXXDependentScopeMemberExpr 0x9f75f70 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9f75f54 <col:19> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x9f75fa8 <col:45> 'int' 0))")
      (DeclStmt 0x9f760a8 <line:625:4, col:26>
        0x9f76060 "bool __testeof =
          (CXXBoolLiteralExpr 0x9f76098 <col:21> '_Bool' false)")
      (DeclStmt 0x9f76120 <line:626:4, col:18>
        0x9f760c0 "size_t __n =
          (ImplicitCastExpr 0x9f76110 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9f760f8 <col:17> 'int' 0))")
      (WhileStmt 0x9f76c58 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0x9f761b0 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0x9f76158 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f76148 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f76130 <col:12> '_Bool' lvalue Var 0x9f75de0 '__donef' '_Bool')))
          (UnaryOperator 0x9f76198 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9f76188 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f7616c <col:24> '_Bool' lvalue Var 0x9f75f20 '__donet' '_Bool'))))
        (CompoundStmt 0x9f76c18 <line:628:6, line:657:6>
          (IfStmt 0x9f762e0 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9f76258 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9f761f8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f761c8 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x9f74f80 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x9f761e0 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x9f74fc0 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0x9f762c8 <line:630:3, line:633:3>
              (BinaryOperator 0x9f762a8 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x9f7627c <col:5> '_Bool' lvalue Var 0x9f76060 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x9f76298 <col:17> '_Bool' true))
              (BreakStmt 0x9f762c0 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0x9f76378 <line:635:8, col:36>
            0x9f76310 "const char_type __c =
              (UnaryOperator 0x9f76360 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9f76344 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x9f74f80 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0x9f76518 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0x9f763b0 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9f763a0 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f76388 <col:13> '_Bool' lvalue Var 0x9f75de0 '__donef' '_Bool')))
            (BinaryOperator 0x9f76500 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0x9f763c4 <col:3> '_Bool' lvalue Var 0x9f75d20 '__testf' '_Bool')
              (CXXOperatorCallExpr 0x9f764d8 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x9f76478 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f763dc <col:13> 'const char_type':'const _CharT' lvalue Var 0x9f76310 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x9f76460 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f76410 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f763f4 <col:20> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x9f76444 <col:39> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x9f765c0 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0x9f765a0 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x9f76560 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f76550 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f76534 <col:13> '_Bool' lvalue Var 0x9f75d20 '__testf' '_Bool')))
              (ImplicitCastExpr 0x9f76590 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f76574 <col:24> '_Bool' lvalue Var 0x9f75f20 '__donet' '_Bool')))
            (BreakStmt 0x9f765b8 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0x9f76770 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0x9f76608 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9f765f8 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f765dc <col:13> '_Bool' lvalue Var 0x9f75f20 '__donet' '_Bool')))
            (BinaryOperator 0x9f76758 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0x9f7661c <col:3> '_Bool' lvalue Var 0x9f75d80 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9f76730 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0x9f766d0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f76634 <col:13> 'const char_type':'const _CharT' lvalue Var 0x9f76310 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x9f766b8 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x9f76668 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f7664c <col:20> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x9f7669c <col:38> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x9f76818 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0x9f767f8 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x9f767b8 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f767a8 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f7678c <col:13> '_Bool' lvalue Var 0x9f75d80 '__testt' '_Bool')))
              (ImplicitCastExpr 0x9f767e8 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f767cc <col:24> '_Bool' lvalue Var 0x9f75de0 '__donef' '_Bool')))
            (BreakStmt 0x9f76810 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0x9f768d8 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0x9f768b8 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0x9f76860 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f76850 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f76834 <col:13> '_Bool' lvalue Var 0x9f75d80 '__testt' '_Bool')))
              (UnaryOperator 0x9f768a0 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f76890 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f76874 <col:25> '_Bool' lvalue Var 0x9f75d20 '__testf' '_Bool'))))
            (BreakStmt 0x9f768d0 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0x9f76910 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0x9f768f4 <col:10> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0x9f76940 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9f76924 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0x9f74f80 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0x9f76aa0 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x9f76954 <col:8> '_Bool' lvalue Var 0x9f75de0 '__donef' '_Bool')
            (BinaryOperator 0x9f76a88 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x9f76998 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f76988 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f7696c <col:19> '_Bool' lvalue Var 0x9f75d20 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0x9f76a60 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9f76a18 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
                (DeclRefExpr 0x9f769ac <col:30> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9f769e0 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f769c4 <col:37> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0x9f76c00 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x9f76ab8 <col:8> '_Bool' lvalue Var 0x9f75f20 '__donet' '_Bool')
            (BinaryOperator 0x9f76be8 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x9f76af8 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f76ae8 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f76ad0 <col:19> '_Bool' lvalue Var 0x9f75d80 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0x9f76bc0 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9f76b78 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
                (DeclRefExpr 0x9f76b0c <col:30> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9f76b40 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f76b24 <col:37> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *')))))))
      (IfStmt 0x9f77590 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0x9f76da8 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0x9f76d78 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0x9f76c6c <col:8> '_Bool' lvalue Var 0x9f75d20 '__testf' '_Bool')
            (CXXOperatorCallExpr 0x9f76d50 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0x9f76cf0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9f76c84 <col:19> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0x9f76cb8 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0x9f76c9c <col:26> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0x9f76d90 <col:53> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0x9f770c8 <line:659:6, line:665:6>
          (BinaryOperator 0x9f76de8 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x9f76dc0 <col:8> '_Bool' lvalue ParmVar 0x9f750d0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x9f76dd8 <col:14> '_Bool' false))
          (IfStmt 0x9f770a8 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0x9f76f08 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0x9f76e00 <col:12> '_Bool' lvalue Var 0x9f75d80 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9f76ee0 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0x9f76e80 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f76e18 <col:23> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9f76e48 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f76e30 <col:30> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0x9f76f88 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9f76f20 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9f76f78 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f76f54 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x9f77090 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9f76fa0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9f77080 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x9f77060 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f77050 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f76fb8 <col:11> '_Bool' lvalue Var 0x9f76060 '__testeof' '_Bool'))
                  (DeclRefExpr 0x9f76fec <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x9f7702c <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0x9f77570 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0x9f77218 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0x9f771e8 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0x9f770e0 <col:13> '_Bool' lvalue Var 0x9f75d80 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x9f771c0 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0x9f77160 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (DeclRefExpr 0x9f770f8 <col:24> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x9f77128 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f77110 <col:31> 'const __cache_type *' lvalue Var 0x9f75c80 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0x9f77200 <col:57> 'size_t':'unsigned int' lvalue Var 0x9f760c0 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0x9f77378 <line:667:6, line:670:6>
            (BinaryOperator 0x9f77258 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x9f77230 <col:8> '_Bool' lvalue ParmVar 0x9f750d0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x9f77248 <col:14> '_Bool' true))
            (BinaryOperator 0x9f77360 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9f77270 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9f77350 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x9f77330 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9f77320 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f77288 <col:16> '_Bool' lvalue Var 0x9f76060 '__testeof' '_Bool'))
                  (DeclRefExpr 0x9f772bc <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x9f772fc <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0x9f77550 <line:672:6, line:679:6>
            (BinaryOperator 0x9f773b8 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x9f77390 <col:8> '_Bool' lvalue ParmVar 0x9f750d0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x9f773a8 <col:14> '_Bool' false))
            (BinaryOperator 0x9f77438 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x9f773d0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x9f77428 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9f77404 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x9f77530 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0x9f77468 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9f77450 <col:12> '_Bool' lvalue Var 0x9f76060 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0x9f77508 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9f774f8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f774e0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9f77474 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f75080 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0x9f774d0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9f774ac <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0x9f77628 <line:681:7, col:14>
    (DeclRefExpr 0x9f7760c <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9f74f80 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x9f78170 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0x9f77bf8 <line:690:7, col:20>
    0x9f77ba0 "string __xtrc =
      (CXXConstructExpr 0x9f77bd8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9f77c58 <line:691:7, col:24> 'void'
    (MemberExpr 0x9f77c20 <col:7, col:14> '<bound member function type>' .reserve 0x9e56be0
      (DeclRefExpr 0x9f77c08 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9f77ba0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9f77c78 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9f77c40 <col:22> 'int' 32)))
  (BinaryOperator 0x9f77d78 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9f77c84 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9f778f0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9f77d48 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9f77cb0 <col:15> '<bound member function type>' ->_M_extract_float 0x9f6a5d0
        (CXXThisExpr 0x9f77ca0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f77cd0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9f778f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f77ce8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9f77930 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f77d00 <col:46> 'class std::ios_base' lvalue ParmVar 0x9f77980 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f77d18 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f779f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f77d30 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9f77ba0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9f77f78 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0x9f77f68 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f77f00 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9f2d280 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9f2d050 '__convert_to_v')))
    (CXXMemberCallExpr 0x9f77e28 <col:27, col:40> 'const char *'
      (MemberExpr 0x9f77e04 <col:27, col:34> '<bound member function type>' .c_str 0x9e66a40
        (ImplicitCastExpr 0x9f77e48 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9f77dec <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9f77ba0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9f77e54 <col:43> 'float' lvalue ParmVar 0x9f77a40 '__v' 'float &')
    (DeclRefExpr 0x9f77e6c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f779f0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9f77fa8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9f77eb0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9f77ea0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f77e84 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9e9d2d0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9f78128 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f78048 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f77fe8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
      (DeclRefExpr 0x9f77fb4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9f778f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f77fcc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9f77930 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9f78100 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f780f0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f780d8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f7806c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f779f0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9f780c8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f780a4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9f78160 <line:696:7, col:14>
    (DeclRefExpr 0x9f78144 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9f778f0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x9f78cd0 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0x9f78748 <line:705:7, col:20>
    0x9f786f0 "string __xtrc =
      (CXXConstructExpr 0x9f78728 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9f787a8 <line:706:7, col:24> 'void'
    (MemberExpr 0x9f78770 <col:7, col:14> '<bound member function type>' .reserve 0x9e56be0
      (DeclRefExpr 0x9f78758 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9f786f0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9f787c8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9f78790 <col:22> 'int' 32)))
  (BinaryOperator 0x9f788c8 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9f787d4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9f78440 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9f78898 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9f78800 <col:15> '<bound member function type>' ->_M_extract_float 0x9f6a5d0
        (CXXThisExpr 0x9f787f0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f78820 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9f78440 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f78838 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9f78480 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f78850 <col:46> 'class std::ios_base' lvalue ParmVar 0x9f784d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f78868 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f78540 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f78880 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9f786f0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9f78ad8 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0x9f78ac8 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f78a68 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9f2d800 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9f2d050 '__convert_to_v')))
    (CXXMemberCallExpr 0x9f78990 <col:27, col:40> 'const char *'
      (MemberExpr 0x9f7896c <col:27, col:34> '<bound member function type>' .c_str 0x9e66a40
        (ImplicitCastExpr 0x9f789b0 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9f78954 <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9f786f0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9f789bc <col:43> 'double' lvalue ParmVar 0x9f78590 '__v' 'double &')
    (DeclRefExpr 0x9f789d4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f78540 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9f78b08 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9f78a18 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9f78a08 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f789ec <col:55> '__c_locale (void)' lvalue CXXMethod 0x9e9d2d0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9f78c88 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f78ba8 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f78b48 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
      (DeclRefExpr 0x9f78b14 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9f78440 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f78b2c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9f78480 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9f78c60 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f78c50 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f78c38 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f78bcc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f78540 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9f78c28 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f78c04 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9f78cc0 <line:711:7, col:14>
    (DeclRefExpr 0x9f78ca4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9f78440 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9f79820 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0x9f792a8 <line:737:7, col:20>
    0x9f79250 "string __xtrc =
      (CXXConstructExpr 0x9f79288 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9f79308 <line:738:7, col:24> 'void'
    (MemberExpr 0x9f792d0 <col:7, col:14> '<bound member function type>' .reserve 0x9e56be0
      (DeclRefExpr 0x9f792b8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9f79250 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9f79328 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9f792f0 <col:22> 'int' 32)))
  (BinaryOperator 0x9f79428 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9f79334 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9f78fa0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9f793f8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9f79360 <col:15> '<bound member function type>' ->_M_extract_float 0x9f6a5d0
        (CXXThisExpr 0x9f79350 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9f79380 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9f78fa0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f79398 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x9f78fe0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f793b0 <col:46> 'class std::ios_base' lvalue ParmVar 0x9f79030 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f793c8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f790a0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f793e0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9f79250 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9f79628 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0x9f79618 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f795b0 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9f2dd60 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9f2d050 '__convert_to_v')))
    (CXXMemberCallExpr 0x9f794d8 <col:27, col:40> 'const char *'
      (MemberExpr 0x9f794b4 <col:27, col:34> '<bound member function type>' .c_str 0x9e66a40
        (ImplicitCastExpr 0x9f794f8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9f7949c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9f79250 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9f79504 <col:43> 'long double' lvalue ParmVar 0x9f790f0 '__v' 'long double &')
    (DeclRefExpr 0x9f7951c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f790a0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9f79658 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9f79560 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9f79550 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f79534 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9e9d2d0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9f797d8 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f796f8 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9f79698 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
      (DeclRefExpr 0x9f79664 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9f78fa0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f7967c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x9f78fe0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9f797b0 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9f797a0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f79788 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9f7971c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f790a0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9f79778 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9f79754 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9f79810 <line:743:7, col:14>
    (DeclRefExpr 0x9f797f4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9f78fa0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x9f7a868 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0x9f79e00 <line:753:7, col:49>
    0x9f79dd0 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0x9f79f10 <line:754:7, col:42>
    0x9f79e30 "const fmtflags __fmt =
      (CXXMemberCallExpr 0x9f79ee0 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9f79ebc <col:30, col:35> '<bound member function type>' .flags 0x9ec5160
          (ImplicitCastExpr 0x9f79f00 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f79e64 <col:30> 'class std::ios_base' lvalue ParmVar 0x9f79b80 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0x9f7a160 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9f7a13c <col:7, col:12> '<bound member function type>' .flags 0x9ec5250
      (DeclRefExpr 0x9f79f20 <col:7> 'class std::ios_base' lvalue ParmVar 0x9f79b80 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x9f7a118 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9f7a108 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f7a0f0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb510 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9f7a088 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9f7a060 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9f7a050 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f7a038 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9f7a028 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f79f78 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f79e30 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0x9f7a008 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9f79ff8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f79fe0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb950 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9f79fd0 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f79fac <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0x9f7a0e0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x9f7a0bc <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0x9f7a560 <line:757:7, line:759:57>
    0x9f7a530 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0x9f7a5c8 <line:761:7, col:24>
    0x9f7a590 "_UIntPtrType __ul")
  (BinaryOperator 0x9f7a6e8 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0x9f7a5d8 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9f79af0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9f7a6b8 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9f7a600 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f7a63c <col:30> 'iter_type':'_InIter' lvalue ParmVar 0x9f79af0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f7a654 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0x9f79b30 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9f7a66c <col:44> 'class std::ios_base' lvalue ParmVar 0x9f79b80 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f7a684 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9f79bf0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9f7a69c <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0x9f7a590 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0x9f7a790 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9f7a770 <col:7, col:12> '<bound member function type>' .flags 0x9ec5250
      (DeclRefExpr 0x9f7a700 <col:7> 'class std::ios_base' lvalue ParmVar 0x9f79b80 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9f7a7b0 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9f7a758 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f79e30 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0x9f7a828 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0x9f7a7bc <col:7> 'void *' lvalue ParmVar 0x9f79c40 '__v' 'void *&')
    (CXXReinterpretCastExpr 0x9f7a810 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0x9f7a800 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9f7a7d4 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0x9f7a590 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0x9f7a858 <line:768:7, col:14>
    (DeclRefExpr 0x9f7a840 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9f79af0 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0x9f7b1c8 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0x9f7b110 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f7b048 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0x9f7b07c <col:51> 'class std::ios_base' lvalue ParmVar 0x9f7abd0 '__io' 'class std::ios_base &')
    (DeclRefExpr 0x9f7b094 <col:57> '_CharT' lvalue ParmVar 0x9f7ab40 '__fill' '_CharT')
    (DeclRefExpr 0x9f7b0ac <col:65> '_CharT *' lvalue ParmVar 0x9f7ac40 '__new' '_CharT *')
    (DeclRefExpr 0x9f7b0c4 <line:782:9> 'const _CharT *' lvalue ParmVar 0x9f7acb0 '__cs' 'const _CharT *')
    (DeclRefExpr 0x9f7b0dc <col:15> 'streamsize':'int' lvalue ParmVar 0x9f7ab80 '__w' 'streamsize':'int')
    (DeclRefExpr 0x9f7b0f4 <col:20> 'int' lvalue ParmVar 0x9f7ad00 '__len' 'int &'))
  (BinaryOperator 0x9f7b1b0 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0x9f7b144 <col:7> 'int' lvalue ParmVar 0x9f7ad00 '__len' 'int &')
    (CXXStaticCastExpr 0x9f7b198 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0x9f7b188 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f7b15c <col:32> 'streamsize':'int' lvalue ParmVar 0x9f7ab80 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0x9f7c498 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0x9f7b5f0 <line:793:7, col:31>
    0x9f7b5a0 "_CharT *__buf =
      (DeclRefExpr 0x9f7b5d4 <col:23> '_CharT *' lvalue ParmVar 0x9f7b2c0 '__bufend' '_CharT *')")
  (IfStmt 0x9f7c3d8 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f7b6a8 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f7b650 <col:11, col:39> 'long'
        (ImplicitCastExpr 0x9f7b640 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f7b600 <col:11> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f7b688 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9f7b678 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f7b618 <col:28> '_Bool' lvalue ParmVar 0x9f7b420 '__dec' '_Bool')))
        (ImplicitCastExpr 0x9f7b698 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f7b630 <col:35> '_Bool' true))))
    (CompoundStmt 0x9f7b988 <line:795:2, line:803:2>
      (DoStmt 0x9f7b970 <line:797:4, line:802:19>
        (CompoundStmt 0x9f7b8a8 <line:798:6, line:801:6>
          (BinaryOperator 0x9f7b840 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0x9f7b6e8 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9f7b6d0 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x9f7b6b4 <col:11> '_CharT *' lvalue Var 0x9f7b5a0 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0x9f7b828 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0x9f7b6fc <col:19> 'const _CharT *' lvalue ParmVar 0x9f7b370 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0x9f7b800 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0x9f7b7b8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                (ParenExpr 0x9f7b760 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0x9f7b748 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0x9f7b714 <col:26> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
                    (IntegerLiteral 0x9f7b730 <col:32> 'int' 10)))
                (DeclRefExpr 0x9f7b794 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44890 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0x9f7b888 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9f7b858 <col:8> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
            (IntegerLiteral 0x9f7b870 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0x9f7b948 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9f7b8f0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
          (DeclRefExpr 0x9f7b8c0 <col:11> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
          (IntegerLiteral 0x9f7b8d8 <col:18> 'int' 0))))
    (IfStmt 0x9f7c3b8 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0x9f7baf0 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0x9f7bad0 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0x9f7ba68 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0x9f7ba40 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x9f7ba30 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f7ba18 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x9f7b9f8 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f7b99c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f7b3e0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x9f7ba08 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f7b9d4 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0x9f7bae0 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f7bac0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f7ba9c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0x9f7be28 <line:805:2, line:813:2>
        (DoStmt 0x9f7be10 <line:807:4, line:812:19>
          (CompoundStmt 0x9f7bd48 <line:808:6, line:811:6>
            (BinaryOperator 0x9f7bce0 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0x9f7bb38 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9f7bb20 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9f7bb08 <col:11> '_CharT *' lvalue Var 0x9f7b5a0 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x9f7bcc8 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0x9f7bb4c <col:19> 'const _CharT *' lvalue ParmVar 0x9f7b370 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9f7bca0 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f7bc58 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                  (ParenExpr 0x9f7bc00 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x9f7bbd8 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9f7bb98 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
                      (DeclRefExpr 0x9f7bb64 <col:26> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
                      (IntegerLiteral 0x9f7bb80 <col:32> 'int' 7)))
                  (DeclRefExpr 0x9f7bc34 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44890 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0x9f7bd28 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9f7bcf8 <col:8> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
              (IntegerLiteral 0x9f7bd10 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0x9f7bde8 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9f7bd90 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
            (DeclRefExpr 0x9f7bd60 <col:11> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
            (IntegerLiteral 0x9f7bd78 <col:18> 'int' 0))))
      (CompoundStmt 0x9f7c398 <line:815:2, line:826:2>
        (DeclStmt 0x9f7bf60 <line:817:4, col:58>
          0x9f7be50 "const bool __uppercase =
            (ImplicitCastExpr 0x9f7bf50 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0x9f7bf28 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0x9f7bf18 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9f7bf00 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0x9f7bee0 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9f7be84 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f7b3e0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0x9f7bef0 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9f7bebc <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0x9f7c090 <line:818:4, line:819:66>
          0x9f7bf80 "const int __case_offset =
            (ImplicitCastExpr 0x9f7c080 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0x9f7c060 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0x9f7c050 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f7bfb4 <col:30> 'const _Bool' lvalue Var 0x9f7be50 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0x9f7bfec <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44960 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0x9f7c02c <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44890 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0x9f7c380 <line:820:4, line:825:19>
          (CompoundStmt 0x9f7c2b8 <line:821:6, line:824:6>
            (BinaryOperator 0x9f7c250 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0x9f7c0d0 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9f7c0b8 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9f7c0a0 <col:11> '_CharT *' lvalue Var 0x9f7b5a0 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x9f7c238 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x9f7c0e4 <col:19> 'const _CharT *' lvalue ParmVar 0x9f7b370 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9f7c210 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f7c1c8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                  (ParenExpr 0x9f7c198 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x9f7c170 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9f7c130 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
                      (DeclRefExpr 0x9f7c0fc <col:26> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
                      (IntegerLiteral 0x9f7c118 <col:32> 'int' 15)))
                  (DeclRefExpr 0x9f7c1ac <col:39> 'const int' lvalue Var 0x9f7bf80 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0x9f7c298 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9f7c268 <col:8> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
              (IntegerLiteral 0x9f7c280 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0x9f7c358 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9f7c300 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
            (DeclRefExpr 0x9f7c2d0 <col:11> '_ValueT' lvalue ParmVar 0x9f7b300 '__v' '_ValueT')
            (IntegerLiteral 0x9f7c2e8 <col:18> 'int' 0))))))
  (ReturnStmt 0x9f7c488 <line:827:7, col:25>
    (CXXOperatorCallExpr 0x9f7c460 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9f7c428 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9f7c3f4 <col:14> '_CharT *' lvalue ParmVar 0x9f7b2c0 '__bufend' '_CharT *')
      (DeclRefExpr 0x9f7c40c <col:25> '_CharT *' lvalue Var 0x9f7b5a0 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x9f7e798 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0x9f7e6c8 <line:838:7, line:839:42>
    0x9f7e4f0 "_CharT *__p =
      (CallExpr 0x9f7e690 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9f7e540 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f060)
        (DeclRefExpr 0x9f7e574 <col:41> '_CharT *' lvalue ParmVar 0x9f7c8a0 '__new' '_CharT *')
        (DeclRefExpr 0x9f7e58c <col:48> '_CharT' lvalue ParmVar 0x9f7c7e0 '__sep' '_CharT')
        (DeclRefExpr 0x9f7e5a4 <col:55> 'const char *' lvalue ParmVar 0x9f7c760 '__grouping' 'const char *')
        (DeclRefExpr 0x9f7e5bc <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0x9f7c7a0 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x9f7e5d4 <col:23> '_CharT *' lvalue ParmVar 0x9f7e330 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9f7e668 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9f7e620 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f7e5ec <col:29> '_CharT *' lvalue ParmVar 0x9f7e330 '__cs' '_CharT *')
          (DeclRefExpr 0x9f7e604 <col:36> 'int' lvalue ParmVar 0x9f7e380 '__len' 'int &')))")
  (BinaryOperator 0x9f7e780 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0x9f7e6d8 <col:7> 'int' lvalue ParmVar 0x9f7e380 '__len' 'int &')
    (CXXOperatorCallExpr 0x9f7e758 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9f7e720 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (DeclRefExpr 0x9f7e6f0 <col:15> '_CharT *' lvalue Var 0x9f7e4f0 '__p' '_CharT *')
      (DeclRefExpr 0x9f7e708 <col:21> '_CharT *' lvalue ParmVar 0x9f7c8a0 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0x9f81808 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0x9f7ed98 <line:850:2, col:33>
    0x9f7ed30 "Using__gnu_cxx::;")
  (DeclStmt 0x9f7eec0 <line:851:2, col:66>
    0x9f7ee90 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9f7efb0 <line:852:2, col:60>
    0x9f7ef80 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9f7f0b8 <line:853:2, col:32>
    0x9f7f080 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9f7f180 <line:854:2, col:40>
    0x9f7f0e0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9f7f150 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9f7f12c <col:24, col:29> '<bound member function type>' ._M_getloc 0x9ec5b60
          (ImplicitCastExpr 0x9f7f170 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f7f114 <col:24> 'class std::ios_base' lvalue ParmVar 0x9f7eb00 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9f7f248 <line:855:2, col:40>
    0x9f7f1c0 "const __cache_type *__lc =
      (CallExpr 0x9f7f228 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9f7f1f4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9f7f080 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9f7f20c <col:34> 'const class std::locale' lvalue Var 0x9f7f0e0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9f7f318 <line:856:2, col:42>
    0x9f7f290 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9f7f2e0 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9f7f2c4 <col:24> 'const __cache_type *' lvalue Var 0x9f7f1c0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9f7f440 <line:857:2, col:49>
    0x9f7f360 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9f7f410 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9f7f3ec <col:37, col:42> '<bound member function type>' .flags 0x9ec5160
          (ImplicitCastExpr 0x9f7f430 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f7f394 <col:37> 'class std::ios_base' lvalue ParmVar 0x9f7eb00 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9f7f508 <line:860:2, col:40>
    0x9f7f460 "const int __ilen =
      (ImplicitCastExpr 0x9f7f4f8 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0x9f7f4e0 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0x9f7f4d0 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9f7f498 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0x9f7f4b8 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0x9f7f748 <line:861:2, line:862:23>
    0x9f7f550 "_CharT *__cs =
      (CXXStaticCastExpr 0x9f7f730 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x9f7f700 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0x9f7f6f0 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f7f664 <col:38> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x9f7f6d8 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9f7f688 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x9f7f6c8 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9f7f6b8 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x9f7f6a0 <col:15> 'const int' lvalue Var 0x9f7f460 '__ilen' 'const int'))))))")
  (DeclStmt 0x9f7f890 <line:866:2, col:70>
    0x9f7f790 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9f7f868 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9f7f858 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f7f840 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9f7f820 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f7f7c4 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9f7f830 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f7f7fc <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x9f7fab0 <line:867:2, line:868:40>
    0x9f7f8b0 "const bool __dec =
      (ParenExpr 0x9f7fa60 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0x9f7fa48 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0x9f7f980 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0x9f7f960 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f7f940 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f7f8e4 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f790 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9f7f970 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f7f950 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f7f91c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9f7fa30 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0x9f7fa10 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f7f9f0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f7f998 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f790 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9f7fa20 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f7fa00 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f7f9cc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0x9f7fd38 <line:869:2, line:871:34>
    0x9f7fae0 "const __unsigned_type __u =
      (ParenExpr 0x9f7fd20 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0x9f7fd00 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0x9f7fc10 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0x9f7fbf8 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0x9f7fb90 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0x9f7fb48 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
                (DeclRefExpr 0x9f7fb14 <col:32> '_ValueT' lvalue ParmVar 0x9f7eb80 '__v' '_ValueT')
                (IntegerLiteral 0x9f7fb30 <col:38> 'int' 0))
              (UnaryOperator 0x9f7fbe0 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9f7fbd0 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9f7fbb4 <col:44> 'const _Bool' lvalue Var 0x9f7f8b0 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0x9f7fc48 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0x9f7fc30 <col:28> '_ValueT' lvalue ParmVar 0x9f7eb80 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0x9f7fce0 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9f7fca8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (CXXUnresolvedConstructExpr 0x9f7fc88 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0x9f7fc70 <col:29> '_ValueT' lvalue ParmVar 0x9f7eb80 '__v' '_ValueT')))))")
  (DeclStmt 0x9f7ff00 <line:872:3, col:71>
    0x9f7fd60 "int __len =
      (CallExpr 0x9f7fed0 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0x9f7fd98 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0x9f7b550)
        (CXXOperatorCallExpr 0x9f7fe48 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9f7fe00 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f7fdcc <col:29> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')
          (DeclRefExpr 0x9f7fde4 <col:36> 'const int' lvalue Var 0x9f7f460 '__ilen' 'const int'))
        (DeclRefExpr 0x9f7fe6c <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9f7fae0 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x9f7fe84 <col:49> 'const _CharT *' lvalue Var 0x9f7f290 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9f7fe9c <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0x9f7feb4 <col:65> 'const _Bool' lvalue Var 0x9f7f8b0 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0x9f7ff90 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9f7ff10 <col:2> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')
    (BinaryOperator 0x9f7ff78 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0x9f7ff58 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f7ff28 <col:10> 'const int' lvalue Var 0x9f7f460 '__ilen' 'const int'))
      (ImplicitCastExpr 0x9f7ff68 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f7ff40 <col:19> 'int' lvalue Var 0x9f7fd60 '__len' 'int'))))
  (IfStmt 0x9f804f0 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9f7ffc8 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9f7ffb0 <col:6> 'const __cache_type *' lvalue Var 0x9f7f1c0 '__lc' 'const __cache_type *'))
    (CompoundStmt 0x9f804d0 <line:877:4, line:886:4>
      (DeclStmt 0x9f801b0 <line:880:6, line:882:16>
        0x9f80010 "_CharT *__cs2 =
          (CXXStaticCastExpr 0x9f80198 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9f80168 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0x9f80158 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f80044 <col:43> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9f80140 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0x9f80100 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x9f80068 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x9f800f0 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0x9f800d8 <col:13, col:23> 'int'
                      (BinaryOperator 0x9f800c0 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0x9f800b0 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0x9f80080 <col:14> 'int' lvalue Var 0x9f7fd60 '__len' 'int'))
                        (IntegerLiteral 0x9f80098 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0x9f80130 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f80118 <col:13> 'int' 2)))))")
      (CallExpr 0x9f803c8 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0x9f801d0 <line:883:6> '<bound member function type>' ->_M_group_int 0x9f7e430
          (CXXThisExpr 0x9f801c0 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x9f80208 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9f801f0 <col:19> 'const __cache_type *' lvalue Var 0x9f7f1c0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9f80258 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8023c <col:38> 'const __cache_type *' lvalue Var 0x9f7f1c0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9f802a8 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9f8028c <col:5> 'const __cache_type *' lvalue Var 0x9f7f1c0 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x9f802dc <col:29> 'class std::ios_base' lvalue ParmVar 0x9f7eb00 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0x9f80370 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9f80328 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f802f4 <col:35> '_CharT *' lvalue Var 0x9f80010 '__cs2' '_CharT *')
          (IntegerLiteral 0x9f80310 <col:43> 'int' 2))
        (DeclRefExpr 0x9f80394 <col:46> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')
        (DeclRefExpr 0x9f803ac <col:52> 'int' lvalue Var 0x9f7fd60 '__len' 'int'))
      (BinaryOperator 0x9f804b8 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9f80400 <col:6> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9f80490 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9f80448 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f80418 <col:13> '_CharT *' lvalue Var 0x9f80010 '__cs2' '_CharT *')
          (IntegerLiteral 0x9f80430 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0x9f81228 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f805b8 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f80560 <col:6, col:34> 'long'
        (ImplicitCastExpr 0x9f80550 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f8050c <col:6> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9f80598 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9f80588 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9f80524 <col:23> 'const _Bool' lvalue Var 0x9f7f8b0 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0x9f805a8 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9f80540 <col:30> '_Bool' true))))
    (CompoundStmt 0x9f80b28 <line:890:4, line:900:4>
      (IfStmt 0x9f80b08 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9f80678 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9f80630 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
          (DeclRefExpr 0x9f805fc <col:10> '_ValueT' lvalue ParmVar 0x9f7eb80 '__v' '_ValueT')
          (IntegerLiteral 0x9f80618 <col:17> 'int' 0))
        (CompoundStmt 0x9f809d8 <line:893:8, line:897:8>
          (IfStmt 0x9f809b8 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0x9f80888 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0x9f80780 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0x9f80770 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9f80748 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9f80738 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9f80720 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9f80700 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9f806a8 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9f80710 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9f806dc <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2e10 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0x9f80850 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0x9f809a0 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0x9f80958 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0x9f808d0 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9f808b8 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0x9f808a0 <col:8> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0x9f80940 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f808e4 <col:15> 'const _CharT *' lvalue Var 0x9f7f290 '__lit' 'const _CharT *')
                  (DeclRefExpr 0x9f8091c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f447d0 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0x9f80988 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0x9f80970 <col:46> 'int' lvalue Var 0x9f7fd60 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0x9f80af0 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0x9f80aa8 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0x9f80a20 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9f80a08 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x9f809ec <col:11> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0x9f80a90 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9f80a34 <col:18> 'const _CharT *' lvalue Var 0x9f7f290 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9f80a6c <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44790 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0x9f80ad8 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0x9f80ac0 <col:50> 'int' lvalue Var 0x9f7fd60 '__len' 'int')))))
    (IfStmt 0x9f81208 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0x9f80c50 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0x9f80c20 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9f80c10 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0x9f80be8 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x9f80bd8 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f80bc0 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x9f80ba0 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f80b48 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x9f80bb0 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f80b7c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0x9f80c38 <col:49> '_ValueT' lvalue ParmVar 0x9f7eb80 '__v' '_ValueT'))
      (CompoundStmt 0x9f811f0 <line:902:4, line:914:4>
        (IfStmt 0x9f811d0 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0x9f80d00 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0x9f80ce0 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f80cc0 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f80c68 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f790 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9f80cf0 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f80cd0 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9f80c9c <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9f80e18 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0x9f80dd0 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0x9f80d48 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9f80d30 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9f80d18 <col:11> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9f80db8 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x9f80d5c <col:18> 'const _CharT *' lvalue Var 0x9f7f290 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9f80d94 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44890 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0x9f80e00 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9f80de8 <col:51> 'int' lvalue Var 0x9f7fd60 '__len' 'int')))
          (CompoundStmt 0x9f811b0 <line:906:8, line:913:8>
            (DeclStmt 0x9f80f50 <line:908:3, col:57>
              0x9f80e40 "const bool __uppercase =
                (ImplicitCastExpr 0x9f80f40 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9f80f18 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9f80f08 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9f80ef0 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9f80ed0 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9f80e74 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f7f360 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9f80ee0 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9f80eac <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0x9f81078 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0x9f80f90 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9f80f78 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9f80f60 <col:6> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9f81060 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x9f80fa4 <col:13> 'const _CharT *' lvalue Var 0x9f7f290 '__lit' 'const _CharT *')
                (BinaryOperator 0x9f81048 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0x9f81018 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0x9f80fdc <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44810 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0x9f81038 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9f81028 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9f80ffc <col:39> 'const _Bool' lvalue Var 0x9f80e40 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0x9f81148 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0x9f810c0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9f810a8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9f81090 <col:6> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9f81130 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0x9f810d4 <col:13> 'const _CharT *' lvalue Var 0x9f7f290 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9f8110c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x9f44890 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0x9f81190 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0x9f81160 <col:3> 'int' lvalue Var 0x9f7fd60 '__len' 'int')
              (IntegerLiteral 0x9f81178 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0x9f81330 <line:917:2, col:37>
    0x9f81250 "const streamsize __w =
      (CXXMemberCallExpr 0x9f81300 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x9f812dc <col:25, col:30> '<bound member function type>' .width 0x9ec5780
          (ImplicitCastExpr 0x9f81320 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f81284 <col:25> 'class std::ios_base' lvalue ParmVar 0x9f7eb00 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9f81668 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0x9f813b0 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x9f813a0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f81340 <col:6> 'const streamsize':'const int' lvalue Var 0x9f81250 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x9f81388 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x9f81378 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x9f81358 <col:36> 'int' lvalue Var 0x9f7fd60 '__len' 'int'))))
    (CompoundStmt 0x9f81648 <line:919:4, line:924:4>
      (DeclStmt 0x9f814f8 <line:920:6, line:921:18>
        0x9f813e0 "_CharT *__cs3 =
          (CXXStaticCastExpr 0x9f814e0 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9f814b0 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0x9f814a0 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f81414 <col:43> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9f81488 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x9f81438 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x9f81478 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9f81468 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9f81450 <col:13> 'const streamsize':'const int' lvalue Var 0x9f81250 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x9f815c8 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0x9f81518 <col:6> '<bound member function type>' ->_M_pad 0x9f7ada0
          (CXXThisExpr 0x9f81508 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x9f81538 <col:13> '_CharT' lvalue ParmVar 0x9f7eb40 '__fill' '_CharT')
        (DeclRefExpr 0x9f81550 <col:21> 'const streamsize':'const int' lvalue Var 0x9f81250 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x9f81568 <col:26> 'class std::ios_base' lvalue ParmVar 0x9f7eb00 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x9f81580 <col:32> '_CharT *' lvalue Var 0x9f813e0 '__cs3' '_CharT *')
        (DeclRefExpr 0x9f81598 <col:39> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')
        (DeclRefExpr 0x9f815b0 <col:45> 'int' lvalue Var 0x9f7fd60 '__len' 'int'))
      (BinaryOperator 0x9f81630 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9f815fc <col:6> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')
        (DeclRefExpr 0x9f81614 <col:13> '_CharT *' lvalue Var 0x9f813e0 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9f81718 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0x9f816f8 <col:2, col:7> '<bound member function type>' .width 0x9ec5840
      (DeclRefExpr 0x9f81684 <col:2> 'class std::ios_base' lvalue ParmVar 0x9f7eb00 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x9f816e0 <col:13> 'int' 0))
  (ReturnStmt 0x9f817f8 <line:929:2, col:38>
    (CallExpr 0x9f817d0 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9f81750 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f570 0x9f2f930)
      (DeclRefExpr 0x9f81788 <col:22> '_OutIter' lvalue ParmVar 0x9f7eab0 '__s' '_OutIter')
      (DeclRefExpr 0x9f817a0 <col:27> '_CharT *' lvalue Var 0x9f7f550 '__cs' '_CharT *')
      (DeclRefExpr 0x9f817b8 <col:33> 'int' lvalue Var 0x9f7fd60 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x9f82598 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0x9f81f98 <line:942:7, col:52>
    0x9f81e80 "const int __declen =
      (ConditionalOperator 0x9f81f78 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0x9f81eb4 <col:28> 'const _CharT *' lvalue ParmVar 0x9f81c00 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0x9f81f38 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9f81f00 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (DeclRefExpr 0x9f81ecc <col:34> 'const _CharT *' lvalue ParmVar 0x9f81c00 '__p' 'const _CharT *')
          (DeclRefExpr 0x9f81ee4 <col:40> '_CharT *' lvalue ParmVar 0x9f81cc0 '__cs' '_CharT *'))
        (DeclRefExpr 0x9f81f5c <col:47> 'int' lvalue ParmVar 0x9f81d10 '__len' 'int &'))")
  (DeclStmt 0x9f82198 <line:943:7, line:945:29>
    0x9f81fc0 "_CharT *__p2 =
      (CallExpr 0x9f82160 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9f82010 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f060)
        (DeclRefExpr 0x9f82044 <col:42> '_CharT *' lvalue ParmVar 0x9f81c70 '__new' '_CharT *')
        (DeclRefExpr 0x9f8205c <col:49> '_CharT' lvalue ParmVar 0x9f81b90 '__sep' '_CharT')
        (DeclRefExpr 0x9f82074 <col:56> 'const char *' lvalue ParmVar 0x9f81b10 '__grouping' 'const char *')
        (DeclRefExpr 0x9f8208c <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0x9f81b50 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x9f820a4 <line:945:7> '_CharT *' lvalue ParmVar 0x9f81cc0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9f82138 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9f820f0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f820bc <col:13> '_CharT *' lvalue ParmVar 0x9f81cc0 '__cs' '_CharT *')
          (DeclRefExpr 0x9f820d4 <col:20> 'const int' lvalue Var 0x9f81e80 '__declen' 'const int')))")
  (DeclStmt 0x9f82288 <line:948:7, col:34>
    0x9f821c0 "int __newlen =
      (CXXOperatorCallExpr 0x9f82260 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9f82228 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0x9f821f4 <col:22> '_CharT *' lvalue Var 0x9f81fc0 '__p2' '_CharT *')
        (DeclRefExpr 0x9f8220c <col:29> '_CharT *' lvalue ParmVar 0x9f81c70 '__new' '_CharT *'))")
  (IfStmt 0x9f82520 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f82298 <line:949:11> 'const _CharT *' lvalue ParmVar 0x9f81c00 '__p' 'const _CharT *')
    (CompoundStmt 0x9f82508 <line:950:2, line:953:2>
      (CallExpr 0x9f82440 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f82370 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9f823a4 <col:30> '_CharT *' lvalue Var 0x9f81fc0 '__p2' '_CharT *')
        (DeclRefExpr 0x9f823bc <col:36> 'const _CharT *' lvalue ParmVar 0x9f81c00 '__p' 'const _CharT *')
        (BinaryOperator 0x9f82428 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0x9f82408 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0x9f823d4 <col:41> 'int' lvalue ParmVar 0x9f81d10 '__len' 'int &'))
          (ImplicitCastExpr 0x9f82418 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0x9f823ec <col:49> 'const int' lvalue Var 0x9f81e80 '__declen' 'const int'))))
      (CompoundAssignOperator 0x9f824e8 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9f82468 <col:4> 'int' lvalue Var 0x9f821c0 '__newlen' 'int')
        (BinaryOperator 0x9f824d0 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0x9f824b0 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0x9f82480 <col:16> 'int' lvalue ParmVar 0x9f81d10 '__len' 'int &'))
          (ImplicitCastExpr 0x9f824c0 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0x9f82498 <col:24> 'const int' lvalue Var 0x9f81e80 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0x9f82580 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0x9f8253c <col:7> 'int' lvalue ParmVar 0x9f81d10 '__len' 'int &')
    (ImplicitCastExpr 0x9f82570 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9f82554 <col:15> 'int' lvalue Var 0x9f821c0 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0x9f85758 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0x9f82c70 <line:974:2, col:62>
    0x9f82c40 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9f82d78 <line:975:2, col:32>
    0x9f82d40 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9f82e40 <line:976:2, col:40>
    0x9f82da0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9f82e10 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9f82dec <col:24, col:29> '<bound member function type>' ._M_getloc 0x9ec5b60
          (ImplicitCastExpr 0x9f82e30 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f82dd4 <col:24> 'class std::ios_base' lvalue ParmVar 0x9f82910 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9f82f08 <line:977:2, col:40>
    0x9f82e80 "const __cache_type *__lc =
      (CallExpr 0x9f82ee8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9f82eb4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9f82d40 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9f82ecc <col:34> 'const class std::locale' lvalue Var 0x9f82da0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9f83110 <line:980:2, col:71>
    0x9f82f20 "const streamsize __prec =
      (ConditionalOperator 0x9f830f0 <col:28, col:70> 'int'
        (BinaryOperator 0x9f83018 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0x9f82fd0 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0x9f82fac <col:28, col:33> '<bound member function type>' .precision 0x9ec5610
              (ImplicitCastExpr 0x9f82ff0 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9f82f54 <col:28> 'class std::ios_base' lvalue ParmVar 0x9f82910 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0x9f83000 <col:47> 'int' 0))
        (IntegerLiteral 0x9f83030 <col:51> 'int' 6)
        (CXXMemberCallExpr 0x9f830c0 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0x9f830a0 <col:55, col:60> '<bound member function type>' .precision 0x9ec5610
            (ImplicitCastExpr 0x9f830e0 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9f83048 <col:55> 'class std::ios_base' lvalue ParmVar 0x9f82910 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0x9f83258 <line:982:2, line:983:52>
    0x9f83130 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0x9f83220 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0x9f832b8 <line:986:2, col:11>
    0x9f83280 "int __len")
  (DeclStmt 0x9f83358 <line:988:2, col:17>
    0x9f83320 "char __fbuf[16]")
  (CallExpr 0x9f83448 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0x9f83438 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f83390 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0x9f450f0 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0x9f83470 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0x9f833b0 <col:30> 'class std::ios_base' lvalue ParmVar 0x9f82910 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9f83480 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0x9f833c8 <col:36> 'char [16]' lvalue Var 0x9f83320 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0x9f83490 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0x9f833e0 <col:44> 'char' lvalue ParmVar 0x9f82990 '__mod' 'char')))
  (DeclStmt 0x9f83540 <line:994:2, col:34>
    0x9f834b0 "int __cs_size =
      (BinaryOperator 0x9f83528 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0x9f83518 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0x9f834e4 <col:18> 'const int' lvalue Var 0x9f83130 '__max_digits' 'const int'))
        (IntegerLiteral 0x9f83500 <col:33> 'int' 3))")
  (DeclStmt 0x9f83640 <line:995:2, col:62>
    0x9f83560 "char *__cs =
      (CXXStaticCastExpr 0x9f83628 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0x9f835d8 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0x9f835c8 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f83594 <col:34> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0x9f83608 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x9f835f8 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f835ac <col:51> 'int' lvalue Var 0x9f834b0 '__cs_size' 'int')))))")
  (BinaryOperator 0x9f83798 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0x9f83650 <line:996:2> 'int' lvalue Var 0x9f83280 '__len' 'int')
    (CallExpr 0x9f83760 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0x9f83680 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9d2ddb0 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0x9f836c8 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9f836b8 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f836a0 <col:32> '__c_locale (void)' lvalue CXXMethod 0x9e9d2d0 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0x9f836e4 <col:51> 'char *' lvalue Var 0x9f83560 '__cs' 'char *')
      (DeclRefExpr 0x9f836fc <col:57> 'int' lvalue Var 0x9f834b0 '__cs_size' 'int')
      (DeclRefExpr 0x9f83714 <line:997:11> 'char [16]' lvalue Var 0x9f83320 '__fbuf' 'char [16]')
      (DeclRefExpr 0x9f8372c <col:19> 'const streamsize':'const int' lvalue Var 0x9f82f20 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0x9f83744 <col:27> '_ValueT' lvalue ParmVar 0x9f829d0 '__v' '_ValueT')))
  (IfStmt 0x9f83af8 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0x9f83800 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0x9f837e0 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f837b0 <col:6> 'int' lvalue Var 0x9f83280 '__len' 'int'))
      (ImplicitCastExpr 0x9f837f0 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f837c8 <col:15> 'int' lvalue Var 0x9f834b0 '__cs_size' 'int')))
    (CompoundStmt 0x9f83ad8 <line:1001:4, line:1006:4>
      (BinaryOperator 0x9f83888 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0x9f83818 <col:6> 'int' lvalue Var 0x9f834b0 '__cs_size' 'int')
        (BinaryOperator 0x9f83870 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0x9f83860 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0x9f83830 <col:18> 'int' lvalue Var 0x9f83280 '__len' 'int'))
          (IntegerLiteral 0x9f83848 <col:26> 'int' 1)))
      (BinaryOperator 0x9f83960 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0x9f838a0 <col:6> 'char *' lvalue Var 0x9f83560 '__cs' 'char *')
        (CXXStaticCastExpr 0x9f83948 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0x9f838f8 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0x9f838e8 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f838b8 <col:32> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0x9f83928 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9f83918 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0x9f838d0 <col:49> 'int' lvalue Var 0x9f834b0 '__cs_size' 'int'))))))
      (BinaryOperator 0x9f83ac0 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0x9f83978 <line:1004:6> 'int' lvalue Var 0x9f83280 '__len' 'int')
        (CallExpr 0x9f83a88 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0x9f839a8 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9d2ddb0 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0x9f839f0 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0x9f839e0 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f839c8 <col:36> '__c_locale (void)' lvalue CXXMethod 0x9e9d2d0 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0x9f83a0c <col:55> 'char *' lvalue Var 0x9f83560 '__cs' 'char *')
          (DeclRefExpr 0x9f83a24 <col:61> 'int' lvalue Var 0x9f834b0 '__cs_size' 'int')
          (DeclRefExpr 0x9f83a3c <line:1005:8> 'char [16]' lvalue Var 0x9f83320 '__fbuf' 'char [16]')
          (DeclRefExpr 0x9f83a54 <col:16> 'const streamsize':'const int' lvalue Var 0x9f82f20 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0x9f83a6c <col:24> '_ValueT' lvalue ParmVar 0x9f829d0 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0x9f83d60 <line:1028:2, col:65>
    0x9f83be0 "const ctype<_CharT> &__ctype =
      (CallExpr 0x9f83d40 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9f83cc0 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
        (DeclRefExpr 0x9f83d28 <col:59> 'const class std::locale' lvalue Var 0x9f82da0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9f83eb8 <line:1030:2, line:1031:22>
    0x9f83da0 "_CharT *__ws =
      (CXXStaticCastExpr 0x9f83ea0 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x9f83e70 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0x9f83e60 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f83dd4 <col:38> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x9f83e48 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9f83df8 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x9f83e38 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9f83e28 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x9f83e10 <col:15> 'int' lvalue Var 0x9f83280 '__len' 'int'))))))")
  (CallExpr 0x9f83fb0 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9f83ee0 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0x9f83ec8 <col:2> 'const ctype<_CharT>' lvalue Var 0x9f83be0 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0x9f83f14 <col:16> 'char *' lvalue Var 0x9f83560 '__cs' 'char *')
    (BinaryOperator 0x9f83f80 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0x9f83f60 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9f83f2c <col:22> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))
      (ImplicitCastExpr 0x9f83f70 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f83f44 <col:29> 'int' lvalue Var 0x9f83280 '__len' 'int')))
    (DeclRefExpr 0x9f83f98 <col:36> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *'))
  (DeclStmt 0x9f84040 <line:1035:2, col:18>
    0x9f83ff0 "_CharT *__wp =
      (IntegerLiteral 0x9f84028 <col:17> 'int' 0)")
  (DeclStmt 0x9f84240 <line:1036:2, col:61>
    0x9f84060 "const char *__p =
      (CallExpr 0x9f841c8 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0x9f841b8 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f84110 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0x9d0d540 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0x9f84200 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0x9f841f0 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0x9f84130 <col:44> 'char *' lvalue Var 0x9f83560 '__cs' 'char *')))
        (ImplicitCastExpr 0x9f84220 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9f84210 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9f84148 <col:50> 'int' lvalue Var 0x9f83280 '__len' 'int')))
        (MaterializeTemporaryExpr 0x9f84230 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0x9f84160 <col:57> 'char'46)))")
  (IfStmt 0x9f84470 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f84278 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9f84268 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9f84250 <col:6> 'const char *' lvalue Var 0x9f84060 '__p' 'const char *')))
    (CompoundStmt 0x9f84458 <line:1038:4, line:1041:4>
      (BinaryOperator 0x9f843a8 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0x9f84284 <col:6> '_CharT *' lvalue Var 0x9f83ff0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x9f84380 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9f84338 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f8429c <col:13> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *')
          (ParenExpr 0x9f84320 <col:20, col:31> 'int'
            (BinaryOperator 0x9f84308 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0x9f842e8 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x9f842b4 <col:21> 'const char *' lvalue Var 0x9f84060 '__p' 'const char *'))
              (ImplicitCastExpr 0x9f842f8 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0x9f842cc <col:27> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))))))
      (BinaryOperator 0x9f84440 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0x9f843d8 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9f843c0 <col:7> '_CharT *' lvalue Var 0x9f83ff0 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0x9f84408 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9f843ec <col:14> 'const __cache_type *' lvalue Var 0x9f82e80 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0x9f85170 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0x9f848d8 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x9f844a8 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0x9f8448c <col:6> 'const __cache_type *' lvalue Var 0x9f82e80 '__lc' 'const __cache_type *'))
      (ParenExpr 0x9f848c0 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0x9f848a8 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0x9f84550 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0x9f844dc <col:10> '_CharT *' lvalue Var 0x9f83ff0 '__wp' '_CharT *')
            (BinaryOperator 0x9f84538 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0x9f84528 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0x9f844f4 <col:18> 'int' lvalue Var 0x9f83280 '__len' 'int'))
              (IntegerLiteral 0x9f84510 <col:26> 'int' 3)))
          (ParenExpr 0x9f84890 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0x9f84878 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0x9f847a8 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0x9f846d8 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0x9f84608 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0x9f845e8 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x9f845d8 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x9f845a8 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0x9f84598 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x9f84568 <col:32> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))
                          (IntegerLiteral 0x9f84580 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0x9f845f8 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0x9f845c0 <col:43> 'char'57)))
                  (BinaryOperator 0x9f846c0 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0x9f846a0 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x9f84690 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x9f84660 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0x9f84650 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x9f84620 <col:50> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))
                          (IntegerLiteral 0x9f84638 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0x9f846b0 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0x9f84678 <col:61> 'char'57))))
                (BinaryOperator 0x9f84790 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0x9f84770 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9f84760 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0x9f84730 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0x9f84720 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0x9f846f0 <col:14> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))
                        (IntegerLiteral 0x9f84708 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0x9f84780 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0x9f84748 <col:25> 'char'48))))
              (BinaryOperator 0x9f84860 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0x9f84840 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x9f84830 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0x9f84800 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0x9f847f0 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0x9f847c0 <col:32> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))
                      (IntegerLiteral 0x9f847d8 <col:37> 'int' 2))))
                (ImplicitCastExpr 0x9f84850 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0x9f84818 <col:43> 'char'48))))))))
    (CompoundStmt 0x9f85148 <line:1049:4, line:1069:4>
      (DeclStmt 0x9f84a58 <line:1052:6, line:1053:24>
        0x9f84900 "_CharT *__ws2 =
          (CXXStaticCastExpr 0x9f84a40 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9f84a10 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0x9f84a00 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f84934 <col:43> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9f849e8 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0x9f849a8 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x9f84958 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x9f84998 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0x9f84988 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9f84970 <col:13> 'int' lvalue Var 0x9f83280 '__len' 'int'))))
                (ImplicitCastExpr 0x9f849d8 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9f849c0 <col:21> 'int' 2)))))")
      (DeclStmt 0x9f84ac0 <line:1055:6, col:26>
        0x9f84a70 "streamsize __off =
          (IntegerLiteral 0x9f84aa8 <col:25> 'int' 0)")
      (IfStmt 0x9f84db8 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0x9f84c40 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0x9f84b70 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0x9f84b50 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f84b40 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x9f84b10 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0x9f84b00 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x9f84ad0 <col:10> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))
                  (IntegerLiteral 0x9f84ae8 <col:15> 'int' 0))))
            (ImplicitCastExpr 0x9f84b60 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0x9f84b28 <col:21> 'char'45)))
          (BinaryOperator 0x9f84c28 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x9f84c08 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9f84bf8 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x9f84bc8 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0x9f84bb8 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x9f84b88 <col:28> 'char *' lvalue Var 0x9f83560 '__cs' 'char *'))
                  (IntegerLiteral 0x9f84ba0 <col:33> 'int' 0))))
            (ImplicitCastExpr 0x9f84c18 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0x9f84be0 <col:39> 'char'43))))
        (CompoundStmt 0x9f84d98 <line:1057:8, line:1061:8>
          (BinaryOperator 0x9f84c88 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0x9f84c58 <col:3> 'streamsize':'int' lvalue Var 0x9f84a70 '__off' 'streamsize':'int')
            (IntegerLiteral 0x9f84c70 <col:11> 'int' 1))
          (BinaryOperator 0x9f84d30 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0x9f84cd0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x9f84ca0 <col:3> '_CharT *' lvalue Var 0x9f84900 '__ws2' '_CharT *')
              (IntegerLiteral 0x9f84cb8 <col:9> 'int' 0))
            (ArraySubscriptExpr 0x9f84d18 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0x9f84ce4 <col:14> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *')
              (IntegerLiteral 0x9f84d00 <col:19> 'int' 0)))
          (CompoundAssignOperator 0x9f84d78 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x9f84d48 <col:3> 'int' lvalue Var 0x9f83280 '__len' 'int')
            (IntegerLiteral 0x9f84d60 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0x9f85068 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0x9f84de8 <line:1063:6> '<bound member function type>' ->_M_group_float 0x9f81dc0
          (CXXThisExpr 0x9f84dd8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x9f84e20 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0x9f84e08 <col:21> 'const __cache_type *' lvalue Var 0x9f82e80 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9f84e70 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9f84e54 <col:40> 'const __cache_type *' lvalue Var 0x9f82e80 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9f84ec0 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0x9f84ea4 <col:7> 'const __cache_type *' lvalue Var 0x9f82e80 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x9f84ef4 <col:31> '_CharT *' lvalue Var 0x9f83ff0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x9f84f88 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f84f40 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f84f0c <col:37> '_CharT *' lvalue Var 0x9f84900 '__ws2' '_CharT *')
          (DeclRefExpr 0x9f84f24 <col:45> 'streamsize':'int' lvalue Var 0x9f84a70 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0x9f85028 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0x9f84fe0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f84fac <col:7> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *')
          (DeclRefExpr 0x9f84fc4 <col:14> 'streamsize':'int' lvalue Var 0x9f84a70 '__off' 'streamsize':'int'))
        (DeclRefExpr 0x9f8504c <col:21> 'int' lvalue Var 0x9f83280 '__len' 'int'))
      (CompoundAssignOperator 0x9f850e0 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9f850a0 <col:6> 'int' lvalue Var 0x9f83280 '__len' 'int')
        (ImplicitCastExpr 0x9f850d0 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9f850b8 <col:15> 'streamsize':'int' lvalue Var 0x9f84a70 '__off' 'streamsize':'int')))
      (BinaryOperator 0x9f85130 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9f85100 <col:6> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *')
        (DeclRefExpr 0x9f85118 <col:13> '_CharT *' lvalue Var 0x9f84900 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0x9f85280 <line:1072:2, col:37>
    0x9f851a0 "const streamsize __w =
      (CXXMemberCallExpr 0x9f85250 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x9f8522c <col:25, col:30> '<bound member function type>' .width 0x9ec5780
          (ImplicitCastExpr 0x9f85270 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f851d4 <col:25> 'class std::ios_base' lvalue ParmVar 0x9f82910 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9f855b8 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0x9f85300 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x9f852f0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f85290 <col:6> 'const streamsize':'const int' lvalue Var 0x9f851a0 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x9f852d8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x9f852c8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x9f852a8 <col:36> 'int' lvalue Var 0x9f83280 '__len' 'int'))))
    (CompoundStmt 0x9f85598 <line:1074:4, line:1079:4>
      (DeclStmt 0x9f85448 <line:1075:6, line:1076:18>
        0x9f85330 "_CharT *__ws3 =
          (CXXStaticCastExpr 0x9f85430 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9f85400 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0x9f853f0 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9f85364 <col:43> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9f853d8 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x9f85388 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x9f853c8 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9f853b8 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9f853a0 <col:13> 'const streamsize':'const int' lvalue Var 0x9f851a0 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x9f85518 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0x9f85468 <col:6> '<bound member function type>' ->_M_pad 0x9f7ada0
          (CXXThisExpr 0x9f85458 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x9f85488 <col:13> '_CharT' lvalue ParmVar 0x9f82950 '__fill' '_CharT')
        (DeclRefExpr 0x9f854a0 <col:21> 'const streamsize':'const int' lvalue Var 0x9f851a0 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x9f854b8 <col:26> 'class std::ios_base' lvalue ParmVar 0x9f82910 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x9f854d0 <col:32> '_CharT *' lvalue Var 0x9f85330 '__ws3' '_CharT *')
        (DeclRefExpr 0x9f854e8 <col:39> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *')
        (DeclRefExpr 0x9f85500 <col:45> 'int' lvalue Var 0x9f83280 '__len' 'int'))
      (BinaryOperator 0x9f85580 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9f8554c <col:6> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *')
        (DeclRefExpr 0x9f85564 <col:13> '_CharT *' lvalue Var 0x9f85330 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9f85668 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0x9f85648 <col:2, col:7> '<bound member function type>' .width 0x9ec5840
      (DeclRefExpr 0x9f855d4 <col:2> 'class std::ios_base' lvalue ParmVar 0x9f82910 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x9f85630 <col:13> 'int' 0))
  (ReturnStmt 0x9f85748 <line:1084:2, col:38>
    (CallExpr 0x9f85720 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9f856a0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f570 0x9f2f930)
      (DeclRefExpr 0x9f856d8 <col:22> '_OutIter' lvalue ParmVar 0x9f828c0 '__s' '_OutIter')
      (DeclRefExpr 0x9f856f0 <col:27> '_CharT *' lvalue Var 0x9f83da0 '__ws' '_CharT *')
      (DeclRefExpr 0x9f85708 <col:33> 'int' lvalue Var 0x9f83280 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0x9f880d0 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0x9f85d90 <line:1092:7, col:54>
    0x9f85cb0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9f85d60 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9f85d3c <col:42, col:47> '<bound member function type>' .flags 0x9ec5160
          (ImplicitCastExpr 0x9f85d80 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f85ce4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f85ac0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9f88088 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0x9f85ea8 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0x9f85e98 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0x9f85e68 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9f85e40 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9f85e30 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f85e18 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9f85df8 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f85da0 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f85cb0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x9f85e08 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f85dd4 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec29f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0x9f85e80 <col:46> 'int' 0))
    (CompoundStmt 0x9f86060 <line:1094:9, line:1097:9>
      (DeclStmt 0x9f85f40 <line:1095:11, col:31>
        0x9f85ed0 "const long __l =
          (ImplicitCastExpr 0x9f85f30 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0x9f85f20 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f85f04 <col:28> '_Bool' lvalue ParmVar 0x9f85b40 '__v' '_Bool')))")
      (BinaryOperator 0x9f86048 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0x9f85f50 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x9f86018 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x9f85f78 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0x9f85fb4 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x9f85fcc <col:36> 'class std::ios_base' lvalue ParmVar 0x9f85ac0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x9f85fe4 <col:42> 'char_type':'_CharT' lvalue ParmVar 0x9f85b00 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0x9f85ffc <col:50> 'const long' lvalue Var 0x9f85ed0 '__l' 'const long'))))
    (CompoundStmt 0x9f88050 <line:1099:9, line:1135:2>
      (DeclStmt 0x9f86150 <line:1100:4, col:62>
        0x9f86120 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x9f86258 <line:1101:4, col:34>
        0x9f86220 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x9f86f70 <line:1102:4, col:42>
        0x9f86280 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9f862f0 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x9f862cc <col:26, col:31> '<bound member function type>' ._M_getloc 0x9ec5b60
              (ImplicitCastExpr 0x9f86310 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9f862b4 <col:26> 'class std::ios_base' lvalue ParmVar 0x9f85ac0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9f87038 <line:1103:4, col:42>
        0x9f86fb0 "const __cache_type *__lc =
          (CallExpr 0x9f87018 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x9f86fe4 <col:31> '__use_cache<__cache_type>' lvalue Var 0x9f86220 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x9f86ffc <col:36> 'const class std::locale' lvalue Var 0x9f86280 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x9f871a0 <line:1105:4, line:1106:51>
        0x9f87080 "const _CharT *__name =
          (ConditionalOperator 0x9f87180 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0x9f87170 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f870b4 <col:27> '_Bool' lvalue ParmVar 0x9f85b40 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x9f870e8 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9f870cc <col:33> 'const __cache_type *' lvalue Var 0x9f86fb0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9f87138 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8711c <col:33> 'const __cache_type *' lvalue Var 0x9f86fb0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x9f872e0 <line:1107:4, line:1108:45>
        0x9f871c0 "int __len =
          (ConditionalOperator 0x9f872c0 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0x9f872b0 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9f871f4 <col:16> '_Bool' lvalue ParmVar 0x9f85b40 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x9f87228 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8720c <col:22> 'const __cache_type *' lvalue Var 0x9f86fb0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9f87278 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8725c <col:22> 'const __cache_type *' lvalue Var 0x9f86fb0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x9f873e0 <line:1110:4, col:39>
        0x9f87300 "const streamsize __w =
          (CXXMemberCallExpr 0x9f873b0 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0x9f8738c <col:27, col:32> '<bound member function type>' .width 0x9ec5780
              (ImplicitCastExpr 0x9f873d0 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9f87334 <col:27> 'class std::ios_base' lvalue ParmVar 0x9f85ac0 '__io' 'class std::ios_base &'))))")
      (IfStmt 0x9f87e90 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0x9f87460 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0x9f87450 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x9f873f0 <col:8> 'const streamsize':'const int' lvalue Var 0x9f87300 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0x9f87438 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0x9f87428 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0x9f87408 <col:38> 'int' lvalue Var 0x9f871c0 '__len' 'int'))))
        (CompoundStmt 0x9f87e68 <line:1112:6, line:1132:6>
          (DeclStmt 0x9f87520 <line:1113:8, col:45>
            0x9f87480 "const streamsize __plen =
              (BinaryOperator 0x9f87508 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0x9f874e8 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9f874b4 <col:34> 'const streamsize':'const int' lvalue Var 0x9f87300 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0x9f874f8 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9f874cc <col:40> 'int' lvalue Var 0x9f871c0 '__len' 'int')))")
          (DeclStmt 0x9f87678 <line:1114:8, line:1116:18>
            0x9f87560 "_CharT *__ps =
              (CXXStaticCastExpr 0x9f87660 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0x9f87630 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0x9f87620 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9f87594 <col:26> 'void *(unsigned int)' lvalue Function 0x9f7f590 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0x9f87608 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0x9f875b8 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0x9f875f8 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0x9f875e8 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x9f875d0 <col:10> 'const streamsize':'const int' lvalue Var 0x9f87480 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0x9f877c0 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f87740 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0x9f87774 <col:36> '_CharT *' lvalue Var 0x9f87560 '__ps' '_CharT *')
            (DeclRefExpr 0x9f8778c <col:42> 'const streamsize':'const int' lvalue Var 0x9f87480 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0x9f877a4 <col:50> 'char_type':'_CharT' lvalue ParmVar 0x9f85b00 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0x9f87878 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0x9f87858 <col:8, col:13> '<bound member function type>' .width 0x9ec5840
              (DeclRefExpr 0x9f877e8 <col:8> 'class std::ios_base' lvalue ParmVar 0x9f85ac0 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0x9f87840 <col:19> 'int' 0))
          (IfStmt 0x9f87e20 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0x9f879e8 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0x9f879c8 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0x9f87960 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0x9f87938 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9f87928 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9f87910 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9f878f0 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9f87898 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f85cb0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9f87900 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9f878cc <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0x9f879d8 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9f879b8 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9f87994 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2bd0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0x9f87c10 <line:1122:3, line:1125:3>
              (BinaryOperator 0x9f87b08 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x9f87a2c <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9f87ae0 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f87a60 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f570 0x9f2f930)
                  (DeclRefExpr 0x9f87a98 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9f87ab0 <col:29> 'const _CharT *' lvalue Var 0x9f87080 '__name' 'const _CharT *')
                  (DeclRefExpr 0x9f87ac8 <col:37> 'int' lvalue Var 0x9f871c0 '__len' 'int')))
              (BinaryOperator 0x9f87bf8 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9f87b20 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9f87bd0 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f87b50 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f570 0x9f2f930)
                  (DeclRefExpr 0x9f87b88 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9f87ba0 <col:29> '_CharT *' lvalue Var 0x9f87560 '__ps' '_CharT *')
                  (DeclRefExpr 0x9f87bb8 <col:35> 'const streamsize':'const int' lvalue Var 0x9f87480 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0x9f87e08 <line:1127:3, line:1130:3>
              (BinaryOperator 0x9f87d00 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9f87c28 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9f87cd8 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f87c58 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f570 0x9f2f930)
                  (DeclRefExpr 0x9f87c90 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9f87ca8 <col:29> '_CharT *' lvalue Var 0x9f87560 '__ps' '_CharT *')
                  (DeclRefExpr 0x9f87cc0 <col:35> 'const streamsize':'const int' lvalue Var 0x9f87480 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0x9f87df0 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x9f87d18 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x9f87dc8 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f87d48 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f570 0x9f2f930)
                  (DeclRefExpr 0x9f87d80 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x9f87d98 <col:29> 'const _CharT *' lvalue Var 0x9f87080 '__name' 'const _CharT *')
                  (DeclRefExpr 0x9f87db0 <col:37> 'int' lvalue Var 0x9f871c0 '__len' 'int')))))
          (ReturnStmt 0x9f87e58 <line:1131:8, col:15>
            (DeclRefExpr 0x9f87e3c <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0x9f87f40 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0x9f87f20 <col:4, col:9> '<bound member function type>' .width 0x9ec5840
          (DeclRefExpr 0x9f87eac <col:4> 'class std::ios_base' lvalue ParmVar 0x9f85ac0 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0x9f87f08 <col:15> 'int' 0))
      (BinaryOperator 0x9f88038 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0x9f87f60 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x9f88010 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x9f87f90 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9f2f570 0x9f2f930)
          (DeclRefExpr 0x9f87fc8 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x9f87fe0 <col:28> 'const _CharT *' lvalue Var 0x9f87080 '__name' 'const _CharT *')
          (DeclRefExpr 0x9f87ff8 <col:36> 'int' lvalue Var 0x9f871c0 '__len' 'int')))))
  (ReturnStmt 0x9f880c0 <line:1136:7, col:14>
    (DeclRefExpr 0x9f880a4 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x9f85a70 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0x9f886b8 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0x9f886a8 <col:7, col:60>
    (CallExpr 0x9f88678 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0x9f885c0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f885fc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9f88390 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f88614 <col:35> 'class std::ios_base' lvalue ParmVar 0x9f883e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f8862c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9f88420 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0x9f88650 <col:49, col:54> 'char')
      (DeclRefExpr 0x9f88660 <col:57> 'double' lvalue ParmVar 0x9f88470 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0x9f88c98 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0x9f88c88 <col:7, col:57>
    (CallExpr 0x9f88c58 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0x9f88ba0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f88bdc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9f88970 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f88bf4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9f889c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f88c0c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9f88a00 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0x9f88c28 <col:49> 'char'76)
      (DeclRefExpr 0x9f88c3c <col:54> 'long double' lvalue ParmVar 0x9f88a50 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0x9f89b28 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0x9f89280 <line:1166:7, col:54>
    0x9f891a0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9f89250 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9f8922c <col:42, col:47> '<bound member function type>' .flags 0x9ec5160
          (ImplicitCastExpr 0x9f89270 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9f891d4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9f88fa0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9f89450 <line:1167:7, line:1168:29>
    0x9f892c0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9f89430 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9f89420 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f89408 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb950 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0x9f893f0 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9f893c8 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9f893b8 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9f893a0 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb510 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9f89380 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f89320 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x9f89390 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f8935c <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0x9f896f0 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9f896cc <col:7, col:12> '<bound member function type>' .flags 0x9ec5250
      (DeclRefExpr 0x9f89460 <col:7> 'class std::ios_base' lvalue ParmVar 0x9f88fa0 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x9f896a8 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9f89698 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f89680 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb510 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9f89558 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9f89530 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9f89520 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f89508 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9f894e8 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f894b8 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f891a0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9f894f8 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f894d0 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f892c0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0x9f89668 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9f89640 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9f89630 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f89618 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9ebb510 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9f895f8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f89598 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9f89608 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f895d4 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0x9f898e0 <line:1171:7, line:1173:57>
    0x9f898b0 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0x9f89a28 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0x9f898f0 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0x9f88f50 '__s' 'iter_type':'_OutIter')
    (CallExpr 0x9f899f8 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0x9f89918 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9f89954 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0x9f88f50 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9f8996c <col:32> 'class std::ios_base' lvalue ParmVar 0x9f88fa0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9f89984 <col:38> 'char_type':'_CharT' lvalue ParmVar 0x9f88fe0 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0x9f899e0 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0x9f899d0 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0x9f899b0 <col:37> 'const void *' lvalue ParmVar 0x9f89030 '__v' 'const void *')))))
  (CXXMemberCallExpr 0x9f89ad0 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9f89ab0 <col:7, col:12> '<bound member function type>' .flags 0x9ec5250
      (DeclRefExpr 0x9f89a40 <col:7> 'class std::ios_base' lvalue ParmVar 0x9f88fa0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x9f89af0 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9f89a98 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f891a0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9f89b18 <line:1178:7, col:14>
    (DeclRefExpr 0x9f89afc <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x9f88f50 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0x9f8b9b0 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0x9f8a1c0 <line:1196:7, col:69>
    0x9f8a0f0 "const size_t __plen =
      (CXXStaticCastExpr 0x9f8a1a8 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0x9f8a198 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0x9f8a178 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0x9f8a158 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9f8a124 <col:49> 'streamsize':'int' lvalue ParmVar 0x9f89f60 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0x9f8a168 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9f8a13c <col:60> 'streamsize':'int' lvalue ParmVar 0x9f89fa0 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0x9f8a380 <line:1197:7, col:79>
    0x9f8a200 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0x9f8a358 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9f8a348 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f8a330 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9eba470 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9f8a2b0 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9f8a28c <col:43, col:48> '<bound member function type>' .flags 0x9ec5160
            (ImplicitCastExpr 0x9f8a2d0 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9f8a234 <col:43> 'class std::ios_base' lvalue ParmVar 0x9f89e00 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9f8a320 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f8a2fc <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0x9f8a6b8 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0x9f8a428 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x9f8a408 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f8a3e8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f8a390 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f8a200 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x9f8a418 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f8a3f8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f8a3c4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2bd0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9f8a698 <line:1201:2, line:1205:2>
      (CallExpr 0x9f8a518 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9f8a4a8 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0x9f8a4cc <col:18> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
        (DeclRefExpr 0x9f8a4e4 <col:26> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
        (DeclRefExpr 0x9f8a4fc <col:34> 'streamsize':'int' lvalue ParmVar 0x9f89fa0 '__oldlen' 'streamsize':'int'))
      (CallExpr 0x9f8a660 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9f8a568 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9f8a608 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9f8a5c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (DeclRefExpr 0x9f8a58c <col:20> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
          (DeclRefExpr 0x9f8a5a4 <col:29> 'streamsize':'int' lvalue ParmVar 0x9f89fa0 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0x9f8a62c <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9f8a0f0 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0x9f8a644 <col:47> '_CharT' lvalue ParmVar 0x9f89e40 '__fill' '_CharT'))
      (ReturnStmt 0x9f8a688 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0x9f8a740 <line:1207:7, col:23>
    0x9f8a6e0 "size_t __mod =
      (ImplicitCastExpr 0x9f8a730 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f8a718 <col:22> 'int' 0))")
  (IfStmt 0x9f8b6a0 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0x9f8a7e8 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x9f8a7c8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f8a7a8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f8a750 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9f8a200 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x9f8a7d8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9f8a7b8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9f8a784 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b70 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9f8b680 <line:1209:2, line:1234:2>
      (DeclStmt 0x9f8a8e0 <line:1213:11, col:49>
        0x9f8a840 "const std::locale &__loc =
          (CXXMemberCallExpr 0x9f8a8b0 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0x9f8a88c <col:33, col:38> '<bound member function type>' ._M_getloc 0x9ec5b60
              (ImplicitCastExpr 0x9f8a8d0 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9f8a874 <col:33> 'class std::ios_base' lvalue ParmVar 0x9f89e00 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9f8ab40 <line:1214:4, col:67>
        0x9f8a9c0 "const ctype<_CharT> &__ctype =
          (CallExpr 0x9f8ab20 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0x9f8aaa0 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
            (DeclRefExpr 0x9f8ab08 <col:61> 'const class std::locale' lvalue Var 0x9f8a840 '__loc' 'const class std::locale &'))")
      (IfStmt 0x9f8b660 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0x9f8ae00 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9f8ac80 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9f8ac20 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (CallExpr 0x9f8abb8 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f8ab68 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9f8ab50 <col:8> 'const ctype<_CharT>' lvalue Var 0x9f8a9c0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x9f8aba0 <col:22> 'char'45))
            (ArraySubscriptExpr 0x9f8ac08 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8abd8 <col:30> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9f8abf0 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0x9f8add8 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9f8ad78 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (CallExpr 0x9f8ad10 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9f8acc0 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0x9f8aca4 <col:11> 'const ctype<_CharT>' lvalue Var 0x9f8a9c0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x9f8acf8 <col:25> 'char'43))
            (ArraySubscriptExpr 0x9f8ad60 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8ad30 <col:33> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9f8ad48 <col:40> 'int' 0))))
        (CompoundStmt 0x9f8af48 <line:1218:6, line:1222:6>
          (BinaryOperator 0x9f8aea8 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0x9f8ae48 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8ae18 <col:8> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
              (IntegerLiteral 0x9f8ae30 <col:15> 'int' 0))
            (ArraySubscriptExpr 0x9f8ae90 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x9f8ae5c <col:20> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9f8ae78 <col:27> 'int' 0)))
          (BinaryOperator 0x9f8af00 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0x9f8aec0 <col:8> 'size_t':'unsigned int' lvalue Var 0x9f8a6e0 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0x9f8aef0 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9f8aed8 <col:16> 'int' 1)))
          (UnaryOperator 0x9f8af30 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9f8af18 <col:10> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')))
        (IfStmt 0x9f8b640 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0x9f8b410 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0x9f8b118 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9f8b098 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9f8b038 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                (CallExpr 0x9f8afd0 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f8af80 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f8af64 <col:13> 'const ctype<_CharT>' lvalue Var 0x9f8a9c0 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0x9f8afb8 <col:27> 'char'48))
                (ArraySubscriptExpr 0x9f8b020 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f8aff0 <col:35> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
                  (IntegerLiteral 0x9f8b008 <col:42> 'int' 0)))
              (BinaryOperator 0x9f8b100 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0x9f8b0f0 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9f8b0bc <col:9> 'streamsize':'int' lvalue ParmVar 0x9f89fa0 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0x9f8b0d8 <col:20> 'int' 1)))
            (ParenExpr 0x9f8b3f8 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0x9f8b3e0 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0x9f8b260 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f8b200 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (CallExpr 0x9f8b198 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f8b148 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f8b130 <col:10> 'const ctype<_CharT>' lvalue Var 0x9f8a9c0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9f8b180 <col:24> 'char'120))
                  (ArraySubscriptExpr 0x9f8b1e8 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f8b1b8 <col:32> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9f8b1d0 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0x9f8b3b8 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f8b358 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (CallExpr 0x9f8b2f0 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f8b2a0 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f8b284 <col:13> 'const ctype<_CharT>' lvalue Var 0x9f8a9c0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9f8b2d8 <col:27> 'char'88))
                  (ArraySubscriptExpr 0x9f8b340 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f8b310 <col:35> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9f8b328 <col:42> 'int' 1))))))
          (CompoundStmt 0x9f8b620 <line:1227:6, line:1232:6>
            (BinaryOperator 0x9f8b4b8 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9f8b458 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9f8b428 <col:8> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
                (IntegerLiteral 0x9f8b440 <col:15> 'int' 0))
              (ArraySubscriptExpr 0x9f8b4a0 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9f8b46c <col:20> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9f8b488 <col:27> 'int' 0)))
            (BinaryOperator 0x9f8b560 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9f8b500 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9f8b4d0 <col:8> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
                (IntegerLiteral 0x9f8b4e8 <col:15> 'int' 1))
              (ArraySubscriptExpr 0x9f8b548 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9f8b514 <col:20> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9f8b530 <col:27> 'int' 1)))
            (BinaryOperator 0x9f8b5b8 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0x9f8b578 <col:8> 'size_t':'unsigned int' lvalue Var 0x9f8a6e0 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0x9f8b5a8 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9f8b590 <col:16> 'int' 2)))
            (CompoundAssignOperator 0x9f8b600 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9f8b5d0 <col:8> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
              (IntegerLiteral 0x9f8b5e8 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0x9f8b758 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9f8b6e8 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0x9f8b70c <col:23> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
    (DeclRefExpr 0x9f8b724 <col:31> 'const size_t':'const unsigned int' lvalue Var 0x9f8a0f0 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0x9f8b73c <col:39> '_CharT' lvalue ParmVar 0x9f89e40 '__fill' '_CharT'))
  (CallExpr 0x9f8b988 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9f8b7a8 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0x9f8b848 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9f8b800 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
      (DeclRefExpr 0x9f8b7cc <col:21> '_CharT *' lvalue ParmVar 0x9f89eb0 '__news' '_CharT *')
      (DeclRefExpr 0x9f8b7e4 <col:30> 'const size_t':'const unsigned int' lvalue Var 0x9f8a0f0 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0x9f8b8e8 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x9f8b8a0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
      (DeclRefExpr 0x9f8b86c <col:38> 'const _CharT *' lvalue ParmVar 0x9f89f20 '__olds' 'const _CharT *')
      (DeclRefExpr 0x9f8b884 <col:47> 'size_t':'unsigned int' lvalue Var 0x9f8a6e0 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0x9f8b970 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0x9f8b960 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9f8b940 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9f8b90c <col:54> 'streamsize':'int' lvalue ParmVar 0x9f89fa0 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0x9f8b950 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9f8b924 <col:65> 'size_t':'unsigned int' lvalue Var 0x9f8a6e0 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0x9f8ccd0 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0x9f8bdd0 <line:1245:7, col:23>
    0x9f8bd70 "size_t __idx =
      (ImplicitCastExpr 0x9f8bdc0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f8bda8 <col:22> 'int' 0))")
  (DeclStmt 0x9f8be50 <line:1246:7, col:23>
    0x9f8bdf0 "size_t __ctr =
      (ImplicitCastExpr 0x9f8be40 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9f8be28 <col:22> 'int' 0))")
  (WhileStmt 0x9f8c430 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0x9f8c238 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0x9f8c0b8 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9f8bfa0 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9f8bf58 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (CXXOperatorCallExpr 0x9f8bec8 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9f8be90 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (DeclRefExpr 0x9f8be60 <col:14> 'const _CharT *' lvalue ParmVar 0x9f8bc00 '__last' 'const _CharT *')
            (DeclRefExpr 0x9f8be78 <col:23> 'const _CharT *' lvalue ParmVar 0x9f8bbb0 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0x9f8bf40 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0x9f8bf20 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9f8beec <col:33> 'const char *' lvalue ParmVar 0x9f8bb00 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0x9f8bf30 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9f8bf04 <col:40> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0x9f8c0a0 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0x9f8c090 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0x9f8c060 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0x9f8c050 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0x9f8c040 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0x9f8c018 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0x9f8bff8 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0x9f8bfc4 <col:35> 'const char *' lvalue ParmVar 0x9f8bb00 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0x9f8c008 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9f8bfdc <col:42> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0x9f8c078 <col:52> 'int' 0)))
      (BinaryOperator 0x9f8c220 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0x9f8c1f0 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f8c1e0 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0x9f8c120 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0x9f8c100 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x9f8c0d0 <col:10> 'const char *' lvalue ParmVar 0x9f8bb00 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0x9f8c110 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9f8c0e8 <col:17> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0x9f8c210 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9f8c200 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0x9f8c1c0 <col:27, col:62> 'const char':'const char' lvalue Var 0x9f640b0 '__max' 'const char':'const char')))))
    (CompoundStmt 0x9f8c418 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0x9f8c2d0 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9f8c250 <col:4> 'const _CharT *' lvalue ParmVar 0x9f8bc00 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0x9f8c2b8 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0x9f8c298 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9f8c268 <col:14> 'const char *' lvalue ParmVar 0x9f8bb00 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0x9f8c2a8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f8c280 <col:21> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0x9f8c3f8 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0x9f8c380 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0x9f8c370 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9f8c2f0 <col:4> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0x9f8c358 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0x9f8c338 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9f8c308 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0x9f8bb40 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0x9f8c348 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9f8c320 <col:22> 'int' 1))))
        (UnaryOperator 0x9f8c3b0 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9f8c398 <col:28> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0x9f8c3e0 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9f8c3c4 <col:38> 'size_t':'unsigned int' lvalue Var 0x9f8bdf0 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0x9f8c5d0 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9f8c4d0 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9f8c478 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (DeclRefExpr 0x9f8c444 <col:14> 'const _CharT *' lvalue ParmVar 0x9f8bbb0 '__first' 'const _CharT *')
      (DeclRefExpr 0x9f8c45c <col:25> 'const _CharT *' lvalue ParmVar 0x9f8bc00 '__last' 'const _CharT *'))
    (BinaryOperator 0x9f8c5b8 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9f8c540 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0x9f8c528 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9f8c4f4 <col:3> '_CharT *' lvalue ParmVar 0x9f8ba70 '__s' '_CharT *')))
      (UnaryOperator 0x9f8c5a0 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0x9f8c588 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9f8c554 <col:12> 'const _CharT *' lvalue ParmVar 0x9f8bbb0 '__first' 'const _CharT *')))))
  (WhileStmt 0x9f8c930 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f8c618 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9f8c600 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x9f8c5e4 <col:14> 'size_t':'unsigned int' lvalue Var 0x9f8bdf0 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0x9f8c918 <line:1260:2, line:1264:2>
      (BinaryOperator 0x9f8c6a0 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x9f8c670 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x9f8c658 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9f8c624 <col:5> '_CharT *' lvalue ParmVar 0x9f8ba70 '__s' '_CharT *')))
        (DeclRefExpr 0x9f8c684 <col:13> '_CharT' lvalue ParmVar 0x9f8bab0 '__sep' '_CharT'))
      (ForStmt 0x9f8c8f0 <line:1262:4, line:1263:23>
        (DeclStmt 0x9f8c770 <line:1262:9, col:33>
          0x9f8c6c0 "char __i =
            (ImplicitCastExpr 0x9f8c760 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x9f8c748 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9f8c728 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9f8c6f4 <col:20> 'const char *' lvalue ParmVar 0x9f8bb00 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9f8c738 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9f8c70c <col:27> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x9f8c7d0 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x9f8c7c0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f8c7b0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x9f8c780 <col:35> 'char' lvalue Var 0x9f8c6c0 '__i' 'char')))
          (IntegerLiteral 0x9f8c798 <col:41> 'int' 0))
        (UnaryOperator 0x9f8c800 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x9f8c7e8 <col:46> 'char' lvalue Var 0x9f8c6c0 '__i' 'char'))
        (BinaryOperator 0x9f8c8d8 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x9f8c860 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x9f8c848 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9f8c814 <col:7> '_CharT *' lvalue ParmVar 0x9f8ba70 '__s' '_CharT *')))
          (UnaryOperator 0x9f8c8c0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x9f8c8a8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9f8c874 <col:16> 'const _CharT *' lvalue ParmVar 0x9f8bbb0 '__first' 'const _CharT *')))))))
  (WhileStmt 0x9f8cc90 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f8c978 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9f8c960 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x9f8c944 <col:14> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0x9f8cc78 <line:1267:2, line:1271:2>
      (BinaryOperator 0x9f8ca00 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x9f8c9d0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x9f8c9b8 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9f8c984 <col:5> '_CharT *' lvalue ParmVar 0x9f8ba70 '__s' '_CharT *')))
        (DeclRefExpr 0x9f8c9e4 <col:13> '_CharT' lvalue ParmVar 0x9f8bab0 '__sep' '_CharT'))
      (ForStmt 0x9f8cc50 <line:1269:4, line:1270:23>
        (DeclStmt 0x9f8cad0 <line:1269:9, col:33>
          0x9f8ca20 "char __i =
            (ImplicitCastExpr 0x9f8cac0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x9f8caa8 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9f8ca88 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9f8ca54 <col:20> 'const char *' lvalue ParmVar 0x9f8bb00 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9f8ca98 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9f8ca6c <col:27> 'size_t':'unsigned int' lvalue Var 0x9f8bd70 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x9f8cb30 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x9f8cb20 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f8cb10 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x9f8cae0 <col:35> 'char' lvalue Var 0x9f8ca20 '__i' 'char')))
          (IntegerLiteral 0x9f8caf8 <col:41> 'int' 0))
        (UnaryOperator 0x9f8cb60 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x9f8cb48 <col:46> 'char' lvalue Var 0x9f8ca20 '__i' 'char'))
        (BinaryOperator 0x9f8cc38 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x9f8cbc0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x9f8cba8 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9f8cb74 <col:7> '_CharT *' lvalue ParmVar 0x9f8ba70 '__s' '_CharT *')))
          (UnaryOperator 0x9f8cc20 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x9f8cc08 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9f8cbd4 <col:16> 'const _CharT *' lvalue ParmVar 0x9f8bbb0 '__first' 'const _CharT *')))))))
  (ReturnStmt 0x9f8ccc0 <line:1273:7, col:14>
    (DeclRefExpr 0x9f8cca4 <col:14> '_CharT *' lvalue ParmVar 0x9f8ba70 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0x9fb0f40 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0x9fb0cc0 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0x9fb0c28 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9fb0c0c <col:12> 'const _Facet *' lvalue ParmVar 0x9fb0ac0 '__f' 'const _Facet *'))
    (CallExpr 0x9fb0ca0 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0x9fb0c90 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fb0c74 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0x9c63270 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9fb0d10 <line:51:7, col:15>
    (UnaryOperator 0x9fb0cf8 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9fb0cdc <col:15> 'const _Facet *' lvalue ParmVar 0x9fb0ac0 '__f' 'const _Facet *'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0x9fb3fc0 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0x9fb3fb0 <col:9, col:62>
    (ConditionalOperator 0x9fb3f90 <col:16, col:62> '<dependent type>'
      (CallExpr 0x9fb3f00 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb3ec8 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb3eb8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9fb3f20 <col:31> 'int' 0)
      (CXXConstCastExpr 0x9fb3f78 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0x9fb3f38 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0x9fb4050 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0x9fb4040 <col:9, col:27>
    (CallExpr 0x9fb4020 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fb3fe8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fb3fd8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0x9fb40a8 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0x9fb4098 <col:9, col:16>
    (MemberExpr 0x9fb4078 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9ec3e20
      (CXXThisExpr 0x9fb4068 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0x9fb3e90 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x9fb3e74 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0x9fb4210 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0x9fb41f0 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fb40d0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9fb40c0 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9fb41c8 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb4188 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebb510 0x9ebcd10 0x9ebdf80)
      (CallExpr 0x9fb4150 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb4118 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb4108 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9fb416c <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9fb22d0 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0x9fb43e8 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0x9fb42a8 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0x9fb4270 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebe600)
    (MemberExpr 0x9fb4238 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9ec3e20
      (CXXThisExpr 0x9fb4228 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb4258 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9fb2390 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0x9fb43c8 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fb4390 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb4350 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (CallExpr 0x9fb4318 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb42e0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb42d0 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x9fb4334 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9fb2390 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0x9fb43b8 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0x9fb4518 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0x9fb4508 <col:9, col:35>
    (CXXOperatorCallExpr 0x9fb44e0 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb4480 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
      (CallExpr 0x9fb4448 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb4410 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb4400 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9fb4468 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0x9fb46d8 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0x9fb46c8 <col:9, col:46>
    (CXXOperatorCallExpr 0x9fb46a0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb4648 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (ParenExpr 0x9fb4618 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x9fb45f0 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9fb45b0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CallExpr 0x9fb4578 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fb4540 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9fb4530 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9fb4594 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x9fb4630 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0x9fb4938 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0x9fb4928 <col:9, col:58>
    (CXXOperatorCallExpr 0x9fb4900 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb48a8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (ParenExpr 0x9fb4878 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0x9fb4850 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x9fb4810 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CallExpr 0x9fb4738 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fb4700 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9fb46f0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0x9fb47f8 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0x9fb47d0 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0x9fb47c0 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fb47a8 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9ebdf80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0x9fb4788 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9fb4754 <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0x9fb4798 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9fb476c <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0x9fb4890 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0x9fb4af8 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0x9fb4ae8 <col:9, col:46>
    (CXXOperatorCallExpr 0x9fb4ac0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb4a68 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (ParenExpr 0x9fb4a38 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x9fb4a10 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9fb49d0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CallExpr 0x9fb4998 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fb4960 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x9fb4950 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x9fb49b4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x9fb4a50 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0x9fb4b50 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0x9fb4b40 <col:9, col:16>
    (MemberExpr 0x9fb4b20 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0x9ec3de0
      (CXXThisExpr 0x9fb4b10 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0x9fb4c60 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0x9fb4bb0 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0x9fb4b78 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9ec3de0
      (CXXThisExpr 0x9fb4b68 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb4b98 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9fb26d0 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0x9fb4c40 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fb4bd8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9fb4bc8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x9fb4c20 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9ec3e20
      (CXXThisExpr 0x9fb4c10 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0x9fb4cd8 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0x9fb4d58 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x9fb4da8 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0x9fb4df8 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0x9fb4e48 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0x9fb4e98 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0x9fb4f88 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0x9fb4f68 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fb4f18 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9fb4f08 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb4f4c <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9fb28c0 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0x9fb4fa0 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0x9fb4ff0 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0x9fb4fe0 <col:9, col:16>
    (MemberExpr 0x9fb4fc0 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0x9fb1bc0
      (CXXThisExpr 0x9fb4fb0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0x9fb5240 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0x9fb51a8 <line:300:9, col:55>
    0x9fb5140 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0x9fb5188 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9fb1bc0
        (CXXThisExpr 0x9fb5178 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x9fb5200 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0x9fb51c8 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9fb1bc0
      (CXXThisExpr 0x9fb51b8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb51e8 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0x9fb2e50 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0x9fb5230 <line:302:9, col:16>
    (DeclRefExpr 0x9fb5218 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0x9fb5140 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0x9fb52a0 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0x9fb5290 <col:9, col:16>
    (MemberExpr 0x9fb5270 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0x9fb1db0
      (CXXThisExpr 0x9fb5260 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0x9fb54a8 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0x9fb5448 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0x9fb52f8 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9fb52e8 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0x9fb52c8 <col:7> '_Bool' lvalue ->_M_fill_init 0x9fb1c50
          (CXXThisExpr 0x9fb52b8 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0x9fb5430 <line:364:4, line:367:4>
      (BinaryOperator 0x9fb53c0 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0x9fb5320 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0x9fb1c10
          (CXXThisExpr 0x9fb5310 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb53a0 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb5350 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x9fb5340 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0x9fb5388 <col:28> 'char'32)))
      (BinaryOperator 0x9fb5418 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0x9fb53e8 <col:6> '_Bool' lvalue ->_M_fill_init 0x9fb1c50
          (CXXThisExpr 0x9fb53d8 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9fb5408 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0x9fb5498 <line:368:2, col:9>
    (MemberExpr 0x9fb5478 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0x9fb1c10
      (CXXThisExpr 0x9fb5468 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0x9fb5608 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0x9fb5570 <line:383:2, col:32>
    0x9fb54d0 "char_type __old =
      (CallExpr 0x9fb5550 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb5518 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb5508 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0x9fb55c8 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0x9fb5590 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0x9fb1c10
      (CXXThisExpr 0x9fb5580 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb55b0 <col:12> 'char_type':'_CharT' lvalue ParmVar 0x9fb36e0 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0x9fb55f8 <line:385:2, col:9>
    (DeclRefExpr 0x9fb55e0 <col:9> 'char_type':'_CharT' lvalue Var 0x9fb54d0 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9fb5750 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0x9fb5740 <col:9, col:60>
    (CallExpr 0x9fb5718 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fb56b0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x9fb5690 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9fb5628 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb0be0)
          (MemberExpr 0x9fb5670 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9fb1e40
            (CXXThisExpr 0x9fb5660 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9fb56e4 <col:47> 'char_type':'_CharT' lvalue ParmVar 0x9fb38a0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x9fb56fc <col:52> 'char' lvalue ParmVar 0x9fb38e0 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0x9fb5870 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0x9fb5860 <col:9, col:49>
    (CallExpr 0x9fb5840 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fb57f0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x9fb57d0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x9fb5768 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb0be0)
          (MemberExpr 0x9fb57b0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9fb1e40
            (CXXThisExpr 0x9fb57a0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9fb5824 <col:46> 'char' lvalue ParmVar 0x9fb39d0 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0x9fb58e8 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0x9fb5940 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0x9fb5998 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x9fb59e8 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0x9fb5a38 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0x9fb5a88 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0x9fb5ad8 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0x9fb5b48 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0x9fb3e90 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x9fb3e74 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0x9fb6390 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0x9fb6148 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0x9fb5fe0 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fb5fa8 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0x9fb5f98 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0x9fb6048 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0x9fb6010 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9ec3e20
        (CXXThisExpr 0x9fb6000 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9fb6030 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9fb5eb0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0x9fb6130 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0x9fb6070 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9ec3e20
        (CXXThisExpr 0x9fb6060 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9fb6108 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9fb60f8 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fb60e0 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9ebdf80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9fb60c0 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9fb6090 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9fb5eb0 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0x9fb60d0 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9fb60a8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0x9fb6370 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fb6278 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb6238 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (CallExpr 0x9fb61b0 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb6178 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb6168 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x9fb6218 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb61e0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb61d0 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0x9fb6340 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0x9fb6330 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fb6314 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63b70 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fb6360 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fb6300 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fb62d4 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x9fb6d38 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0x9fb6c38 <line:55:7, col:61>
    0x9fb6bd0 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0x9fb6c18 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9fb1db0
        (CXXThisExpr 0x9fb6c08 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x9fb6c90 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9fb6c58 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9fb1db0
      (CXXThisExpr 0x9fb6c48 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb6c78 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9fb6850 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0x9fb6cf0 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fb6cb8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9fb6ca8 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9fb6d28 <line:58:7, col:14>
    (DeclRefExpr 0x9fb6d0c <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0x9fb6bd0 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0x9fb8760 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0x9fb8708 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fb7408 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb73b0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (CXXThisExpr 0x9fb7328 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0x9fb7390 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x9fb7350 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (DeclRefExpr 0x9fb7338 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0x9fb86a8 <line:68:2, line:107:2>
      (DeclStmt 0x9fb7810 <line:73:4, line:74:69>
        0x9fb7440 "std::ios_base::_Words *__words =
          (ConditionalOperator 0x9fb77f0 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0x9fb7550 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0x9fb7528 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9fb74e0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
                (CXXDependentScopeMemberExpr 0x9fb7490 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9fb7474 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0x9fb74c4 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0x9ec48f0 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0x9fb7578 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x9ec4a20
              (CXXThisExpr 0x9fb7568 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0x9fb77b0 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0x9fb75b0 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0x9fb7598 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0x9fb78b8 <line:77:4, col:45>
        0x9fb7830 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0x9fb7880 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb7864 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0x9fb7968 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0x9fb78f0 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x9fb78e0 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0x9fb78c8 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9fb7830 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0x9fb7948 <line:79:6, col:29> 'void'
          (MemberExpr 0x9fb7924 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0x9ec4310
            (ImplicitCastExpr 0x9fb7918 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0x9fb78fc <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9fb7830 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0x9fb79d0 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0x9fb7998 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9ec44e0
          (CXXThisExpr 0x9fb7988 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fb79b8 <col:22> 'enum std::ios_base::event' EnumConstant 0x9ec38a0 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0x9fb7b90 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fb7aa8 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9fb7a50 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
          (MemberExpr 0x9fb7a00 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9ec4ac0
            (CXXThisExpr 0x9fb79f0 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0x9fb7a30 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x9ec4a20
            (CXXThisExpr 0x9fb7a20 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0x9fb7b78 <line:82:6, line:85:6>
          (CXXDeleteExpr 0x9fb7b00 <line:83:8, col:18> 'void'
            (MemberExpr 0x9fb7ae0 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9ec4ac0
              (CXXThisExpr 0x9fb7ad0 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0x9fb7b60 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0x9fb7b28 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9ec4ac0
              (CXXThisExpr 0x9fb7b18 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9fb7b48 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0x9fb7be0 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0x9fb7bc0 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0x9ec45a0
          (CXXThisExpr 0x9fb7bb0 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0x9fb7c48 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0x9fb7c10 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0x9ec4400
          (CXXThisExpr 0x9fb7c00 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fb7c30 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0x9fb7830 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0x9fb7ed8 <line:90:4, line:91:38>
        (DeclStmt 0x9fb7cc0 <line:90:9, col:20>
          0x9fb7c70 "int __i =
            (IntegerLiteral 0x9fb7ca8 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fb7d80 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9fb7d38 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
          (DeclRefExpr 0x9fb7cd0 <col:22> 'int' lvalue Var 0x9fb7c70 '__i' 'int')
          (CXXDependentScopeMemberExpr 0x9fb7d00 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb7ce8 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0x9fb7dc0 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0x9fb7da4 <col:50> 'int' lvalue Var 0x9fb7c70 '__i' 'int'))
        (BinaryOperator 0x9fb7ec0 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0x9fb7e28 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0x9fb7e08 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0x9fb7dd4 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0x9fb7440 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0x9fb7e18 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0x9fb7dec <col:14> 'int' lvalue Var 0x9fb7c70 '__i' 'int')))
          (ArraySubscriptExpr 0x9fb7ea8 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9fb7e58 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0x9fb7e3c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0x9fb7e8c <col:35> 'int' lvalue Var 0x9fb7c70 '__i' 'int'))))
      (BinaryOperator 0x9fb7f48 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0x9fb7f10 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x9ec4ac0
          (CXXThisExpr 0x9fb7f00 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fb7f30 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0x9fb7440 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0x9fb7fe0 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0x9fb7f70 <col:4> 'int' lvalue ->_M_word_size 0x9ec4a60
          (CXXThisExpr 0x9fb7f60 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0x9fb7fa8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9fb7f90 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0x9fb80b0 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8008 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb7ff8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb8090 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb8058 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb803c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9fb8188 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb80e0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb80d0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb8168 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb8130 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb8114 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9fb8260 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb81b8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb81a8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb8240 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb8208 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb81ec <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9fb8338 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8290 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb8280 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb8318 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb82e0 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb82c4 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9fb8410 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8368 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb8358 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb83f0 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb83b8 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb839c <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0x9fb84d0 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0x9fb8440 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0x9ec4c50
          (CXXThisExpr 0x9fb8430 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb84b0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb8478 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb8460 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x9fb8548 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0x9fb84f8 <col:4> '<bound member function type>' ->_M_cache_locale 0x9fb3e10
          (CXXThisExpr 0x9fb84e8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0x9fb8528 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0x9ec4c50
          (CXXThisExpr 0x9fb8518 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x9fb85b0 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0x9fb8578 <col:4> '<bound member function type>' ->_M_call_callbacks 0x9ec44e0
          (CXXThisExpr 0x9fb8568 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fb8598 <col:22> 'enum std::ios_base::event' EnumConstant 0x9ec3920 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0x9fb8688 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb85e0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb85d0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x9fb8668 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb8630 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0x9fb8614 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x9fb70e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0x9fb8750 <line:108:7, col:15>
    (UnaryOperator 0x9fb8738 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fb8728 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0x9fbfd48 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0x9fb8bd0 <line:116:7, col:35>
    0x9fb8b10 "std::locale __old =
      (ParenListExpr 0x9fb8bb0 <col:19, col:34> 'class std::locale'
        (CallExpr 0x9fb8b90 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb8b58 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9fb8b48 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0x9fb8c60 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0x9fb8c18 <col:7, col:17> '<bound member function type>' ->imbue 0x9ec5a30
      (CXXThisExpr 0x9fb8c08 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb8c44 <col:23> 'const class std::locale' lvalue ParmVar 0x9fb8a20 '__loc' 'const class std::locale &'))
  (CallExpr 0x9fb8cc8 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0x9fb8c90 <col:7> '<bound member function type>' ->_M_cache_locale 0x9fb3e10
      (CXXThisExpr 0x9fb8c80 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fb8cb0 <col:23> 'const class std::locale' lvalue ParmVar 0x9fb8a20 '__loc' 'const class std::locale &'))
  (IfStmt 0x9fb8ec0 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fb8dc0 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9fb8d68 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (CallExpr 0x9fb8d30 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fb8cf8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9fb8ce8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x9fb8d50 <col:28> 'int' 0))
    (CallExpr 0x9fb8ea0 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fb8e50 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0x9fb8e30 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fb8df8 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0x9fb8de8 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x9fb8e84 <col:26> 'const class std::locale' lvalue ParmVar 0x9fb8a20 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0x9fbfd38 <line:121:7, col:14>
    (CXXConstructExpr 0x9fb8f08 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x9fb8ef8 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x9fb8edc <col:14> 'class std::locale' lvalue Var 0x9fb8b10 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x9fc05e0 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0x9fc02b0 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0x9fc0280 <col:7, col:17> '<bound member function type>' ->_M_init 0x9ec4ca0
      (CXXThisExpr 0x9fc0270 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0x9fc0330 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0x9fc02e0 <col:7> '<bound member function type>' ->_M_cache_locale 0x9fb3e10
      (CXXThisExpr 0x9fc02d0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x9fc0310 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0x9ec4c50
      (CXXThisExpr 0x9fc0300 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0x9fc03a0 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0x9fc0360 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0x9fb1c10
      (CXXThisExpr 0x9fc0350 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0x9fc0388 <col:17, col:24> '_CharT'))
  (BinaryOperator 0x9fc03f8 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9fc03c8 <col:7> '_Bool' lvalue ->_M_fill_init 0x9fb1c50
      (CXXThisExpr 0x9fc03b8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0x9fc03e8 <col:22> '_Bool' false))
  (BinaryOperator 0x9fc0458 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0x9fc0420 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9fb1bc0
      (CXXThisExpr 0x9fc0410 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9fc0440 <col:16> 'int' 0))
  (BinaryOperator 0x9fc04b8 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9fc0480 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x9ec3de0
      (CXXThisExpr 0x9fc0470 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fc04a0 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0x9fc0518 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0x9fc04e0 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9fb1db0
      (CXXThisExpr 0x9fc04d0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fc0500 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9fc0130 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0x9fc05c8 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0x9fc0540 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x9ec3e20
      (CXXThisExpr 0x9fc0530 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0x9fc05a8 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0x9fc0560 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x9fc0130 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x9fc0578 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0x9fc0590 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0x9fc11f0 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0x9fc0c40 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0x9fc0a68 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0x9fc0994 <col:11> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9fc0a38 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc09b8 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0x9eae520)
        (DeclRefExpr 0x9fc0a20 <col:52> 'const class std::locale' lvalue ParmVar 0x9fc08b0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9fc0a58 <col:60> '_Bool' true))
    (BinaryOperator 0x9fc0bc8 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0x9fc0aa0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9fb1e40
        (CXXThisExpr 0x9fc0a90 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9fc0ba8 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc0b68 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (CallExpr 0x9fc0b48 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc0ac8 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9fc0b30 <col:38> 'const class std::locale' lvalue ParmVar 0x9fc08b0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9fc0c28 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0x9fc0bf0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9fb1e40
        (CXXThisExpr 0x9fc0be0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9fc0c10 <col:13> 'int' 0)))
  (IfStmt 0x9fc0f08 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0x9fc0d30 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0x9fc0c5c <col:11> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9fc0d00 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc0c80 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x9eae520)
        (DeclRefExpr 0x9fc0ce8 <col:54> 'const class std::locale' lvalue ParmVar 0x9fc08b0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9fc0d20 <col:62> '_Bool' true))
    (BinaryOperator 0x9fc0e90 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0x9fc0d68 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9fb1ed0
        (CXXThisExpr 0x9fc0d58 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9fc0e70 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc0e30 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (CallExpr 0x9fc0e10 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc0d90 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9fc0df8 <col:42> 'const class std::locale' lvalue ParmVar 0x9fc08b0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9fc0ef0 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0x9fc0eb8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9fb1ed0
        (CXXThisExpr 0x9fc0ea8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9fc0ed8 <col:15> 'int' 0)))
  (IfStmt 0x9fc11d0 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0x9fc0ff8 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0x9fc0f24 <col:11> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x9fc0fc8 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc0f48 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x9eae520)
        (DeclRefExpr 0x9fc0fb0 <col:54> 'const class std::locale' lvalue ParmVar 0x9fc08b0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x9fc0fe8 <col:62> '_Bool' true))
    (BinaryOperator 0x9fc1158 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0x9fc1030 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9fb1f60
        (CXXThisExpr 0x9fc1020 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x9fc1138 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc10f8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (CallExpr 0x9fc10d8 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc1058 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
          (DeclRefExpr 0x9fc10c0 <col:42> 'const class std::locale' lvalue ParmVar 0x9fc08b0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x9fc11b8 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0x9fc1180 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9fb1f60
        (CXXThisExpr 0x9fc1170 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x9fc11a0 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0x9fcc698 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0x9fcc678 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fcc628 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9fcc618 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9fcc65c <col:20> '__streambuf_type *' lvalue ParmVar 0x9fca290 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9fcc6b0 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0x9fcc730 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0x9fcc720 <line:114:2, col:19>
    (CallExpr 0x9fcc700 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0x9fcc6c0 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0x9fca650 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0x9fcc6e8 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9fcc6d8 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x9fcc7e0 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0x9fcc788 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9fcc744 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x9fca8c0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9fcc770 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fcc760 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9fcc7d0 <line:124:2, col:10>
    (UnaryOperator 0x9fcc7b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fcc7a8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9fcc890 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0x9fcc838 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9fcc7f8 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x9fcaaa0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x9fcc820 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fcc810 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9fcc880 <line:134:2, col:10>
    (UnaryOperator 0x9fcc868 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fcc858 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0x9fcc940 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0x9fcc930 <col:9, col:29>
    (CallExpr 0x9fcc910 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcc8b8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fcc8f4 <col:26> 'long' lvalue ParmVar 0x9fcabc0 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0x9fcc9f0 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0x9fcc9e0 <col:9, col:29>
    (CallExpr 0x9fcc9c0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcc968 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fcc9a4 <col:26> 'unsigned long' lvalue ParmVar 0x9fcace0 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0x9fccaa0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0x9fcca90 <col:9, col:29>
    (CallExpr 0x9fcca70 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcca18 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fcca54 <col:26> '_Bool' lvalue ParmVar 0x9fcadf0 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0x9fccb98 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0x9fccb88 <line:185:2, col:50>
    (CallExpr 0x9fccb68 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x9fccac8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9fccb50 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9fccb40 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9fccb30 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x9fccb04 <col:46> 'unsigned short' lvalue ParmVar 0x9fcb030 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0x9fccc90 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0x9fccc80 <line:196:2, col:50>
    (CallExpr 0x9fccc60 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x9fccbc0 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9fccc48 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x9fccc38 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x9fccc28 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9fccbfc <col:46> 'unsigned int' lvalue ParmVar 0x9fcb270 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0x9fccd40 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0x9fccd30 <col:9, col:29>
    (CallExpr 0x9fccd10 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcccb8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fcccf4 <col:26> 'long long' lvalue ParmVar 0x9fcb390 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0x9fccdf0 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0x9fccde0 <col:9, col:29>
    (CallExpr 0x9fccdc0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fccd68 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fccda4 <col:26> 'unsigned long long' lvalue ParmVar 0x9fcb4b0 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0x9fccea0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0x9fcce90 <col:9, col:29>
    (CallExpr 0x9fcce70 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcce18 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fcce54 <col:26> 'double' lvalue ParmVar 0x9fcb5d0 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0x9fccf98 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0x9fccf88 <line:218:2, col:43>
    (CallExpr 0x9fccf68 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0x9fccec8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x9fccf50 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0x9fccf40 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0x9fccf30 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0x9fccf04 <col:39> 'float' lvalue ParmVar 0x9fcb6f0 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0x9fcd048 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0x9fcd038 <col:9, col:29>
    (CallExpr 0x9fcd018 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fccfc0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fccffc <col:26> 'long double' lvalue ParmVar 0x9fcb810 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0x9fcd0f8 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0x9fcd0e8 <col:9, col:29>
    (CallExpr 0x9fcd0c8 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcd070 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fcd0ac <col:26> 'const void *' lvalue ParmVar 0x9fcb930 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0x9fcd390 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0x9fcd250 <line:290:2, col:57>
    0x9fcd120 "const streamsize __put =
      (CallExpr 0x9fcd228 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcd1c0 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0x9fcd1a0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fcd168 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0x9fcd158 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x9fcd1f4 <col:48> 'const char_type *' lvalue ParmVar 0x9fcbcc0 '__s' 'const char_type *')
        (DeclRefExpr 0x9fcd20c <col:53> 'streamsize':'int' lvalue ParmVar 0x9fcbd00 '__n' 'streamsize':'int'))")
  (IfStmt 0x9fcd370 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0x9fcd2b0 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0x9fcd290 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9fcd260 <col:6> 'const streamsize':'const int' lvalue Var 0x9fcd120 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x9fcd2a0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9fcd278 <col:15> 'streamsize':'int' lvalue ParmVar 0x9fcbd00 '__n' 'streamsize':'int')))
    (CallExpr 0x9fcd350 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcd2d8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcd2c8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9fcd32c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0x9fcd428 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0x9fcd408 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fcd3b8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9fcd3a8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9fcd3f0 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0x9fce240 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0x9fce220 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0x9fcded0 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0x9fcddd8 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0x9fcddb0 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9fcdd70 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CallExpr 0x9fcdd10 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fcdcd8 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0x9fcdcb8 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9fcd890
                (CXXThisExpr 0x9fcdca8 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0x9fcdd4c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ed0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0x9fcdeb8 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0x9fcde98 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0x9fcde88 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9fcde2c <col:50> '_Bool (void) throw()' lvalue Function 0x9d1bc30 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0x9fce208 <line:410:4, line:414:4>
      (IfStmt 0x9fce1e8 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0x9fce108 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0x9fcdf50 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fcdf18 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0x9fcdef8 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9fcd890
                (CXXThisExpr 0x9fcdee8 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0x9fce0e0 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9fce080 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (CallExpr 0x9fce030 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fcdff8 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0x9fcdfd8 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fcdfa0 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0x9fcdf80 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9fcd890
                      (CXXThisExpr 0x9fcdf70 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0x9fce068 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0x9fce050 <col:56> 'int' 1))))
        (CallExpr 0x9fce1c8 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fce150 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0x9fce130 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x9fcd890
              (CXXThisExpr 0x9fce120 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0x9fce1a4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0x9fce2b8 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0x9fce2a8 <col:9, col:16>
    (MemberExpr 0x9fce288 <col:16> 'const _Bool' lvalue ->_M_ok 0x9fcd730
      (CXXThisExpr 0x9fce278 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0x9fce868 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0x9fce858 <col:7, col:45>
    (CallExpr 0x9fce830 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9fce750 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9d567c0)
      (DeclRefExpr 0x9fce784 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fce590 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0x9fce7f8 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9fce7b8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (DeclRefExpr 0x9fce79c <col:39> '_CharT' lvalue ParmVar 0x9fce5d0 '__c' '_CharT'))
      (IntegerLiteral 0x9fce818 <col:44> 'int' 1))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0x9fcee30 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0x9fcee20 <col:7, col:40>
    (ParenExpr 0x9fcee08 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0x9fcede0 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9fceda0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fcecd0 0x9fce720 0x9e196b0)
        (DeclRefExpr 0x9fced00 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fceb40 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0x9fced80 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fced30 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0x9fced18 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fceb40 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0x9fced64 <col:36> 'char' lvalue ParmVar 0x9fceb80 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0x9fcf3c0 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0x9fcf3b0 <col:7, col:45>
    (CallExpr 0x9fcf388 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcf2f0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9d567c0)
      (DeclRefExpr 0x9fcf324 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fcf130 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0x9fcf358 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0x9fcf33c <col:39> 'char' lvalue ParmVar 0x9fcf170 '__c' 'char'))
      (IntegerLiteral 0x9fcf370 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0x9fcf928 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0x9fcf918 <col:7, col:46>
    (ParenExpr 0x9fcf900 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9fcf8d8 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcf890 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fcf7f0 0x9fcf2c0 0x9fcecd0 0x9fce720 0x9e196b0)
        (DeclRefExpr 0x9fcf820 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fcf650 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x9fcf878 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9fcf868 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9fcf858 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0x9fcf838 <col:42> 'signed char' lvalue ParmVar 0x9fcf6a0 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0x9fcfe88 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0x9fcfe78 <col:7, col:46>
    (ParenExpr 0x9fcfe60 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x9fcfe38 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcfdf0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fcfd50 0x9fcf7f0 0x9fcf2c0 0x9fcecd0 0x9fce720 0x9e196b0)
        (DeclRefExpr 0x9fcfd80 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fcfbb0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x9fcfdd8 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x9fcfdc8 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x9fcfdb8 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0x9fcfd98 <col:42> 'unsigned char' lvalue ParmVar 0x9fcfc00 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0x9fd05b0 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0x9fd0568 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0x9fd0368 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9fd0350 <col:12> 'const _CharT *' lvalue ParmVar 0x9fd01d0 '__s' 'const _CharT *'))
    (CallExpr 0x9fd0410 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd0398 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9fd037c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd0160 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9fd03ec <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x9fd0540 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd0430 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9d567c0)
      (DeclRefExpr 0x9fd0464 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd0160 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0x9fd047c <col:26> 'const _CharT *' lvalue ParmVar 0x9fd01d0 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0x9fd0528 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9fd0500 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9fd04c0 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9fd04e4 <col:45> 'const _CharT *' lvalue ParmVar 0x9fd01d0 '__s' 'const _CharT *')))))
  (ReturnStmt 0x9fd05a0 <line:499:7, col:14>
    (DeclRefExpr 0x9fd0584 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd0160 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0x9fd1120 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0x9fd10d8 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0x9fd0ed8 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9fd0ec8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9fd0eb8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9fd0ea0 <col:12> 'const char *' lvalue ParmVar 0x9fd0d20 '__s' 'const char *'))))
    (CallExpr 0x9fd0f80 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd0f08 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9fd0eec <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fd0cd0 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0x9fd0f5c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x9fd10b0 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd0fa0 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9d567c0)
      (DeclRefExpr 0x9fd0fd4 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fd0cd0 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0x9fd0fec <col:26> 'const char *' lvalue ParmVar 0x9fd0d20 '__s' 'const char *')
      (CXXStaticCastExpr 0x9fd1098 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x9fd1070 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9fd1030 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x9fd1054 <col:45> 'const char *' lvalue ParmVar 0x9fd0d20 '__s' 'const char *')))))
  (ReturnStmt 0x9fd1110 <line:516:7, col:14>
    (DeclRefExpr 0x9fd10f4 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fd0cd0 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0x9fd16b0 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0x9fd16a0 <col:7, col:58>
    (ParenExpr 0x9fd1688 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9fd1660 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd1608 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd1570 0x9fd0e70 0x9fd0a30 0x9fd0320 0x9fcfd50 0x9fcf7f0 0x9fcf2c0 0x9fcecd0 0x9fce720 0x9e196b0)
        (DeclRefExpr 0x9fd15a0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fd13b0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9fd15f0 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9fd15e0 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0x9fd15b8 <col:54> 'const signed char *' lvalue ParmVar 0x9fd1420 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0x9fd1c48 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0x9fd1c38 <col:7, col:58>
    (ParenExpr 0x9fd1c20 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x9fd1bf8 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd1b98 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd1b00 0x9fd1570 0x9fd0e70 0x9fd0a30 0x9fd0320 0x9fcfd50 0x9fcf7f0 0x9fcf2c0 0x9fcecd0 0x9fce720 0x9e196b0)
        (DeclRefExpr 0x9fd1b30 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x9fd1940 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x9fd1b80 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x9fd1b70 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x9fd1b48 <col:54> 'const unsigned char *' lvalue ParmVar 0x9fd19b0 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9fd3a38 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0x9fd3a28 <col:7, col:46>
    (CallExpr 0x9fd3a08 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd38e0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0x9fd39e8 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd3928 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd3910 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd3760 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0x9fd39c8 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fd3978 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x9fd395c <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd3760 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0x9fd39b0 <col:40> 'char'10))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9fd3f10 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0x9fd3f00 <col:7, col:31>
    (CallExpr 0x9fd3ee0 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd3e88 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9fd3e6c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd3d10 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0x9fd3ec8 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x9fd43d0 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0x9fd43c0 <col:7, col:25>
    (CallExpr 0x9fd43a0 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd4368 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9fd434c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd41f0 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0x9fd4b08 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0x9fd4b58 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd49e0 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0x9fd4f28 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0x9fd4d70 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0x9fd4c90 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0x9fd4c00 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd4bc8 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd4bb0 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd49e0 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0x9fd4c70 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd4c38 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd4c1c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd49e0 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0x9fd4d50 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd4d18 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0x9fd4cf8 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fd4cc0 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0x9fd4ca8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd49e0 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0x9fd4f08 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0x9fd4de0 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd4da8 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x9fd4d8c <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd49e0 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0x9fd4e40 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0x9fd4e10 <col:2> '_Bool' lvalue ->_M_ok 0x9fcd730
        (CXXThisExpr 0x9fd4e00 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0x9fd4e30 <col:10> '_Bool' true))
    (CallExpr 0x9fd4ee8 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd4e70 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x9fd4e58 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fd49e0 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9fd4ec4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0x9fd5eb8 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0x9fd5660 <line:67:2, col:22>
    0x9fd55e0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9fd5640 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9fd5628 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9fd5618 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9fd5e60 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0x9fd5670 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0x9fd55e0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9fd5e38 <line:69:4, line:86:4>
      (DeclStmt 0x9fd5748 <line:70:6, col:49>
        0x9fd56c0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9fd5738 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9fd5714 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9fd5b50 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd5758 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9fd5b38 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0x9fd58a8 <line:73:3, col:63>
            0x9fd57d0 "const __num_put_type &__np =
              (CallExpr 0x9fd5888 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x9fd5808 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb0be0)
                (CXXDependentScopeMemberExpr 0x9fd5850 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fd5840 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9fd5b18 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0x9fd5a40 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fd5a08 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0x9fd59d8 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fd58d0 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0x9fd58b8 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9fd57d0 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0x9fd5918 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x9fd5908 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0x9fd5940 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x9fd5930 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0x9fd59a0 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9fd5968 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x9fd5958 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0x9fd59bc <col:44> '_ValueT' lvalue ParmVar 0x9fd5320 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0x9fd5af0 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9fd5ae0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fd5ac8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9fd5a5c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd56c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9fd5ab8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9fd5a94 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9fd5c50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd5b70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd5c38 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0x9fd5c08 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd5b90 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd5b80 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd5be4 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9fd5c28 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0x9fd5d40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd5c70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd5d28 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0x9fd5d08 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd5c90 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd5c80 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd5ce4 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9fd5e18 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x9fd5d88 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9fd5d78 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9fd5d5c <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd56c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9fd5df8 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fd5da8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9fd5d98 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9fd5ddc <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd56c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9fd5ea8 <line:87:2, col:10>
    (UnaryOperator 0x9fd5e90 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fd5e80 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0x9fd69c8 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0x9fd6628 <line:97:7, col:75>
    0x9fd64e0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9fd6600 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd65c0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (CallExpr 0x9fd6560 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fd6528 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9fd6518 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9fd659c <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x9fd69a8 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0x9fd6798 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9fd66d0 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9fd66b0 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd6690 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd6638 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9fd64e0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9fd66c0 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd66a0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd666c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9fd6780 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9fd6760 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd6740 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd66e8 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9fd64e0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9fd6770 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd6750 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd671c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9fd68b8 <line:99:2, col:70>
      (CallExpr 0x9fd6898 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0x9fd67c0 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9fd6880 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9fd6870 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9fd6848 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0x9fd6838 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0x9fd6828 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0x9fd67fc <col:65> 'short' lvalue ParmVar 0x9fd6260 '__n' 'short'))))))))
    (ReturnStmt 0x9fd6998 <line:101:2, col:41>
      (CallExpr 0x9fd6978 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9fd68d8 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9fd6960 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9fd6950 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9fd6940 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0x9fd6914 <col:37> 'short' lvalue ParmVar 0x9fd6260 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0x9fd74c8 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0x9fd7128 <line:111:7, col:75>
    0x9fd6fe0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9fd7100 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd70c0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (CallExpr 0x9fd7060 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fd7028 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9fd7018 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9fd709c <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x9fd74a8 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0x9fd7298 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9fd71d0 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9fd71b0 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd7190 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd7138 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9fd6fe0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9fd71c0 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd71a0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd716c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9fd7280 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9fd7260 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd7240 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd71e8 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9fd6fe0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9fd7270 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9fd7250 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9fd721c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9fd73b8 <line:113:2, col:68>
      (CallExpr 0x9fd7398 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0x9fd72c0 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9fd7380 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9fd7370 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9fd7348 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0x9fd7338 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0x9fd7328 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9fd72fc <col:63> 'int' lvalue ParmVar 0x9fd6d60 '__n' 'int'))))))))
    (ReturnStmt 0x9fd7498 <line:115:2, col:41>
      (CallExpr 0x9fd7478 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9fd73d8 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9fd7460 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9fd7450 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9fd7440 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0x9fd7414 <col:37> 'int' lvalue ParmVar 0x9fd6d60 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0x9fd82b8 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0x9fd7b68 <line:123:7, col:50>
    0x9fd7ae0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9fd7b58 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fd7b34 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9fd7c00 <line:124:7, col:27>
    0x9fd7b80 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9fd7be0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9fd7bc8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9fd7bb8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9fd8188 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0x9fd7c40 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9fd7c10 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0x9fd7b80 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0x9fd7c28 <col:21> '__streambuf_type *' lvalue ParmVar 0x9fd7860 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0x9fd8060 <line:126:2, line:139:2>
      (IfStmt 0x9fd7e50 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd7c58 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9fd7e38 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0x9fd7e18 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0x9fd7d48 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0x9fd7d20 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9fd7c68 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9ef3af0)
                (DeclRefExpr 0x9fd7c9c <col:31> '__streambuf_type *' lvalue ParmVar 0x9fd7860 '__sbin' '__streambuf_type *')
                (CallExpr 0x9fd7d00 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fd7cc8 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0x9fd7cb8 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0x9fd7df0 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9fd7de0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fd7dc8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9fd7d5c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd7ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9fd7db8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9fd7d94 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9fd7f50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd7e70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd7f38 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0x9fd7f08 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd7e90 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd7e80 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd7ee4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9fd7f28 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0x9fd8040 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd7f70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd8028 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0x9fd8008 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd7f90 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd7f80 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd7fe4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9fd8168 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0x9fd8098 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x9fd807c <col:17> '__streambuf_type *' lvalue ParmVar 0x9fd7860 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9fd8140 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9fd8130 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fd8118 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9fd80ac <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd7ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9fd8108 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9fd80e4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9fd8260 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fd81d0 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9fd81c0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fd81a4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd7ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9fd8240 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fd81f0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fd81e0 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9fd8224 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd7ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9fd82a8 <line:144:7, col:15>
    (UnaryOperator 0x9fd8290 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fd8280 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0x9fd9110 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0x9fd8930 <line:158:7, col:27>
    0x9fd88b0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9fd8910 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9fd88f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9fd88e8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9fd90b8 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0x9fd8940 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0x9fd88b0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9fd9090 <line:160:2, line:177:2>
      (DeclStmt 0x9fd8a18 <line:161:4, col:47>
        0x9fd8990 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9fd8a08 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9fd89e4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9fd8da8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd8a28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9fd8d90 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0x9fd8b70 <line:164:8, col:56>
            0x9fd8a60 "const int_type __put =
              (CallExpr 0x9fd8b50 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fd8b00 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0x9fd8ae0 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9fd8aa8 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0x9fd8a98 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9fd8b34 <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9fd8660 '__c' 'char_type':'_CharT'))")
          (IfStmt 0x9fd8d70 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0x9fd8c90 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fd8bc8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9fd8bfc <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9fd8a60 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0x9fd8c70 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fd8c38 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9fd8d48 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9fd8d38 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fd8d20 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9fd8cb4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd8990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9fd8d10 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9fd8cec <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9fd8ea8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd8dc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd8e90 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0x9fd8e60 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd8de8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd8dd8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd8e3c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9fd8e80 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0x9fd8f98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd8ec8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd8f80 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0x9fd8f60 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd8ee8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd8ed8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd8f3c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9fd9070 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9fd8fe0 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9fd8fd0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9fd8fb4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd8990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9fd9050 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fd9000 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9fd8ff0 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9fd9034 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fd8990 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9fd9100 <line:178:7, col:15>
    (UnaryOperator 0x9fd90e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fd90d8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0x9fd9b40 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0x9fd97e0 <line:193:7, col:27>
    0x9fd9760 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9fd97c0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9fd97a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9fd9798 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9fd9ae8 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0x9fd97f0 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0x9fd9760 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9fd9ac8 <line:195:2, line:205:2>
      (IfStmt 0x9fd98b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd9808 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9fd98a0 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0x9fd9878 <col:8, col:25> '<dependent type>'
            (MemberExpr 0x9fd9828 <col:8> '<bound member function type>' ->_M_write 0x9fcbda0
              (CXXThisExpr 0x9fd9818 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd9848 <col:17> 'const _CharT *' lvalue ParmVar 0x9fd94d0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9fd9860 <col:22> 'streamsize':'int' lvalue ParmVar 0x9fd9510 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0x9fd99b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd98d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd99a0 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0x9fd9970 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd98f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd98e8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd994c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9fd9990 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0x9fd9aa8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fd99d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fd9a90 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0x9fd9a70 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd99f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fd99e8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9fd9a4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9fd9b30 <line:206:7, col:15>
    (UnaryOperator 0x9fd9b18 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fd9b08 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0x9fda7a0 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0x9fda178 <line:217:7, col:50>
    0x9fda0f0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9fda168 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fda144 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9fda480 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fda188 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fda468 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0x9fda448 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0x9fda378 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0x9fda1e0 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fda1a8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9fda198 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0x9fda350 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0x9fda2f0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
            (CallExpr 0x9fda2a0 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fda268 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0x9fda248 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fda210 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0x9fda200 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0x9fda2d8 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0x9fda2c0 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0x9fda420 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0x9fda410 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9fda3f8 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0x9fda390 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fda0f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0x9fda3e8 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9fda3c4 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9fda580 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fda4a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fda568 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0x9fda538 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fda4c0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fda4b0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fda514 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9fda558 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0x9fda670 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fda5a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fda658 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0x9fda638 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fda5c0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fda5b0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fda614 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9fda748 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fda6b8 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9fda6a8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fda68c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fda0f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9fda728 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fda6d8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fda6c8 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9fda70c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fda0f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9fda790 <line:232:7, col:15>
    (UnaryOperator 0x9fda778 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fda768 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0x9fdb2d0 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0x9fdae30 <line:240:7, col:36>
    0x9fdada0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9fdae10 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x9fdadf8 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x9fdade0 <col:34> 'int' 1)))")
  (IfStmt 0x9fdb098 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fdae40 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fdb080 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0x9fdb060 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0x9fdaeb8 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9fdae98 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fdae60 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9fdae50 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0x9fdb048 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0x9fdaecc <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9fdada0 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0x9fdb020 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fdaf50 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0x9fdaf30 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fdaef8 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fdaee8 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0x9fdaf88 <col:40> 'int' 0)
            (DeclRefExpr 0x9fdafbc <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9ec35c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0x9fdaffc <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9fdb198 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fdb0b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fdb180 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0x9fdb150 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdb0d8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdb0c8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fdb12c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9fdb170 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0x9fdb288 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fdb1b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fdb270 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0x9fdb250 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdb1d8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdb1c8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fdb22c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9fdb2c0 <line:253:7, col:14>
    (DeclRefExpr 0x9fdb2a4 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9fdada0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0x9fe0210 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0x9fdfa98 <line:261:7, col:50>
    0x9fdfa10 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9fdfa88 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fdfa64 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9fdfef0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fdfaa8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fdfed8 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0x9fdfeb8 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0x9fdfb20 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9fdfb00 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fdfac8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9fdfab8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9fdfea0 <line:265:6, line:274:6>
          (DeclStmt 0x9fdfc98 <line:268:8, line:269:27>
            0x9fdfb40 "const pos_type __p =
              (CallExpr 0x9fdfc70 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fdfbe0 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9fdfbc0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9fdfb88 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9fdfb78 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9fdfc14 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x9fdf790 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0x9fdfc4c <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9fdfe80 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9fdfda0 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9fdfd40 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9fdfca8 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9fdfb40 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9fdfd20 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9fdfd00 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9fdfce8 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9fdfcd0 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9fdfe58 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9fdfe48 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fdfe30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9fdfdc4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fdfa10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9fdfe20 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9fdfdfc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9fdfff0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fdff10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fdffd8 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0x9fdffa8 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdff30 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fdff20 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fdff84 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9fdffc8 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0x9fe00e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe0010 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fe00c8 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0x9fe00a8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe0030 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe0020 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fe0084 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9fe01b8 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fe0128 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9fe0118 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fe00fc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fdfa10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9fe0198 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe0148 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe0138 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9fe017c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fdfa10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9fe0200 <line:285:7, col:15>
    (UnaryOperator 0x9fe01e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fe01d8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9fe10c8 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0x9fe0938 <line:293:7, col:50>
    0x9fe08b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9fe0928 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fe0904 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9fe0da8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe0948 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fe0d90 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0x9fe0d70 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0x9fe09c0 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9fe09a0 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe0968 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9fe0958 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9fe0d58 <line:297:6, line:306:6>
          (DeclStmt 0x9fe0b50 <line:300:8, line:301:27>
            0x9fe09e0 "const pos_type __p =
              (CallExpr 0x9fe0b28 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fe0a80 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9fe0a60 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9fe0a28 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9fe0a18 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9fe0ab4 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x9fe05c0 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0x9fe0acc <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9fe0630 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0x9fe0b04 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9fe0d38 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9fe0c58 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9fe0bf8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
              (DeclRefExpr 0x9fe0b60 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9fe09e0 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9fe0bd8 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9fe0bb8 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9fe0ba0 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9fe0b88 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9fe0d10 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9fe0d00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9fe0ce8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9fe0c7c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fe08b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9fe0cd8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9fe0cb4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9fe0ea8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe0dc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fe0e90 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0x9fe0e60 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe0de8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe0dd8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fe0e3c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9fe0e80 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0x9fe0f98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe0ec8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fe0f80 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0x9fe0f60 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe0ee8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9fe0ed8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9fe0f3c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9fe1070 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9fe0fe0 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9fe0fd0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9fe0fb4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fe08b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9fe1050 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe1000 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9fe0ff0 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9fe1034 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9fe08b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9fe10b8 <line:317:7, col:15>
    (UnaryOperator 0x9fe10a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fe1090 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0x9fe24c8 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0x9fe2480 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0x9fe15b8 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9fe15a8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9fe1598 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9fe157c <col:12> 'const char *' lvalue ParmVar 0x9fe1400 '__s' 'const char *'))))
    (CallExpr 0x9fe1660 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe15e8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe15cc <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fe13b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9fe163c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0x9fe2460 <line:327:2, line:353:2>
      (DeclStmt 0x9fe17d8 <line:330:4, col:56>
        0x9fe1690 "const size_t __clen =
          (CallExpr 0x9fe17a8 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0x9fe1798 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fe1740 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0x9d0d370 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0x9fe17c8 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9fe1760 <col:52> 'const char *' lvalue ParmVar 0x9fe1400 '__s' 'const char *')))")
      (IfStmt 0x9fe2240 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fe17e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9fe2220 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0x9fe1e28 <line:333:8, line:339:35>
            0x9fe1800 "struct __ptr_guard;"
            0x9fe1d30 "struct __ptr_guard __pg =
              (ParenListExpr 0x9fe1e00 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0x9fe1dc0 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0x9fe1d64 <col:27> 'const size_t':'const unsigned int' lvalue Var 0x9fe1690 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0x9fe1ef8 <line:341:8, col:35>
            0x9fe1e50 "_CharT *__ws =
              (CallExpr 0x9fe1ed8 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fe1ea0 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0x9fe1e84 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0x9fe1d30 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0x9fe2150 <line:342:8, line:343:35>
            (DeclStmt 0x9fe1f70 <line:342:13, col:28>
              0x9fe1f10 "size_t __i =
                (ImplicitCastExpr 0x9fe1f60 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9fe1f48 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0x9fe1fd0 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0x9fe1fb0 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9fe1f80 <col:30> 'size_t':'unsigned int' lvalue Var 0x9fe1f10 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9fe1fc0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9fe1f98 <col:36> 'const size_t':'const unsigned int' lvalue Var 0x9fe1690 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0x9fe2000 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0x9fe1fe8 <col:46> 'size_t':'unsigned int' lvalue Var 0x9fe1f10 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0x9fe2138 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0x9fe2048 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x9fe2014 <col:3> '_CharT *' lvalue Var 0x9fe1e50 '__ws' '_CharT *')
                (DeclRefExpr 0x9fe202c <col:8> 'size_t':'unsigned int' lvalue Var 0x9fe1f10 '__i' 'size_t':'unsigned int'))
              (CallExpr 0x9fe2118 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fe2078 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9fe205c <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fe13b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0x9fe2100 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0x9fe20e0 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0x9fe20ac <col:27> 'const char *' lvalue ParmVar 0x9fe1400 '__s' 'const char *'))
                  (ImplicitCastExpr 0x9fe20f0 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9fe20c4 <col:31> 'size_t':'unsigned int' lvalue Var 0x9fe1f10 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0x9fe21f8 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9fe2178 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0x9d567c0)
            (DeclRefExpr 0x9fe21ac <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fe13b0 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0x9fe21c4 <col:32> '_CharT *' lvalue Var 0x9fe1e50 '__ws' '_CharT *')
            (DeclRefExpr 0x9fe21dc <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9fe1690 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0x9fe2348 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fe2260 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fe2330 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0x9fe2300 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe2288 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9fe2270 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fe13b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9fe22dc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9fe2320 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0x9fe2440 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9fe2368 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9fe2428 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0x9fe2408 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe2390 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9fe2378 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fe13b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9fe23e4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0x9fe24b8 <line:354:7, col:14>
    (DeclRefExpr 0x9fe249c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fe13b0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0x9ffc3a0 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9ffc388 <col:30> 'int' 0))
) (CompoundStmt 0x9ffc498 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0x9ffc478 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffc428 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ffc418 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x9ffc45c <col:20> '__streambuf_type *' lvalue ParmVar 0x9ff6590 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0x9ffc530 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0x9ffc518 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0x9ffc4c0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0x9ffc4b0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0x9ffc500 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0x9ffc4e8 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0x9ffc5b8 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0x9ffc5a8 <col:9, col:26>
    (CallExpr 0x9ffc588 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0x9ffc544 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0x9ff6950 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0x9ffc570 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9ffc560 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x9ffc668 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0x9ffc610 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9ffc5cc <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x9ff6b60 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x9ffc5f8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ffc5e8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9ffc658 <line:128:2, col:10>
    (UnaryOperator 0x9ffc640 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ffc630 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x9ffc718 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0x9ffc6c0 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0x9ffc680 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x9ff6ce0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x9ffc6a8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ffc698 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x9ffc708 <line:135:2, col:10>
    (UnaryOperator 0x9ffc6f0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ffc6e0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0x9ffc7c8 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0x9ffc7b8 <col:9, col:30>
    (CallExpr 0x9ffc798 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffc740 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffc77c <col:27> '_Bool' lvalue ParmVar 0x9ff6e00 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0x9ffc878 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0x9ffc868 <col:9, col:30>
    (CallExpr 0x9ffc848 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffc7f0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffc82c <col:27> 'unsigned short' lvalue ParmVar 0x9ff7040 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0x9ffc928 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0x9ffc918 <col:9, col:30>
    (CallExpr 0x9ffc8f8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffc8a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffc8dc <col:27> 'unsigned int' lvalue ParmVar 0x9ff7280 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0x9ffc9d8 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0x9ffc9c8 <col:9, col:30>
    (CallExpr 0x9ffc9a8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffc950 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffc98c <col:27> 'long' lvalue ParmVar 0x9ff73a0 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0x9ffca88 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0x9ffca78 <col:9, col:30>
    (CallExpr 0x9ffca58 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffca00 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffca3c <col:27> 'unsigned long' lvalue ParmVar 0x9ff74c0 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0x9ffcb38 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0x9ffcb28 <col:9, col:30>
    (CallExpr 0x9ffcb08 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffcab0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffcaec <col:27> 'long long' lvalue ParmVar 0x9ff75e0 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0x9ffcbe8 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0x9ffcbd8 <col:9, col:30>
    (CallExpr 0x9ffcbb8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffcb60 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffcb9c <col:27> 'unsigned long long' lvalue ParmVar 0x9ff7700 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0x9ffcc98 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0x9ffcc88 <col:9, col:30>
    (CallExpr 0x9ffcc68 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffcc10 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffcc4c <col:27> 'float' lvalue ParmVar 0x9ff7820 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0x9ffcd48 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0x9ffcd38 <col:9, col:30>
    (CallExpr 0x9ffcd18 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffccc0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffccfc <col:27> 'double' lvalue ParmVar 0x9ff7940 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0x9ffcdf8 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0x9ffcde8 <col:9, col:30>
    (CallExpr 0x9ffcdc8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffcd70 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffcdac <col:27> 'long double' lvalue ParmVar 0x9ff7a60 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0x9ffcea8 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0x9ffce98 <col:9, col:30>
    (CallExpr 0x9ffce78 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x9ffce20 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9ffce5c <col:27> 'void *' lvalue ParmVar 0x9ff7b80 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0x9ffcf18 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0x9ffcf08 <col:9, col:16>
    (MemberExpr 0x9ffcee8 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0x9ffced8 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0x9ffd060 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0x9ffd050 <col:9, col:53>
    (CallExpr 0x9ffd028 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffcf40 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ffcf30 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ffcf74 <col:26> 'char_type *' lvalue ParmVar 0x9ff8200 '__s' 'char_type *')
      (DeclRefExpr 0x9ffcf8c <col:31> 'streamsize':'int' lvalue ParmVar 0x9ff8240 '__n' 'streamsize':'int')
      (CallExpr 0x9ffd008 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffcfb8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9ffcfa8 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9ffcff0 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0x9ffd190 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0x9ffd180 <col:9, col:49>
    (CallExpr 0x9ffd158 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffd088 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ffd078 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ffd0bc <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9ff8500 '__sb' '__streambuf_type &')
      (CallExpr 0x9ffd138 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffd0e8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9ffd0d8 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9ffd120 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0x9ffd2d8 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0x9ffd2c8 <col:9, col:57>
    (CallExpr 0x9ffd2a0 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffd1b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9ffd1a8 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9ffd1ec <col:30> 'char_type *' lvalue ParmVar 0x9ff8780 '__s' 'char_type *')
      (DeclRefExpr 0x9ffd204 <col:35> 'streamsize':'int' lvalue ParmVar 0x9ff87c0 '__n' 'streamsize':'int')
      (CallExpr 0x9ffd280 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffd230 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0x9ffd220 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x9ffd268 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0x9ffd310 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x9ffd2f8 <col:30> 'int' 0))
) (CompoundStmt 0x9ffd3f0 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0x9ffd3d0 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffd380 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9ffd370 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9ffd3b8 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0xa00d630 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0xa00d6b8 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0xa00d6a8 <col:9, col:16>
    (MemberExpr 0xa00d684 <col:16> 'const _Bool' lvalue ->_M_ok 0xa00cea0
      (CXXThisExpr 0xa00d658 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0xa00e130 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0xa00e120 <col:7, col:51>
    (ParenExpr 0xa00e108 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa00e0e0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa00e0a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa00e000 0xa00db50 0x9f00a30 0x9f00460)
        (DeclRefExpr 0xa00e030 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa00de60 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa00e088 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa00e048 <col:47> 'unsigned char' lvalue ParmVar 0xa00deb0 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0xa00e698 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0xa00e688 <col:7, col:51>
    (ParenExpr 0xa00e670 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa00e648 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa00e600 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa00e560 0xa00e000 0xa00db50 0x9f00a30 0x9f00460)
        (DeclRefExpr 0xa00e590 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa00e3c0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa00e5e8 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa00e5a8 <col:47> 'signed char' lvalue ParmVar 0xa00e410 '__c' 'signed char &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0xa00f7a0 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0xa00f790 <col:7, col:51>
    (ParenExpr 0xa00f778 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa00f750 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa00f708 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa00f670 0xa00eb10 0xa00e560 0xa00e000 0xa00db50 0x9f00a30)
        (DeclRefExpr 0xa00f6a0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa00f4d0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa00f6f0 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa00f6e0 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa00f6b8 <col:47> 'unsigned char *' lvalue ParmVar 0xa00f520 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0xa00fd08 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0xa00fcf8 <col:7, col:51>
    (ParenExpr 0xa00fce0 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa00fcb8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa00fc68 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa00fbd0 0xa00f670 0xa00eb10 0xa00e560 0xa00e000 0xa00db50 0x9f00a30)
        (DeclRefExpr 0xa00fc00 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa00fa30 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa00fc50 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa00fc40 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0xa00fc18 <col:47> 'signed char *' lvalue ParmVar 0xa00fa80 '__s' 'signed char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0xa0109c8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa010760 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0xa010a38 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa010760 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0xa010ab0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0xa010ac0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0xa010b50 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0xa00d630 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0xa0116f8 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0xa012768 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0xa011808 <line:50:7, col:50>
    0xa011780 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa0117f8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa0117d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa012440 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0xa011868 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa011830 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa011818 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0xa012428 <line:52:2, line:73:2>
      (IfStmt 0xa0119c0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0xa0118d8 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0118a0 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0xa011884 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0xa0119a0 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa011968 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0xa011948 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa011910 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa0118f4 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0xa012408 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa011b60 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0xa011a08 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa0119f8 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa0119dc <col:9> '_Bool' lvalue ParmVar 0xa0115d0 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0xa011b40 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0xa011b18 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa011ad8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
              (CallExpr 0xa011a78 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa011a40 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa011a28 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0xa011ab4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9ec2e70 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0xa0123e0 <line:56:6, line:72:6>
          (DeclStmt 0xa011c70 <line:57:8, col:51>
            0xa011ba0 "const __int_type __eof =
              (CallExpr 0xa011c50 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa011c18 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0xa011d68 <line:58:8, col:45>
            0xa011cc0 "__streambuf_type *__sb =
              (CallExpr 0xa011d48 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa011d10 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa011cf4 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa011e28 <line:59:8, col:38>
            0xa011d80 "__int_type __c =
              (CallExpr 0xa011e08 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa011dd0 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa011db4 <col:25> '__streambuf_type *' lvalue Var 0xa011cc0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa011f60 <line:61:8, col:63>
            0xa011e80 "const __ctype_type &__ct =
              (CallExpr 0xa011f40 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa011eb8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb0be0)
                (CXXDependentScopeMemberExpr 0xa011f08 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0xa011eec <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0xa012238 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0xa012180 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0xa012020 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0xa011ff8 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa011f90 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa011fc4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0xa011d80 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa011fdc <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa011ba0 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0xa012158 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa012050 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0xa012034 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa011e80 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0xa0120a4 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0x9f1b330 'space' 'const mask':'const unsigned short')
                (CallExpr 0xa012138 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0120e8 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa01211c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0xa011d80 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0xa012220 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa012198 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0xa011d80 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0xa012200 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0121c8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa0121b0 <col:9> '__streambuf_type *' lvalue Var 0xa011cc0 '__sb' '__streambuf_type *')))))
          (IfStmt 0xa0123c0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0xa0122e0 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa012278 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa0122ac <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0xa011d80 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa0122c4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa011ba0 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa012398 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa012388 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa012370 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa012304 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa011780 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa012360 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa01233c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa012748 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0xa012580 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0xa0124b0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa012478 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa01245c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0xa012568 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0xa012548 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa012528 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa0124cc <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa011780 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0xa012558 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa012538 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa012504 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0xa0125d8 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa0125a8 <col:2> '_Bool' lvalue ->_M_ok 0xa00cea0
        (CXXThisExpr 0xa012598 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0xa0125c8 <col:10> '_Bool' true))
    (CompoundStmt 0xa012730 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0xa012680 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa012670 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa012658 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa0125f0 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa011780 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa012648 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa012624 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0xa012710 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0126c0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa0126a4 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa011590 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0xa0126f4 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa011780 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0xa0135d0 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0xa012ee0 <line:90:2, col:29>
    0xa012e50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa012ec0 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa012e98 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa012e88 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa012eb0 <col:23> '_Bool' false))")
  (IfStmt 0xa013578 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0xa012ef0 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0xa012e50 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa013550 <line:92:4, line:108:4>
      (DeclStmt 0xa012fc8 <line:93:6, col:49>
        0xa012f40 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa012fb8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa012f94 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa013268 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa012fd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa013250 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0xa013128 <line:96:3, col:63>
            0xa013050 "const __num_get_type &__ng =
              (CallExpr 0xa013108 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa013088 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb0be0)
                (CXXDependentScopeMemberExpr 0xa0130d0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0130c0 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa013220 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa013150 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0xa013138 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa013050 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa013198 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa013188 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa0131b0 <col:19> 'int' 0)
            (UnaryOperator 0xa0131d8 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa0131c8 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0131ec <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa012f40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa013204 <col:36> '_ValueT' lvalue ParmVar 0xa012b90 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0xa013368 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa013288 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa013350 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0xa013320 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0132a8 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa013298 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0132fc <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa013340 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0xa013458 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa013388 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa013440 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0xa013420 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0133a8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa013398 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0133fc <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa013530 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa0134a0 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa013490 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa013474 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa012f40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa013510 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0134c0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa0134b0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa0134f4 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa012f40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa0135c0 <line:109:2, col:10>
    (UnaryOperator 0xa0135a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa013598 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0xa018c78 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0xa013c50 <line:119:7, col:34>
    0xa013bc0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa013c30 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa013c08 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa013bf8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa013c20 <col:28> '_Bool' false))")
  (IfStmt 0xa018c20 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0xa013c60 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0xa013bc0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa018bf8 <line:121:2, line:153:2>
      (DeclStmt 0xa013d38 <line:122:4, col:47>
        0xa013cb0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa013d28 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa013d04 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa018910 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa013d48 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa0188f0 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0xa013da8 <line:125:8, col:16>
            0xa013d70 "long __l")
          (DeclStmt 0xa013ea8 <line:126:8, col:68>
            0xa013dd0 "const __num_get_type &__ng =
              (CallExpr 0xa013e88 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa013e08 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb0be0)
                (CXXDependentScopeMemberExpr 0xa013e50 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa013e40 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa013fa0 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa013ed0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa013eb8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa013dd0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa013f18 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa013f08 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa013f30 <col:24> 'int' 0)
            (UnaryOperator 0xa013f58 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa013f48 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa013f6c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa013cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa013f84 <col:41> 'long' lvalue Var 0xa013d70 '__l' 'long'))
          (IfStmt 0xa0188d0 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0xa018308 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0xa0182d8 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa013fd0 <col:12> 'long' lvalue Var 0xa013d70 '__l' 'long'))
              (ImplicitCastExpr 0xa0182f8 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa0182e8 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa0182b8 <col:18, col:54> 'const short':'const short' lvalue Var 0xa014830 '__min' 'const short':'const short'))))
            (CompoundStmt 0xa0184f8 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0xa0183e0 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa0183d0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0183b8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa01834c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa013cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa0183a8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa018384 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa0184e0 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0xa018404 <col:5> 'short' lvalue ParmVar 0xa013970 '__n' 'short &')
                (ImplicitCastExpr 0xa0184d0 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa0184b0 <col:11, col:47> 'const short':'const short' lvalue Var 0xa014830 '__min' 'const short':'const short'))))
            (IfStmt 0xa0188b0 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0xa018610 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0xa0185e0 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa018510 <col:17> 'long' lvalue Var 0xa013d70 '__l' 'long'))
                (ImplicitCastExpr 0xa018600 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa0185f0 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa0185c0 <col:23, col:59> 'const short':'const short' lvalue Var 0xa014ad0 '__max' 'const short':'const short'))))
              (CompoundStmt 0xa018808 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0xa0186f0 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa0186e0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa0186c8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa01865c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa013cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa0186b8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa018694 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa0187f0 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0xa018714 <col:5> 'short' lvalue ParmVar 0xa013970 '__n' 'short &')
                  (ImplicitCastExpr 0xa0187e0 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa0187c0 <col:11, col:47> 'const short':'const short' lvalue Var 0xa014ad0 '__max' 'const short':'const short'))))
              (BinaryOperator 0xa018898 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0xa018820 <col:3> 'short' lvalue ParmVar 0xa013970 '__n' 'short &')
                (CXXFunctionalCastExpr 0xa018880 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0xa018870 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0xa018860 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa018844 <col:15> 'long' lvalue Var 0xa013d70 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa018a10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa018930 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa0189f8 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0xa0189c8 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa018950 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa018940 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0189a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa0189e8 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0xa018b00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa018a30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa018ae8 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0xa018ac8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa018a50 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa018a40 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa018aa4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa018bd8 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa018b48 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa018b38 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa018b1c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa013cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa018bb8 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa018b68 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa018b58 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa018b9c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa013cb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa018c68 <line:154:7, col:15>
    (UnaryOperator 0xa018c50 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa018c40 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0xa01a0f8 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0xa019300 <line:164:7, col:34>
    0xa019270 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa0192e0 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa0192b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0192a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa0192d0 <col:28> '_Bool' false))")
  (IfStmt 0xa01a0a0 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0xa019310 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0xa019270 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa01a078 <line:166:2, line:198:2>
      (DeclStmt 0xa0193e8 <line:167:4, col:47>
        0xa019360 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa0193d8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa0193b4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa019d90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0193f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa019d70 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0xa019458 <line:170:8, col:16>
            0xa019420 "long __l")
          (DeclStmt 0xa019558 <line:171:8, col:68>
            0xa019480 "const __num_get_type &__ng =
              (CallExpr 0xa019538 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa0194b8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9fb0be0)
                (CXXDependentScopeMemberExpr 0xa019500 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0194f0 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa019650 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa019580 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa019568 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa019480 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa0195c8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa0195b8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa0195e0 <col:24> 'int' 0)
            (UnaryOperator 0xa019608 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa0195f8 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01961c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa019360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa019634 <col:41> 'long' lvalue Var 0xa019420 '__l' 'long'))
          (IfStmt 0xa019d50 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0xa019780 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0xa019750 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa019680 <col:12> 'long' lvalue Var 0xa019420 '__l' 'long'))
              (ImplicitCastExpr 0xa019770 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa019760 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa019730 <col:18, col:52> 'const int':'const int' lvalue Var 0x9dfe4c0 '__min' 'const int':'const int'))))
            (CompoundStmt 0xa019978 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0xa019860 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa019850 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa019838 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa0197cc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa019360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa019828 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa019804 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa019960 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0xa019884 <col:5> 'int' lvalue ParmVar 0xa019020 '__n' 'int &')
                (ImplicitCastExpr 0xa019950 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa019930 <col:11, col:45> 'const int':'const int' lvalue Var 0x9dfe4c0 '__min' 'const int':'const int'))))
            (IfStmt 0xa019d30 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0xa019a90 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0xa019a60 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa019990 <col:17> 'long' lvalue Var 0xa019420 '__l' 'long'))
                (ImplicitCastExpr 0xa019a80 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa019a70 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa019a40 <col:23, col:57> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))))
              (CompoundStmt 0xa019c88 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0xa019b70 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa019b60 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa019b48 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa019adc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa019360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa019b38 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa019b14 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa019c70 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0xa019b94 <col:5> 'int' lvalue ParmVar 0xa019020 '__n' 'int &')
                  (ImplicitCastExpr 0xa019c60 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa019c40 <col:11, col:45> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))))
              (BinaryOperator 0xa019d18 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0xa019ca0 <col:3> 'int' lvalue ParmVar 0xa019020 '__n' 'int &')
                (CXXFunctionalCastExpr 0xa019d00 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa019cf0 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa019ce0 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa019cc4 <col:13> 'long' lvalue Var 0xa019420 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa019e90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa019db0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa019e78 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0xa019e48 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa019dd0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa019dc0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa019e24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa019e68 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0xa019f80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa019eb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa019f68 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0xa019f48 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa019ed0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa019ec0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa019f24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa01a058 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa019fc8 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa019fb8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa019f9c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa019360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa01a038 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa019fe8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa019fd8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa01a01c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa019360 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa01a0e8 <line:199:7, col:15>
    (UnaryOperator 0xa01a0d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa01a0c0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0xa01b078 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0xa01a7a8 <line:207:7, col:50>
    0xa01a720 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa01a798 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01a774 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa01a850 <line:208:7, col:34>
    0xa01a7c0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa01a830 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa01a808 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa01a7f8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa01a820 <col:28> '_Bool' false))")
  (IfStmt 0xa01af48 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0xa01a890 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa01a860 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa01a7c0 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0xa01a878 <col:21> '__streambuf_type *' lvalue ParmVar 0xa01a4a0 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0xa01ae20 <line:210:2, line:226:2>
      (IfStmt 0xa01ac10 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01a8a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa01abf0 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0xa01a8f8 <line:213:8, col:20>
            0xa01a8c0 "bool __ineof")
          (IfStmt 0xa01aad0 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0xa01aa00 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0xa01a9d8 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0xa01a908 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x9ef2f90)
                (CallExpr 0xa01a988 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01a950 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa01a940 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0xa01a9a4 <col:50> '__streambuf_type *' lvalue ParmVar 0xa01a4a0 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0xa01a9bc <col:59> '_Bool' lvalue Var 0xa01a8c0 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0xa01aaa8 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa01aa98 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa01aa80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa01aa14 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01a720 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa01aa70 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa01aa4c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0xa01abd0 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0xa01ab08 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa01aaec <col:12> '_Bool' lvalue Var 0xa01a8c0 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0xa01aba8 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa01ab98 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa01ab80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa01ab14 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01a720 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa01ab70 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa01ab4c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa01ad10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01ac30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01acf8 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0xa01acc8 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01ac50 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01ac40 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01aca4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa01ace8 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0xa01ae00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01ad30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01ade8 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0xa01adc8 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01ad50 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01ad40 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01ada4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa01af28 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0xa01ae58 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa01ae3c <col:17> '__streambuf_type *' lvalue ParmVar 0xa01a4a0 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa01af00 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa01aef0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa01aed8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa01ae6c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01a720 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa01aec8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa01aea4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa01b020 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa01af90 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa01af80 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01af64 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01a720 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa01b000 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa01afb0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa01afa0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa01afe4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01a720 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa01b068 <line:231:7, col:15>
    (UnaryOperator 0xa01b050 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa01b040 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0xa01c180 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0xa01b770 <line:239:7, col:48>
    0xa01b6a0 "const int_type __eof =
      (CallExpr 0xa01b750 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa01b718 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0xa01b7e0 <line:240:7, col:27>
    0xa01b790 "int_type __c =
      (DeclRefExpr 0xa01b7c4 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01b6a0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0xa01b838 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa01b800 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa01b7f0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa01b820 <col:19> 'int' 0))
  (DeclStmt 0xa01b908 <line:242:7, col:50>
    0xa01b880 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa01b8f8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01b8d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa01b9b0 <line:243:7, col:33>
    0xa01b920 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa01b990 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa01b968 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa01b958 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa01b980 <col:28> '_Bool' true))")
  (IfStmt 0xa01bf20 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0xa01b9c0 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0xa01b920 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa01bf00 <line:245:2, line:262:2>
      (IfStmt 0xa01bcf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01b9d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa01bcd8 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0xa01bac0 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0xa01b9e8 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01b790 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa01baa0 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa01ba68 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa01ba48 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01ba10 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa01ba00 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa01bcb8 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0xa01bb88 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0xa01bb60 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01baf8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa01bb2c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01b790 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa01bb44 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01b6a0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0xa01bbe8 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa01bbb0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                (CXXThisExpr 0xa01bba0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa01bbd0 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0xa01bc90 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa01bc80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa01bc68 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa01bc00 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01b880 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa01bc58 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa01bc34 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa01bdf0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01bd10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01bdd8 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0xa01bda8 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01bd30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01bd20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01bd84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa01bdc8 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0xa01bee0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01be10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01bec8 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0xa01bea8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01be30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01be20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01be84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa01c060 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0xa01bf90 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa01bf80 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa01bf70 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa01bf50 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
            (CXXThisExpr 0xa01bf40 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa01c038 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa01c028 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa01c010 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa01bfa4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01b880 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa01c000 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01bfdc <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa01c138 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa01c0a8 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa01c098 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01c07c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01b880 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa01c118 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa01c0c8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa01c0b8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa01c0fc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01b880 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa01c170 <line:267:7, col:14>
    (DeclRefExpr 0xa01c154 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01b790 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0xa01d288 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0xa01c7d0 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa01c798 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa01c788 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa01c7b8 <col:19> 'int' 0))
  (DeclStmt 0xa01c8a8 <line:276:7, col:50>
    0xa01c820 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa01c898 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01c874 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa01c950 <line:277:7, col:33>
    0xa01c8c0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa01c930 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa01c908 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa01c8f8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa01c920 <col:28> '_Bool' true))")
  (IfStmt 0xa01d018 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0xa01c960 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0xa01c8c0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa01cff8 <line:279:2, line:299:2>
      (IfStmt 0xa01cde8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01c978 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa01cdd0 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0xa01ca88 <line:282:8, col:53>
            0xa01c990 "const int_type __cb =
              (CallExpr 0xa01ca68 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01ca30 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa01ca10 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa01c9d8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa01c9c8 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa01cdb0 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0xa01cba8 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0xa01cb80 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01cab8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa01caec <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01c990 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0xa01cb60 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01cb28 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0xa01cce0 <line:285:3, line:288:3>
              (BinaryOperator 0xa01cc08 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0xa01cbd0 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                  (CXXThisExpr 0xa01cbc0 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0xa01cbf0 <col:17> 'int' 1))
              (BinaryOperator 0xa01ccc8 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa01cc20 <col:5> 'char_type':'_CharT' lvalue ParmVar 0xa01c540 '__c' 'char_type &')
                (CallExpr 0xa01cca8 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01cc58 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa01cc8c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01c990 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0xa01cd88 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa01cd78 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa01cd60 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa01ccf8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01c820 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa01cd50 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa01cd2c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa01cee8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01ce08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01ced0 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0xa01cea0 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01ce28 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01ce18 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01ce7c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa01cec0 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0xa01cfd8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01cf08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01cfc0 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0xa01cfa0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01cf28 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01cf18 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01cf7c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa01d158 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0xa01d088 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa01d078 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa01d068 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa01d048 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
            (CXXThisExpr 0xa01d038 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa01d130 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa01d120 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa01d108 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa01d09c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01c820 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa01d0f8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01d0d4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa01d230 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa01d1a0 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa01d190 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01d174 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01c820 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa01d210 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa01d1c0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa01d1b0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa01d1f4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01c820 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa01d278 <line:304:7, col:15>
    (UnaryOperator 0xa01d260 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa01d250 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa01eaa8 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0xa01d968 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa01d930 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa01d920 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa01d950 <col:19> 'int' 0))
  (DeclStmt 0xa01da38 <line:313:7, col:50>
    0xa01d9b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa01da28 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01da04 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa01dae0 <line:314:7, col:33>
    0xa01da50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa01dac0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa01da98 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa01da88 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa01dab0 <col:28> '_Bool' true))")
  (IfStmt 0xa01e758 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0xa01daf0 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0xa01da50 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa01e738 <line:316:2, line:342:2>
      (IfStmt 0xa01e528 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01db08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa01e500 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0xa01dbe8 <line:319:8, col:67>
            0xa01db20 "const int_type __idelim =
              (CallExpr 0xa01dbc8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01db78 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa01dbac <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa01d6c0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa01dcb0 <line:320:8, col:49>
            0xa01dc00 "const int_type __eof =
              (CallExpr 0xa01dc90 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01dc58 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa01dd70 <line:321:8, col:46>
            0xa01dcd0 "__streambuf_type *__sb =
              (CallExpr 0xa01dd50 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01dd18 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa01dd08 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa01de38 <line:322:8, col:36>
            0xa01dd90 "int_type __c =
              (CallExpr 0xa01de18 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01dde0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa01ddc4 <col:23> '__streambuf_type *' lvalue Var 0xa01dcd0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa01e358 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0xa01e130 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0xa01e050 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa01df60 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0xa01df18 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
                  (CXXOperatorCallExpr 0xa01ded8 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0xa01de90 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                    (MemberExpr 0xa01de58 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa01de48 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa01de78 <col:27> 'int' 1))
                  (DeclRefExpr 0xa01defc <col:31> 'streamsize':'int' lvalue ParmVar 0xa01d680 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa01e038 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0xa01e010 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa01dfa8 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa01dfdc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01dd90 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa01dff4 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01dc00 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa01e118 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0xa01e0f0 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01e088 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa01e0bc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01dd90 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa01e0d4 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01db20 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa01e338 <line:327:3, line:331:3>
              (BinaryOperator 0xa01e238 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0xa01e190 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa01e178 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa01e148 <col:6> 'char_type *' lvalue ParmVar 0xa01d640 '__s' 'char_type *')))
                (CallExpr 0xa01e218 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01e1c8 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa01e1fc <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01dd90 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa01e280 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa01e260 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                  (CXXThisExpr 0xa01e250 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa01e320 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa01e294 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01dd90 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa01e300 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01e2c8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa01e2ac <col:11> '__streambuf_type *' lvalue Var 0xa01dcd0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa01e4e0 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0xa01e400 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa01e398 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa01e3cc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01dd90 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa01e3e4 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01dc00 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa01e4b8 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa01e4a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa01e490 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa01e424 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01d9b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa01e480 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa01e45c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa01e628 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01e548 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01e610 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0xa01e5e0 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01e568 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01e558 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01e5bc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa01e600 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0xa01e718 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01e648 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01e700 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0xa01e6e0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01e668 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01e658 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01e6bc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa01e838 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0xa01e7b8 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa01e7a8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa01e774 <col:11> 'streamsize':'int' lvalue ParmVar 0xa01d680 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa01e790 <col:17> 'int' 0))
    (BinaryOperator 0xa01e820 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa01e7e8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa01e7d0 <col:3> 'char_type *' lvalue ParmVar 0xa01d640 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa01e808 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa01e978 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0xa01e8a8 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa01e898 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa01e888 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa01e868 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
            (CXXThisExpr 0xa01e858 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa01e950 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa01e940 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa01e928 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa01e8bc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01d9b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa01e918 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01e8f4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa01ea50 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa01e9c0 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa01e9b0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01e994 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01d9b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa01ea30 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa01e9e0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa01e9d0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa01ea14 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01d9b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa01ea98 <line:351:7, col:15>
    (UnaryOperator 0xa01ea80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa01ea70 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0xa020240 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0xa01f130 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa01f0f8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa01f0e8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa01f118 <col:19> 'int' 0))
  (DeclStmt 0xa01f208 <line:360:7, col:50>
    0xa01f180 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa01f1f8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa01f1d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa01f2b0 <line:361:7, col:33>
    0xa01f220 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa01f290 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa01f268 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa01f258 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa01f280 <col:28> '_Bool' true))")
  (IfStmt 0xa01ffd0 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0xa01f2c0 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0xa01f220 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa01ffb0 <line:363:2, line:390:2>
      (IfStmt 0xa01fd90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01f2d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa01fd60 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0xa01f3b8 <line:366:8, col:67>
            0xa01f2f0 "const int_type __idelim =
              (CallExpr 0xa01f398 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01f348 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa01f37c <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa01eea0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa01f480 <line:367:8, col:49>
            0xa01f3d0 "const int_type __eof =
              (CallExpr 0xa01f460 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01f428 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa01f540 <line:368:8, col:51>
            0xa01f4a0 "__streambuf_type *__this_sb =
              (CallExpr 0xa01f520 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01f4e8 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0xa01f4d8 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa01f608 <line:369:8, col:41>
            0xa01f560 "int_type __c =
              (CallExpr 0xa01f5e8 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01f5b0 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0xa01f594 <col:23> '__streambuf_type *' lvalue Var 0xa01f4a0 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0xa01f6e8 <line:370:8, col:55>
            0xa01f620 "char_type __c2 =
              (CallExpr 0xa01f6c8 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa01f678 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0xa01f6ac <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01f560 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0xa01fbb8 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0xa01f9d8 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0xa01f888 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0xa01f7a8 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0xa01f780 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa01f718 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa01f74c <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01f560 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa01f764 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01f3d0 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0xa01f870 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0xa01f848 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa01f7e0 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa01f814 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01f560 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa01f82c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01f2f0 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa01f9c0 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0xa01f998 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01f8c0 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0xa01f960 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa01f910 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa01f8f4 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa01ee60 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0xa01f944 <col:48> 'char_type':'_CharT' lvalue Var 0xa01f620 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0xa01f980 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01f3d0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa01fb98 <line:375:3, line:379:3>
              (UnaryOperator 0xa01fa20 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa01fa00 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                  (CXXThisExpr 0xa01f9f0 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa01fac0 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0xa01fa34 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01f560 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa01faa0 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01fa68 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0xa01fa4c <col:11> '__streambuf_type *' lvalue Var 0xa01f4a0 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0xa01fb80 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa01fad8 <col:5> 'char_type':'_CharT' lvalue Var 0xa01f620 '__c2' 'char_type':'_CharT')
                (CallExpr 0xa01fb60 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa01fb10 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa01fb44 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01f560 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0xa01fd40 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0xa01fc60 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa01fbf8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa01fc2c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa01f560 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa01fc44 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa01f3d0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa01fd18 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa01fd08 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa01fcf0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa01fc84 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01f180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa01fce0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa01fcbc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa01fe90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01fdb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01fe78 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0xa01fe48 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01fdd0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01fdc0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01fe24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa01fe68 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0xa01ff90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa01feb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa01ff78 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0xa01ff48 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa01fed0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa01fec0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa01ff24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa020110 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0xa020040 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa020030 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa020020 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa020000 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
            (CXXThisExpr 0xa01fff0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa0200e8 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa0200d8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0200c0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa020054 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01f180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa0200b0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa02008c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa0201e8 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa020158 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa020148 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa02012c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01f180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa0201c8 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa020178 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa020168 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa0201ac <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa01f180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa020230 <line:395:7, col:15>
    (UnaryOperator 0xa020218 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa020208 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa021cd0 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0xa020918 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa0208e0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa0208d0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa020900 <col:19> 'int' 0))
  (DeclStmt 0xa0209e8 <line:404:7, col:50>
    0xa020960 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa0209d8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa0209b4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa020a90 <line:405:7, col:33>
    0xa020a00 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa020a70 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa020a48 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa020a38 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa020a60 <col:28> '_Bool' true))")
  (IfStmt 0xa021980 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0xa020aa0 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0xa020a00 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa021960 <line:407:9, line:443:9>
      (IfStmt 0xa021750 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa020ab8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa021728 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0xa020b98 <line:410:15, col:74>
            0xa020ad0 "const int_type __idelim =
              (CallExpr 0xa020b78 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa020b28 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0xa020b5c <col:66> 'char_type':'_CharT' lvalue ParmVar 0xa020670 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa020c60 <line:411:15, col:56>
            0xa020bb0 "const int_type __eof =
              (CallExpr 0xa020c40 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa020c08 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa020d20 <line:412:15, col:53>
            0xa020c80 "__streambuf_type *__sb =
              (CallExpr 0xa020d00 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa020cc8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa020cb8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa020de8 <line:413:15, col:43>
            0xa020d40 "int_type __c =
              (CallExpr 0xa020dc8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa020d90 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa020d74 <col:30> '__streambuf_type *' lvalue Var 0xa020c80 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa021308 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0xa0210e0 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0xa021000 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa020f10 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa020ec8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
                  (CXXOperatorCallExpr 0xa020e88 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa020e40 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                    (MemberExpr 0xa020e08 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa020df8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa020e28 <col:34> 'int' 1))
                  (DeclRefExpr 0xa020eac <col:38> 'streamsize':'int' lvalue ParmVar 0xa020630 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa020fe8 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0xa020fc0 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa020f58 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa020f8c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa020d40 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa020fa4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa020bb0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa0210c8 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0xa0210a0 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa021038 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa02106c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa020d40 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa021084 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa020ad0 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa0212e8 <line:418:17, line:422:17>
              (BinaryOperator 0xa0211e8 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0xa021140 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa021128 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa0210f8 <col:20> 'char_type *' lvalue ParmVar 0xa0205f0 '__s' 'char_type *')))
                (CallExpr 0xa0211c8 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa021178 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa0211ac <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0xa020d40 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0xa021288 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0xa021200 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0xa020d40 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa021268 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa021230 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa021218 <col:25> '__streambuf_type *' lvalue Var 0xa020c80 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0xa0212d0 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0xa0212b0 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                  (CXXThisExpr 0xa0212a0 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0xa021708 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0xa0213b0 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa021348 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa02137c <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa020d40 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa021394 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa020bb0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa021468 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa021458 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa021440 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa0213d4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa020960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa021430 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa02140c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0xa0216f0 <line:426:17, line:434:17>
              (IfStmt 0xa0216d0 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0xa021520 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0214b8 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa0214ec <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0xa020d40 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa021504 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa020ad0 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0xa021600 <line:428:21, line:431:21>
                  (CallExpr 0xa021598 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa021560 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0xa021544 <col:23> '__streambuf_type *' lvalue Var 0xa020c80 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa0215e8 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0xa0215c8 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa0215b8 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0xa0216a8 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa021698 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa021680 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa021618 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa020960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa021670 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa02164c <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa021850 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa021770 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa021838 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0xa021808 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa021790 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa021780 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0217e4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa021828 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0xa021940 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa021870 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa021928 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0xa021908 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa021890 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa021880 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0218e4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa021a60 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0xa0219e0 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa0219d0 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa02199c <col:11> 'streamsize':'int' lvalue ParmVar 0xa020630 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa0219b8 <col:17> 'int' 0))
    (BinaryOperator 0xa021a48 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa021a10 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0219f8 <col:3> 'char_type *' lvalue ParmVar 0xa0205f0 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa021a30 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa021ba0 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0xa021ad0 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa021ac0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa021ab0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa021a90 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
            (CXXThisExpr 0xa021a80 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa021b78 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa021b68 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa021b50 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa021ae4 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa020960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa021b40 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa021b1c <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa021c78 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0xa021be8 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa021bd8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa021bbc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa020960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa021c58 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa021c08 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa021bf8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa021c3c <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa020960 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa021cc0 <line:452:7, col:15>
    (UnaryOperator 0xa021ca8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa021c98 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0xa022c10 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0xa0222f8 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa0222c0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa0222b0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa0222e0 <col:19> 'int' 0))
  (DeclStmt 0xa0223b0 <line:464:7, col:33>
    0xa022320 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa022390 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa022368 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa022358 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa022380 <col:28> '_Bool' true))")
  (IfStmt 0xa022bb8 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0xa0223c0 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0xa022320 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa022b90 <line:466:2, line:487:2>
      (DeclStmt 0xa022498 <line:467:4, col:47>
        0xa022410 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa022488 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa022464 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa0228a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0224a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa022888 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0xa022570 <line:470:8, col:49>
            0xa0224c0 "const int_type __eof =
              (CallExpr 0xa022550 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa022518 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa022630 <line:471:8, col:46>
            0xa022590 "__streambuf_type *__sb =
              (CallExpr 0xa022610 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0225d8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0225c8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa022868 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0xa022728 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa022668 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0xa0226f0 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0226b8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa02269c <col:37> '__streambuf_type *' lvalue Var 0xa022590 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0xa02270c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa0224c0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa0227e0 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa0227d0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0227b8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa02274c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa022410 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa0227a8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa022784 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa022850 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa022818 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                (CXXThisExpr 0xa022808 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa022838 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0xa0229a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0228c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa022990 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0xa022960 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0228e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa0228d8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02293c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa022980 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0xa022a98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0229c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa022a80 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0xa022a60 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0229e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa0229d8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa022a3c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa022b70 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa022ae0 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa022ad0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa022ab4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa022410 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa022b50 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa022b00 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa022af0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa022b34 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa022410 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa022c00 <line:488:7, col:15>
    (UnaryOperator 0xa022be8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa022bd8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0xa0243c0 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0xa023240 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa023208 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa0231f8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa023228 <col:19> 'int' 0))
  (DeclStmt 0xa0232f0 <line:497:7, col:33>
    0xa023260 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa0232d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa0232a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa023298 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa0232c0 <col:28> '_Bool' true))")
  (IfStmt 0xa024368 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0xa023370 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa023300 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa023260 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa023358 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa023348 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa023318 <col:21> 'streamsize':'int' lvalue ParmVar 0xa022fb0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa023330 <col:27> 'int' 0)))
    (CompoundStmt 0xa024340 <line:499:9, line:549:9>
      (DeclStmt 0xa023448 <line:500:11, col:54>
        0xa0233c0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa023438 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa023414 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa024058 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa023458 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa024028 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0xa023520 <line:503:15, col:56>
            0xa023470 "const int_type __eof =
              (CallExpr 0xa023500 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0234c8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa0235e0 <line:504:15, col:53>
            0xa023540 "__streambuf_type *__sb =
              (CallExpr 0xa0235c0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa023588 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa023578 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa0236a8 <line:505:15, col:43>
            0xa023600 "int_type __c =
              (CallExpr 0xa023688 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa023650 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa023634 <col:30> '__streambuf_type *' lvalue Var 0xa023540 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa023708 <line:514:8, col:35>
            0xa0236c0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa0236f8 <col:30> '_Bool' false)")
          (WhileStmt 0xa023d40 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa023718 <line:515:15> '_Bool' true)
            (CompoundStmt 0xa023d28 <line:516:3, line:532:3>
              (WhileStmt 0xa0239c0 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0xa0238a8 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0xa0237b8 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0xa023770 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
                    (MemberExpr 0xa023738 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa023728 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa023758 <col:24> 'streamsize':'int' lvalue ParmVar 0xa022fb0 '__n' 'streamsize':'int'))
                  (UnaryOperator 0xa023890 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0xa023868 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa023800 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa023834 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa023600 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa02384c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa023470 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa0239a8 <line:519:7, line:522:7>
                  (UnaryOperator 0xa0238f0 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa0238d0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa0238c0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa023990 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa023904 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa023600 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa023970 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa023938 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa02391c <col:15> '__streambuf_type *' lvalue Var 0xa023540 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa023d08 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0xa023ba0 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0xa023ac0 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0xa023aa0 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa0239d4 <col:9> 'streamsize':'int' lvalue ParmVar 0xa022fb0 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0xa023ab0 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0xa023a80 <col:16, col:57> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int')))
                  (UnaryOperator 0xa023b88 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0xa023b60 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa023af8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa023b2c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa023600 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa023b44 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa023470 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa023ce8 <line:525:7, line:529:7>
                  (BinaryOperator 0xa023c90 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0xa023bc8 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa023bb8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa023c70 <line:527:4, col:45> 'const int':'const int' lvalue Var 0x9dfe4c0 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa023cd0 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa023ca8 <col:9> '_Bool' lvalue Var 0xa0236c0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa023cc0 <col:26> '_Bool' true)))
                (BreakStmt 0xa023d00 <line:531:7>))))
          (IfStmt 0xa023e78 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa023d70 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa023d54 <col:12> '_Bool' lvalue Var 0xa0236c0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa023e60 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa023d90 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                (CXXThisExpr 0xa023d80 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa023e40 <col:15, col:56> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa024008 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0xa023f28 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa023ec0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa023ef4 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa023600 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa023f0c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa023470 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa023fe0 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa023fd0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa023fb8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa023f4c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0233c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa023fa8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa023f84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa024158 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa024078 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa024140 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0xa024110 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa024098 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa024088 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0240ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa024130 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0xa024248 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa024178 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa024230 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0xa024210 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa024198 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa024188 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0241ec <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa024320 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa024290 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa024280 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa024264 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0233c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa024300 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0242b0 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa0242a0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa0242e4 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0233c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa0243b0 <line:550:7, col:15>
    (UnaryOperator 0xa024398 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa024388 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0xa026088 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0xa024a30 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa0249f8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa0249e8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa024a18 <col:19> 'int' 0))
  (DeclStmt 0xa024ae0 <line:559:7, col:33>
    0xa024a50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa024ac0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa024a98 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa024a88 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa024ab0 <col:28> '_Bool' true))")
  (IfStmt 0xa026030 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0xa024b60 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa024af0 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa024a50 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa024b48 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa024b38 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa024b08 <col:21> 'streamsize':'int' lvalue ParmVar 0xa024760 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa024b20 <col:27> 'int' 0)))
    (CompoundStmt 0xa026008 <line:561:9, line:614:9>
      (DeclStmt 0xa024c38 <line:562:11, col:54>
        0xa024bb0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa024c28 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa024c04 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa025d20 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa024c48 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa025cf0 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0xa024d10 <line:565:15, col:56>
            0xa024c60 "const int_type __eof =
              (CallExpr 0xa024cf0 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa024cb8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa024dd0 <line:566:15, col:53>
            0xa024d30 "__streambuf_type *__sb =
              (CallExpr 0xa024db0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa024d78 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa024d68 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa024e98 <line:567:15, col:43>
            0xa024df0 "int_type __c =
              (CallExpr 0xa024e78 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa024e40 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa024e24 <col:30> '__streambuf_type *' lvalue Var 0xa024d30 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa024ef8 <line:570:8, col:35>
            0xa024eb0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa024ee8 <col:30> '_Bool' false)")
          (WhileStmt 0xa0256f0 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa024f08 <line:571:15> '_Bool' true)
            (CompoundStmt 0xa0256d8 <line:572:3, line:590:3>
              (WhileStmt 0xa025290 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0xa025178 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0xa025098 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0xa024fa8 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0xa024f60 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
                      (MemberExpr 0xa024f28 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                        (CXXThisExpr 0xa024f18 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0xa024f48 <col:24> 'streamsize':'int' lvalue ParmVar 0xa024760 '__n' 'streamsize':'int'))
                    (UnaryOperator 0xa025080 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0xa025058 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa024ff0 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa025024 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa024df0 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa02503c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa024c60 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa025160 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0xa025138 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa0250d0 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa025104 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa024df0 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa02511c <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa0247a0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa025278 <line:576:7, line:579:7>
                  (UnaryOperator 0xa0251c0 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa0251a0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa025190 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa025260 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa0251d4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa024df0 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa025240 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa025208 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa0251ec <col:15> '__streambuf_type *' lvalue Var 0xa024d30 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa0256b8 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0xa025550 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0xa025470 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0xa025390 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0xa025370 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa0252a4 <col:9> 'streamsize':'int' lvalue ParmVar 0xa024760 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0xa025380 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0xa025350 <col:16, col:57> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int')))
                    (UnaryOperator 0xa025458 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0xa025430 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa0253c8 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa0253fc <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa024df0 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa025414 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa024c60 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa025538 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0xa025510 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa0254a8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa0254dc <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa024df0 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa0254f4 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa0247a0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa025698 <line:583:7, line:587:7>
                  (BinaryOperator 0xa025640 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0xa025578 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa025568 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa025620 <line:585:4, col:45> 'const int':'const int' lvalue Var 0x9dfe4c0 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa025680 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa025658 <col:9> '_Bool' lvalue Var 0xa024eb0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa025670 <col:26> '_Bool' true)))
                (BreakStmt 0xa0256b0 <line:589:7>))))
          (IfStmt 0xa025828 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa025720 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa025704 <col:12> '_Bool' lvalue Var 0xa024eb0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa025810 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa025740 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                (CXXThisExpr 0xa025730 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa0257f0 <col:15, col:56> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa025cd0 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0xa0258d8 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa025870 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa0258a4 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa024df0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa0258bc <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa024c60 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa025990 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa025980 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa025968 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa0258fc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa024bb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa025958 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa025934 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa025cb0 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0xa025a48 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0259e0 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0xa025a14 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa024df0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa025a2c <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa0247a0 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0xa025c98 <line:598:3, line:603:3>
                (IfStmt 0xa025c08 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa025b98 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0xa025b50 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
                    (MemberExpr 0xa025a80 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa025a70 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa025b30 <line:600:11, col:52> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))
                  (UnaryOperator 0xa025bf0 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0xa025bd0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                      (CXXThisExpr 0xa025bc0 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0xa025c78 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa025c40 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0xa025c24 <col:5> '__streambuf_type *' lvalue Var 0xa024d30 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa025e20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa025d40 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa025e08 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0xa025dd8 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa025d60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa025d50 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa025db4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa025df8 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0xa025f10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa025e40 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa025ef8 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0xa025ed8 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa025e60 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa025e50 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa025eb4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa025fe8 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa025f58 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa025f48 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa025f2c <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa024bb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa025fc8 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa025f78 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa025f68 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa025fac <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa024bb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa026078 <line:615:7, col:15>
    (UnaryOperator 0xa026060 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa026050 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0xa026fc8 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0xa026760 <line:623:7, col:40>
    0xa0266b0 "int_type __c =
      (CallExpr 0xa026740 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa026708 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0xa0267b8 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa026780 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa026770 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa0267a0 <col:19> 'int' 0))
  (DeclStmt 0xa026870 <line:625:7, col:33>
    0xa0267e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa026850 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa026828 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa026818 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa026840 <col:28> '_Bool' true))")
  (IfStmt 0xa026f80 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0xa026880 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0xa0267e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa026f58 <line:627:2, line:644:2>
      (DeclStmt 0xa026958 <line:628:4, col:47>
        0xa0268d0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa026948 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa026924 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa026c70 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa026968 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa026c58 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0xa026a50 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa026978 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa0266b0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa026a30 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0269f8 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa0269d8 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0269a0 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa026990 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa026c38 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0xa026b58 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa026a90 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa026ac4 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa0266b0 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0xa026b38 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa026b00 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa026c10 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa026c00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa026be8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa026b7c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0268d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa026bd8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa026bb4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa026d70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa026c90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa026d58 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0xa026d28 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa026cb0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa026ca0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa026d04 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa026d48 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0xa026e60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa026d90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa026e48 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0xa026e28 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa026db0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa026da0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa026e04 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa026f38 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa026ea8 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa026e98 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa026e7c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0268d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa026f18 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa026ec8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa026eb8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa026efc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0268d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa026fb8 <line:645:7, col:14>
    (DeclRefExpr 0xa026f9c <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa0266b0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0xa027f18 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0xa027640 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa027608 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa0275f8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa027628 <col:19> 'int' 0))
  (DeclStmt 0xa0276f0 <line:654:7, col:33>
    0xa027660 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa0276d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa0276a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa027698 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa0276c0 <col:28> '_Bool' true))")
  (IfStmt 0xa027ec0 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0xa027700 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0xa027660 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa027e98 <line:656:2, line:673:2>
      (DeclStmt 0xa0277d8 <line:657:4, col:47>
        0xa027750 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa0277c8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa0277a4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa027bb0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0277e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa027b98 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0xa027920 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0xa027808 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
              (CXXThisExpr 0xa0277f8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0xa0278f8 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa027890 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0xa027870 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa027838 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0xa027828 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0xa0278c4 <col:41> 'char_type *' lvalue ParmVar 0xa027370 '__s' 'char_type *')
              (DeclRefExpr 0xa0278dc <col:46> 'streamsize':'int' lvalue ParmVar 0xa0273b0 '__n' 'streamsize':'int')))
          (IfStmt 0xa027b78 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa0279d8 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0xa027980 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
              (MemberExpr 0xa027948 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                (CXXThisExpr 0xa027938 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa027968 <col:25> 'streamsize':'int' lvalue ParmVar 0xa0273b0 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0xa027b50 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa027b40 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa027b28 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa0279fc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa027750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa027b10 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa027ae8 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa027ad8 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa027ac0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9ebdf80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa027aa0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa027a40 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa027ab0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa027a7c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa027cb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa027bd0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa027c98 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0xa027c68 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa027bf0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa027be0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa027c44 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa027c88 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0xa027da0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa027cd0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa027d88 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0xa027d68 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa027cf0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa027ce0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa027d44 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa027e78 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa027de8 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa027dd8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa027dbc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa027750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa027e58 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa027e08 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa027df8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa027e3c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa027750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa027f08 <line:674:7, col:15>
    (UnaryOperator 0xa027ef0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa027ee0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0xa029e00 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0xa0293a0 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa029368 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa029358 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa029388 <col:19> 'int' 0))
  (DeclStmt 0xa029450 <line:683:7, col:33>
    0xa0293c0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa029430 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa029408 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0293f8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa029420 <col:28> '_Bool' true))")
  (IfStmt 0xa029da0 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0xa029460 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0xa0293c0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa029d78 <line:685:2, line:705:2>
      (DeclStmt 0xa029538 <line:686:4, col:47>
        0xa0294b0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa029528 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa029504 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa029a90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa029548 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa029a78 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0xa029658 <line:690:8, col:58>
            0xa029560 "const streamsize __num =
              (CallExpr 0xa029638 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa029600 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0xa0295e0 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0295a8 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa029598 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa029a58 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0xa0296a8 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0xa029698 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa029668 <col:12> 'const streamsize':'const int' lvalue Var 0xa029560 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0xa029680 <col:20> 'int' 0))
            (BinaryOperator 0xa0298f8 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0xa0296d0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
                (CXXThisExpr 0xa0296c0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0xa0298d0 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa029758 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0xa029738 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa029700 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0296f0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa02978c <col:36> 'char_type *' lvalue ParmVar 0xa029220 '__s' 'char_type *')
                (CallExpr 0xa029898 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa029888 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa029860 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0x9ef1270 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9cd40c0 'min')))
                  (DeclRefExpr 0xa029800 <col:50> 'const streamsize':'const int' lvalue Var 0xa029560 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0xa0298c0 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0xa029818 <col:57> 'streamsize':'int' lvalue ParmVar 0xa029260 '__n' 'streamsize':'int')))))
            (IfStmt 0xa029a38 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0xa029968 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0xa029958 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa029910 <col:17> 'const streamsize':'const int' lvalue Var 0xa029560 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0xa029940 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0xa029928 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0xa029a10 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa029a00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0299e8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa029980 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0294b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa0299d8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa0299b4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa029b90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa029ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa029b78 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0xa029b48 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa029ad0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa029ac0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa029b24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa029b68 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0xa029c80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa029bb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa029c68 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0xa029c48 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa029bd0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa029bc0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa029c24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa029d58 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa029cc8 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa029cb8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa029c9c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0294b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa029d38 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa029ce8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa029cd8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa029d1c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0294b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa029df0 <line:706:7, col:14>
    (MemberExpr 0xa029dd0 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa029dc0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0xa02af28 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0xa02a430 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa02a3f8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa02a3e8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa02a418 <col:19> 'int' 0))
  (CallExpr 0xa02a610 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa02a458 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa02a448 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa02a5e8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa02a5a8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (CallExpr 0xa02a4d8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02a4a0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa02a490 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa02a588 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa02a578 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa02a548 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9ebe3c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa02a538 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa02a514 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa02a6d0 <line:719:7, col:33>
    0xa02a640 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa02a6b0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa02a688 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa02a678 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa02a6a0 <col:28> '_Bool' true))")
  (IfStmt 0xa02aed0 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0xa02a6e0 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0xa02a640 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa02aea8 <line:721:2, line:740:2>
      (DeclStmt 0xa02a7b8 <line:722:4, col:47>
        0xa02a730 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa02a7a8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02a784 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa02abc0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02a7c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa02aba0 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0xa02a890 <line:725:8, col:49>
            0xa02a7e0 "const int_type __eof =
              (CallExpr 0xa02a870 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02a838 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa02a950 <line:726:8, col:46>
            0xa02a8b0 "__streambuf_type *__sb =
              (CallExpr 0xa02a930 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02a8f8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02a8e8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa02ab80 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0xa02aab0 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0xa02a978 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa02a960 <col:13> '__streambuf_type *' lvalue Var 0xa02a8b0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa02aa88 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02a9b0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa02aa50 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa02aa00 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa02a9e4 <col:33> '__streambuf_type *' lvalue Var 0xa02a8b0 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0xa02aa34 <col:49> 'char_type':'_CharT' lvalue ParmVar 0xa02a1a0 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0xa02aa70 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa02a7e0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa02ab58 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa02ab48 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa02ab30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa02aac8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02a730 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa02ab20 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa02aafc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa02acc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02abe0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02aca8 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0xa02ac78 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02ac00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02abf0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02ac54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa02ac98 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0xa02adb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02ace0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02ad98 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0xa02ad78 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02ad00 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02acf0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02ad54 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa02ae88 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa02adf8 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa02ade8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02adcc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02a730 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa02ae68 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa02ae18 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa02ae08 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa02ae4c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02a730 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa02af18 <line:741:7, col:15>
    (UnaryOperator 0xa02af00 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa02aef0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0xa02c010 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0xa02b548 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa02b510 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x9ff64e0
      (CXXThisExpr 0xa02b500 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa02b530 <col:19> 'int' 0))
  (CallExpr 0xa02b710 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa02b570 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa02b560 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa02b6e8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa02b6a8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (CallExpr 0xa02b5f0 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02b5b8 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa02b5a8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa02b688 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa02b678 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa02b660 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9ebe3c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa02b650 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa02b62c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa02b7d0 <line:754:7, col:33>
    0xa02b740 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa02b7b0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa02b788 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa02b778 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa02b7a0 <col:28> '_Bool' true))")
  (IfStmt 0xa02bfb8 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0xa02b7e0 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0xa02b740 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa02bf90 <line:756:2, line:775:2>
      (DeclStmt 0xa02b8b8 <line:757:4, col:47>
        0xa02b830 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa02b8a8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02b884 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa02bca8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02b8c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa02bc88 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0xa02b990 <line:760:8, col:49>
            0xa02b8e0 "const int_type __eof =
              (CallExpr 0xa02b970 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02b938 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa02ba50 <line:761:8, col:46>
            0xa02b9b0 "__streambuf_type *__sb =
              (CallExpr 0xa02ba30 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02b9f8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02b9e8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa02bc68 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0xa02bb98 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0xa02ba78 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa02ba60 <col:13> '__streambuf_type *' lvalue Var 0xa02b9b0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa02bb70 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02bab0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa02bb38 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa02bb00 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa02bae4 <col:33> '__streambuf_type *' lvalue Var 0xa02b9b0 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0xa02bb54 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa02b8e0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa02bc40 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa02bc30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa02bc18 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa02bbb0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02b830 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa02bc08 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa02bbe4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa02bda8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02bcc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02bd90 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0xa02bd60 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02bce8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02bcd8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02bd3c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa02bd80 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0xa02be98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02bdc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02be80 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0xa02be60 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02bde8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02bdd8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02be3c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa02bf70 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa02bee0 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa02bed0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02beb4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02b830 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa02bf50 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa02bf00 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa02bef0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa02bf34 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02b830 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa02c000 <line:776:7, col:15>
    (UnaryOperator 0xa02bfe8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa02bfd8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0xa02ccc8 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0xa02c438 <line:786:7, col:21>
    0xa02c3d0 "int __ret =
      (UnaryOperator 0xa02c420 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0xa02c408 <col:20> 'int' 1))")
  (DeclStmt 0xa02c4e0 <line:787:7, col:33>
    0xa02c450 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa02c4c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa02c498 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa02c488 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa02c4b0 <col:28> '_Bool' true))")
  (IfStmt 0xa02cc70 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0xa02c4f0 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0xa02c450 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa02cc48 <line:789:2, line:811:2>
      (DeclStmt 0xa02c5c8 <line:790:4, col:47>
        0xa02c540 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa02c5b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02c594 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa02c960 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02c5d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa02c948 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0xa02c6a0 <line:793:8, col:46>
            0xa02c600 "__streambuf_type *__sb =
              (CallExpr 0xa02c680 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02c648 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02c638 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa02c928 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0xa02c6b0 <line:794:12> '__streambuf_type *' lvalue Var 0xa02c600 '__sb' '__streambuf_type *')
            (CompoundStmt 0xa02c910 <line:795:3, line:800:3>
              (IfStmt 0xa02c8f0 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa02c7c8 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02c768 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (CallExpr 0xa02c718 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa02c6e0 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa02c6c8 <col:9> '__streambuf_type *' lvalue Var 0xa02c600 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa02c750 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0xa02c738 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0xa02c880 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa02c870 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa02c858 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa02c7ec <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02c540 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa02c848 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa02c824 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa02c8d8 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0xa02c8a4 <col:7> 'int' lvalue Var 0xa02c3d0 '__ret' 'int')
                  (IntegerLiteral 0xa02c8c0 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa02ca60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02c980 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02ca48 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0xa02ca18 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02c9a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02c990 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02c9f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa02ca38 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0xa02cb50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02ca80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02cb38 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0xa02cb18 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02caa0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02ca90 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02caf4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa02cc28 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa02cb98 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa02cb88 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02cb6c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02c540 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa02cc08 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa02cbb8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa02cba8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa02cbec <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02c540 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa02ccb8 <line:812:7, col:14>
    (ImplicitCastExpr 0xa02cca8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa02cc8c <col:14> 'int' lvalue Var 0xa02c3d0 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0xa02d948 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0xa02d3a0 <line:822:7, col:36>
    0xa02d310 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa02d380 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa02d368 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa02d350 <col:34> 'int' 1)))")
  (DeclStmt 0xa02d450 <line:823:7, col:33>
    0xa02d3c0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa02d430 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa02d408 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa02d3f8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa02d420 <col:28> '_Bool' true))")
  (IfStmt 0xa02d900 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0xa02d460 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0xa02d3c0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa02d8e0 <line:825:2, line:839:2>
      (IfStmt 0xa02d6d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02d478 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa02d6b8 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0xa02d698 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0xa02d4f0 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa02d4d0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02d498 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02d488 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0xa02d680 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0xa02d504 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa02d310 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0xa02d658 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02d588 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa02d568 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa02d530 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa02d520 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0xa02d5c0 <col:37> 'int' 0)
                (DeclRefExpr 0xa02d5f4 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9ec35c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa02d634 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa02d7d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02d6f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02d7b8 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0xa02d788 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02d710 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02d700 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02d764 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa02d7a8 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0xa02d8c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02d7f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02d8a8 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0xa02d888 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02d810 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02d800 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02d864 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa02d938 <line:840:7, col:14>
    (DeclRefExpr 0xa02d91c <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa02d310 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0xa02ea48 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0xa02e0e8 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa02df48 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa02df38 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa02e0c0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa02e080 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (CallExpr 0xa02dfc8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02df90 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa02df80 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa02e060 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa02e050 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa02e038 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9ebe3c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa02e028 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa02e004 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa02e1a0 <line:852:7, col:33>
    0xa02e110 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa02e180 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa02e158 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa02e148 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa02e170 <col:28> '_Bool' true))")
  (IfStmt 0xa02e9f0 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0xa02e1b0 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0xa02e110 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa02e9c8 <line:854:2, line:878:2>
      (DeclStmt 0xa02e288 <line:855:4, col:47>
        0xa02e200 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa02e278 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02e254 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa02e6e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02e298 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa02e6c8 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0xa02e6a8 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0xa02e310 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa02e2f0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02e2b8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02e2a8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa02e690 <line:859:3, line:867:3>
              (DeclStmt 0xa02e488 <line:861:5, line:862:23>
                0xa02e330 "const pos_type __p =
                  (CallExpr 0xa02e460 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa02e3d0 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa02e3b0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa02e378 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa02e368 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa02e404 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa02dcf0 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0xa02e43c <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa02e670 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa02e590 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02e530 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (DeclRefExpr 0xa02e498 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa02e330 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa02e510 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa02e4f0 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa02e4d8 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa02e4c0 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa02e648 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa02e638 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa02e620 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa02e5b4 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02e200 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa02e610 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa02e5ec <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa02e7e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02e700 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02e7c8 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0xa02e798 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02e720 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02e710 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02e774 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa02e7b8 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0xa02e8d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02e800 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02e8b8 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0xa02e898 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02e820 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02e810 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02e874 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa02e9a8 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa02e918 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa02e908 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02e8ec <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02e200 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa02e988 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa02e938 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa02e928 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa02e96c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02e200 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa02ea38 <line:879:7, col:15>
    (UnaryOperator 0xa02ea20 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa02ea10 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa02fbd0 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0xa02f258 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa02f0b8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa02f0a8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa02f230 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa02f1f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (CallExpr 0xa02f138 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa02f100 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa02f0f0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa02f1d0 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa02f1c0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa02f1a8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9ebe3c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa02f198 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa02f174 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa02f310 <line:891:7, col:33>
    0xa02f280 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa02f2f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa02f2c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa02f2b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa02f2e0 <col:28> '_Bool' true))")
  (IfStmt 0xa02fb78 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0xa02f320 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0xa02f280 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa02fb50 <line:893:2, line:917:2>
      (DeclStmt 0xa02f3f8 <line:894:4, col:47>
        0xa02f370 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa02f3e8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02f3c4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa02f868 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02f408 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa02f850 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0xa02f830 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0xa02f480 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa02f460 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa02f428 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa02f418 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa02f818 <line:898:3, line:906:3>
              (DeclStmt 0xa02f610 <line:900:5, line:901:23>
                0xa02f4a0 "const pos_type __p =
                  (CallExpr 0xa02f5e8 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa02f540 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa02f520 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa02f4e8 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa02f4d8 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa02f574 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa02edf0 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0xa02f58c <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa02ee60 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0xa02f5c4 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa02f7f8 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa02f718 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa02f6b8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
                  (DeclRefExpr 0xa02f620 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa02f4a0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa02f698 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa02f678 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa02f660 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa02f648 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa02f7d0 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa02f7c0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa02f7a8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa02f73c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02f370 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa02f798 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa02f774 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa02f968 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02f888 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02f950 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0xa02f920 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02f8a8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02f898 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02f8fc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa02f940 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0xa02fa58 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa02f988 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa02fa40 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0xa02fa20 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa02f9a8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa02f998 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa02f9fc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa02fb30 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa02faa0 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa02fa90 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa02fa74 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02f370 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa02fb10 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa02fac0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa02fab0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa02faf4 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa02f370 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa02fbc0 <line:918:7, col:15>
    (UnaryOperator 0xa02fba8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa02fb98 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0xa030cb0 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0xa0301e0 <line:926:7, col:61>
    0xa0301b0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa0302a0 <line:927:7, col:67>
    0xa030270 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa030390 <line:929:7, col:58>
    0xa030310 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa030370 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa030344 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa02feb0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa030360 <col:52> '_Bool' false))")
  (IfStmt 0xa030c68 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0xa0303a0 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0xa030310 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa030c40 <line:931:2, line:950:2>
      (DeclStmt 0xa030478 <line:932:4, col:47>
        0xa0303f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa030468 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa030444 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa030940 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa030488 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa030928 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0xa0305c0 <line:935:8, col:54>
            0xa0304c0 "const __int_type __cb =
              (CallExpr 0xa0305a0 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa030568 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa030548 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa030510 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0xa0304f4 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa02feb0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0xa030908 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0xa0306c8 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0xa0306a0 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa0305f8 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0xa03061c <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa0304c0 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0xa030680 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa030658 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0xa030778 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa0306dc <col:3> '_CharT' lvalue ParmVar 0xa02ff20 '__c' '_CharT &')
              (CallExpr 0xa030758 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa030718 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa03073c <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa0304c0 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0xa0308e0 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa0308d0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0308b8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa030790 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0303f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa0308a0 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa030878 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa030868 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa030850 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9ebdf80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa030830 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa0307d0 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa030840 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa03080c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa030a48 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa030960 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa030a30 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0xa030a00 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa030988 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa030970 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa02feb0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa0309dc <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa030a20 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0xa030b40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa030a68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa030b28 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0xa030b08 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa030a90 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa030a78 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa02feb0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa030ae4 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa030c20 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0xa030b88 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa030b78 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa030b5c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0303f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa030c00 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa030bb0 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0xa030b94 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa02feb0 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa030be4 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa0303f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa030ca0 <line:951:7, col:14>
    (DeclRefExpr 0xa030c84 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa02feb0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0xa033c48 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0xa032420 <line:958:7, col:61>
    0xa0323f0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa032570 <line:959:7, col:73>
    0xa032540 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa032620 <line:960:7, col:51>
    0xa0325f0 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0xa032670 <line:961:7, col:35>
    0xa032640 "typedef _CharT char_type")
  (DeclStmt 0xa032760 <line:962:7, col:44>
    0xa032730 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa0327d0 <line:964:7, col:33>
    0xa032780 "streamsize __extracted =
      (IntegerLiteral 0xa0327b8 <col:32> 'int' 0)")
  (DeclStmt 0xa032898 <line:965:7, col:50>
    0xa032810 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa032888 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa032864 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa0329b0 <line:966:7, col:58>
    0xa032930 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa032990 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa032964 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa032980 <col:52> '_Bool' false))")
  (IfStmt 0xa0339f8 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0xa0329c0 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0xa032930 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa0339d8 <line:968:2, line:1006:2>
      (IfStmt 0xa0337b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0329d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa033780 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0xa032a98 <line:972:8, col:39>
            0xa0329f0 "streamsize __num =
              (CallExpr 0xa032a78 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa032a40 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0xa032a24 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0xa032be8 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0xa032ae8 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0xa032ad8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa032aa8 <col:12> 'streamsize':'int' lvalue Var 0xa0329f0 '__num' 'streamsize':'int'))
              (IntegerLiteral 0xa032ac0 <col:21> 'int' 0))
            (BinaryOperator 0xa032bd0 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0xa032b00 <col:3> 'streamsize':'int' lvalue Var 0xa0329f0 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0xa032bc0 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0xa032ba0 <col:11, col:52> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0xa032d88 <line:976:8, col:73>
            0xa032c50 "const __ctype_type &__ct =
              (CallExpr 0xa032d68 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa032c90 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
                (CallExpr 0xa032d48 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa032d10 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa032cf8 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa032e60 <line:978:8, col:45>
            0xa032dc0 "const int_type __eof =
              (CallExpr 0xa032e40 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa032e18 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0xa032f58 <line:979:8, col:45>
            0xa032eb0 "__streambuf_type *__sb =
              (CallExpr 0xa032f38 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa032f00 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa032ee4 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa033018 <line:980:8, col:36>
            0xa032f70 "int_type __c =
              (CallExpr 0xa032ff8 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa032fc0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa032fa4 <col:23> '__streambuf_type *' lvalue Var 0xa032eb0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa0334e0 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0xa0332e0 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0xa033178 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0xa0330a8 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0xa033098 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa033028 <col:15> 'streamsize':'int' lvalue Var 0xa032780 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0xa033080 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0xa033070 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa033040 <col:29> 'streamsize':'int' lvalue Var 0xa0329f0 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0xa033058 <col:37> 'int' 1)))
                (UnaryOperator 0xa033160 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa033138 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa0330e0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa033104 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa032f70 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa03311c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa032dc0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa0332c8 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0xa0332a0 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0331a8 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa033190 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa032c50 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0xa0331fc <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0x9f1b330 'space' 'const mask':'const unsigned short')
                  (CallExpr 0xa033280 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa033240 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa033264 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0xa032f70 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0xa0334c0 <line:986:3, line:990:3>
              (BinaryOperator 0xa0333d8 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0xa033340 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa033328 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa0332f8 <col:6> '_CharT *' lvalue ParmVar 0xa032180 '__s' '_CharT *')))
                (CallExpr 0xa0333b8 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa033378 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa03339c <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0xa032f70 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa033408 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa0333f0 <col:7> 'streamsize':'int' lvalue Var 0xa032780 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0xa0334a8 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa03341c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa032f70 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa033488 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa033450 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa033434 <col:11> '__streambuf_type *' lvalue Var 0xa032eb0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa033658 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0xa033578 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa033520 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa033544 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa032f70 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa03355c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa032dc0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa033630 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa033620 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa033608 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa03359c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa032810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa0335f8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa0335d4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0xa0336e0 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0xa033690 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa033674 <col:9> '_CharT *' lvalue ParmVar 0xa032180 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0xa0336c8 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0xa033760 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa033710 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa0336f8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa033748 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa0338c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0337d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa0338a8 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0xa033878 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa033800 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa0337e8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa033854 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa033898 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0xa0339b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0338e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa0339a0 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0xa033980 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa033908 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa0338f0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa03395c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa033b20 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0xa033a50 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa033a40 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa033a30 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa033a14 <col:12> 'streamsize':'int' lvalue Var 0xa032780 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0xa033af8 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa033ae8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa033ad0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9ebe600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa033a64 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa032810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa033ac0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa033a9c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec31c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa033c00 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0xa033b68 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa033b58 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa033b3c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa032810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa033be0 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa033b90 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa033b74 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa033bc4 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa032810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa033c38 <line:1011:7, col:14>
    (DeclRefExpr 0xa033c1c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa032110 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0xa034da8 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0xa034210 <line:1019:7, col:61>
    0xa0341e0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa034360 <line:1020:7, col:73>
    0xa034330 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa034420 <line:1021:7, col:60>
    0xa0343f0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa034510 <line:1022:7, col:44>
    0xa0344e0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa034698 <line:1024:7, col:72>
    0xa034560 "const __ctype_type &__ct =
      (CallExpr 0xa034678 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0xa0345a0 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9eb2000)
        (CallExpr 0xa034658 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa034620 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa034608 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa033f50 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0xa034778 <line:1025:7, col:46>
    0xa0346d0 "const __int_type __eof =
      (CallExpr 0xa034758 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa034730 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0xa034878 <line:1026:7, col:44>
    0xa0347d0 "__streambuf_type *__sb =
      (CallExpr 0xa034858 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa034820 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa034804 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa033f50 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0xa034938 <line:1027:7, col:37>
    0xa034890 "__int_type __c =
      (CallExpr 0xa034918 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0348e0 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa0348c4 <col:24> '__streambuf_type *' lvalue Var 0xa0347d0 '__sb' '__streambuf_type *')))")
  (WhileStmt 0xa034bf0 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0xa034b38 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0xa0349e8 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0xa0349c0 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa034968 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0xa03498c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa034890 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0xa0349a4 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa0346d0 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0xa034b10 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa034a18 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa0349fc <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa034560 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0xa034a6c <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0x9f1b330 'space' 'const mask':'const unsigned short')
        (CallExpr 0xa034af0 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa034ab0 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0xa034ad4 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa034890 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0xa034bd8 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0xa034b50 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa034890 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0xa034bb8 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa034b80 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa034b68 <col:8> '__streambuf_type *' lvalue Var 0xa0347d0 '__sb' '__streambuf_type *')))))
  (IfStmt 0xa034d60 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0xa034c88 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa034c30 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0xa034c54 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa034890 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0xa034c6c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa0346d0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0xa034d40 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa034cc8 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa034cac <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa033f50 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa034d1c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x9ec3160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa034d98 <line:1035:7, col:14>
    (DeclRefExpr 0xa034d7c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa033f50 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0xa0408a8 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa040898 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa040880 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa040860 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0407fc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa040870 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa04083c <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0xa040ca8 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa03f5e0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0xa040d48 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa040998 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa040988 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa040970 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa040950 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0408ec <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa040960 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa04092c <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0xa040e28 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa040df0 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0xa040dd8 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa03f730 '__str' 'const __string_type &')))
, (CallExpr 0xa040e98 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa040e60 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0xa040e44 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa03f730 '__str' 'const __string_type &')))
) (CompoundStmt 0xa040f90 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0xa040f70 <col:9, col:33> '<dependent type>'
    (MemberExpr 0xa040f38 <col:9> '<bound member function type>' ->_M_stringbuf_init 0xa03fb40
      (CXXThisExpr 0xa040f28 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa040f58 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa03f7a0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0xa0414f0 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0xa040fe8 <line:123:2, col:21>
    0xa040fb0 "__string_type __ret")
  (IfStmt 0xa0414a8 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0xa041060 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa041028 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0xa041018 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0xa041430 <line:125:4, line:131:4>
      (IfStmt 0xa041410 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa041198 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa041150 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (CallExpr 0xa0410c8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa041090 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa041080 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa041130 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0410f8 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0xa0410e8 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa0412d0 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0xa0411bc <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa040fb0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa0412b0 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa041228 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0411f0 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0xa0411e0 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa041290 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa041258 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa041248 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0xa0413f8 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0xa0412e8 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa040fb0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa0413d8 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa041350 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa041318 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa041308 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa0413b8 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa041380 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa041370 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0xa041490 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0xa041444 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa040fb0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0xa041470 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
        (CXXThisExpr 0xa041460 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0xa0414e0 <line:134:2, col:9>
    (DeclRefExpr 0xa0414c4 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa040fb0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0xa041700 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0xa041658 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa041540 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0xa041520 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
        (CXXThisExpr 0xa041510 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0xa0415c8 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa041590 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0xa041574 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa03f970 '__s' 'const __string_type &')))
    (CallExpr 0xa041638 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa041600 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa0415e4 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa03f970 '__s' 'const __string_type &'))))
  (CallExpr 0xa0416e0 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0xa041690 <col:2> '<bound member function type>' ->_M_stringbuf_init 0xa03fb40
      (CXXThisExpr 0xa041680 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0xa0416c0 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa03f500
      (CXXThisExpr 0xa0416b0 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0xa041b90 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0xa041760 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa041728 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa03f500
      (CXXThisExpr 0xa041718 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa041748 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa03faf0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0xa0417d0 <line:158:2, col:23>
    0xa041780 "__size_type __len =
      (IntegerLiteral 0xa0417b8 <col:22> 'int' 0)")
  (IfStmt 0xa041a38 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa041958 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa041920 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebcae0)
      (MemberExpr 0xa0417f0 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa03f500
        (CXXThisExpr 0xa0417e0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0xa041908 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0xa0418e0 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa0418d0 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0418b8 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa041898 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa041838 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3330 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0xa0418a8 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa041874 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec32d0 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0xa041a20 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0xa04197c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0xa041780 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0xa041a00 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0419c8 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0xa0419a8 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
            (CXXThisExpr 0xa041998 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0xa041b68 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0xa041a68 <col:2> '<bound member function type>' ->_M_sync 0xa040520
      (CXXThisExpr 0xa041a58 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0xa041b20 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0xa041af0 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa041ab8 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0xa041a98 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
            (CXXThisExpr 0xa041a88 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0xa041b38 <col:52> 'int' 0)
    (DeclRefExpr 0xa041b50 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0xa041780 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0xa041f28 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0xa041c28 <line:167:2, col:23>
    0xa041bc0 "streamsize __ret =
      (UnaryOperator 0xa041c10 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0xa041bf8 <col:22> 'int' 1))")
  (IfStmt 0xa041ed0 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa041ce0 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa041ca8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebcae0)
      (MemberExpr 0xa041c48 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa03f500
        (CXXThisExpr 0xa041c38 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa041c84 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0xa041eb8 <line:169:4, line:172:4>
      (CallExpr 0xa041d38 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0xa041d18 <col:6> '<bound member function type>' ->_M_update_egptr 0xa0405b0
          (CXXThisExpr 0xa041d08 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0xa041ea0 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa041d54 <col:6> 'streamsize':'int' lvalue Var 0xa041bc0 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0xa041e78 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa041e40 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (CallExpr 0xa041db8 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa041d80 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa041d70 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa041e20 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa041de8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa041dd8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0xa041f18 <line:173:2, col:9>
    (ImplicitCastExpr 0xa041f08 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa041eec <col:9> 'streamsize':'int' lvalue Var 0xa041bc0 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0xa040a08 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa0409e0 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0xa040a70 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa040a48 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa042150 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0xa042110 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0xa041fb8 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0xa041f44 <col:6> 'char_type *' lvalue ParmVar 0xa03fec0 '__s' 'char_type *')
      (BinaryOperator 0xa041fa0 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0xa041f90 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa041f5c <col:13> 'streamsize':'int' lvalue ParmVar 0xa03ff00 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa041f78 <col:20> 'int' 0)))
    (CompoundStmt 0xa0420f8 <line:200:4, line:211:4>
      (CallExpr 0xa042038 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa042000 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0xa041fe0 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
            (CXXThisExpr 0xa041fd0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa0420d0 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0xa042068 <col:6> '<bound member function type>' ->_M_sync 0xa040520
          (CXXThisExpr 0xa042058 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa042088 <col:14> 'char_type *' lvalue ParmVar 0xa03fec0 '__s' 'char_type *')
        (DeclRefExpr 0xa0420a0 <col:19> 'streamsize':'int' lvalue ParmVar 0xa03ff00 '__n' 'streamsize':'int')
        (IntegerLiteral 0xa0420b8 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0xa042140 <line:212:2, col:9>
    (CXXThisExpr 0xa042130 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa040b58 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa040b48 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa040b30 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa040b10 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040aac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa040b20 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040aec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa040c48 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa040c38 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa040c20 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa040c00 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040b9c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa040c10 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040bdc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0xa042818 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0xa042278 <line:234:2, col:46>
    0xa042170 "const bool __testin =
      (CXXOperatorCallExpr 0xa042250 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa042218 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebcae0)
        (MemberExpr 0xa0421b8 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa03f500
          (CXXThisExpr 0xa0421a8 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa0421f4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa0427f8 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0xa042430 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0xa0422d0 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa042298 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa042288 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0xa042408 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa0423c0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
        (CallExpr 0xa042338 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa042300 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0xa0422f0 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa0423a0 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa042368 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa042358 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa0427e0 <line:236:4, line:241:4>
      (IfStmt 0xa0427c0 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0xa042460 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa042448 <col:10> 'const _Bool' lvalue Var 0xa042170 '__testin' 'const _Bool'))
        (CallExpr 0xa0425f0 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa042480 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa042470 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa042500 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0424c8 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa0424b8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa042568 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa042530 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa042520 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa0425d0 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa042598 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0xa042588 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa042798 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa042628 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa042618 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa0426a8 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa042670 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa042660 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa042710 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0426d8 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0xa0426c8 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa042778 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa042740 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa042730 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa0475a8 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa047584 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa0476f8 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa0476e8 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa0476d0 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa0476b0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa047658 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa0433c0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa0476c0 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa04768c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa047870 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0xa047850 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa047788 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa047778 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa047830 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa0477f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (MemberExpr 0xa0477d0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa043320
        (CXXThisExpr 0xa0477c0 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa0475f8 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa0475d4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0xa0478c8 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0470f0 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa047980 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa047970 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa047958 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa047938 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0478e0 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa047160 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa047948 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa047914 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa047ae8 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0xa047ac8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa047a00 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa0479f0 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa047aa8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa047a68 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (MemberExpr 0xa047a48 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa043320
        (CXXThisExpr 0xa047a38 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa047b00 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa047bf0 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0xa047be0 <col:9, col:59>
    (CXXConstCastExpr 0xa047bc8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa047b98 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa047b58 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (MemberExpr 0xa047b38 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa043320
          (CXXThisExpr 0xa047b28 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa047ca0 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0xa047c90 <col:9, col:33>
    (CallExpr 0xa047c70 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa047c38 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa047c18 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa043320
          (CXXThisExpr 0xa047c08 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa047d58 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0xa047d38 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa047ce8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa047cc8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa043320
        (CXXThisExpr 0xa047cb8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa047d1c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa047480 '__s' 'const __string_type &')))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa048e98 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa048e74 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa048fe8 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa048fd8 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa048fc0 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa048fa0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa048f48 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa048900 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa048fb0 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa048f7c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa049160 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0xa049140 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa049078 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa049068 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa049120 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa0490e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (MemberExpr 0xa0490c0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa048860
        (CXXThisExpr 0xa0490b0 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa048ee8 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa048ec4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0xa0491b8 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa048a20 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa049270 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa049260 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa049248 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa049228 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0491d0 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa048a90 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa049238 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa049204 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa0493d8 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0xa0493b8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0492f0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa0492e0 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa049398 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa049358 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (MemberExpr 0xa049338 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa048860
        (CXXThisExpr 0xa049328 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa0493f0 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa0494e0 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0xa0494d0 <col:9, col:59>
    (CXXConstCastExpr 0xa0494b8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa049488 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa049448 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (MemberExpr 0xa049428 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa048860
          (CXXThisExpr 0xa049418 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa049590 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0xa049580 <col:9, col:33>
    (CallExpr 0xa049560 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa049528 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa049508 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa048860
          (CXXThisExpr 0xa0494f8 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa049648 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0xa049628 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0495d8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa0495b8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa048860
        (CXXThisExpr 0xa0495a8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa04960c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa048d70 '__s' 'const __string_type &')))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0xa04a810 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa04a800 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa04a7e8 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa04a7c8 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa04a764 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa04a7d8 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa04a7a4 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa04a978 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa04a1f0 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa04aae0 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0xa04aac0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa04a9f8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa04a9e8 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa04aaa0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa04aa60 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (MemberExpr 0xa04aa40 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa04a150
        (CXXThisExpr 0xa04aa30 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0xa04a900 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa04a8f0 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa04a8d8 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa04a8b8 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa04a854 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa04a8c8 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa04a894 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa04ab38 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa04a310 '__str' 'const __string_type &')
, (DeclRefExpr 0xa04ab50 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa04a380 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa04aca8 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0xa04ac88 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa04abc0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa04abb0 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa04ac68 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa04ac28 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
      (MemberExpr 0xa04ac08 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa04a150
        (CXXThisExpr 0xa04abf8 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa04acc0 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa04adb0 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0xa04ada0 <col:9, col:59>
    (CXXConstCastExpr 0xa04ad88 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa04ad58 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa04ad18 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (MemberExpr 0xa04acf8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa04a150
          (CXXThisExpr 0xa04ace8 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa04ae60 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0xa04ae50 <col:9, col:33>
    (CallExpr 0xa04ae30 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa04adf8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa04add8 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa04a150
          (CXXThisExpr 0xa04adc8 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa04af18 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0xa04aef8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa04aea8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa04ae88 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa04a150
        (CXXThisExpr 0xa04ae78 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa04aedc <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa04a660 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0xa040a08 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa0409e0 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0xa04c318 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0xa04b810 <line:49:7, col:42>
    0xa04b760 "int_type __ret =
      (CallExpr 0xa04b7f0 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04b7b8 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0xa04c2d0 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa04b938 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa04b8f0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (CallExpr 0xa04b868 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04b830 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa04b820 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa04b8d0 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04b898 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa04b888 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0xa04c2b8 <line:51:2, line:74:2>
      (DeclStmt 0xa04ba58 <line:54:4, col:63>
        0xa04b970 "const bool __testeof =
          (CallExpr 0xa04ba30 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04b9c8 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0xa04b9fc <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04b4e0 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0xa04ba14 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0xa04b760 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0xa04c298 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0xa04ba90 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa04ba80 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa04ba68 <col:9> 'const _Bool' lvalue Var 0xa04b970 '__testeof' 'const _Bool')))
        (CompoundStmt 0xa04c108 <line:56:6, line:68:6>
          (DeclStmt 0xa04bca8 <line:57:8, line:59:28>
            0xa04bab0 "const bool __testeq =
              (CallExpr 0xa04bc80 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa04bb08 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0xa04bbb0 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa04bb60 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa04bb94 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04b4e0 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0xa04bc68 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa04bc18 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa04bbe0 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa04bbd0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0xa04bc50 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0xa04bc38 <col:25> 'int' 1))))")
          (DeclStmt 0xa04bde8 <line:60:8, col:60>
            0xa04bcc0 "const bool __testout =
              (CXXOperatorCallExpr 0xa04bdc0 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0xa04bd80 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
                (CXXDependentScopeMemberExpr 0xa04bd08 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa04bcf8 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa04bd5c <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa04c0e8 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0xa04be48 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0xa04be28 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa04bdf8 <col:12> 'const _Bool' lvalue Var 0xa04bab0 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0xa04be38 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa04be10 <col:24> 'const _Bool' lvalue Var 0xa04bcc0 '__testout' 'const _Bool')))
            (CompoundStmt 0xa04c0c8 <line:62:3, line:67:3>
              (CallExpr 0xa04bed8 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa04be70 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa04be60 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0xa04bec0 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0xa04bea8 <col:18> 'int' 1)))
              (IfStmt 0xa04c060 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0xa04bf20 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa04bf10 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa04bef8 <col:10> 'const _Bool' lvalue Var 0xa04bab0 '__testeq' 'const _Bool')))
                (BinaryOperator 0xa04c048 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0xa04bfa0 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0xa04bf80 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa04bf48 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0xa04bf38 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0xa04c028 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa04bfd8 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa04c00c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04b4e0 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0xa04c0b0 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa04c07c <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa04b760 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0xa04c094 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04b4e0 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0xa04c280 <line:70:6, line:73:6>
          (CallExpr 0xa04c1a0 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04c138 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa04c128 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0xa04c188 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0xa04c170 <col:21> 'int' 1)))
          (BinaryOperator 0xa04c268 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0xa04c1c0 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa04b760 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa04c248 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa04c1f8 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0xa04c22c <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04b4e0 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa04c308 <line:75:7, col:14>
    (DeclRefExpr 0xa04c2ec <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa04b760 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0xa040a70 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa040a48 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0xa04e2d0 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0xa04cbb8 <line:83:7, col:59>
    0xa04ca90 "const bool __testout =
      (CXXOperatorCallExpr 0xa04cb90 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0xa04cb50 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (CXXDependentScopeMemberExpr 0xa04cad8 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0xa04cac8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa04cb2c <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa04cd20 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0xa04cc88 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa04cc40 <col:11, col:45> 'long'
        (ImplicitCastExpr 0xa04cc30 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa04cbc8 <col:11> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa04cc68 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0xa04cc08 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa04cbf8 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa04cbe0 <col:29> 'const _Bool' lvalue Var 0xa04ca90 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0xa04cc78 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa04cc20 <col:40> '_Bool' false))))
    (ReturnStmt 0xa04cd10 <line:85:2, col:26>
      (CallExpr 0xa04ccf0 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04ccb8 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa04ce98 <line:87:7, col:79>
    0xa04cd50 "const bool __testeof =
      (CallExpr 0xa04ce70 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04cda8 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0xa04cddc <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04c810 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa04ce50 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa04ce18 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0xa04d000 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0xa04cf50 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa04cef8 <col:11, col:44> 'long'
        (ImplicitCastExpr 0xa04cee8 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa04cea8 <col:11> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa04cf30 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa04cf20 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa04cec0 <col:28> 'const _Bool' lvalue Var 0xa04cd50 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0xa04cf40 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa04ced8 <col:39> '_Bool' false))))
    (ReturnStmt 0xa04cff0 <line:89:2, col:33>
      (CallExpr 0xa04cfd0 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04cf80 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0xa04cfb4 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04c810 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0xa04d0f0 <line:91:7, col:58>
    0xa04d030 "const __size_type __capacity =
      (CallExpr 0xa04d0d0 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04d098 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa04d078 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
            (CXXThisExpr 0xa04d068 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa04d1d0 <line:92:7, col:58>
    0xa04d110 "const __size_type __max_size =
      (CallExpr 0xa04d1b0 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04d178 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa04d158 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
            (CXXThisExpr 0xa04d148 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa04d368 <line:93:7, col:58>
    0xa04d1f0 "const bool __testput =
      (CXXOperatorCallExpr 0xa04d340 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa04d2f8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (CallExpr 0xa04d270 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa04d238 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa04d228 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa04d2d8 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa04d2a0 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0xa04d290 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa04d560 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0xa04d4b0 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0xa04d378 <col:11> 'long (long, long)' lvalue Function 0x9df7c80 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa04d488 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0xa04d3b8 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa04d3a8 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa04d390 <col:29> 'const _Bool' lvalue Var 0xa04d1f0 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0xa04d460 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa04d400 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
          (DeclRefExpr 0xa04d3cc <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa04d030 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0xa04d3e4 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa04d110 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0xa04d4a0 <col:68> '_Bool' false))
    (ReturnStmt 0xa04d550 <line:95:2, col:26>
      (CallExpr 0xa04d530 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04d4f8 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa04d658 <line:99:7, col:62>
    0xa04d590 "const char_type __conv =
      (CallExpr 0xa04d638 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04d5e8 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa04d61c <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04c810 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa04e208 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0xa04d690 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa04d680 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa04d668 <col:12> 'const _Bool' lvalue Var 0xa04d1f0 '__testput' 'const _Bool')))
    (CompoundStmt 0xa04e128 <line:101:2, line:122:2>
      (DeclStmt 0xa04d818 <line:111:4, line:112:25>
        0xa04d6b0 "const __size_type __opt_len =
          (CallExpr 0xa04d7f0 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa04d708 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd43d0 0x9cd5170)
            (CXXUnresolvedConstructExpr 0xa04d790 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0xa04d778 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0xa04d748 <col:55> 'int' 2)
                (DeclRefExpr 0xa04d760 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa04d030 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0xa04d7d0 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0xa04d7b8 <col:20> 'int' 512)))")
      (DeclStmt 0xa04d910 <line:113:4, col:61>
        0xa04d830 "const __size_type __len =
          (CallExpr 0xa04d8e8 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa04d880 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd40c0 0x9cd47b0)
            (DeclRefExpr 0xa04d8b8 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa04d6b0 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0xa04d8d0 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa04d110 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0xa04d968 <line:114:4, col:23>
        0xa04d930 "__string_type __tmp")
      (CallExpr 0xa04d9e0 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04d990 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa04d978 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa04d930 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa04d9c4 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa04d830 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0xa04dc78 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0xa04da48 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa04da10 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa04da00 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa04dc50 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa04da80 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0xa04da64 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa04d930 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0xa04db00 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04dac8 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa04dab8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa04dc28 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0xa04dbf0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
            (CallExpr 0xa04db68 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa04db30 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa04db20 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa04dbd0 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa04db98 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0xa04db88 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0xa04dd00 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04dcb0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa04dc94 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa04d930 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa04dce4 <col:20> 'const char_type':'const _CharT' lvalue Var 0xa04d590 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0xa04dda0 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04dd50 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0xa04dd30 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
            (CXXThisExpr 0xa04dd20 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa04dd84 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa04d930 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0xa04e100 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0xa04ddd0 <line:120:4> '<bound member function type>' ->_M_sync 0xa040520
          (CXXThisExpr 0xa04ddc0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0xa04de88 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0xa04de58 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04de20 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0xa04de00 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
                (CXXThisExpr 0xa04ddf0 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0xa04dfa8 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa04df70 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (CallExpr 0xa04dee8 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04deb0 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0xa04dea0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa04df50 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04df18 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa04df08 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa04e0d8 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa04e0a0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (CallExpr 0xa04e018 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04dfe0 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0xa04dfd0 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa04e080 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04e048 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0xa04e038 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0xa04e1f0 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0xa04e1c0 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0xa04e1a0 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa04e168 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0xa04e158 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa04e1d4 <col:18> 'const char_type':'const _CharT' lvalue Var 0xa04d590 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0xa04e288 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa04e238 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa04e228 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa04e270 <col:19> 'int' 1))
  (ReturnStmt 0xa04e2c0 <line:126:7, col:14>
    (DeclRefExpr 0xa04e2a8 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa04c810 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0xa04ef88 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0xa04ead0 <line:134:7, col:42>
    0xa04ea20 "int_type __ret =
      (CallExpr 0xa04eab0 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa04ea78 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0xa04ec18 <line:135:7, col:57>
    0xa04eaf0 "const bool __testin =
      (CXXOperatorCallExpr 0xa04ebf0 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa04ebb0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (CXXDependentScopeMemberExpr 0xa04eb38 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0xa04eb28 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa04eb8c <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa04ef40 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa04ec40 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa04ec28 <col:11> 'const _Bool' lvalue Var 0xa04eaf0 '__testin' 'const _Bool'))
    (CompoundStmt 0xa04ef28 <line:137:2, line:143:2>
      (CallExpr 0xa04ec80 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0xa04ec60 <col:4> '<bound member function type>' ->_M_update_egptr 0xa0405b0
          (CXXThisExpr 0xa04ec50 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0xa04ef08 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa04edb8 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa04ed70 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
          (CallExpr 0xa04ece8 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04ecb0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa04eca0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa04ed50 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04ed18 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0xa04ed08 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa04eef0 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0xa04eddc <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa04ea20 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0xa04eed0 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa04ee18 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0xa04eeb8 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0xa04ee98 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa04ee60 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa04ee50 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa04ef78 <line:144:7, col:14>
    (DeclRefExpr 0xa04ef5c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa04ea20 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa040b58 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa040b48 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa040b30 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa040b10 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040aac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa040b20 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040aec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa054c18 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0xa052e98 <line:152:7, col:47>
    0xa052de0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa052e78 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa052e58 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa052e40 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa052e28 <col:44> 'int' 1))))")
  (DeclStmt 0xa053110 <line:153:7, col:67>
    0xa052eb0 "bool __testin =
      (CXXOperatorCallExpr 0xa0530e8 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa053090 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
        (ParenExpr 0xa053060 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0xa053038 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0xa052ff8 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
            (CXXOperatorCallExpr 0xa052fb8 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0xa052f78 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
              (DeclRefExpr 0xa052f10 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa052f40 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0xa052f30 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa052fdc <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa052b40 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa053078 <col:66> 'int' 0))")
  (DeclStmt 0xa053390 <line:154:7, col:69>
    0xa053130 "bool __testout =
      (CXXOperatorCallExpr 0xa053368 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa053310 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
        (ParenExpr 0xa0532e0 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0xa0532b8 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa053278 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
            (CXXOperatorCallExpr 0xa053238 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0xa0531f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
              (DeclRefExpr 0xa053190 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa0531c0 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa0531b0 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa05325c <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa052b40 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa0532f8 <col:68> 'int' 0))")
  (DeclStmt 0xa053550 <line:155:7, col:78>
    0xa0533b0 "const bool __testboth =
      (BinaryOperator 0xa053500 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0xa053438 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0xa053418 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa0533e4 <col:31> '_Bool' lvalue Var 0xa052eb0 '__testin' '_Bool'))
          (ImplicitCastExpr 0xa053428 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa0533fc <col:43> '_Bool' lvalue Var 0xa053130 '__testout' '_Bool')))
        (BinaryOperator 0xa0534e8 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0xa0534c8 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa0534a8 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa053450 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa052ad0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa0534d8 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa0534b8 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa053484 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9ec35c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0xa053690 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa053560 <col:7> '_Bool' lvalue Var 0xa052eb0 '__testin' '_Bool')
    (ImplicitCastExpr 0xa053680 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa053668 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa053658 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa053640 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa053618 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa053608 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0535f0 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcae0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa0535d0 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa053578 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa052b40 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa0535e0 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa0535ac <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0xa0537e0 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa0536b0 <col:7> '_Bool' lvalue Var 0xa053130 '__testout' '_Bool')
    (ImplicitCastExpr 0xa0537d0 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa0537b8 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa0537a8 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa053790 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa053768 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa053758 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa053740 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcae0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa053720 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa0536c8 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa052b40 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa053730 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa0536fc <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0xa053980 <line:161:7, col:72>
    0xa053830 "const char_type *__beg =
      (ConditionalOperator 0xa053960 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa053950 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa053864 <col:32> '_Bool' lvalue Var 0xa052eb0 '__testin' '_Bool'))
        (CallExpr 0xa0538c8 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa053890 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa053880 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa053930 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0538f8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa0538e8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa054bd0 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0xa053ac8 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0xa0539f0 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0xa0539d8 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0xa053990 <col:12> 'const char_type *' lvalue Var 0xa053830 '__beg' 'const char_type *')
          (UnaryOperator 0xa0539c0 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0xa0539a8 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa052a60 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0xa053ab0 <col:32, col:68> '_Bool'
        (BinaryOperator 0xa053a98 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0xa053a58 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0xa053a38 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa053a04 <col:33> '_Bool' lvalue Var 0xa052eb0 '__testin' '_Bool'))
            (ImplicitCastExpr 0xa053a48 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa053a1c <col:45> '_Bool' lvalue Var 0xa053130 '__testout' '_Bool')))
          (ImplicitCastExpr 0xa053a88 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa053a70 <col:58> 'const _Bool' lvalue Var 0xa0533b0 '__testboth' 'const _Bool')))))
    (CompoundStmt 0xa054ba8 <line:163:2, line:191:2>
      (CallExpr 0xa053b10 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0xa053af0 <col:4> '<bound member function type>' ->_M_update_egptr 0xa0405b0
          (CXXThisExpr 0xa053ae0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa053b90 <line:166:4, col:30>
        0xa053b40 "off_type __newoffi =
          (DeclRefExpr 0xa053b74 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa052a60 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0xa053c00 <line:167:4, col:34>
        0xa053bb0 "off_type __newoffo =
          (DeclRefExpr 0xa053be4 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053b40 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0xa054158 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0xa053ca8 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0xa053c88 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa053c68 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa053c10 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa052ad0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa053c98 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa053c78 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa053c44 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9ec35c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0xa053ef0 <line:169:6, line:172:6>
          (CompoundAssignOperator 0xa053db8 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa053cc0 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053b40 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa053d90 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa053d58 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (CallExpr 0xa053d20 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa053ce8 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa053cd8 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa053d3c <col:36> 'const char_type *' lvalue Var 0xa053830 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0xa053ed0 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa053dd8 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053bb0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa053ea8 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa053e70 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (CallExpr 0xa053e38 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa053e00 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa053df0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa053e54 <col:36> 'const char_type *' lvalue Var 0xa053830 '__beg' 'const char_type *'))))
        (IfStmt 0xa054138 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0xa053fa0 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0xa053f80 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa053f60 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa053f08 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa052ad0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0xa053f90 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa053f70 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa053f3c <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x9ec3620 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0xa054120 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0xa053fec <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053bb0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0xa054100 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa054004 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053b40 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0xa0540d8 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa0540a0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                (CallExpr 0xa054068 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa054030 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0xa054020 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa054084 <col:47> 'const char_type *' lvalue Var 0xa053830 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0xa0546e8 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0xa054418 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0xa054298 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0xa0541e0 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0xa0541c8 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0xa0541a8 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa054174 <col:9> '_Bool' lvalue Var 0xa052eb0 '__testin' '_Bool'))
                (ImplicitCastExpr 0xa0541b8 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa05418c <col:21> 'const _Bool' lvalue Var 0xa0533b0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa054270 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa054228 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
              (DeclRefExpr 0xa0541f4 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053b40 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa054210 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa0543f0 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa0543a8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
            (CXXOperatorCallExpr 0xa054368 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa054330 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (CallExpr 0xa0542f8 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0542c0 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0542b0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa054314 <col:27> 'const char_type *' lvalue Var 0xa053830 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa05438c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053b40 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa0546d0 <line:179:6, line:183:6>
          (CallExpr 0xa054638 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa054440 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa054430 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa0544c0 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa054488 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0xa054478 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0545a8 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa054560 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
              (CallExpr 0xa054528 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0544f0 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0544e0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa054544 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053b40 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0xa054618 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0545e0 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0xa0545d0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0xa0546b8 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa054660 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa052de0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa054698 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa054680 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053b40 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0xa054b88 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0xa0549a8 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0xa054828 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0xa054770 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0xa054758 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0xa054738 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa054704 <col:9> '_Bool' lvalue Var 0xa053130 '__testout' '_Bool'))
                (ImplicitCastExpr 0xa054748 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa05471c <col:22> 'const _Bool' lvalue Var 0xa0533b0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa054800 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa0547b8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
              (DeclRefExpr 0xa054784 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053bb0 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa0547a0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa054980 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa054938 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
            (CXXOperatorCallExpr 0xa0548f8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa0548c0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
              (CallExpr 0xa054888 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa054850 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa054840 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa0548a4 <col:27> 'const char_type *' lvalue Var 0xa053830 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa05491c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053bb0 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa054b70 <line:187:6, line:190:6>
          (CallExpr 0xa054ad8 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0xa0549d0 <col:8> '<bound member function type>' ->_M_pbump 0xa040770
              (CXXThisExpr 0xa0549c0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa054a38 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa054a00 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa0549f0 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa054aa0 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa054a68 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0xa054a58 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa054abc <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053bb0 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0xa054b58 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa054b00 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa052de0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa054b38 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa054b20 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa053bb0 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa054c08 <line:192:7, col:14>
    (DeclRefExpr 0xa054bec <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa052de0 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa040c48 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa040c38 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa040c20 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9ebcd10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa040c00 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040b9c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa040c10 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa040bdc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa056508 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0xa0554d8 <line:200:7, col:47>
    0xa055420 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa0554b8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa055498 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa055480 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa055468 <col:44> 'int' 1))))")
  (DeclStmt 0xa055750 <line:201:7, col:73>
    0xa0554f0 "const bool __testin =
      (CXXOperatorCallExpr 0xa055728 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa0556d0 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
        (ParenExpr 0xa0556a0 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0xa055678 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0xa055638 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
            (CXXOperatorCallExpr 0xa0555f8 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa0555b8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
              (DeclRefExpr 0xa055550 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa055580 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa055570 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa05561c <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa055190 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa0556b8 <col:72> 'int' 0))")
  (DeclStmt 0xa0559d0 <line:202:7, col:75>
    0xa055770 "const bool __testout =
      (CXXOperatorCallExpr 0xa0559a8 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0xa055950 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
        (ParenExpr 0xa055920 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0xa0558f8 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa0558b8 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
            (CXXOperatorCallExpr 0xa055878 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa055838 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
              (DeclRefExpr 0xa0557d0 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa055800 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0xa0557f0 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa05589c <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa055190 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa055938 <col:74> 'int' 0))")
  (DeclStmt 0xa055b40 <line:204:7, col:72>
    0xa0559f0 "const char_type *__beg =
      (ConditionalOperator 0xa055b20 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa055b10 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa055a24 <col:32> 'const _Bool' lvalue Var 0xa0554f0 '__testin' 'const _Bool'))
        (CallExpr 0xa055a88 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa055a50 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa055a40 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa055af0 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa055ab8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa055aa8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa0564c0 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0xa055c70 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0xa055bd8 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0xa055bc0 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0xa055b50 <col:12> 'const char_type *' lvalue Var 0xa0559f0 '__beg' 'const char_type *')
          (UnaryOperator 0xa055ba8 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0xa055b88 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0xa055b70 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa055120 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0xa055c58 <col:41, col:63> '_Bool'
        (BinaryOperator 0xa055c40 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0xa055c20 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa055bec <col:42> 'const _Bool' lvalue Var 0xa0554f0 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0xa055c30 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa055c04 <col:54> 'const _Bool' lvalue Var 0xa055770 '__testout' 'const _Bool')))))
    (CompoundStmt 0xa0564a0 <line:206:2, line:221:2>
      (CallExpr 0xa055cb8 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0xa055c98 <col:4> '<bound member function type>' ->_M_update_egptr 0xa0405b0
          (CXXThisExpr 0xa055c88 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa055d50 <line:209:4, col:30>
        0xa055ce0 "const off_type __pos =
          (ParenListExpr 0xa055d30 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0xa055d14 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa055120 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0xa055fe0 <line:210:4, line:211:41>
        0xa055d70 "const bool __testpos =
          (ParenExpr 0xa055fc8 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0xa055fb0 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa055e20 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa055dd8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
                (IntegerLiteral 0xa055da8 <col:28> 'int' 0)
                (DeclRefExpr 0xa055dc0 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa055ce0 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0xa055f88 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa055f40 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f0d0 0x9cb6090 0x9cb8ca0 0x9e15d20 0x9e16250 0x9e167b0)
                (DeclRefExpr 0xa055e44 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa055ce0 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0xa055f18 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0xa055ee0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
                  (CallExpr 0xa055ea8 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa055e70 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0xa055e60 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0xa055ec4 <col:35> 'const char_type *' lvalue Var 0xa0559f0 '__beg' 'const char_type *')))))")
      (IfStmt 0xa056480 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa056008 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa055ff0 <col:8> 'const _Bool' lvalue Var 0xa055d70 '__testpos' 'const _Bool'))
        (CompoundStmt 0xa056460 <line:213:6, line:220:6>
          (IfStmt 0xa056270 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0xa056030 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa056014 <col:12> 'const _Bool' lvalue Var 0xa0554f0 '__testin' 'const _Bool'))
            (CallExpr 0xa056248 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa056050 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa056040 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa0560d0 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa056098 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa056088 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa0561b8 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa056170 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
                (CallExpr 0xa056138 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa056100 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0560f0 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa056154 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa055ce0 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0xa056228 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0561f0 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0561e0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0xa0563f8 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0xa0562a8 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa05628c <col:12> 'const _Bool' lvalue Var 0xa055770 '__testout' 'const _Bool'))
            (CallExpr 0xa0563d0 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0xa0562c8 <col:3> '<bound member function type>' ->_M_pbump 0xa040770
                (CXXThisExpr 0xa0562b8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa056330 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0562f8 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0562e8 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0xa056398 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa056360 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0xa056350 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa0563b4 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa055ce0 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0xa056448 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0xa056414 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa055420 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0xa05642c <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa055120 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa0564f8 <line:222:7, col:14>
    (DeclRefExpr 0xa0564dc <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa055420 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0xa057538 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0xa056b48 <line:230:7, col:51>
    0xa056a40 "const bool __testin =
      (CXXOperatorCallExpr 0xa056b20 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa056ae8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebcae0)
        (MemberExpr 0xa056a88 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa03f500
          (CXXThisExpr 0xa056a78 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa056ac4 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec33f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa056c68 <line:231:7, col:53>
    0xa056b60 "const bool __testout =
      (CXXOperatorCallExpr 0xa056c40 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa056c08 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ebcae0)
        (MemberExpr 0xa056ba8 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa03f500
          (CXXThisExpr 0xa056b98 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa056be4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x9ec3450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa056dd8 <line:232:7, col:52>
    0xa056c90 "char_type *__endg =
      (CXXOperatorCallExpr 0xa056db0 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa056d68 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (DeclRefExpr 0xa056cc4 <col:27> 'char_type *' lvalue ParmVar 0xa0568b0 '__base' 'char_type *')
        (CallExpr 0xa056d48 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa056d10 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa056cf0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
              (CXXThisExpr 0xa056ce0 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0xa056f48 <line:233:7, col:56>
    0xa056e00 "char_type *__endp =
      (CXXOperatorCallExpr 0xa056f20 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa056ed8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (DeclRefExpr 0xa056e34 <col:27> 'char_type *' lvalue ParmVar 0xa0568b0 '__base' 'char_type *')
        (CallExpr 0xa056eb8 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa056e80 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa056e60 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
              (CXXThisExpr 0xa056e50 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0xa057178 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa057050 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa056ff8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (DeclRefExpr 0xa056f58 <col:11> 'char_type *' lvalue ParmVar 0xa0568b0 '__base' 'char_type *')
      (CallExpr 0xa056fd8 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa056fa0 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa056f80 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa03f540
            (CXXThisExpr 0xa056f70 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa057158 <line:236:2, line:241:2>
      (CompoundAssignOperator 0xa0570a8 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa057074 <col:4> 'char_type *' lvalue Var 0xa056c90 '__endg' 'char_type *')
        (DeclRefExpr 0xa05708c <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa0568f0 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0xa0570f8 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa0570c8 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa0568f0 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0xa0570e0 <col:10> 'int' 0))
      (BinaryOperator 0xa057140 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa057110 <col:4> 'char_type *' lvalue Var 0xa056e00 '__endp' 'char_type *')
        (DeclRefExpr 0xa057128 <col:13> 'char_type *' lvalue Var 0xa056c90 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0xa057300 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0571b0 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa057194 <col:11> 'const _Bool' lvalue Var 0xa056a40 '__testin' 'const _Bool'))
    (CallExpr 0xa0572d8 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0571d0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa0571c0 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa057204 <col:13> 'char_type *' lvalue ParmVar 0xa0568b0 '__base' 'char_type *')
      (CXXOperatorCallExpr 0xa057298 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa057250 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (DeclRefExpr 0xa05721c <col:21> 'char_type *' lvalue ParmVar 0xa0568b0 '__base' 'char_type *')
        (DeclRefExpr 0xa057234 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa0568f0 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0xa0572bc <col:35> 'char_type *' lvalue Var 0xa056c90 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0xa057518 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa057338 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa05731c <col:11> 'const _Bool' lvalue Var 0xa056b60 '__testout' 'const _Bool'))
    (CompoundStmt 0xa057500 <line:246:2, line:253:2>
      (CallExpr 0xa0573c0 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0xa057358 <col:4> '<bound member function type>' ->_M_pbump 0xa040770
          (CXXThisExpr 0xa057348 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa057378 <col:13> 'char_type *' lvalue ParmVar 0xa0568b0 '__base' 'char_type *')
        (DeclRefExpr 0xa057390 <col:21> 'char_type *' lvalue Var 0xa056e00 '__endp' 'char_type *')
        (DeclRefExpr 0xa0573a8 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa056930 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0xa0574e0 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0xa057410 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa057400 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa0573e8 <col:9> 'const _Bool' lvalue Var 0xa056a40 '__testin' 'const _Bool')))
        (CallExpr 0xa0574b8 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa057438 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa057428 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa05746c <col:17> 'char_type *' lvalue Var 0xa056c90 '__endg' 'char_type *')
          (DeclRefExpr 0xa057484 <col:25> 'char_type *' lvalue Var 0xa056c90 '__endg' 'char_type *')
          (DeclRefExpr 0xa05749c <col:33> 'char_type *' lvalue Var 0xa056c90 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0xa057f20 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0xa057af8 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa057a90 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa057a80 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa057ac4 <col:18> 'char_type *' lvalue ParmVar 0xa0578f0 '__pbeg' 'char_type *')
    (DeclRefExpr 0xa057adc <col:26> 'char_type *' lvalue ParmVar 0xa057940 '__pend' 'char_type *'))
  (WhileStmt 0xa057e88 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa057c38 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa057bf0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
      (DeclRefExpr 0xa057b1c <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa057980 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa057bd0 <col:22, col:56> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))
    (CompoundStmt 0xa057e70 <line:263:2, line:266:2>
      (CallExpr 0xa057d60 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa057c70 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa057c60 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa057d40 <col:16, col:50> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0xa057e50 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa057d80 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa057980 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0xa057e30 <col:13, col:47> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))))
  (CallExpr 0xa057f00 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa057eb0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa057ea0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa057ee4 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa057980 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0xa06ce90 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0xa06ce50 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0xa06ce18 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0xa06cdf0 <col:32> '_T1 *' lvalue ParmVar 0xa06cc50 '__p' '_T1 *'))
    (DeclRefExpr 0xa06ce30 <col:42> 'const _T2' lvalue ParmVar 0xa06ccc0 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0xa06d0c0 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0xa06d0a0 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0xa06d070 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0xa06d04c <col:7> '_Tp *' lvalue ParmVar 0xa06cf40 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa06db50 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa06d750 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0xa06d728 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa06d5a8 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa06d550 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (DeclRefExpr 0xa06d520 <col:11> '_ForwardIterator' lvalue ParmVar 0xa06d3a0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa06d538 <col:22> '_ForwardIterator' lvalue ParmVar 0xa06d3e0 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa06d5e8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa06d5cc <col:32> '_ForwardIterator' lvalue ParmVar 0xa06d3a0 '__first' '_ForwardIterator'))
    (CallExpr 0xa06d708 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa06d630 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020)
      (CallExpr 0xa06d6e8 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa06d680 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
        (UnaryOperator 0xa06d6d0 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa06d6b4 <col:38> '_ForwardIterator' lvalue ParmVar 0xa06d3a0 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa06db50 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa06dff8 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0xa06de30 <line:125:7, line:126:35>
    0xa06de00 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0xa06dfd0 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa06df78 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa06df9c <col:12> '_ForwardIterator' lvalue ParmVar 0xa06dbc0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa06dfb4 <col:21> '_ForwardIterator' lvalue ParmVar 0xa06dc00 '__last' '_ForwardIterator')))

;
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9d23908 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa164ac0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa164814 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9d2a880 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9d23a20 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9d23a40 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0xa06e5d0 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0xa06e5a8 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa06e440 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa06e3e8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (DeclRefExpr 0xa06e3b4 <col:14> '_ForwardIterator' lvalue ParmVar 0xa06e1b0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa06e3cc <col:25> '_ForwardIterator' lvalue ParmVar 0xa06e1f0 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa06e480 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa06e464 <col:35> '_ForwardIterator' lvalue ParmVar 0xa06e1b0 '__first' '_ForwardIterator'))
    (CallExpr 0xa06e588 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa06e4b0 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0xa06e494 <col:2> '_Allocator' lvalue ParmVar 0xa06e260 '__alloc' '_Allocator &'))
      (CallExpr 0xa06e568 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa06e500 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
        (UnaryOperator 0xa06e550 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa06e534 <col:36> '_ForwardIterator' lvalue ParmVar 0xa06e1b0 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0xa06ea00 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0xa06e9d8 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0xa06e968 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa06e930 0xa06e380 0xa06dce0 0xa06d020)
    (DeclRefExpr 0xa06e9a8 <col:16> '_ForwardIterator' lvalue ParmVar 0xa06e6b0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa06e9c0 <col:25> '_ForwardIterator' lvalue ParmVar 0xa06e6f0 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa06f9e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa06f9d0 <col:11, col:53>
    (CallExpr 0xa06f9a8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa06f928 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
      (DeclRefExpr 0xa06f960 <col:28> '_InputIterator' lvalue ParmVar 0xa06f750 '__first' '_InputIterator')
      (DeclRefExpr 0xa06f978 <col:37> '_InputIterator' lvalue ParmVar 0xa06f790 '__last' '_InputIterator')
      (DeclRefExpr 0xa06f990 <col:45> '_ForwardIterator' lvalue ParmVar 0xa06f7d0 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa06f468 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0xa06f020 <line:73:4, col:37>
    0xa06efd0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa06f004 <col:29> '_ForwardIterator' lvalue ParmVar 0xa06ee80 '__result' '_ForwardIterator')")
  (IfStmt 0xa06f330 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa06f030 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa06f318 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0xa06f2c8 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa06f0c8 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa06f070 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
          (DeclRefExpr 0xa06f040 <col:15> '_InputIterator' lvalue ParmVar 0xa06ee00 '__first' '_InputIterator')
          (DeclRefExpr 0xa06f058 <col:26> '_InputIterator' lvalue ParmVar 0xa06ee40 '__last' '_InputIterator'))
        (BinaryOperator 0xa06f150 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0xa06f108 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa06f0ec <col:36> '_InputIterator' lvalue ParmVar 0xa06ee00 '__first' '_InputIterator'))
          (UnaryOperator 0xa06f138 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa06f11c <col:47> '_ForwardIterator' lvalue Var 0xa06efd0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa06f2a0 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa06f198 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06cdc0)
          (CallExpr 0xa06f250 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa06f1e8 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
            (UnaryOperator 0xa06f238 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa06f21c <col:37> '_ForwardIterator' lvalue Var 0xa06efd0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa06f288 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa06f270 <col:46> '_InputIterator' lvalue ParmVar 0xa06ee00 '__first' '_InputIterator'))))
      (ReturnStmt 0xa06f308 <line:78:8, col:15>
        (DeclRefExpr 0xa06f2ec <col:15> '_ForwardIterator' lvalue Var 0xa06efd0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa06f448 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa06f350 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa06f430 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0xa06f3f8 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa06f388 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa06f3c8 <col:22> '_ForwardIterator' lvalue ParmVar 0xa06ee80 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa06f3e0 <col:32> '_ForwardIterator' lvalue Var 0xa06efd0 '__cur' '_ForwardIterator'))
      (NullStmt 0xa06f420 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa06f9e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa06f9d0 <col:11, col:53>
    (CallExpr 0xa06f9a8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa06f928 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
      (DeclRefExpr 0xa06f960 <col:28> '_InputIterator' lvalue ParmVar 0xa06f750 '__first' '_InputIterator')
      (DeclRefExpr 0xa06f978 <col:37> '_InputIterator' lvalue ParmVar 0xa06f790 '__last' '_InputIterator')
      (DeclRefExpr 0xa06f990 <col:45> '_ForwardIterator' lvalue ParmVar 0xa06f7d0 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa0700e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0xa06fd80 <line:112:7, line:113:13>
    0xa06fd50 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0xa06feb0 <line:114:7, line:115:13>
    0xa06fe80 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0xa0700d8 <line:117:7, line:119:41>
    (CallExpr 0xa0700b0 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa070040 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0xa070064 <col:16> '_InputIterator' lvalue ParmVar 0xa06fac0 '__first' '_InputIterator')
      (DeclRefExpr 0xa07007c <col:25> '_InputIterator' lvalue ParmVar 0xa06fb00 '__last' '_InputIterator')
      (DeclRefExpr 0xa070094 <col:33> '_ForwardIterator' lvalue ParmVar 0xa06fb40 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa071020 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa070ff8 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa070f78 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0)
    (DeclRefExpr 0xa070fac <col:21> '_ForwardIterator' lvalue ParmVar 0xa070d60 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa070fc4 <col:30> '_ForwardIterator' lvalue ParmVar 0xa070da0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa070fdc <col:38> 'const _Tp' lvalue ParmVar 0xa070e10 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa070a80 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0xa0706d0 <line:131:4, col:36>
    0xa070680 "_ForwardIterator __cur =
      (DeclRefExpr 0xa0706b4 <col:29> '_ForwardIterator' lvalue ParmVar 0xa070430 '__first' '_ForwardIterator')")
  (IfStmt 0xa070948 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa0706e0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa070930 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0xa070908 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa070778 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa070720 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
          (DeclRefExpr 0xa0706f0 <col:15> '_ForwardIterator' lvalue Var 0xa070680 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa070708 <col:24> '_ForwardIterator' lvalue ParmVar 0xa070470 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa0707b8 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa07079c <col:34> '_ForwardIterator' lvalue Var 0xa070680 '__cur' '_ForwardIterator'))
        (CallExpr 0xa0708e0 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa0707f0 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06cdc0)
          (CallExpr 0xa0708a8 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa070840 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
            (UnaryOperator 0xa070890 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa070874 <col:37> '_ForwardIterator' lvalue Var 0xa070680 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa0708c8 <col:45> 'const _Tp' lvalue ParmVar 0xa070500 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa070a60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa070968 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa070a48 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0xa070a10 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa0709a0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa0709e0 <col:22> '_ForwardIterator' lvalue ParmVar 0xa070430 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0709f8 <col:31> '_ForwardIterator' lvalue Var 0xa070680 '__cur' '_ForwardIterator'))
      (NullStmt 0xa070a38 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa071020 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa070ff8 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa070f78 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0)
    (DeclRefExpr 0xa070fac <col:21> '_ForwardIterator' lvalue ParmVar 0xa070d60 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa070fc4 <col:30> '_ForwardIterator' lvalue ParmVar 0xa070da0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa070fdc <col:38> 'const _Tp' lvalue ParmVar 0xa070e10 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa0715d0 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0xa0713f0 <line:169:7, line:170:12>
    0xa0713c0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa0715a8 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa071538 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa07155c <col:16> '_ForwardIterator' lvalue ParmVar 0xa071100 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa071574 <col:25> '_ForwardIterator' lvalue ParmVar 0xa071140 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa07158c <col:33> 'const _Tp' lvalue ParmVar 0xa0711b0 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa072610 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa0725e8 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa072568 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce8850)
    (DeclRefExpr 0xa07259c <col:23> '_ForwardIterator' lvalue ParmVar 0xa072320 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa0725b4 <col:32> '_Size' lvalue ParmVar 0xa072360 '__n' '_Size')
    (DeclRefExpr 0xa0725cc <col:37> 'const _Tp' lvalue ParmVar 0xa0723d0 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa071ff0 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0xa071c00 <line:185:4, col:36>
    0xa071bb0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa071be4 <col:29> '_ForwardIterator' lvalue ParmVar 0xa071960 '__first' '_ForwardIterator')")
  (IfStmt 0xa071eb8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa071c10 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa071ea0 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0xa071e78 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa071c98 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa071c50 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (DeclRefExpr 0xa071c20 <col:15> '_Size' lvalue ParmVar 0xa0719a0 '__n' '_Size')
          (IntegerLiteral 0xa071c38 <col:21> 'int' 0))
        (BinaryOperator 0xa071d20 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0xa071cd8 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa071cbc <col:26> '_Size' lvalue ParmVar 0xa0719a0 '__n' '_Size'))
          (UnaryOperator 0xa071d08 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa071cec <col:33> '_ForwardIterator' lvalue Var 0xa071bb0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa071e50 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa071d60 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06cdc0)
          (CallExpr 0xa071e18 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa071db0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
            (UnaryOperator 0xa071e00 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa071de4 <col:37> '_ForwardIterator' lvalue Var 0xa071bb0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa071e38 <col:45> 'const _Tp' lvalue ParmVar 0xa071a30 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa071fd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa071ed8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa071fb8 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0xa071f80 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa071f10 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa071f50 <col:22> '_ForwardIterator' lvalue ParmVar 0xa071960 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa071f68 <col:31> '_ForwardIterator' lvalue Var 0xa071bb0 '__cur' '_ForwardIterator'))
      (NullStmt 0xa071fa8 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa072610 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa0725e8 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa072568 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce8850)
    (DeclRefExpr 0xa07259c <col:23> '_ForwardIterator' lvalue ParmVar 0xa072320 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa0725b4 <col:32> '_Size' lvalue ParmVar 0xa072360 '__n' '_Size')
    (DeclRefExpr 0xa0725cc <col:37> 'const _Tp' lvalue ParmVar 0xa0723d0 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa072c10 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0xa072a30 <line:222:7, line:223:12>
    0xa072a00 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa072be8 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa072b78 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa072b9c <col:18> '_ForwardIterator' lvalue ParmVar 0xa072740 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa072bb4 <col:27> '_Size' lvalue ParmVar 0xa072780 '__n' '_Size')
    (DeclRefExpr 0xa072bcc <col:32> 'const _Tp' lvalue ParmVar 0xa0727f0 '__x' 'const _Tp &')))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa073448 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0xa073000 <line:241:7, col:40>
    0xa072fb0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa072fe4 <col:32> '_ForwardIterator' lvalue ParmVar 0xa072dc0 '__result' '_ForwardIterator')")
  (IfStmt 0xa0732f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa073010 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa0732e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0xa073290 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa0730a8 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa073050 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
          (DeclRefExpr 0xa073020 <col:11> '_InputIterator' lvalue ParmVar 0xa072d40 '__first' '_InputIterator')
          (DeclRefExpr 0xa073038 <col:22> '_InputIterator' lvalue ParmVar 0xa072d80 '__last' '_InputIterator'))
        (BinaryOperator 0xa073130 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0xa0730e8 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa0730cc <col:32> '_InputIterator' lvalue ParmVar 0xa072d40 '__first' '_InputIterator'))
          (UnaryOperator 0xa073118 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa0730fc <col:43> '_ForwardIterator' lvalue Var 0xa072fb0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa073268 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa073160 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa073148 <col:6> '_Allocator' lvalue ParmVar 0xa072e50 '__alloc' '_Allocator &'))
          (CallExpr 0xa073218 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa0731b0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
            (UnaryOperator 0xa073200 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa0731e4 <col:42> '_ForwardIterator' lvalue Var 0xa072fb0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa073250 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa073238 <col:51> '_InputIterator' lvalue ParmVar 0xa072d40 '__first' '_InputIterator'))))
      (ReturnStmt 0xa0732d0 <line:246:4, col:11>
        (DeclRefExpr 0xa0732b4 <col:11> '_ForwardIterator' lvalue Var 0xa072fb0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa073428 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa073318 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa073410 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0xa0733d8 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa073350 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa073390 <col:18> '_ForwardIterator' lvalue ParmVar 0xa072dc0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa0733a8 <col:28> '_ForwardIterator' lvalue Var 0xa072fb0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa0733c0 <col:35> '_Allocator' lvalue ParmVar 0xa072e50 '__alloc' '_Allocator &'))
      (NullStmt 0xa073400 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0xa073978 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0xa073968 <col:7, col:63>
    (CallExpr 0xa073940 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa0738c0 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06fc30)
      (DeclRefExpr 0xa0738f4 <col:38> '_InputIterator' lvalue ParmVar 0xa073580 '__first' '_InputIterator')
      (DeclRefExpr 0xa07390c <col:47> '_InputIterator' lvalue ParmVar 0xa0735c0 '__last' '_InputIterator')
      (DeclRefExpr 0xa073924 <col:55> '_ForwardIterator' lvalue ParmVar 0xa073600 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa073dd8 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0xa073dc8 <line:267:7, line:269:24>
    (CallExpr 0xa073d98 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa073cd0 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
      (ParenExpr 0xa073d20 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa073d08 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0xa073aa0 '__first' '_InputIterator'))
      (ParenExpr 0xa073d50 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa073d34 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0xa073ae0 '__last' '_InputIterator'))
      (DeclRefExpr 0xa073d64 <line:269:7> '_ForwardIterator' lvalue ParmVar 0xa073b20 '__result' '_ForwardIterator')
      (DeclRefExpr 0xa073d7c <col:17> '_Allocator' lvalue ParmVar 0xa073b90 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa074590 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0xa0741d0 <line:277:7, col:39>
    0xa074180 "_ForwardIterator __cur =
      (DeclRefExpr 0xa0741b4 <col:32> '_ForwardIterator' lvalue ParmVar 0xa073f00 '__first' '_ForwardIterator')")
  (IfStmt 0xa074440 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa0741e0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa074428 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0xa074400 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa074278 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa074220 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
          (DeclRefExpr 0xa0741f0 <col:11> '_ForwardIterator' lvalue Var 0xa074180 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa074208 <col:20> '_ForwardIterator' lvalue ParmVar 0xa073f40 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa0742b8 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa07429c <col:30> '_ForwardIterator' lvalue Var 0xa074180 '__cur' '_ForwardIterator'))
        (CallExpr 0xa0743d8 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0742e8 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa0742cc <col:6> '_Allocator' lvalue ParmVar 0xa074020 '__alloc' '_Allocator &'))
          (CallExpr 0xa0743a0 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa074338 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
            (UnaryOperator 0xa074388 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa07436c <col:42> '_ForwardIterator' lvalue Var 0xa074180 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa0743c0 <col:50> 'const _Tp' lvalue ParmVar 0xa073fb0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa074570 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa074460 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa074558 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0xa074520 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa074498 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa0744d8 <col:18> '_ForwardIterator' lvalue ParmVar 0xa073f00 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0744f0 <col:27> '_ForwardIterator' lvalue Var 0xa074180 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa074508 <col:34> '_Allocator' lvalue ParmVar 0xa074020 '__alloc' '_Allocator &'))
      (NullStmt 0xa074548 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa07a338 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0xa07a310 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa07a290 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0712a0)
    (DeclRefExpr 0xa07a2c4 <col:31> '_ForwardIterator' lvalue ParmVar 0xa079f60 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa07a2dc <col:40> '_ForwardIterator' lvalue ParmVar 0xa079fa0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa07a2f4 <col:48> 'const _Tp' lvalue ParmVar 0xa07a010 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa07ab98 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0xa07a7a0 <line:302:7, col:39>
    0xa07a750 "_ForwardIterator __cur =
      (DeclRefExpr 0xa07a784 <col:32> '_ForwardIterator' lvalue ParmVar 0xa07a4b0 '__first' '_ForwardIterator')")
  (IfStmt 0xa07aa48 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07a7b0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa07aa30 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0xa07aa08 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa07a838 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa07a7f0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
          (DeclRefExpr 0xa07a7c0 <col:11> '_Size' lvalue ParmVar 0xa07a4f0 '__n' '_Size')
          (IntegerLiteral 0xa07a7d8 <col:17> 'int' 0))
        (BinaryOperator 0xa07a8c0 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0xa07a878 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa07a85c <col:22> '_Size' lvalue ParmVar 0xa07a4f0 '__n' '_Size'))
          (UnaryOperator 0xa07a8a8 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa07a88c <col:29> '_ForwardIterator' lvalue Var 0xa07a750 '__cur' '_ForwardIterator')))
        (CallExpr 0xa07a9e0 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa07a8f0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa07a8d8 <col:6> '_Allocator' lvalue ParmVar 0xa07a5f0 '__alloc' '_Allocator &'))
          (CallExpr 0xa07a9a8 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa07a940 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
            (UnaryOperator 0xa07a990 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa07a974 <col:42> '_ForwardIterator' lvalue Var 0xa07a750 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa07a9c8 <col:50> 'const _Tp' lvalue ParmVar 0xa07a560 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa07ab78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07aa68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa07ab60 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0xa07ab28 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa07aaa0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa07aae0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa07a4b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa07aaf8 <col:27> '_ForwardIterator' lvalue Var 0xa07a750 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa07ab10 <col:34> '_Allocator' lvalue ParmVar 0xa07a5f0 '__alloc' '_Allocator &'))
      (NullStmt 0xa07ab50 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa07b148 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0xa07b120 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa07b0a0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0728e0)
    (DeclRefExpr 0xa07b0d4 <col:33> '_ForwardIterator' lvalue ParmVar 0xa07ad20 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa07b0ec <col:42> '_Size' lvalue ParmVar 0xa07ad60 '__n' '_Size')
    (DeclRefExpr 0xa07b104 <col:47> 'const _Tp' lvalue ParmVar 0xa07add0 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa07b940 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0xa07b6c8 <line:342:7, line:344:19>
    0xa07b5b0 "_ForwardIterator __mid =
      (CallExpr 0xa07b698 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa07b600 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
        (DeclRefExpr 0xa07b638 <col:60> '_InputIterator1' lvalue ParmVar 0xa07b2c0 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa07b650 <col:70> '_InputIterator1' lvalue ParmVar 0xa07b300 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa07b668 <line:343:11> '_ForwardIterator' lvalue ParmVar 0xa07b3c0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa07b680 <line:344:11> '_Allocator' lvalue ParmVar 0xa07b430 '__alloc' '_Allocator &'))")
  (IfStmt 0xa07b7f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07b6d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa07b7d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0xa07b7c8 <line:347:4, col:72>
        (CallExpr 0xa07b798 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa07b700 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
          (DeclRefExpr 0xa07b734 <col:39> '_InputIterator2' lvalue ParmVar 0xa07b340 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa07b74c <col:49> '_InputIterator2' lvalue ParmVar 0xa07b380 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa07b764 <col:58> '_ForwardIterator' lvalue Var 0xa07b5b0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa07b77c <col:65> '_Allocator' lvalue ParmVar 0xa07b430 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa07b920 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07b810 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa07b908 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0xa07b8d0 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa07b848 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa07b888 <col:18> '_ForwardIterator' lvalue ParmVar 0xa07b3c0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa07b8a0 <col:28> '_ForwardIterator' lvalue Var 0xa07b5b0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa07b8b8 <col:35> '_Allocator' lvalue ParmVar 0xa07b430 '__alloc' '_Allocator &'))
      (NullStmt 0xa07b8f8 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa07c110 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0xa07be98 <line:370:7, line:372:19>
    0xa07bd80 "_ForwardIterator __mid =
      (CallExpr 0xa07be68 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa07bdd0 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
        (DeclRefExpr 0xa07be04 <col:60> '_InputIterator1' lvalue ParmVar 0xa07bac0 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa07be1c <col:70> '_InputIterator1' lvalue ParmVar 0xa07bb00 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa07be34 <line:371:11> '_ForwardIterator' lvalue ParmVar 0xa07bbc0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa07be4c <line:372:11> '_Allocator' lvalue ParmVar 0xa07bc30 '__alloc' '_Allocator &'))")
  (IfStmt 0xa07bfc0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07bea8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa07bfa8 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0xa07bf98 <line:375:4, col:72>
        (CallExpr 0xa07bf68 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa07bed0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
          (DeclRefExpr 0xa07bf08 <col:39> '_InputIterator2' lvalue ParmVar 0xa07bb40 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa07bf20 <col:49> '_InputIterator2' lvalue ParmVar 0xa07bb80 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa07bf38 <col:58> '_ForwardIterator' lvalue Var 0xa07bd80 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa07bf50 <col:65> '_Allocator' lvalue ParmVar 0xa07bc30 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa07c0f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07bfe0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa07c0d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0xa07c0a0 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa07c018 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa07c058 <col:18> '_ForwardIterator' lvalue ParmVar 0xa07bbc0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa07c070 <col:28> '_ForwardIterator' lvalue Var 0xa07bd80 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa07c088 <col:35> '_Allocator' lvalue ParmVar 0xa07bc30 '__alloc' '_Allocator &'))
      (NullStmt 0xa07c0c8 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0xa07c8f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0xa07c660 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0xa07c5c8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa074140 0xa07a230)
    (DeclRefExpr 0xa07c600 <col:35> '_ForwardIterator' lvalue ParmVar 0xa07c290 '__result' '_ForwardIterator')
    (DeclRefExpr 0xa07c618 <col:45> '_ForwardIterator' lvalue ParmVar 0xa07c2d0 '__mid' '_ForwardIterator')
    (DeclRefExpr 0xa07c630 <col:52> 'const _Tp' lvalue ParmVar 0xa07c340 '__x' 'const _Tp &')
    (DeclRefExpr 0xa07c648 <col:57> '_Allocator' lvalue ParmVar 0xa07c430 '__alloc' '_Allocator &'))
  (IfStmt 0xa07c7a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07c690 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa07c790 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0xa07c780 <line:397:4, col:70>
        (CallExpr 0xa07c750 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0xa07c6b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
          (DeclRefExpr 0xa07c6ec <col:39> '_InputIterator' lvalue ParmVar 0xa07c380 '__first' '_InputIterator')
          (DeclRefExpr 0xa07c704 <col:48> '_InputIterator' lvalue ParmVar 0xa07c3c0 '__last' '_InputIterator')
          (DeclRefExpr 0xa07c71c <col:56> '_ForwardIterator' lvalue ParmVar 0xa07c2d0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa07c734 <col:63> '_Allocator' lvalue ParmVar 0xa07c430 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa07c8d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07c7c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa07c8c0 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0xa07c888 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa07c800 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa07c840 <col:18> '_ForwardIterator' lvalue ParmVar 0xa07c290 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa07c858 <col:28> '_ForwardIterator' lvalue ParmVar 0xa07c2d0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa07c870 <col:35> '_Allocator' lvalue ParmVar 0xa07c430 '__alloc' '_Allocator &'))
      (NullStmt 0xa07c8b0 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa07d130 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0xa07ceb8 <line:417:7, line:419:20>
    0xa07cda0 "_ForwardIterator __mid2 =
      (CallExpr 0xa07ce88 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa07cdf0 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
        (DeclRefExpr 0xa07ce24 <col:61> '_InputIterator' lvalue ParmVar 0xa07ca80 '__first1' '_InputIterator')
        (DeclRefExpr 0xa07ce3c <col:71> '_InputIterator' lvalue ParmVar 0xa07cac0 '__last1' '_InputIterator')
        (DeclRefExpr 0xa07ce54 <line:418:12> '_ForwardIterator' lvalue ParmVar 0xa07cb00 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa07ce6c <line:419:12> '_Allocator' lvalue ParmVar 0xa07cc20 '__alloc' '_Allocator &'))")
  (IfStmt 0xa07cfe0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07cec8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa07cfc8 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0xa07cf98 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa07cf00 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa074140 0xa07a230)
        (DeclRefExpr 0xa07cf38 <col:32> '_ForwardIterator' lvalue Var 0xa07cda0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa07cf50 <col:40> '_ForwardIterator' lvalue ParmVar 0xa07cb40 '__last2' '_ForwardIterator')
        (DeclRefExpr 0xa07cf68 <col:49> 'const _Tp' lvalue ParmVar 0xa07cbb0 '__x' 'const _Tp &')
        (DeclRefExpr 0xa07cf80 <col:54> '_Allocator' lvalue ParmVar 0xa07cc20 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0xa07d110 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa07d000 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa07d0f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0xa07d0c0 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa07d038 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (DeclRefExpr 0xa07d078 <col:18> '_ForwardIterator' lvalue ParmVar 0xa07cb00 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa07d090 <col:28> '_ForwardIterator' lvalue Var 0xa07cda0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa07d0a8 <col:36> '_Allocator' lvalue ParmVar 0xa07cc20 '__alloc' '_Allocator &'))
      (NullStmt 0xa07d0e8 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0xa07e6f8 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0xa07e748 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa07e798 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0xa07e7f8 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0xa07e808 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0xa07dab0 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0xa07e868 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0xa07e8b8 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa07e908 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0xa07e968 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0xa07eac8 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0xa07eab8 <col:9, col:60>
    (UnaryOperator 0xa07eaa0 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa07ea88 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa07ea20 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa07e9e0 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CXXDependentScopeMemberExpr 0xa07e9a8 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0xa07e998 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0xa07ec28 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0xa07ec18 <col:9, col:66>
    (UnaryOperator 0xa07ec00 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa07ebe8 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa07eb80 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0xa07eb40 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CXXDependentScopeMemberExpr 0xa07eb08 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0xa07eaf8 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa07ece8 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0xa07ecd8 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa07ecb8 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0xa07ec98 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0xa07ec58 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0xa07ed40 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa07ed50 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa07df70 '__a' 'const allocator_type &')
) (CompoundStmt 0xa07edb0 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0xa07f1d0 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0xa07ef00 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa07ee48 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07ee10 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa07ee00 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa07eee0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa07ee90 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa07ee80 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa07eec4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa07e090 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa07f018 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa07ef60 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07ef28 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa07ef18 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa07efe0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07efa8 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa07ef98 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa07f1b8 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa07f078 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07f040 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa07f030 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa07f190 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa07f148 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
      (CXXDependentScopeMemberExpr 0xa07f0f8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa07f0c0 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa07f0b0 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa07f12c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa07e090 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0xa07f1ec </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa07e1b0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa07f620 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0xa07f350 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa07f298 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07f260 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa07f250 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa07f330 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa07f2e0 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa07f2d0 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa07f314 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa07e160 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa07f468 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa07f3b0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07f378 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa07f368 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa07f430 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07f3f8 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa07f3e8 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa07f608 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa07f4c8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07f490 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa07f480 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa07f5e0 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa07f598 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
      (CXXDependentScopeMemberExpr 0xa07f548 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa07f510 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa07f500 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa07f57c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa07e160 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0xa07f878 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0xa07f850 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0xa07f650 <line:142:9> '<bound member function type>' ->_M_deallocate 0xa07e650
      (CXXThisExpr 0xa07f640 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa07f6b8 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa07f680 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa07f670 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa07f828 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa07f7f0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
      (CXXDependentScopeMemberExpr 0xa07f738 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa07f700 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa07f6f0 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa07f7b8 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa07f780 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa07f770 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0xa07f9e0 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0xa07f9d0 <col:9, col:51>
    (ConditionalOperator 0xa07f9b0 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0xa07f8e0 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa07f8c0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa07f88c <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa07e410 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa07f8d0 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa07f8a8 <col:23> 'int' 0)))
      (CallExpr 0xa07f978 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07f928 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0xa07f908 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa07e3b0
            (CXXThisExpr 0xa07f8f8 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa07f95c <col:44> 'size_t':'unsigned int' lvalue ParmVar 0xa07e410 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0xa07f998 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0xa07faf0 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0xa07fad0 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0xa07f9f4 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa07e570 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0xa07faa8 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa07fa40 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa07fa20 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa07e3b0
          (CXXThisExpr 0xa07fa10 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa07fa74 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa07e570 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0xa07fa8c <col:28> 'size_t':'unsigned int' lvalue ParmVar 0xa07e5b0 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0xa08a120 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0xa08a130 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa081040 '__a' 'const allocator_type &')
) (CompoundStmt 0xa08a190 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0xa08a060 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa08a080 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa08a1a0 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0xa081150 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0xa08a1b8 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa081220 '__a' 'const allocator_type &')
) (CompoundStmt 0xa08a2c0 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0xa08a298 <col:9, col:40> '<dependent type>'
    (MemberExpr 0xa08a248 <col:9> '<bound member function type>' ->_M_fill_initialize 0xa0886f0
      (CXXThisExpr 0xa08a238 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa08a268 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa081150 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa08a280 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0xa0811d0 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0xa08a328 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa08a2f0 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0xa08a2d4 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa081390 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0xa08a398 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa08a360 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0xa08a344 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa081390 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0xa08a6d0 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0xa08a6b8 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa08a448 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08a410 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa08a400 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa08a688 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa08a498 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
      (CallExpr 0xa08a520 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08a4e8 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa08a4d0 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa081390 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa08a590 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08a558 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0xa08a53c <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa081390 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0xa08a5f8 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa08a5c0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa08a5b0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa08a668 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa08a62c <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa08a0a0 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa08a6e4 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa081570 '__a' 'const allocator_type &')
) (CompoundStmt 0xa08a968 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0xa08a880 <line:339:4, col:72>
    0xa08a850 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa08a940 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0xa08a8a0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa08a8e0 <col:27> '_InputIterator' lvalue ParmVar 0xa0814e0 '__first' '_InputIterator')
    (DeclRefExpr 0xa08a8f8 <col:36> '_InputIterator' lvalue ParmVar 0xa081520 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa08a928 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0xa08ab68 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0xa08ab40 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa08a9a8 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
    (CXXDependentScopeMemberExpr 0xa08aa30 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08a9f8 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa08a9e8 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa08aab0 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08aa78 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa08aa68 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa08ab20 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa08aae4 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0xa08ac08 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0xa08abe0 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa08ab90 <col:9> '<bound member function type>' ->_M_fill_assign 0xa089090
      (CXXThisExpr 0xa08ab80 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa08abb0 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0xa0818a0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa08abc8 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0xa0818f0 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa08ae38 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0xa08ad50 <line:432:4, col:72>
    0xa08ad20 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa08ae10 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0xa08ad70 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa08adb0 <col:23> '_InputIterator' lvalue ParmVar 0xa081a60 '__first' '_InputIterator')
    (DeclRefExpr 0xa08adc8 <col:32> '_InputIterator' lvalue ParmVar 0xa081aa0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa08adf8 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0xa08af08 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0xa08aef8 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0xa08aed8 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa08aea0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa08ae68 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa08ae58 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0xa08aff8 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0xa08afe8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa08afc8 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa08af90 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa08af58 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa08af48 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0xa08b0c8 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0xa08b0b8 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0xa08b098 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa08b060 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa08b028 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa08b018 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0xa08b198 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0xa08b188 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0xa08b168 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa08b130 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa08b0f8 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa08b0e8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0xa08b258 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0xa08b248 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0xa08b228 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa08b208 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa08b1c8 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa08b318 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0xa08b308 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa08b2e8 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa08b2c8 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0xa08b288 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0xa08b3d8 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0xa08b3c8 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa08b3a8 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa08b388 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa08b348 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0xa08b498 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0xa08b488 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa08b468 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa08b448 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0xa08b408 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0xa08b648 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0xa08b638 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0xa08b618 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa08b5f0 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa08b5b8 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CXXDependentScopeMemberExpr 0xa08b500 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa08b4c8 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa08b4b8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa08b580 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa08b548 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0xa08b538 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0xa08b720 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0xa08b710 <col:9, col:47>
    (CallExpr 0xa08b6f0 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa08b6b8 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0xa08b698 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa08b65c <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0xa08a0c0 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0xa08bc50 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0xa08bc30 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa08b7e8 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa08b7a0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
      (DeclRefExpr 0xa08b734 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa086300 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa08b780 <col:19, col:24> '<dependent type>'
        (MemberExpr 0xa08b760 <col:19> '<bound member function type>' ->size 0xa086210
          (CXXThisExpr 0xa08b750 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa08b9b8 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0xa08b820 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa08b8b8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa08b878 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa08b978 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa08b940 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (DeclRefExpr 0xa08b8d4 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0xa086300 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa08b920 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa08b900 <col:31> '<bound member function type>' ->size 0xa086210
            (CXXThisExpr 0xa08b8f0 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa08b99c <col:39> 'value_type':'_Tp' lvalue ParmVar 0xa086340 '__x' 'value_type':'_Tp'))
    (IfStmt 0xa08bc10 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa08ba90 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa08ba48 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
        (DeclRefExpr 0xa08b9e0 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa086300 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa08ba28 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa08ba08 <col:24> '<bound member function type>' ->size 0xa086210
            (CXXThisExpr 0xa08b9f8 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0xa08bbf0 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0xa08bac8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa089ff0
          (CXXThisExpr 0xa08bab8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa08bbc8 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa08bb80 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (CXXDependentScopeMemberExpr 0xa08bb30 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa08baf8 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa08bae8 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa08bb64 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0xa086300 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0xa08be00 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0xa08bdf0 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0xa08bdd0 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa08bda8 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa08bd70 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CXXDependentScopeMemberExpr 0xa08bcb8 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa08bc80 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa08bc70 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa08bd38 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa08bd00 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa08bcf0 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0xa08bf90 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0xa08bf80 <col:9, col:31>
    (CXXOperatorCallExpr 0xa08bf58 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0xa08bef8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
      (CallExpr 0xa08be68 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa08be28 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0xa08bed8 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa08be98 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0xa08c0f0 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0xa08c0e0 <col:9, col:46>
    (UnaryOperator 0xa08c0c8 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa08c0b0 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa08c088 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa08c040 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (CXXDependentScopeMemberExpr 0xa08bff0 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa08bfb8 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa08bfa8 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa08c024 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa086660 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa08c250 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0xa08c240 <col:9, col:46>
    (UnaryOperator 0xa08c228 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa08c210 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa08c1e8 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa08c1a0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
          (CXXDependentScopeMemberExpr 0xa08c150 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa08c118 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa08c108 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa08c184 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa086790 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa08c450 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0xa08c430 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa08c330 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa08c2e8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880)
      (DeclRefExpr 0xa08c264 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa0868f0 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa08c2c8 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08c290 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa08c280 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa08c400 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0xa08c3f0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa08c3d4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa08c420 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa08c3c0 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0xa08c38c </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa08c550 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0xa08c4b0 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0xa08c478 <col:2> '<bound member function type>' ->_M_range_check 0xa086990
      (CXXThisExpr 0xa08c468 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa08c498 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa086a50 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa08c540 <line:738:2, col:20>
    (ArraySubscriptExpr 0xa08c528 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa08c4f8 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa08c4e0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa08c4d0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa08c50c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa086a50 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa08c650 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0xa08c5b0 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0xa08c578 <col:2> '<bound member function type>' ->_M_range_check 0xa086990
      (CXXThisExpr 0xa08c568 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa08c598 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa086b10 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa08c640 <line:756:2, col:20>
    (ArraySubscriptExpr 0xa08c628 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa08c5f8 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa08c5e0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa08c5d0 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa08c60c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa086b10 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0xa08c700 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0xa08c6f0 <col:9, col:23>
    (UnaryOperator 0xa08c6d8 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa08c6b8 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa08c678 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa08c7b0 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0xa08c7a0 <col:9, col:23>
    (UnaryOperator 0xa08c788 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa08c768 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa08c728 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa08c8f0 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0xa08c8e0 <col:9, col:27>
    (UnaryOperator 0xa08c8c8 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa08c8b0 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa08c888 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa08c850 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (CallExpr 0xa08c818 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa08c7d8 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa08c838 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa08ca30 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0xa08ca20 <col:9, col:27>
    (UnaryOperator 0xa08ca08 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa08c9f0 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa08c9c8 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa08c990 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
          (CallExpr 0xa08c958 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa08c918 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa08c978 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0xa08cb38 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0xa08cb28 <col:9, col:40>
    (CallExpr 0xa08cb08 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa08ca60 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
      (CallExpr 0xa08cae8 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa08caa8 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0xa08cc40 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0xa08cc30 <col:9, col:40>
    (CallExpr 0xa08cc10 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa08cb68 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92220)
      (CallExpr 0xa08cbf0 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa08cbb0 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0xa08d0c8 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0xa08d0a8 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa08cdb0 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa08cd58 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (CXXDependentScopeMemberExpr 0xa08cca0 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa08cc68 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa08cc58 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa08cd20 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa08cce8 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa08ccd8 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa08cfb0 <line:829:4, line:832:4>
      (CallExpr 0xa08cef0 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08ce20 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa08cde8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa08cdd8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa08cea0 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa08ce68 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa08ce58 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa08ced4 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0xa086fa0 '__x' 'const value_type &'))
      (UnaryOperator 0xa08cf98 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa08cf60 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa08cf28 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa08cf18 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0xa08d080 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0xa08cfd8 <col:4> '<bound member function type>' ->_M_insert_aux 0xa089da0
        (CXXThisExpr 0xa08cfc8 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0xa08d048 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa08d008 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa08d064 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0xa086fa0 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0xa08d298 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0xa08d160 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa08d128 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d0f0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa08d0e0 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa08d278 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa08d1c0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d188 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa08d178 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa08d240 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d208 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0xa08d1f8 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa08d350 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0xa08d328 <col:9, col:44> '<dependent type>'
    (MemberExpr 0xa08d2c0 <col:9> '<bound member function type>' ->_M_fill_insert 0xa089c30
      (CXXThisExpr 0xa08d2b0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa08d2e0 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa087270 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa08d2f8 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa0872b0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa08d310 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0xa087300 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa08d5a0 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0xa08d490 <line:966:4, col:72>
    0xa08d460 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa08d570 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0xa08d4b0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa08d4f0 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa087490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa08d508 <col:35> '_InputIterator' lvalue ParmVar 0xa0874d0 '__first' '_InputIterator')
    (DeclRefExpr 0xa08d520 <col:44> '_InputIterator' lvalue ParmVar 0xa087510 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa08d558 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa08dd20 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0xa08d728 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0xa08d5e0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92610 0x9bfcdd0 0x9e17f40)
    (CXXDependentScopeMemberExpr 0xa08d668 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d630 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa08d620 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa08d6f0 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d6b8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa08d69c <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa0878e0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa08d8b8 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0xa08d770 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92610 0x9bfcdd0 0x9e17f40)
    (CXXDependentScopeMemberExpr 0xa08d7f8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d7c0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa08d7b0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa08d880 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d848 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0xa08d82c <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa0878e0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa08da48 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0xa08d900 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92610 0x9bfcdd0 0x9e17f40)
    (CXXDependentScopeMemberExpr 0xa08d988 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d950 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa08d940 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa08da10 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08d9d8 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0xa08d9bc <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa0878e0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa08dcf8 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa08dbf8 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0xa08dc68 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa08dc2c <col:46> '<dependent type>' lvalue))
    (CallExpr 0xa08dcd8 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa08dca0 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa08dc84 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa0878e0 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0xa08de10 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0xa08ddf0 <col:9, col:47> '<dependent type>'
    (MemberExpr 0xa08dd50 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa089ff0
      (CXXThisExpr 0xa08dd40 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa08ddb8 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa08dd80 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0xa08dd70 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa0979c0 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0xa08dee8 <line:1052:4, col:45>
    0xa08de30 "pointer __result =
      (CallExpr 0xa08dec8 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08de78 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0xa08de68 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa08deac <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa087ae0 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0xa0978b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa08def8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa097898 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0xa097840 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa08df30 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
        (DeclRefExpr 0xa08df68 <col:36> '_ForwardIterator' lvalue ParmVar 0xa087b20 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa08df80 <col:45> '_ForwardIterator' lvalue ParmVar 0xa087b60 '__last' '_ForwardIterator')
        (DeclRefExpr 0xa08df98 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa08de30 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0xa097820 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa0977e0 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0xa097888 <line:1057:8, col:15>
        (DeclRefExpr 0xa09786c <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa08de30 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0xa0979a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa0978d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa097988 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0xa097950 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa0978e0 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0xa09791c <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa08de30 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0xa097934 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa087ae0 '__n' 'size_type':'unsigned int'))
      (NullStmt 0xa097978 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0xa097d70 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0xa097af0 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa097a28 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0979f0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa0979e0 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa097ad0 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa097a5c <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0xa097ab8 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa097a98 <col:64> '_Integer' lvalue ParmVar 0xa087d20 '__n' '_Integer'))))
  (BinaryOperator 0xa097cb0 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa097b50 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa097b18 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa097b08 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa097c88 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa097c40 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
      (CXXDependentScopeMemberExpr 0xa097bd0 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa097b98 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa097b88 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0xa097c28 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa097c04 <col:54> '_Integer' lvalue ParmVar 0xa087d20 '__n' '_Integer'))))
  (CallExpr 0xa097d48 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0xa097cd8 <col:4> '<bound member function type>' ->_M_fill_initialize 0xa0886f0
      (CXXThisExpr 0xa097cc8 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0xa097d18 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa097cf8 <col:46> '_Integer' lvalue ParmVar 0xa087d20 '__n' '_Integer'))
    (DeclRefExpr 0xa097d30 <col:52> '_Integer' lvalue ParmVar 0xa087d60 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa097fa8 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0xa097ec0 <line:1089:4, line:1090:37>
    0xa097e90 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa097f80 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0xa097ee0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa097f20 <col:24> '_InputIterator' lvalue ParmVar 0xa087f60 '__first' '_InputIterator')
    (DeclRefExpr 0xa097f38 <col:33> '_InputIterator' lvalue ParmVar 0xa087fa0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa097f68 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa098148 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0xa098120 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa098048 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa097ff0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0)
      (DeclRefExpr 0xa097fc0 <col:11> '_InputIterator' lvalue ParmVar 0xa0881a0 '__first' '_InputIterator')
      (DeclRefExpr 0xa097fd8 <col:22> '_InputIterator' lvalue ParmVar 0xa0881e0 '__last' '_InputIterator'))
    (UnaryOperator 0xa098088 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa09806c <col:32> '_InputIterator' lvalue ParmVar 0xa0881a0 '__first' '_InputIterator'))
    (CallExpr 0xa098100 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0xa0980b0 <col:6> '<bound member function type>' ->push_back 0xa087020
        (CXXThisExpr 0xa0980a0 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0xa0980e8 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0980d0 <col:17> '_InputIterator' lvalue ParmVar 0xa0881a0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa098738 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0xa098250 <line:1110:4, col:56>
    0xa098170 "const size_type __n =
      (CallExpr 0xa098228 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa0981c0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
        (DeclRefExpr 0xa0981f4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa088420 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa09820c <col:49> '_ForwardIterator' lvalue ParmVar 0xa088460 '__last' '_ForwardIterator'))")
  (BinaryOperator 0xa098360 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0982a8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa098270 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa098260 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa098340 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0982f0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa0982e0 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa098324 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa098170 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa098500 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0983c0 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa098388 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa098378 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa0984d8 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa098490 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
      (CXXDependentScopeMemberExpr 0xa098440 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa098408 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa0983f8 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa098474 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa098170 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa098720 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa098560 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa098528 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa098518 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa0986f0 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa0985b0 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
      (DeclRefExpr 0xa0985e8 <col:34> '_ForwardIterator' lvalue ParmVar 0xa088420 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa098600 <col:43> '_ForwardIterator' lvalue ParmVar 0xa088460 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0xa098660 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa098628 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa098618 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa0986d0 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa098694 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0xa098a08 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0xa0988c0 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa098780 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa07a710 0xa07b040)
    (CXXDependentScopeMemberExpr 0xa098800 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0987c8 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0xa0987b8 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa098834 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0xa088640 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa09884c <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0xa088690 '__value' 'const value_type &')
    (CallExpr 0xa0988a0 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0xa098864 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0xa0989f0 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa098938 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa098900 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa0988f0 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa0989b8 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa098980 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa098970 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa098aa8 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0xa098a80 <col:11, col:36> '<dependent type>'
    (MemberExpr 0xa098a30 <col:11> '<bound member function type>' ->_M_fill_assign 0xa089090
      (CXXThisExpr 0xa098a20 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa098a50 <col:26> '_Integer' lvalue ParmVar 0xa0887c0 '__n' '_Integer')
    (DeclRefExpr 0xa098a68 <col:31> '_Integer' lvalue ParmVar 0xa088800 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa098cd8 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0xa098bf0 <line:1158:4, line:1159:37>
    0xa098bc0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa098cb0 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0xa098c10 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa098c50 <col:18> '_InputIterator' lvalue ParmVar 0xa0889d0 '__first' '_InputIterator')
    (DeclRefExpr 0xa098c68 <col:27> '_InputIterator' lvalue ParmVar 0xa088a10 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa098c98 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa098d90 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0xa098d68 <col:11, col:43> '<dependent type>'
    (MemberExpr 0xa098d00 <col:11> '<bound member function type>' ->_M_fill_insert 0xa089c30
      (CXXThisExpr 0xa098cf0 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa098d20 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa089160 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa098d38 <col:33> '_Integer' lvalue ParmVar 0xa0891a0 '__n' '_Integer')
    (DeclRefExpr 0xa098d50 <col:38> '_Integer' lvalue ParmVar 0xa0891e0 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa098fe0 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0xa098ed0 <line:1199:4, line:1200:37>
    0xa098ea0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa098fb0 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0xa098ef0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa098f30 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0893e0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa098f48 <col:27> '_InputIterator' lvalue ParmVar 0xa089420 '__first' '_InputIterator')
    (DeclRefExpr 0xa098f60 <col:36> '_InputIterator' lvalue ParmVar 0xa089460 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa098f98 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa0996d0 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0xa099240 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa099158 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa099110 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (CXXOperatorCallExpr 0xa0990d0 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa099098 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0)
        (CallExpr 0xa099028 <col:6, col:15> '<dependent type>'
          (MemberExpr 0xa099008 <col:6> '<bound member function type>' ->max_size 0xa086290
            (CXXThisExpr 0xa098ff8 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa099078 <col:19, col:24> '<dependent type>'
          (MemberExpr 0xa099058 <col:19> '<bound member function type>' ->size 0xa086210
            (CXXThisExpr 0xa099048 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa0990f4 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa089e10 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa099210 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0xa099200 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0991e4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63690 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa099230 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa0991d0 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa0991b4 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0xa089e60 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa099448 <line:1244:2, col:56>
    0xa099270 "const size_type __len =
      (CXXOperatorCallExpr 0xa099420 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa0993d8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210)
        (CallExpr 0xa0992d8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa0992b8 <col:26> '<bound member function type>' ->size 0xa086210
            (CXXThisExpr 0xa0992a8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa0993b0 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa099310 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd43d0 0x9cd5170)
          (CallExpr 0xa099378 <col:44, col:49> '<dependent type>'
            (MemberExpr 0xa099358 <col:44> '<bound member function type>' ->size 0xa086210
              (CXXThisExpr 0xa099348 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa099394 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0xa089e10 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa0996c0 <line:1245:2, col:63>
    (ConditionalOperator 0xa0996a0 <col:9, col:63> '<dependent type>'
      (ParenExpr 0xa099620 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0xa099608 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa099508 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa0994c0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
            (DeclRefExpr 0xa099458 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa099270 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa0994a0 <col:18, col:23> '<dependent type>'
              (MemberExpr 0xa099480 <col:18> '<bound member function type>' ->size 0xa086210
                (CXXThisExpr 0xa099470 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0xa0995e0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa099598 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0)
            (DeclRefExpr 0xa09952c <col:28> 'const size_type':'const unsigned int' lvalue Var 0xa099270 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa099578 <col:36, col:45> '<dependent type>'
              (MemberExpr 0xa099558 <col:36> '<bound member function type>' ->max_size 0xa086290
                (CXXThisExpr 0xa099548 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa099668 <col:50, col:59> '<dependent type>'
        (MemberExpr 0xa099648 <col:50> '<bound member function type>' ->max_size 0xa086290
          (CXXThisExpr 0xa099638 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa099684 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa099270 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0xa099918 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0xa099840 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0xa099710 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
    (DeclRefExpr 0xa099750 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa089f50 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0xa0997b0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa099778 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa099768 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa099820 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa0997e4 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0xa099900 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0998b0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa099878 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa099868 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa0998e4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa089f50 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa09a140 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0xa09a130 <line:1274:7, line:1275:58>
    (ParenExpr 0xa09a118 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0xa09a100 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa099f10 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa099eb0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa099da0 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
          (CallExpr 0xa099e20 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa099de8 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa099dd0 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa099b30 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa099e90 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa099e58 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa099e3c <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa099ca0 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0xa09a0d8 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa099f50 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cf5740 0x9cf64e0)
          (CallExpr 0xa099fd8 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa099fa0 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0xa099f88 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa099b30 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa09a048 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa09a010 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa099ff4 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa099b30 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa09a0b8 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa09a080 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0xa09a064 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa099ca0 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa09a810 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0xa09a800 <line:1291:7, line:1292:30>
    (CallExpr 0xa09a7d0 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa09a5d8 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cf6a30 0x9cf7300)
      (CallExpr 0xa09a660 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa09a628 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0xa09a610 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09a340 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa09a6d0 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa09a698 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0xa09a67c <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09a340 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa09a740 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa09a708 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa09a6ec <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09a4b0 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa09a7b0 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa09a778 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa09a75c <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09a4b0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa09ad88 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0xa09ad78 <col:7, col:26>
    (UnaryOperator 0xa09ad60 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa09ad48 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa09ad20 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa09acc0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa099da0 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0)
          (DeclRefExpr 0xa09ac90 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09aa10 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa09aca8 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09ab80 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa09b2b8 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0xa09b2a8 <col:7, col:20>
    (CXXOperatorCallExpr 0xa09b280 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa09b230 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa09a590 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
      (DeclRefExpr 0xa09b200 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09b0f0 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0xa09b218 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09af80 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa09b818 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0xa09b808 <col:7, col:25>
    (UnaryOperator 0xa09b7f0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa09b7d8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa09b7b0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa09b760 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa09a590 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
          (DeclRefExpr 0xa09b730 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09b620 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa09b748 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09b4b0 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa09bd78 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0xa09bd68 <col:7, col:25>
    (UnaryOperator 0xa09bd50 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa09bd38 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa09bd10 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa09bcc0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa09a590 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0)
          (DeclRefExpr 0xa09bc90 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09ba10 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa09bca8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa09bb80 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa09c2b8 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0xa09c298 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa09c248 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa09c230 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa09bf90 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0xa09c27c <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa09c100 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0xa09c508 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0xa09c4b8 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0xa09c4a8 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0xa09c490 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0xa09c480 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa09c430 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0xa09c468 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0xa09cdf8 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa09cddc <col:12> '_Bit_type *' lvalue ParmVar 0xa09c6f0 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0xa09ce40 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0xa09ce28 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0xa09c730 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0xa09ce70 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0xa09ce98 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa09ce80 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0xa09cee0 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0xa09cec8 <col:41> 'int' 0))
) (CompoundStmt 0xa09cf10 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0xa09d080 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0xa09d070 <col:7, col:32>
    (UnaryOperator 0xa09d058 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0xa09d040 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa09d030 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa09d018 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0xa09d000 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0xa09cfe0 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0xa09cf98 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0xa09cf88 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa09cf64 <col:18> '_Bit_type *const' lvalue ->_M_p 0xa09c670
                      (CXXThisExpr 0xa09cf38 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0xa09cff0 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0xa09cfc0 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0xa09c6b0
                  (CXXThisExpr 0xa09cfb0 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0xa09d2a0 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0xa09d248 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa09d0b0 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa09d094 <col:11> '_Bool' lvalue ParmVar 0xa09c970 '__x' '_Bool'))
    (CompoundAssignOperator 0xa09d158 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa09d100 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa09d0f0 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa09d0d0 <col:3> '_Bit_type *' lvalue ->_M_p 0xa09c670
            (CXXThisExpr 0xa09d0c0 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0xa09d148 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0xa09d128 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa09c6b0
          (CXXThisExpr 0xa09d118 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0xa09d228 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa09d1b8 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa09d1a8 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa09d188 <col:3> '_Bit_type *' lvalue ->_M_p 0xa09c670
            (CXXThisExpr 0xa09d178 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0xa09d210 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa09d200 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0xa09d1e0 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa09c6b0
            (CXXThisExpr 0xa09d1d0 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0xa09d290 <line:89:7, col:15>
    (UnaryOperator 0xa09d278 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0xa09d268 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0xa09d500 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0xa09d4f0 <col:7, col:30>
    (CXXOperatorCallExpr 0xa09d4c8 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa09d4b8 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa09d480 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa09ca10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0xa09d2c8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0xa09d2b8 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0xa09d370 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa09d360 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa09d340 <col:27> '_Bool'
            (MemberExpr 0xa09d320 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa09c900
              (DeclRefExpr 0xa09d2e8 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0xa09cab0 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0xa09d690 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0xa09d680 <col:7, col:37>
    (BinaryOperator 0xa09d668 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0xa09d648 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa09d5a0 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa09d590 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa09d570 <col:19, col:20> '_Bool'
              (MemberExpr 0xa09d550 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa09c900
                (UnaryOperator 0xa09d530 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa09d520 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0xa09d658 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa09d630 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa09d620 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa09d600 <col:34> '_Bool'
              (MemberExpr 0xa09d5e0 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa09c900
                (DeclRefExpr 0xa09d5c0 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0xa09cbb0 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0xa09d818 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0xa09d808 <col:7, col:38>
    (BinaryOperator 0xa09d7f0 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0xa09d748 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0xa09d730 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa09d720 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa09d700 <col:20, col:21> '_Bool'
              (MemberExpr 0xa09d6e0 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa09c900
                (UnaryOperator 0xa09d6c0 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa09d6b0 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0xa09d7d8 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa09d7c8 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa09d7a8 <col:35> '_Bool'
            (MemberExpr 0xa09d788 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa09c900
              (DeclRefExpr 0xa09d768 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0xa09ccb0 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0xa09d8e8 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0xa09d8c8 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0xa09d870 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0xa09d860 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa09d840 <col:8> '_Bit_type *' lvalue ->_M_p 0xa09c670
          (CXXThisExpr 0xa09d830 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0xa09d8b8 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0xa09d898 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa09c6b0
        (CXXThisExpr 0xa09d888 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0xa0a2800 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa0a27dc <col:10> '_Bit_type *const' lvalue ._M_p 0xa09c670
    (DeclRefExpr 0xa0a27c4 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa09d440 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0xa0a2860 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0xa0a283c <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0xa09c6b0
    (DeclRefExpr 0xa0a2824 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa09d440 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0xa0a2890 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0xa09e8a0 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa09e884 <col:12> '_Bit_type *' lvalue ParmVar 0xa09dff0 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0xa09e8e0 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa09e8c8 <col:28> 'unsigned int' lvalue ParmVar 0xa09e040 '__y' 'unsigned int'))
) (CompoundStmt 0xa09eb58 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0xa09ed68 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0xa09ed48 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0xa09ec60 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0xa09ebb8 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0xa09eb98 <col:11> 'unsigned int' lvalue ->_M_offset 0xa09dfb0
          (CXXThisExpr 0xa09eb88 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa09ec50 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0xa09ec38 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0xa09ec08 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa09ebf8 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0xa09ebdc <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0xa09ec20 <col:45> 'int' 1))))
    (CompoundStmt 0xa09ed30 <line:122:2, line:125:2>
      (BinaryOperator 0xa09ecd0 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0xa09ec88 <col:4> 'unsigned int' lvalue ->_M_offset 0xa09dfb0
          (CXXThisExpr 0xa09ec78 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa09ecc0 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa09eca8 <col:16> 'int' 0)))
      (UnaryOperator 0xa09ed18 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0xa09ecf8 <col:6> '_Bit_type *' lvalue ->_M_p 0xa09df70
          (CXXThisExpr 0xa09ece8 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0xa09ef60 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0xa09ef40 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0xa09edf0 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0xa09edb0 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0xa09ed90 <col:11> 'unsigned int' lvalue ->_M_offset 0xa09dfb0
          (CXXThisExpr 0xa09ed80 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa09ede0 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa09edc8 <col:26> 'int' 0)))
    (CompoundStmt 0xa09ef28 <line:132:2, line:135:2>
      (BinaryOperator 0xa09eec8 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0xa09ee18 <col:4> 'unsigned int' lvalue ->_M_offset 0xa09dfb0
          (CXXThisExpr 0xa09ee08 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa09eeb8 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa09eea0 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0xa09ee70 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa09ee60 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0xa09ee44 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0xa09ee88 <col:35> 'int' 1))))
      (UnaryOperator 0xa09ef10 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa09eef0 <col:6> '_Bit_type *' lvalue ->_M_p 0xa09df70
          (CXXThisExpr 0xa09eee0 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0xa09f430 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0xa09f078 <line:141:7, col:44>
    0xa09efa0 "difference_type __n =
      (ImplicitCastExpr 0xa09f068 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0xa09f050 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0xa09f040 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa09f020 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa09efd4 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0xa09e270 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0xa09f030 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa09f000 <col:35> 'unsigned int' lvalue ->_M_offset 0xa09dfb0
              (CXXThisExpr 0xa09eff0 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0xa09f148 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0xa09f098 <col:7> '_Bit_type *' lvalue ->_M_p 0xa09df70
      (CXXThisExpr 0xa09f088 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0xa09f130 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0xa09f120 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa09f0b8 <col:15> 'difference_type':'int' lvalue Var 0xa09efa0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa09f108 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa09f0f8 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0xa09f0dc <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0xa09f210 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0xa09f168 <col:7> 'difference_type':'int' lvalue Var 0xa09efa0 '__n' 'difference_type':'int')
    (BinaryOperator 0xa09f1f8 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0xa09f1e8 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa09f180 <col:13> 'difference_type':'int' lvalue Var 0xa09efa0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa09f1d0 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa09f1c0 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0xa09f1a4 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0xa09f368 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0xa09f268 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0xa09f258 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa09f228 <col:11> 'difference_type':'int' lvalue Var 0xa09efa0 '__n' 'difference_type':'int'))
      (IntegerLiteral 0xa09f240 <col:17> 'int' 0))
    (CompoundStmt 0xa09f350 <line:145:2, line:148:2>
      (CompoundAssignOperator 0xa09f2e8 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa09f280 <col:4> 'difference_type':'int' lvalue Var 0xa09efa0 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0xa09f2d0 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0xa09f2c0 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0xa09f2a4 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0xa09f338 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa09f318 <col:6> '_Bit_type *' lvalue ->_M_p 0xa09df70
          (CXXThisExpr 0xa09f308 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0xa09f418 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0xa09f398 <col:7> 'unsigned int' lvalue ->_M_offset 0xa09dfb0
      (CXXThisExpr 0xa09f388 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0xa09f400 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0xa09f3f0 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa09f3e0 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa09f3b8 <col:45> 'difference_type':'int' lvalue Var 0xa09efa0 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa09f5e0 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0xa09f5d0 <col:7, col:51>
    (BinaryOperator 0xa09f5b8 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0xa09f500 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0xa09f4e0 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa09f488 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa09df70
            (CXXThisExpr 0xa09f478 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa09f4f0 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa09f4c0 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0xa09df70
            (DeclRefExpr 0xa09f4a8 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e390 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0xa09f5a0 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0xa09f580 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa09f528 <col:34> 'const unsigned int' lvalue ->_M_offset 0xa09dfb0
            (CXXThisExpr 0xa09f518 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa09f590 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa09f560 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0xa09dfb0
            (DeclRefExpr 0xa09f548 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e390 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa0a0ff0 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0xa0a0fe0 <line:159:7, line:160:56>
    (BinaryOperator 0xa0a0fc8 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0xa09f680 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0xa09f660 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa09f608 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa09df70
            (CXXThisExpr 0xa09f5f8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa09f670 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa09f640 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0xa09df70
            (DeclRefExpr 0xa09f628 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e490 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0xa0a0fb0 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0xa0a0f98 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0xa09f720 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0xa09f700 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa09f6a8 <col:11> '_Bit_type *const' lvalue ->_M_p 0xa09df70
                (CXXThisExpr 0xa09f698 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa09f710 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa09f6e0 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0xa09df70
                (DeclRefExpr 0xa09f6c8 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e490 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0xa09f7c0 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0xa09f7a0 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa09f748 <col:31> 'const unsigned int' lvalue ->_M_offset 0xa09dfb0
                (CXXThisExpr 0xa09f738 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa09f7b0 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa09f780 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0xa09dfb0
                (DeclRefExpr 0xa09f768 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e490 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa0a10f0 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0xa0a10e0 <col:7, col:28>
    (UnaryOperator 0xa0a10c8 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0xa0a10b0 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0xa0a1088 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0xa0a1078 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0a1048 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa09e410 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa0a1018 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa0a1008 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa0a102c <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e560 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa0a11a8 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0xa0a1198 <col:7, col:21>
    (CXXOperatorCallExpr 0xa0a1170 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0xa0a1160 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a1148 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa09e4e0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0xa0a1104 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e630 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0xa0a1130 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0xa0a1120 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa0a1290 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0xa0a1280 <col:7, col:27>
    (UnaryOperator 0xa0a1268 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa0a1250 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa0a1228 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0xa0a1218 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0a1200 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa09e4e0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0xa0a11bc <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e700 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0xa0a11e8 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa0a11d8 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa0a1378 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0xa0a1368 <col:7, col:27>
    (UnaryOperator 0xa0a1350 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa0a1338 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa0a1310 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0xa0a1300 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0a12e8 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa09e4e0 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa0a12b8 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa0a12a8 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa0a12cc <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa09e7d0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0xa0a2ba0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0xa0a2b88 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa0a2510 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0xa0a2ca0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa0a2c80 <col:10> '_Bit_type *const' lvalue ._M_p 0xa09df70
    (DeclRefExpr 0xa0a2c68 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa0a2510 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0xa0a2d00 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa0a2cdc <col:10> 'const unsigned int' lvalue ._M_offset 0xa09dfb0
    (DeclRefExpr 0xa0a2cc4 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa0a2510 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0xa0a2d38 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0xa0a1728 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0xa0a1718 <line:183:5, line:184:37>
    (ImplicitCastExpr 0xa0a1708 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0xa0a16f0 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0xa0a16d8 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0xa0a1678 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0xa0a1668 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0xa0a1608 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0xa0a1530 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa0a1520 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa0a1504 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0xa0a15f0 <col:32, col:52> 'int'
                  (BinaryOperator 0xa0a15d8 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0xa0a15b8 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa0a1560 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0xa09df70
                        (DeclRefExpr 0xa0a1548 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa0a13a0 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0xa0a15c8 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa0a1598 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0xa09df70
                        (DeclRefExpr 0xa0a1580 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa0a13f0 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0xa0a1658 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa0a1638 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0xa09dfb0
                (DeclRefExpr 0xa0a1620 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa0a13a0 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0xa0a16c8 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa0a16a8 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0xa09dfb0
              (DeclRefExpr 0xa0a1690 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa0a13f0 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa0a2550 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa0a2408 <col:42> 'int' 0))
, (ImplicitCastExpr 0xa0a2560 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0a2420 <col:45> 'int' 0))
) (CompoundStmt 0xa0a25c0 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa0a2608 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa0a25d0 <col:26> '_Bit_type *' lvalue ParmVar 0xa0a1a10 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa0a2618 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa0a25e8 <col:31> 'unsigned int' lvalue ParmVar 0xa0a1a60 '__y' 'unsigned int'))
) (CompoundStmt 0xa0a2670 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0xa0a28d8 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0xa0a28c8 <col:7, col:46>
    (CXXConstructExpr 0xa0a28a0 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0a27b8 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa0a27a8 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0xa0a2778 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0xa0a2768 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa0a26c8 <col:24> '_Bit_type *const' lvalue ->_M_p 0xa09df70
                (ImplicitCastExpr 0xa0a26b8 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0xa0a26a8 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0xa0a2750 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0xa0a26e8 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0xa0a2740 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0xa0a2720 <col:37> 'const unsigned int' lvalue ->_M_offset 0xa09dfb0
                  (ImplicitCastExpr 0xa0a2710 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa0a2700 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0xa0a29a0 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0xa0a2938 <line:205:7, col:18> 'void'
    (MemberExpr 0xa0a2918 <col:7> '<bound member function type>' ->_M_bump_up 0xa09e180
      (ImplicitCastExpr 0xa0a2958 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a2908 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa0a2990 <line:206:7, col:15>
    (UnaryOperator 0xa0a2978 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a2968 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0xa0a2ea8 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0xa0a2dd8 <line:212:7, col:29>
    0xa0a29c0 "iterator __tmp =
      (CXXConstructExpr 0xa0a2db0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa0a2b50 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa0a2a08 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa0a29f8 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa0a2e18 <line:213:7, col:18> 'void'
    (MemberExpr 0xa0a2df8 <col:7> '<bound member function type>' ->_M_bump_up 0xa09e180
      (ImplicitCastExpr 0xa0a2e38 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a2de8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa0a2e98 <line:214:7, col:14>
    (CXXConstructExpr 0xa0a2e70 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa0a2e60 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa0a2e48 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0a29c0 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0xa0a2f60 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0xa0a2ef8 <line:220:7, col:20> 'void'
    (MemberExpr 0xa0a2ed8 <col:7> '<bound member function type>' ->_M_bump_down 0xa09e200
      (ImplicitCastExpr 0xa0a2f18 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a2ec8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa0a2f50 <line:221:7, col:15>
    (UnaryOperator 0xa0a2f38 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a2f28 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0xa0a30e8 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0xa0a3018 <line:227:7, col:29>
    0xa0a2f80 "iterator __tmp =
      (CXXConstructExpr 0xa0a2ff0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa0a2fe0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa0a2fc8 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa0a2fb8 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa0a3058 <line:228:7, col:20> 'void'
    (MemberExpr 0xa0a3038 <col:7> '<bound member function type>' ->_M_bump_down 0xa09e200
      (ImplicitCastExpr 0xa0a3078 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a3028 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa0a30d8 <line:229:7, col:14>
    (CXXConstructExpr 0xa0a30b0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa0a30a0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa0a3088 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0a2f80 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0xa0a31c8 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0xa0a3150 <line:235:7, col:18> 'void'
    (MemberExpr 0xa0a3118 <col:7> '<bound member function type>' ->_M_incr 0xa09e2f0
      (ImplicitCastExpr 0xa0a3170 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a3108 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0xa0a3180 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa0a3138 <col:15> 'difference_type':'int' lvalue ParmVar 0xa0a1f50 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa0a31b8 <line:236:7, col:15>
    (UnaryOperator 0xa0a31a0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a3190 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0xa0a3308 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0xa0a32a8 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0xa0a3298 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0a3248 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa0a1ff0 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0xa0a31f0 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a31e0 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0xa0a3230 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa0a3220 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0a3204 <col:17> 'difference_type':'int' lvalue ParmVar 0xa0a2060 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa0a32f8 <line:243:7, col:15>
    (UnaryOperator 0xa0a32e0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a32d0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0xa0a34a0 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0xa0a33b8 <line:249:7, col:29>
    0xa0a3330 "iterator __tmp =
      (CXXConstructExpr 0xa0a3390 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa0a3378 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa0a3368 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa0a3490 <line:250:7, col:23>
    (CXXConstructExpr 0xa0a3468 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa0a3458 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa0a3430 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa0a3420 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0a3408 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa0a1ff0 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa0a33c8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0a3330 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa0a33f8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0a33e0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa0a2130 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0xa0a3630 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0xa0a3548 <line:256:7, col:29>
    0xa0a34c0 "iterator __tmp =
      (CXXConstructExpr 0xa0a3520 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa0a3508 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa0a34f8 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa0a3620 <line:257:7, col:23>
    (CXXConstructExpr 0xa0a35f8 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa0a35e8 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa0a35c0 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa0a35b0 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0a3598 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa0a20c0 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa0a3558 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0a34c0 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa0a3588 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0a3570 <col:23> 'difference_type':'int' lvalue ParmVar 0xa0a2240 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0xa0a3820 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0xa0a3810 <col:7, col:27>
    (CXXConstructExpr 0xa0a37e8 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0a37d8 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa0a37c8 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa0a37a8 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa0a3798 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0a3748 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa0a1b90 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa0a3738 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0xa0a3720 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa0a36f8 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0xa0a36e8 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa0a3698 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa0a21d0 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0xa0a3658 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0xa0a3648 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0xa0a3688 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0xa0a366c <col:24> 'difference_type':'int' lvalue ParmVar 0xa0a2300 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa0a2b78 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa0a2b5c <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa0a2b10 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0xa0a2da0 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0xa0a3a80 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0xa0a3a70 <col:5, col:18>
    (CXXConstructExpr 0xa0a3a48 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0a3a38 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa0a3a28 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa0a3a00 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa0a39f0 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0a39d8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa0a21d0 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0xa0a3998 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa0a3890 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0xa0a39c8 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa0a39b0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa0a3840 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa0a48b0 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa0a4878 <col:48> 'int' 0))
, (ImplicitCastExpr 0xa0a48c0 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0a4890 <col:51> 'int' 0))
) (CompoundStmt 0xa0a4920 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa0a4968 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa0a4930 <col:26> '_Bit_type *' lvalue ParmVar 0xa0a3dd0 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa0a4978 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa0a4948 <col:31> 'unsigned int' lvalue ParmVar 0xa0a3e20 '__y' 'unsigned int'))
) (CompoundStmt 0xa0a49d0 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0xa0a4a78 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa0a4a08 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0xa09df70
    (ImplicitCastExpr 0xa0a49f8 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa0a49e0 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa0a3f00 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0xa0a4a88 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa0a4a50 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0xa09dfb0
    (ImplicitCastExpr 0xa0a4a40 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa0a4a28 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa0a3f00 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0xa0a4ae0 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0xa0a4c90 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0xa0a4c80 <col:7, col:51>
    (ImplicitCastExpr 0xa0a4c70 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0xa0a4c50 <col:14, col:51> '_Bool'
        (MemberExpr 0xa0a4c30 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa09c900
          (ImplicitCastExpr 0xa0a4c20 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0xa0a4be8 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0xa0a4bd8 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0xa0a4b38 <col:29> '_Bit_type *const' lvalue ->_M_p 0xa09df70
                  (ImplicitCastExpr 0xa0a4b28 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa0a4b18 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0xa0a4bc0 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0xa0a4b58 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0xa0a4bb0 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0xa0a4b90 <col:42> 'const unsigned int' lvalue ->_M_offset 0xa09dfb0
                    (ImplicitCastExpr 0xa0a4b80 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0xa0a4b70 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0xa0a4d60 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0xa0a4cf8 <line:291:7, col:18> 'void'
    (MemberExpr 0xa0a4cd8 <col:7> '<bound member function type>' ->_M_bump_up 0xa09e180
      (ImplicitCastExpr 0xa0a4d18 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a4cc8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa0a4d50 <line:292:7, col:15>
    (UnaryOperator 0xa0a4d38 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a4d28 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0xa0a5088 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0xa0a4fb8 <line:298:7, col:35>
    0xa0a4d80 "const_iterator __tmp =
      (CXXConstructExpr 0xa0a4f90 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa0a4ef0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa0a4dc8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa0a4db8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa0a4ff8 <line:299:7, col:18> 'void'
    (MemberExpr 0xa0a4fd8 <col:7> '<bound member function type>' ->_M_bump_up 0xa09e180
      (ImplicitCastExpr 0xa0a5018 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a4fc8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa0a5078 <line:300:7, col:14>
    (CXXConstructExpr 0xa0a5050 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa0a5040 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa0a5028 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa0a4d80 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0xa0a5140 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0xa0a50d8 <line:306:7, col:20> 'void'
    (MemberExpr 0xa0a50b8 <col:7> '<bound member function type>' ->_M_bump_down 0xa09e200
      (ImplicitCastExpr 0xa0a50f8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a50a8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa0a5130 <line:307:7, col:15>
    (UnaryOperator 0xa0a5118 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a5108 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0xa0a52c8 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0xa0a51f8 <line:313:7, col:35>
    0xa0a5160 "const_iterator __tmp =
      (CXXConstructExpr 0xa0a51d0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa0a51c0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa0a51a8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa0a5198 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa0a5238 <line:314:7, col:20> 'void'
    (MemberExpr 0xa0a5218 <col:7> '<bound member function type>' ->_M_bump_down 0xa09e200
      (ImplicitCastExpr 0xa0a5258 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a5208 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa0a52b8 <line:315:7, col:14>
    (CXXConstructExpr 0xa0a5290 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa0a5280 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa0a5268 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa0a5160 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0xa0a53a8 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0xa0a5330 <line:321:7, col:18> 'void'
    (MemberExpr 0xa0a52f8 <col:7> '<bound member function type>' ->_M_incr 0xa09e2f0
      (ImplicitCastExpr 0xa0a5350 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa0a52e8 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0xa0a5360 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa0a5318 <col:15> 'difference_type':'int' lvalue ParmVar 0xa0a43c0 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa0a5398 <line:322:7, col:15>
    (UnaryOperator 0xa0a5380 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a5370 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0xa0a54e8 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0xa0a5488 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0xa0a5478 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0a5428 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa0a4460 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0xa0a53d0 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a53c0 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0xa0a5410 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa0a5400 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0a53e4 <col:17> 'difference_type':'int' lvalue ParmVar 0xa0a44d0 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa0a54d8 <line:329:7, col:15>
    (UnaryOperator 0xa0a54c0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa0a54b0 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0xa0a5680 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0xa0a5598 <line:335:7, col:35>
    0xa0a5510 "const_iterator __tmp =
      (CXXConstructExpr 0xa0a5570 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa0a5558 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa0a5548 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa0a5670 <line:336:7, col:23>
    (CXXConstructExpr 0xa0a5648 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa0a5638 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa0a5610 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa0a5600 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0a55e8 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa0a4460 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa0a55a8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa0a5510 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa0a55d8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0a55c0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa0a45a0 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0xa0a5810 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0xa0a5728 <line:342:7, col:35>
    0xa0a56a0 "const_iterator __tmp =
      (CXXConstructExpr 0xa0a5700 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa0a56e8 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa0a56d8 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa0a5800 <line:343:7, col:23>
    (CXXConstructExpr 0xa0a57d8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa0a57c8 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa0a57a0 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa0a5790 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0a5778 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa0a4530 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa0a5738 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa0a56a0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa0a5768 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0a5750 <col:23> 'difference_type':'int' lvalue ParmVar 0xa0a46b0 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0xa0a5998 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0xa0a5988 <col:7, col:27>
    (CXXOperatorCallExpr 0xa0a5968 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa0a5958 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a5928 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa0a4000 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa0a5918 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0xa0a5900 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa0a58d8 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa0a58c8 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0a5878 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa0a4640 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0xa0a5838 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0xa0a5828 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0xa0a5868 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0xa0a584c <col:24> 'difference_type':'int' lvalue ParmVar 0xa0a4770 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa0a4f18 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa0a4efc <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa0a4eb0 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0xa0a4f80 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0xa0a5c00 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0xa0a5bf0 <col:5, col:18>
    (CXXConstructExpr 0xa0a5bc8 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0a5bb8 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0xa0a5ba8 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa0a5b80 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa0a5b70 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0a5b58 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa0a4640 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0xa0a5b18 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa0a5a10 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0xa0a5b48 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa0a5b30 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa0a59c0 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0xa0a5ff8 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0xa0a5fd0 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0a5e28 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0xa0a5e18 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a5e00 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa09e5b0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa0a5df0 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa0a5d9c <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a5c20 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa0a5de0 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa0a5dd0 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa0a5db4 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a5c60 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0xa0a5ec8 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0xa0a5eb8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a5e68 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa0a1c90 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0xa0a5e4c <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a5c20 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0xa0a5fa8 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa0a5f98 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a5f80 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa09ca10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0xa0a5f38 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa0a5f28 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0a5f10 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa0a1b90 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa0a5f00 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0a5ee8 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a5c20 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa0a5f70 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0a5f58 <col:18> '_Bool' lvalue ParmVar 0xa0a5ca0 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0xa0a6de0 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0xa0a6dc0 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0xa0a6280 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0xa0a6260 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa0a61f8 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0xa09df70
          (ImplicitCastExpr 0xa0a61e8 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa0a61cc <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6020 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0xa0a6270 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa0a6240 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0xa09df70
          (ImplicitCastExpr 0xa0a6230 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa0a6218 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6060 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0xa0a6c50 <line:366:7, line:370:7>
      (CallExpr 0xa0a67b8 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0xa0a67a8 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0a6748 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa0a6680 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9ce60f0 'fill')))
        (BinaryOperator 0xa0a6368 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0xa0a6358 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0xa0a6320 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0xa09df70
              (ImplicitCastExpr 0xa0a6310 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0xa0a62f8 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6020 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0xa0a6340 <col:27> 'int' 1))
        (ImplicitCastExpr 0xa0a67e0 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa0a63a8 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0xa09df70
            (ImplicitCastExpr 0xa0a6398 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa0a6380 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6060 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0xa0a67f0 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0xa0a6438 <col:43, col:54> 'int'
            (ImplicitCastExpr 0xa0a6428 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa0a63c8 <col:43> 'const _Bool' lvalue ParmVar 0xa0a60d0 '__x' 'const _Bool &'))
            (UnaryOperator 0xa0a63f8 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0xa0a63e0 <col:50> 'int' 0))
            (IntegerLiteral 0xa0a6410 <col:54> 'int' 0))))
      (CallExpr 0xa0a6998 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0xa0a6988 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0a6950 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa0a5d30 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa0a69d0 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa0a69c0 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa0a6834 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6020 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa0a6a18 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa0a6a08 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa0a69f8 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa0a6908 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0xa0a68c8 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0xa0a68b8 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa0a6880 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0xa09df70
                      (ImplicitCastExpr 0xa0a6870 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0xa0a6858 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6020 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0xa0a68a0 <col:55> 'int' 1))
                (ImplicitCastExpr 0xa0a68f8 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa0a68e0 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0xa0a6a40 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa0a6938 <col:62> 'const _Bool' lvalue ParmVar 0xa0a60d0 '__x' 'const _Bool &')))
      (CallExpr 0xa0a6b98 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0xa0a6b88 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0a6b70 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa0a5d30 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa0a6be0 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa0a6bd0 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa0a6bc0 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa0a6b10 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0xa0a6af0 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0xa0a6ab8 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0xa09df70
                    (ImplicitCastExpr 0xa0a6aa8 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0xa0a6a90 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6060 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0xa0a6b00 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa0a6ad8 <col:44> 'int' 0))))))
        (CXXConstructExpr 0xa0a6c18 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa0a6c08 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa0a6b40 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6060 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa0a6c40 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa0a6b58 <col:56> 'const _Bool' lvalue ParmVar 0xa0a60d0 '__x' 'const _Bool &'))))
    (CallExpr 0xa0a6d18 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0xa0a6d08 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a6cec <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa0a5d30 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0xa0a6d50 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa0a6d40 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0a6ca4 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6020 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0xa0a6d88 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa0a6d78 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0a6cbc <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa0a6060 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa0a6db0 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0a6cd4 <col:39> 'const _Bool' lvalue ParmVar 0xa0a60d0 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa0a7e48 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0xa0a7eb8 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0xa0a7ec8 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0xa0a7530 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa0a7fc8 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0xa0a8038 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0xa0a8198 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0xa0a8188 <col:9, col:61>
    (UnaryOperator 0xa0a8170 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa0a8158 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa0a80f0 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa0a80b0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CXXDependentScopeMemberExpr 0xa0a8078 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0xa0a8068 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0xa0a82f8 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0xa0a82e8 <col:9, col:67>
    (UnaryOperator 0xa0a82d0 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa0a82b8 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa0a8250 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa0a8210 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
          (CXXDependentScopeMemberExpr 0xa0a81d8 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0xa0a81c8 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa0a83b8 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0xa0a83a8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa0a8388 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0xa0a8368 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0xa0a8328 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0xa0a8410 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa0a8420 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa0a79d0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa0a8480 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0xa0a84f8 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0xa0a84d8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0a84a0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa0a8490 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0xa0a8718 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0xa0a8708 <line:439:9, line:440:23>
    (CallExpr 0xa0a86e8 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0a8540 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0xa0a8520 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa0a7bb0
          (CXXThisExpr 0xa0a8510 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0xa0a86d0 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0xa0a8658 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0xa0a8640 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0xa0a8600 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0xa0a85e0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0a8574 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0a7bf0 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa0a85f0 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa0a85c8 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa0a85b8 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0xa0a859c <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0xa0a8630 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0a8618 <col:59> 'int' 1))))
        (ImplicitCastExpr 0xa0a86c0 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0xa0a86a8 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa0a8698 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0xa0a867c <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0xa0a8a90 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0xa0a8a70 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa0a8798 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0a8760 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0xa0a8740 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa0a7bb0
          (CXXThisExpr 0xa0a8730 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0xa0a8a48 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0a8800 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa0a87e0 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa0a7bb0
          (CXXThisExpr 0xa0a87d0 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa0a88a0 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0a8868 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa0a8848 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa0a7bb0
            (CXXThisExpr 0xa0a8838 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0xa0a8a20 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a89e0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0a1490 0x9cb6a00 0x9cb9cf0)
        (CXXDependentScopeMemberExpr 0xa0a8908 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0xa0a88e8 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa0a7bb0
            (CXXThisExpr 0xa0a88d8 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0a89a8 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0a8970 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0xa0a8950 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa0a7bb0
              (CXXThisExpr 0xa0a8940 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0xa0ae950 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0xa0ae940 <col:7, col:35>
    (CallExpr 0xa0ae920 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0ae8e8 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0xa0ae9b0 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0xa0ae9c0 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa0a9a10 '__a' 'const allocator_type &')
) (CompoundStmt 0xa0aea20 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0xa0ae820 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa0ae810 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa0ae838 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa0aea30 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa0a9bc0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa0aed60 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0xa0aeaf0 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0xa0aeab8 <col:7> '<bound member function type>' ->_M_initialize 0xa0ac5a0
      (CXXThisExpr 0xa0aeaa8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0aead8 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa0a9b20 '__n' 'size_type':'unsigned int'))
  (CallExpr 0xa0aed38 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0xa0aeb38 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0 0xa0a6160)
    (CXXDependentScopeMemberExpr 0xa0aebf0 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0aebb8 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0aeb80 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa0aeb70 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa0aec70 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0aec38 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0xa0aec28 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa0aed18 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0xa0aed08 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0aeca4 <col:3> 'const _Bool' lvalue ParmVar 0xa0a9b70 '__value' 'const _Bool &'))
      (UnaryOperator 0xa0aecd8 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0xa0aecc0 <col:14> 'int' 0))
      (IntegerLiteral 0xa0aecf0 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0xa0aedc8 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa0aed90 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0xa0aed78 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0a9d30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0xa0af0a8 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0xa0aeed0 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0xa0aee40 <col:7> '<bound member function type>' ->_M_initialize 0xa0ac5a0
      (CXXThisExpr 0xa0aee30 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa0aeeb0 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0aee78 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa0aee60 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0a9d30 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa0af080 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0xa0aef00 <col:7> '<bound member function type>' ->_M_copy_aligned 0xa0ac4d0
      (CXXThisExpr 0xa0aeef0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa0aef70 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0aef38 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0xa0aef20 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0a9d30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0xa0aefe0 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0aefa8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa0aef8c <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0a9d30 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0xa0af048 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0af010 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa0af000 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa0ae858 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa0af0c0 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa0a9f10 '__a' 'const allocator_type &')
) (CompoundStmt 0xa0af338 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0xa0af250 <line:552:2, col:70>
    0xa0af220 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa0af310 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0xa0af270 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0af2b0 <col:25> '_InputIterator' lvalue ParmVar 0xa0a9e80 '__first' '_InputIterator')
    (DeclRefExpr 0xa0af2c8 <col:34> '_InputIterator' lvalue ParmVar 0xa0a9ec0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa0af2f8 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0xa0af350 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa0af9d8 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0xa0af4a8 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0af448 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa0af3e8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0 0xa099da0)
      (CXXOperatorCallExpr 0xa0af3b8 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa0af378 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (DeclRefExpr 0xa0af360 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0aa130 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0xa0af3d8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0xa0af498 <line:562:2, col:10>
      (UnaryOperator 0xa0af480 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa0af470 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0xa0af740 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0af5d8 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0af588 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
      (CallExpr 0xa0af518 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0af4e0 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa0af4c4 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0aa130 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa0af568 <col:24, col:33> '<dependent type>'
        (MemberExpr 0xa0af548 <col:24> '<bound member function type>' ->capacity 0xa0aab60
          (CXXThisExpr 0xa0af538 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa0af728 <line:564:2, line:567:2>
      (CallExpr 0xa0af648 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0af610 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa0af600 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0xa0af708 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0xa0af678 <col:4> '<bound member function type>' ->_M_initialize 0xa0ac5a0
          (CXXThisExpr 0xa0af668 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0xa0af6e8 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0af6b0 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa0af698 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0aa130 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0xa0af988 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0af7a8 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0af770 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa0af760 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0xa0af960 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0xa0af7f0 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0xa0ac4d0
        (CXXThisExpr 0xa0af7e0 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa0af860 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0af828 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0xa0af810 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0aa130 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa0af8d0 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0af898 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa0af87c <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0aa130 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa0af940 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0xa0af900 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0xa0af9c8 <line:570:7, col:15>
    (UnaryOperator 0xa0af9b0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0af9a0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0xa0afa80 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0xa0afa58 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa0afa08 <col:7> '<bound member function type>' ->_M_fill_assign 0xa0ad3b0
      (CXXThisExpr 0xa0af9f8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0afa28 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa0aa240 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa0afa40 <col:27> 'const _Bool' lvalue ParmVar 0xa0aa290 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa0afca8 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0xa0afbc0 <line:604:2, col:70>
    0xa0afb90 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa0afc80 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0xa0afbe0 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0afc20 <col:21> '_InputIterator' lvalue ParmVar 0xa0aa400 '__first' '_InputIterator')
    (DeclRefExpr 0xa0afc38 <col:30> '_InputIterator' lvalue ParmVar 0xa0aa440 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa0afc68 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0xa0afd50 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0xa0afd40 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa0afd08 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0afcd0 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa0afcc0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0xa0afdf8 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0xa0afde8 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa0afdb0 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0afd78 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa0afd68 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0xa0afea0 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0xa0afe90 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa0afe58 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0afe20 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa0afe10 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0xa0aff48 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0xa0aff38 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa0aff00 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0afec8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa0afeb8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0xa0bc6b0 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0xa0bc6a0 <col:7, col:36>
    (CXXConstructExpr 0xa0bc678 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa0bc668 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa0bc658 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa0bc428 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa0bc408 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0xa0bc3c8 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa0bf610 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0xa0bf600 <col:7, col:42>
    (CXXConstructExpr 0xa0bf5d8 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa0bf5c8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa0bf5b8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa0bf388 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa0bf368 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa0bf328 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0xa0bf768 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0xa0bf758 <col:7, col:38>
    (CXXConstructExpr 0xa0bf730 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa0bf720 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa0bf710 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa0bf6a0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa0bf680 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0xa0bf640 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa0bf8c0 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0xa0bf8b0 <col:7, col:44>
    (CXXConstructExpr 0xa0bf888 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa0bf878 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa0bf868 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa0bf7f8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa0bf7d8 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa0bf798 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0xa0bfa58 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0xa0bfa48 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0xa0bfa28 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa0bfa00 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa0bf9c0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
        (CallExpr 0xa0bf930 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa0bf8f0 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0xa0bf9a0 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa0bf960 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0xa0bff38 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0xa0bfc38 <line:671:7, line:673:24>
    0xa0bfa80 "const size_type __isize =
      (ImplicitCastExpr 0xa0bfc28 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0xa0bfc10 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0xa0bfbe0 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0xa0bfbd0 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0xa0bfb60 <col:2, col:48> 'const int':'const int' lvalue Var 0x9dfe6d0 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0xa0bfbb8 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa0bfba8 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0xa0bfb8c <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0xa0bfbf8 <col:23> 'int' 1)))")
  (DeclStmt 0xa0bfd38 <line:674:7, col:66>
    0xa0bfc50 "const size_type __asize =
      (CallExpr 0xa0bfd18 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0bfce0 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0xa0bfcc0 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0xa0bfc84 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0xa0bff28 <line:675:7, line:676:46>
    (ParenExpr 0xa0bff10 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0xa0bfef0 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0xa0bfe10 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0xa0bfe00 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0bfd48 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa0bfc50 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0xa0bfde8 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0xa0bfdc8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0bfd60 <col:26> 'const size_type':'const unsigned int' lvalue Var 0xa0bfa80 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0xa0bfdd8 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa0bfdb0 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa0bfda0 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0xa0bfd84 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0xa0bfeb0 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0xa0bfe90 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0bfe28 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa0bfc50 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0xa0bfea0 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0xa0bfe78 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa0bfe68 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa0bfe4c <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0xa0bfee0 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bfec8 <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa0bfa80 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0xa0c0128 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0xa0c0118 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0xa0c00f8 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa0c00d0 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c0090 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
        (CXXUnresolvedConstructExpr 0xa0c0000 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0xa0bffb0 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0bff78 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0xa0bff68 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa0bffe8 <col:72> 'int' 0))
        (CallExpr 0xa0c0070 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c0030 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0xa0c02b8 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0xa0c02a8 <col:7, col:29>
    (CXXOperatorCallExpr 0xa0c0280 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c0220 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0 0xa099da0)
      (CallExpr 0xa0c0190 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c0150 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0xa0c0200 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c01c0 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0xa0c0618 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0xa0c0608 <line:691:7, line:692:58>
    (CXXConstructExpr 0xa0c05e0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0c05d0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa0c05c0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa0c05a0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa0c0590 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0c0578 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa0a1b90 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa0c0568 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0xa0c0548 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa0c0480 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0c0430 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                  (CXXDependentScopeMemberExpr 0xa0c0358 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0c0320 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0xa0c02e8 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0xa0c02d8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0xa0c0418 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0xa0c03f8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa0c038c <col:12> 'size_type':'unsigned int' lvalue ParmVar 0xa0aac60 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa0c0408 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa0c03e0 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa0c03d0 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0xa0c03b4 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0xa0c0530 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0xa0c0510 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0c04a4 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa0aac60 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa0c0520 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa0c04f8 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa0c04e8 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0xa0c04cc <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa0c0930 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0xa0c0920 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0xa0c0900 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa0c08f0 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c08d8 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa0a4000 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa0c08c8 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0xa0c08a8 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa0c07e0 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa0c0790 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
            (CXXDependentScopeMemberExpr 0xa0c06b8 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0c0680 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0c0648 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0c0638 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0xa0c0778 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0xa0c0758 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0c06ec <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0aad90 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0xa0c0768 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa0c0740 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa0c0730 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0xa0c0714 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0xa0c0890 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0xa0c0870 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0c0804 <col:35> 'size_type':'unsigned int' lvalue ParmVar 0xa0aad90 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0xa0c0880 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa0c0858 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa0c0848 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0xa0c082c <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa0c0b40 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0xa0c0b20 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c0a18 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c09c8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880 0xa09bc60)
      (DeclRefExpr 0xa0c0944 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0aaef0 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa0c09a8 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c0970 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c0960 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa0c0af0 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0xa0c0ae0 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0ac4 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63760 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0c0b10 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0c0ab0 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0xa0c0a74 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa0c0c40 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0xa0c0ba0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa0c0b68 <col:7> '<bound member function type>' ->_M_range_check 0xa0aaf70
      (CXXThisExpr 0xa0c0b58 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0c0b88 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa0ab030 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa0c0c30 <col:28, col:46>
    (ArraySubscriptExpr 0xa0c0c18 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa0c0be8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa0c0bd0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0c0bc0 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa0c0bfc <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa0ab030 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa0c0d40 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0xa0c0ca0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa0c0c68 <col:7> '<bound member function type>' ->_M_range_check 0xa0aaf70
      (CXXThisExpr 0xa0c0c58 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0c0c88 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa0ab0f0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa0c0d30 <col:28, col:46>
    (ArraySubscriptExpr 0xa0c0d18 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa0c0ce8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa0c0cd0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0c0cc0 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa0c0cfc <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa0ab0f0 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0xa0c0df0 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0xa0c0de0 <col:7, col:21>
    (UnaryOperator 0xa0c0dc8 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa0c0da8 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c0d68 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa0c0ea0 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0xa0c0e90 <col:7, col:21>
    (UnaryOperator 0xa0c0e78 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa0c0e58 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c0e18 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa0c0fe8 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0xa0c0fd8 <col:7, col:25>
    (UnaryOperator 0xa0c0fc0 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa0c0fa8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa0c0f80 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa0c0f40 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (CallExpr 0xa0c0f08 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa0c0ec8 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa0c0f28 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa0c1130 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0xa0c1120 <col:7, col:25>
    (UnaryOperator 0xa0c1108 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa0c10f0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa0c10c8 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa0c1088 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (CallExpr 0xa0c1050 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa0c1010 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa0c1070 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0xa0c1148 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0xa0c1510 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0xa0c14f0 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c12f0 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c1290 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (CXXDependentScopeMemberExpr 0xa0c11d8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0c11a0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c1168 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c1158 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa0c1258 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0c1220 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c1210 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0xa0c13f8 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa0c13c8 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa0c13b0 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa0c1360 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0c1328 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c1318 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa0c13dc <col:38> '_Bool' lvalue ParmVar 0xa0ab570 '__x' '_Bool'))
    (CallExpr 0xa0c14c8 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0xa0c1420 <col:9> '<bound member function type>' ->_M_insert_aux 0xa0ae550
        (CXXThisExpr 0xa0c1410 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa0c1490 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c1450 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0c14ac <col:30> '_Bool' lvalue ParmVar 0xa0ab570 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa0c1d10 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0xa0c1690 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa0c1548 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92610 0x9bfcdd0 0x9e17f40 0xa09c200)
    (CXXDependentScopeMemberExpr 0xa0c15d0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c1598 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c1588 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa0c1658 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c1620 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0xa0c1604 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0ab670 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa0c1820 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0xa0c16d8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92610 0x9bfcdd0 0x9e17f40 0xa09c200)
    (CXXDependentScopeMemberExpr 0xa0c1760 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c1728 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c1718 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa0c17e8 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c17b0 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa0c1794 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0ab670 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa0c19b0 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa0c1868 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92610 0x9bfcdd0 0x9e17f40 0xa09c200)
    (CXXDependentScopeMemberExpr 0xa0c18f0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c18b8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c18a8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa0c1978 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c1940 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa0c1924 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0ab670 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa0c1ce8 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0c1be8 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0xa0c1c58 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0xa0c1c1c <col:11> '<dependent type>' lvalue))
    (CallExpr 0xa0c1cc8 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c1c90 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0xa0c1c74 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa0ab670 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0xa0c1f50 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0xa0c1df8 <line:773:7, col:23>
    0xa0c1d40 "bool __tmp =
      (ImplicitCastExpr 0xa0c1de8 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0xa0c1dc8 <col:20> '_Bool'
          (MemberExpr 0xa0c1da8 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa09c900
            (ImplicitCastExpr 0xa0c1d98 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0xa0c1d74 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa0ab760 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0xa0c1e98 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa0c1e88 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0c1e50 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0xa09cb30 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0xa0c1e08 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa0ab760 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa0c1e40 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0xa0c1e20 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa0ab7a0 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0xa0c1f28 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa0c1f18 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0c1f00 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa09ca10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0xa0c1ebc <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa0ab7a0 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa0c1ef0 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa0c1ed4 <col:13> '_Bool' lvalue Var 0xa0c1d40 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0xa0ae888 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa0ae878 <col:51, col:56> '_Bool'))
) (CompoundStmt 0xa0c2650 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0xa0c20a8 <line:781:7, col:55>
    0xa0c1f80 "const difference_type __n =
      (CXXOperatorCallExpr 0xa0c2080 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c2040 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
        (DeclRefExpr 0xa0c1fb4 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0ab8b0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa0c2020 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c1fe0 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0xa0c2520 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0xa0c2388 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0c2250 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c21f0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
        (CXXDependentScopeMemberExpr 0xa0c2138 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c2100 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0c20c8 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c20b8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa0c21b8 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c2180 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c2170 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0xa0c2360 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c2300 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0 0xa099da0)
        (DeclRefExpr 0xa0c2274 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0ab8b0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa0c22e0 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c22a0 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa0c2480 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa0c2450 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa0c2438 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa0c23e8 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0c23b0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c23a0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa0c2464 <col:38> 'const _Bool' lvalue ParmVar 0xa0ab900 '__x' 'const _Bool &'))
    (CallExpr 0xa0c24f8 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0xa0c24a8 <col:9> '<bound member function type>' ->_M_insert_aux 0xa0ae550
        (CXXThisExpr 0xa0c2498 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa0c24c8 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0ab8b0 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0xa0c24e0 <col:35> 'const _Bool' lvalue ParmVar 0xa0ab900 '__x' 'const _Bool &')))
  (ReturnStmt 0xa0c2640 <line:787:7, col:24>
    (CXXOperatorCallExpr 0xa0c2618 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c25c8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
      (CallExpr 0xa0c2590 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c2550 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0c25ac <col:24> 'const difference_type':'const int' lvalue Var 0xa0c1f80 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa0c4d00 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0xa0c4bf0 <line:795:2, col:70>
    0xa0c4bc0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa0c4cd0 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0xa0c4c10 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0c4c50 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0aba70 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa0c4c68 <col:33> '_InputIterator' lvalue ParmVar 0xa0abab0 '__first' '_InputIterator')
    (DeclRefExpr 0xa0c4c80 <col:42> '_InputIterator' lvalue ParmVar 0xa0abaf0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa0c4cb8 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0xa0c4db8 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0xa0c4d90 <col:7, col:42> '<dependent type>'
    (MemberExpr 0xa0c4d28 <col:7> '<bound member function type>' ->_M_fill_insert 0xa0adec0
      (CXXThisExpr 0xa0c4d18 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0c4d48 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abc50 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa0c4d60 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa0abc90 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa0c4d78 <col:39> 'const _Bool' lvalue ParmVar 0xa0abce0 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0xa0c4e68 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0xa0c4e50 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa0c4e18 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c4de0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c4dd0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0xa0c52b8 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0xa0c51a0 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c4fe0 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c4f80 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (CXXOperatorCallExpr 0xa0c4ee8 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa0c4ed8 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c4ec0 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa0a21d0 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa0c4eb0 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0c4e7c <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abea0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa0c4e98 <col:24> 'int' 1))
      (CallExpr 0xa0c4f60 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c4f20 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa0c5178 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c5028 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
      (CXXOperatorCallExpr 0xa0c50c8 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa0c50b8 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c50a0 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa0a21d0 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa0c5090 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0c5060 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abea0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa0c5078 <col:32> 'int' 1))
      (CallExpr 0xa0c5140 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c5100 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0c515c <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abea0 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0xa0c5240 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa0c5208 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c51d0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c51c0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0xa0c52a8 <line:818:7, col:14>
    (CXXConstructExpr 0xa0c5280 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa0c5270 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa0c5254 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abea0 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa0c5570 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0xa0c54f0 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c5360 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0xa0c5350 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c5338 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa09e5b0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa0c5328 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa0c52d4 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abfb0 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa0c5318 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa0c5308 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa0c52ec <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abff0 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0xa0c54d0 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0xa0c5398 <col:2> '<bound member function type>' ->_M_erase_at_end 0xa0ae7a0
        (CXXThisExpr 0xa0c5388 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa0c54a8 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c53d0 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
        (DeclRefExpr 0xa0c5408 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abff0 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa0c5470 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c5430 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa0c548c <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abfb0 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0xa0c5560 <line:826:7, col:14>
    (CXXConstructExpr 0xa0c5538 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa0c5528 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa0c550c <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0abfb0 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0xa0ae8a0 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0xa0c59f0 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0xa0c59d0 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c5640 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c55f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0 0xa09a590)
      (DeclRefExpr 0xa0c5588 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0ac100 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa0c55d0 <col:24, col:29> '<dependent type>'
        (MemberExpr 0xa0c55b0 <col:24> '<bound member function type>' ->size 0xa0aaa60
          (CXXThisExpr 0xa0c55a0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa0c57d8 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0xa0c5678 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa0ae7a0
        (CXXThisExpr 0xa0c5668 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0xa0c57b0 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c5760 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
        (CallExpr 0xa0c56e8 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c56a8 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0xa0c5748 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa0c5738 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa0c5728 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0c5710 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa0ac100 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0xa0c59a8 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0xa0c5808 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0xa0c58a0 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c5860 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa0c5968 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c5928 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
        (DeclRefExpr 0xa0c58bc <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa0ac100 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa0c5908 <col:36, col:41> '<dependent type>'
          (MemberExpr 0xa0c58e8 <col:36> '<bound member function type>' ->size 0xa0aaa60
            (CXXThisExpr 0xa0c58d8 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa0c598c <col:44> '_Bool' lvalue ParmVar 0xa0ac140 '__x' '_Bool'))))


        void flip() (CompoundStmt 0xa0c5d58 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0xa0c5d30 <line:847:7, line:849:18>
    (DeclStmt 0xa0c5b10 <line:847:12, col:57>
      0xa0c5a20 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0xa0c5ad8 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c5aa0 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0c5a68 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c5a58 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c5c18 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c5bb8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (DeclRefExpr 0xa0c5b20 <col:5> '_Bit_type *' lvalue Var 0xa0c5a20 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0xa0c5b80 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0c5b48 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c5b38 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0xa0c5c58 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0xa0c5c3c <col:47> '_Bit_type *' lvalue Var 0xa0c5a20 '__p' '_Bit_type *'))
    (BinaryOperator 0xa0c5d18 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0xa0c5c98 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa0c5c88 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa0c5c6c <col:10> '_Bit_type *' lvalue Var 0xa0c5a20 '__p' '_Bit_type *')))
      (UnaryOperator 0xa0c5d00 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa0c5cf0 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0xa0c5cd8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0xa0c5cc8 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa0c5cac <col:18> '_Bit_type *' lvalue Var 0xa0c5a20 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0xa0c5e30 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0xa0c5e10 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa0c5d80 <col:7> '<bound member function type>' ->_M_erase_at_end 0xa0ae7a0
      (CXXThisExpr 0xa0c5d70 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa0c5df0 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa0c5db0 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0xa0c6920 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0xa0c6350 <line:863:7, col:75>
    0xa0c5e60 "_Bit_type *__q =
      (CallExpr 0xa0c62f8 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0xa0c62e8 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c6288 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0xa0c61c0 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x9cddca0 'copy')))
        (ImplicitCastExpr 0xa0c6320 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa0c5f10 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0xa09df70
            (ImplicitCastExpr 0xa0c5f00 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa0c5ee8 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa0ac390 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa0c6330 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa0c5f58 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0xa09df70
            (ImplicitCastExpr 0xa0c5f48 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa0c5f30 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa0ac3d0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa0c6340 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa0c5fa0 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0xa09df70
            (ImplicitCastExpr 0xa0c5f90 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa0c5f78 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0ac410 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0xa0c6910 <line:864:7, line:865:26>
    (CXXConstructExpr 0xa0c68e8 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa0c68d8 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa0c68c8 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0xa0c67d8 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa0c67c8 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0c6768 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0xa0c66a0 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x9cddca0 'copy')))
            (CXXConstructExpr 0xa0c6820 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa0c6810 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0xa0c6800 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa0c6438 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa0c6418 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa0c63e0 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0xa09df70
                        (ImplicitCastExpr 0xa0c63d0 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0xa0c63b8 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa0ac3d0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0xa0c6428 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa0c6400 <col:52> 'int' 0))))))
            (CXXConstructExpr 0xa0c6858 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0xa0c6848 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0xa0c6468 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa0ac3d0 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0xa0c68a0 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa0c6890 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0xa0c6880 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa0c64d8 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa0c64b8 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0xa0c6488 <col:19> '_Bit_type *' lvalue Var 0xa0c5e60 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0xa0c64c8 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa0c64a0 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0xa0c6f98 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0xa0c6a08 <line:871:7, col:46>
    0xa0c6950 "_Bit_type *__q =
      (CallExpr 0xa0c69e8 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c6998 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c6988 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0xa0c69cc <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa0ac550 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0xa0c6c78 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0c6a60 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c6a28 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c6a18 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0xa0c6c60 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0xa0c6c48 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0xa0c6c38 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa0c6a94 <col:42> '_Bit_type *' lvalue Var 0xa0c6950 '__q' '_Bit_type *'))
        (ParenExpr 0xa0c6c20 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0xa0c6c08 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0xa0c6b90 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0xa0c6b78 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0xa0c6b38 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa0c6b18 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0c6aac <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0ac550 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa0c6b28 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa0c6b00 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa0c6af0 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0xa0c6ad4 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0xa0c6b68 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa0c6b50 <col:36> 'int' 1))))
            (ImplicitCastExpr 0xa0c6bf8 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa0c6be0 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa0c6bd0 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0xa0c6bb4 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0xa0c6d98 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0c6cd8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c6ca0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c6c90 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0xa0c6d68 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0xa0c6d48 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c6d18 <col:41> '_Bit_type *' lvalue Var 0xa0c6950 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0xa0c6d58 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0c6d30 <col:46> 'int' 0))))
  (BinaryOperator 0xa0c6f80 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0c6df8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c6dc0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c6db0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0xa0c6f58 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c6f08 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
      (CXXDependentScopeMemberExpr 0xa0c6e78 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0c6e40 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c6e30 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0xa0c6ef0 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0xa0c6ee0 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0xa0c6ed0 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0c6eb8 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0xa0ac550 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa0c7280 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0xa0c7020 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0xa0c6fc8 <col:2> '<bound member function type>' ->_M_initialize 0xa0ac5a0
      (CXXThisExpr 0xa0c6fb8 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0xa0c7008 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa0c6fe8 <col:39> '_Integer' lvalue ParmVar 0xa0ac670 '__n' '_Integer')))
  (CallExpr 0xa0c7258 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa0c7068 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0 0xa0a6160)
    (CXXDependentScopeMemberExpr 0xa0c7120 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c70e8 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0c70b0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c70a0 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa0c71a0 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c7168 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c7158 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa0c7238 <col:38, col:49> 'int'
      (DeclRefExpr 0xa0c71d4 <col:38> '_Integer' lvalue ParmVar 0xa0ac6b0 '__x' '_Integer')
      (UnaryOperator 0xa0c7208 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0xa0c71f0 <col:45> 'int' 0))
      (IntegerLiteral 0xa0c7220 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa0c73c8 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0xa0c73a0 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0xa0c72a8 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0c72e8 <col:29> '_InputIterator' lvalue ParmVar 0xa0ac880 '__first' '_InputIterator')
    (DeclRefExpr 0xa0c7300 <col:38> '_InputIterator' lvalue ParmVar 0xa0ac8c0 '__last' '_InputIterator')
    (CallExpr 0xa0c7380 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c7330 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ca6760)
      (DeclRefExpr 0xa0c7364 <col:33> '_InputIterator' lvalue ParmVar 0xa0ac880 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa0c7570 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0xa0c7548 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c7470 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c7410 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (DeclRefExpr 0xa0c73dc <col:9> '_InputIterator' lvalue ParmVar 0xa0aca90 '__first' '_InputIterator')
      (DeclRefExpr 0xa0c73f4 <col:20> '_InputIterator' lvalue ParmVar 0xa0acad0 '__last' '_InputIterator'))
    (UnaryOperator 0xa0c74b0 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa0c7494 <col:30> '_InputIterator' lvalue ParmVar 0xa0aca90 '__first' '_InputIterator'))
    (CallExpr 0xa0c7528 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0xa0c74d8 <col:4> '<bound member function type>' ->push_back 0xa0ab5f0
        (CXXThisExpr 0xa0c74c8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0xa0c7510 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0c74f8 <col:15> '_InputIterator' lvalue ParmVar 0xa0aca90 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa0c7820 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0xa0c7670 <line:913:2, col:54>
    0xa0c7590 "const size_type __n =
      (CallExpr 0xa0c7648 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c75e0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
        (DeclRefExpr 0xa0c7614 <col:38> '_ForwardIterator' lvalue ParmVar 0xa0acce0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0c762c <col:47> '_ForwardIterator' lvalue ParmVar 0xa0acd20 '__last' '_ForwardIterator'))")
  (CallExpr 0xa0c76c8 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0xa0c7690 <col:2> '<bound member function type>' ->_M_initialize 0xa0ac5a0
      (CXXThisExpr 0xa0c7680 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0c76b0 <col:16> 'const size_type':'const unsigned int' lvalue Var 0xa0c7590 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0xa0c77f8 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa0c7710 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
    (DeclRefExpr 0xa0c7748 <col:12> '_ForwardIterator' lvalue ParmVar 0xa0acce0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa0c7760 <col:21> '_ForwardIterator' lvalue ParmVar 0xa0acd20 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0xa0c77c0 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c7788 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c7778 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa0c78c8 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0xa0c78a0 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa0c7850 <col:9> '<bound member function type>' ->_M_fill_assign 0xa0ad3b0
      (CXXThisExpr 0xa0c7840 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0c7870 <col:24> '_Integer' lvalue ParmVar 0xa0acf30 '__n' '_Integer')
    (DeclRefExpr 0xa0c7888 <col:29> '_Integer' lvalue ParmVar 0xa0acf70 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa0c7a10 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0xa0c79e8 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0xa0c78f0 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0c7930 <col:23> '_InputIterator' lvalue ParmVar 0xa0ad140 '__first' '_InputIterator')
    (DeclRefExpr 0xa0c7948 <col:32> '_InputIterator' lvalue ParmVar 0xa0ad180 '__last' '_InputIterator')
    (CallExpr 0xa0c79c8 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c7978 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ca6760)
      (DeclRefExpr 0xa0c79ac <col:65> '_InputIterator' lvalue ParmVar 0xa0ad140 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0xa0c8318 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0xa0c82f8 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c7ae0 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c7a90 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
      (DeclRefExpr 0xa0c7a24 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa0ad2f0 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa0c7a70 <col:17, col:22> '<dependent type>'
        (MemberExpr 0xa0c7a50 <col:17> '<bound member function type>' ->size 0xa0aaa60
          (CXXThisExpr 0xa0c7a40 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa0c7f28 <line:935:2, line:939:2>
      (CallExpr 0xa0c7d28 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c7b28 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0 0xa0a6160)
        (CXXDependentScopeMemberExpr 0xa0c7be0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c7ba8 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0c7b70 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c7b60 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa0c7c60 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c7c28 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c7c18 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa0c7d08 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa0c7cf8 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa0c7c94 <col:40> '_Bool' lvalue ParmVar 0xa0ad330 '__x' '_Bool'))
          (UnaryOperator 0xa0c7cc8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa0c7cb0 <col:47> 'int' 0))
          (IntegerLiteral 0xa0c7ce0 <col:51> 'int' 0)))
      (CallExpr 0xa0c7f00 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c7d60 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa0c7df8 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c7db8 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa0c7ec0 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa0c7e80 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (DeclRefExpr 0xa0c7e14 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0xa0ad2f0 '__n' 'size_t':'unsigned int')
          (CallExpr 0xa0c7e60 <col:24, col:29> '<dependent type>'
            (MemberExpr 0xa0c7e40 <col:24> '<bound member function type>' ->size 0xa0aaa60
              (CXXThisExpr 0xa0c7e30 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0xa0c7ee4 <col:32> '_Bool' lvalue ParmVar 0xa0ad330 '__x' '_Bool')))
    (CompoundStmt 0xa0c82e0 <line:941:2, line:945:2>
      (CallExpr 0xa0c8070 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0xa0c7f50 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa0ae7a0
          (CXXThisExpr 0xa0c7f40 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0xa0c8048 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa0c7ff8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (CallExpr 0xa0c7fc0 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa0c7f80 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa0c7fdc <col:30> 'size_t':'unsigned int' lvalue ParmVar 0xa0ad2f0 '__n' 'size_t':'unsigned int')))
      (CallExpr 0xa0c82b8 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c80b8 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0 0xa0a6160)
        (CXXDependentScopeMemberExpr 0xa0c8170 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c8138 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0c8100 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c80f0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa0c81f0 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0c81b8 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c81a8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa0c8298 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa0c8288 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa0c8224 <col:40> '_Bool' lvalue ParmVar 0xa0ad330 '__x' '_Bool'))
          (UnaryOperator 0xa0c8258 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa0c8240 <col:47> 'int' 0))
          (IntegerLiteral 0xa0c8270 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa0c89c0 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0xa0c83e8 <line:953:2, col:26>
    0xa0c8340 "iterator __cur =
      (CallExpr 0xa0c83c8 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c8388 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0xa0c8738 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa0c85c0 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0c8488 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c8428 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
        (DeclRefExpr 0xa0c83f8 <col:9> '_InputIterator' lvalue ParmVar 0xa0ad480 '__first' '_InputIterator')
        (DeclRefExpr 0xa0c8410 <col:20> '_InputIterator' lvalue ParmVar 0xa0ad4c0 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa0c8598 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c8538 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
        (DeclRefExpr 0xa0c84ac <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0c8340 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa0c8518 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c84d8 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa0c8668 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0xa0c8618 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa0c8608 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c85f0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa0a1c90 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa0c85d8 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0c8340 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0xa0c8650 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0c8638 <col:57> '_InputIterator' lvalue ParmVar 0xa0ad480 '__first' '_InputIterator')))
    (BinaryOperator 0xa0c8720 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0xa0c86d0 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa0c86c0 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c86a8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa0a1b90 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa0c8698 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa0c8680 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0c8340 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0xa0c8708 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0c86f0 <col:14> '_InputIterator' lvalue ParmVar 0xa0ad480 '__first' '_InputIterator'))))
  (IfStmt 0xa0c89a0 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c87f0 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c8790 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0 0xa099da0)
      (DeclRefExpr 0xa0c875c <col:6> '_InputIterator' lvalue ParmVar 0xa0ad480 '__first' '_InputIterator')
      (DeclRefExpr 0xa0c8774 <col:17> '_InputIterator' lvalue ParmVar 0xa0ad4c0 '__last' '_InputIterator'))
    (CallExpr 0xa0c8860 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0xa0c8828 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa0ae7a0
        (CXXThisExpr 0xa0c8818 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa0c8848 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0c8340 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0xa0c8978 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa0c8890 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa0c8928 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c88e8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0c8944 <col:18> '_InputIterator' lvalue ParmVar 0xa0ad480 '__first' '_InputIterator')
      (DeclRefExpr 0xa0c895c <col:27> '_InputIterator' lvalue ParmVar 0xa0ad4c0 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa0c9100 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0xa0c8ad0 <line:967:2, col:56>
    0xa0c89f0 "const size_type __len =
      (CallExpr 0xa0c8aa8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c8a40 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
        (DeclRefExpr 0xa0c8a74 <col:40> '_ForwardIterator' lvalue ParmVar 0xa0ad6b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0c8a8c <col:49> '_ForwardIterator' lvalue ParmVar 0xa0ad6f0 '__last' '_ForwardIterator'))")
  (IfStmt 0xa0c90e0 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c8b98 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c8b48 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0 0xa09a590)
      (DeclRefExpr 0xa0c8ae0 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa0c89f0 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa0c8b28 <col:14, col:19> '<dependent type>'
        (MemberExpr 0xa0c8b08 <col:14> '<bound member function type>' ->size 0xa0aaa60
          (CXXThisExpr 0xa0c8af8 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa0c8d08 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0xa0c8bd0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa0ae7a0
        (CXXThisExpr 0xa0c8bc0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa0c8ce0 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c8c08 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
        (DeclRefExpr 0xa0c8c40 <col:30> '_ForwardIterator' lvalue ParmVar 0xa0ad6b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0c8c58 <col:39> '_ForwardIterator' lvalue ParmVar 0xa0ad6f0 '__last' '_ForwardIterator')
        (CallExpr 0xa0c8cc0 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c8c80 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa0c90c0 <line:971:4, line:976:4>
      (DeclStmt 0xa0c8d80 <line:972:6, col:38>
        0xa0c8d30 "_ForwardIterator __mid =
          (DeclRefExpr 0xa0c8d64 <col:31> '_ForwardIterator' lvalue ParmVar 0xa0ad6b0 '__first' '_ForwardIterator')")
      (CallExpr 0xa0c8e58 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c8db8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cae340)
        (DeclRefExpr 0xa0c8dec <col:19> '_ForwardIterator' lvalue Var 0xa0c8d30 '__mid' '_ForwardIterator')
        (CallExpr 0xa0c8e38 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa0c8e18 <col:26> '<bound member function type>' ->size 0xa0aaa60
            (CXXThisExpr 0xa0c8e08 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0xa0c8f78 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c8ea0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
        (DeclRefExpr 0xa0c8ed8 <col:16> '_ForwardIterator' lvalue ParmVar 0xa0ad6b0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0c8ef0 <col:25> '_ForwardIterator' lvalue Var 0xa0c8d30 '__mid' '_ForwardIterator')
        (CallExpr 0xa0c8f58 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c8f18 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0xa0c9098 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa0c8fb0 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0xa0c9048 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c9008 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa0c9064 <col:20> '_ForwardIterator' lvalue Var 0xa0c8d30 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa0c907c <col:27> '_ForwardIterator' lvalue ParmVar 0xa0ad6f0 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa0c91b8 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0xa0c9190 <col:9, col:39> '<dependent type>'
    (MemberExpr 0xa0c9128 <col:9> '<bound member function type>' ->_M_fill_insert 0xa0adec0
      (CXXThisExpr 0xa0c9118 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa0c9148 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0ad8e0 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa0c9160 <col:31> '_Integer' lvalue ParmVar 0xa0ad920 '__n' '_Integer')
    (DeclRefExpr 0xa0c9178 <col:36> '_Integer' lvalue ParmVar 0xa0ad960 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa0c9320 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0xa0c92f0 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0xa0c91e0 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa0c9220 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0adb60 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa0c9238 <col:32> '_InputIterator' lvalue ParmVar 0xa0adba0 '__first' '_InputIterator')
    (DeclRefExpr 0xa0c9250 <col:41> '_InputIterator' lvalue ParmVar 0xa0adbe0 '__last' '_InputIterator')
    (CallExpr 0xa0c92d0 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c9280 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ca6760)
      (DeclRefExpr 0xa0c92b4 <col:29> '_InputIterator' lvalue ParmVar 0xa0adba0 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa0c95b8 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0xa0c9590 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c93c8 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c9368 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (DeclRefExpr 0xa0c9334 <col:9> '_InputIterator' lvalue ParmVar 0xa0adfd0 '__first' '_InputIterator')
      (DeclRefExpr 0xa0c934c <col:20> '_InputIterator' lvalue ParmVar 0xa0ae010 '__last' '_InputIterator'))
    (UnaryOperator 0xa0c9408 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa0c93ec <col:30> '_InputIterator' lvalue ParmVar 0xa0adfd0 '__first' '_InputIterator'))
    (CompoundStmt 0xa0c9578 <line:1006:4, line:1009:4>
      (BinaryOperator 0xa0c9500 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa0c941c <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0adf90 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa0c94d8 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa0c9448 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa0c948c <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0adf90 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0xa0c94c0 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0c94a4 <col:29> '_InputIterator' lvalue ParmVar 0xa0adfd0 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0xa0c9558 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa0c9548 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c9530 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa0a1c90 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa0c9518 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0adf90 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa0c9cc8 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0xa0c9828 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c9740 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c96f0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0 0xa09a590)
      (CXXOperatorCallExpr 0xa0c96b0 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c9670 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
        (CallExpr 0xa0c9600 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa0c95e0 <col:11> '<bound member function type>' ->max_size 0xa0aaae0
            (CXXThisExpr 0xa0c95d0 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa0c9650 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa0c9630 <col:24> '<bound member function type>' ->size 0xa0aaa60
            (CXXThisExpr 0xa0c9620 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa0c96d4 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0xa0ae5c0 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa0c97f8 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0xa0c97e8 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c97cc <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63690 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0c9818 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa0c97b8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa0c979c </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0xa0ae610 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa0c9a30 <line:1026:7, col:61>
    0xa0c9850 "const size_type __len =
      (CXXOperatorCallExpr 0xa0c9a08 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c99b8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
        (CallExpr 0xa0c98b8 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa0c9898 <col:31> '<bound member function type>' ->size 0xa0aaa60
            (CXXThisExpr 0xa0c9888 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa0c9990 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa0c98f0 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cd43d0 0x9cd5170)
          (CallExpr 0xa0c9958 <col:49, col:54> '<dependent type>'
            (MemberExpr 0xa0c9938 <col:49> '<bound member function type>' ->size 0xa0aaa60
              (CXXThisExpr 0xa0c9928 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0xa0c9974 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0xa0ae5c0 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa0c9cb8 <line:1027:7, col:68>
    (ConditionalOperator 0xa0c9c98 <col:14, col:68> '<dependent type>'
      (ParenExpr 0xa0c9c18 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0xa0c9c00 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa0c9af8 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa0c9aa8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0 0xa09a590)
            (DeclRefExpr 0xa0c9a40 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa0c9850 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa0c9a88 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa0c9a68 <col:23> '<bound member function type>' ->size 0xa0aaa60
                (CXXThisExpr 0xa0c9a58 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0xa0c9bd8 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa0c9b88 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
            (DeclRefExpr 0xa0c9b1c <col:33> 'const size_type':'const unsigned int' lvalue Var 0xa0c9850 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa0c9b68 <col:41, col:50> '<dependent type>'
              (MemberExpr 0xa0c9b48 <col:41> '<bound member function type>' ->max_size 0xa0aaae0
                (CXXThisExpr 0xa0c9b38 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0xa0c9c60 <col:55, col:64> '<dependent type>'
        (MemberExpr 0xa0c9c40 <col:55> '<bound member function type>' ->max_size 0xa0aaae0
          (CXXThisExpr 0xa0c9c30 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa0c9c7c <col:68> 'const size_type':'const unsigned int' lvalue Var 0xa0c9850 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0xa0c9d98 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0xa0c9d80 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa0c9d30 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0c9cf8 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c9ce8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0xa0c9d64 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0ae700 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0xa0cafd0 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0xa0ca3e0 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0ca2b8 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa0ca268 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
      (DeclRefExpr 0xa0ca1e4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0ca100 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa0ca248 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0ca210 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa0ca200 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa0ca3b0 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0xa0ca3a0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0ca384 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63690 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0ca3d0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0ca370 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa0ca340 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa0cafb0 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0ca4d0 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa0ca480 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0 0xa09a590)
      (CallExpr 0xa0ca448 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0ca410 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa0ca400 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa0ca464 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa0ca100 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa0caf80 <line:72:2, line:85:2>
      (DeclStmt 0xa0ca588 <line:73:4, col:39>
        0xa0ca500 "const size_type __old_size =
          (CallExpr 0xa0ca568 <col:33, col:38> '<dependent type>'
            (MemberExpr 0xa0ca548 <col:33> '<bound member function type>' ->size 0xa086210
              (CXXThisExpr 0xa0ca538 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0xa0ca798 <line:74:4, line:76:57>
        0xa0ca5a0 "pointer __tmp =
          (CallExpr 0xa0ca770 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa0ca5e8 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa0ca624 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa0ca100 '__n' 'size_type':'unsigned int')
            (ParenExpr 0xa0ca6c0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0ca688 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0ca650 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0ca640 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0xa0ca758 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0ca720 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0ca6e8 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0ca6d8 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0xa0ca970 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa0ca7d8 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (CXXDependentScopeMemberExpr 0xa0ca860 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0ca828 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa0ca818 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0ca8e0 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0ca8a8 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa0ca898 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa0ca950 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa0ca914 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa0cabc0 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa0ca998 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa0caa20 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0ca9e8 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa0ca9d8 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0cab98 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa0cab58 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (CXXDependentScopeMemberExpr 0xa0caaa0 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0caa68 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa0caa58 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa0cab20 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0caae8 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa0caad8 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa0cac80 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0cac30 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cabf8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cabe8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa0cac64 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0ca5a0 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa0cadc0 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0cace0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0caca8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cac98 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0cad98 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa0cad48 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (DeclRefExpr 0xa0cad14 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0ca5a0 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa0cad2c <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa0ca500 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa0caf68 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0cae20 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cade8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cadd8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0caf40 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa0caef0 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (CXXDependentScopeMemberExpr 0xa0caea0 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0cae68 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa0cae58 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa0caed4 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0xa0ca100 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0xa0cbe60 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0xa0cb7a8 <line:111:7, col:49>
    0xa0cb680 "const size_type __n =
      (CXXOperatorCallExpr 0xa0cb780 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa0cb740 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
        (DeclRefExpr 0xa0cb6b4 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cb3e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa0cb720 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0xa0cb6e0 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0xa0cbcf8 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0xa0cba50 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0cb918 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa0cb8b8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
        (CXXDependentScopeMemberExpr 0xa0cb800 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cb7c8 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cb7b8 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0cb880 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cb848 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cb838 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa0cba28 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa0cb9c8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0 0xa099da0)
        (DeclRefExpr 0xa0cb93c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cb3e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa0cb9a8 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa0cb968 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa0cbc40 <line:114:2, line:117:2>
      (CallExpr 0xa0cbb80 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0cbab0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cba78 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cba68 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0cbb30 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cbaf8 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cbae8 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa0cbb64 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0xa0cb430 '__x' 'const value_type &'))
      (UnaryOperator 0xa0cbc28 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa0cbbf0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cbbb8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cbba8 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0xa0cbce0 <line:119:2, line:129:2>
      (CallExpr 0xa0cbcb8 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0xa0cbc68 <col:6> '<bound member function type>' ->_M_insert_aux 0xa089da0
          (CXXThisExpr 0xa0cbc58 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa0cbc88 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cb3e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0xa0cbca0 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0xa0cb430 '__x' 'const value_type &'))))
  (ReturnStmt 0xa0cbe50 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0xa0cbe30 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0xa0cbe08 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa0cbdb8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
        (CXXDependentScopeMemberExpr 0xa0cbd68 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0cbd30 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa0cbd20 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa0cbd9c <col:48> 'const size_type':'const unsigned int' lvalue Var 0xa0cb680 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0xa0cc9c8 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0xa0cc7c8 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0cc5f0 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0cc590 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (CXXOperatorCallExpr 0xa0cc4f8 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa0cc4a8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
        (DeclRefExpr 0xa0cc474 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cc240 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa0cc490 <col:24> 'int' 1))
      (CallExpr 0xa0cc570 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa0cc530 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa0cc7a0 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0xa0cc638 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
      (CXXOperatorCallExpr 0xa0cc6f0 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa0cc6a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
        (DeclRefExpr 0xa0cc670 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cc240 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa0cc688 <col:30> 'int' 1))
      (CallExpr 0xa0cc768 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa0cc728 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0cc784 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cc240 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0xa0cc868 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa0cc830 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0cc7f8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa0cc7e8 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa0cc980 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0cc8c8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0cc890 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa0cc880 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa0cc948 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa0cc910 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa0cc900 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0xa0cc9b8 <line:142:7, col:14>
    (DeclRefExpr 0xa0cc9a0 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cc240 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa0d0760 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0xa0d0718 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0d0248 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d01e8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (DeclRefExpr 0xa0d01b8 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff30 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0xa0d01d0 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff70 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0xa0d0700 <line:151:2, line:155:2>
      (IfStmt 0xa0d04a0 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa0d0358 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d02f8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
          (DeclRefExpr 0xa0d026c <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff70 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa0d02d8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa0d0298 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0xa0d0478 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d03a0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
          (DeclRefExpr 0xa0d03d8 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff70 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa0d0440 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0xa0d0400 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa0d045c <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff30 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0xa0d06e0 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0xa0d04d0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa089ff0
          (CXXThisExpr 0xa0d04c0 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa0d06b8 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d0668 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (CallExpr 0xa0d0540 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0d0508 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa0d04f0 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff30 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0xa0d0650 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa0d0628 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d05e8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
              (CallExpr 0xa0d05b0 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d0570 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa0d05cc <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff70 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d0750 <line:156:7, col:14>
    (DeclRefExpr 0xa0d0734 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0cff30 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa0d2630 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0xa0d25d8 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0d0f50 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d0ef0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (CXXOperatorCallExpr 0xa0d0ec0 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d0e80 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9eba470 0x9ebcae0 0x9ebdd50)
        (DeclRefExpr 0xa0d0e64 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0xa0d0ee0 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0xa0d25b8 <line:165:2, line:194:2>
      (DeclStmt 0xa0d1028 <line:166:4, col:39>
        0xa0d0f80 "const size_type __xlen =
          (CallExpr 0xa0d1008 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0d0fd0 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa0d0fb4 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0xa0d23f0 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa0d10f0 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d10a0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
          (DeclRefExpr 0xa0d1038 <col:8> 'const size_type':'const unsigned int' lvalue Var 0xa0d0f80 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0xa0d1080 <col:17, col:26> '<dependent type>'
            (MemberExpr 0xa0d1060 <col:17> '<bound member function type>' ->capacity 0xa086460
              (CXXThisExpr 0xa0d1050 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0xa0d1968 <line:168:6, line:178:6>
          (DeclStmt 0xa0d12c8 <line:169:8, line:170:20>
            0xa0d1120 "pointer __tmp =
              (CallExpr 0xa0d12a0 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d1168 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0xa0d11a4 <col:45> 'const size_type':'const unsigned int' lvalue Var 0xa0d0f80 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0xa0d1210 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d11d8 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d11bc <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0d1280 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d1248 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d122c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0xa0d1498 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa0d1300 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
            (CXXDependentScopeMemberExpr 0xa0d1388 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0d1350 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d1340 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa0d1408 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0d13d0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d13c0 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa0d1478 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa0d143c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa0d16e8 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa0d14c0 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa0d1548 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0d1510 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d1500 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0d16c0 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d1680 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
              (CXXDependentScopeMemberExpr 0xa0d15c8 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d1590 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d1580 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa0d1648 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d1610 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d1600 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa0d17a8 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0d1758 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0d1720 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d1710 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa0d178c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d1120 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa0d1950 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0d1808 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0d17d0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d17c0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0d1928 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d18d8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
              (CXXDependentScopeMemberExpr 0xa0d1888 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d1850 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d1840 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa0d18bc <col:67> 'const size_type':'const unsigned int' lvalue Var 0xa0d0f80 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0xa0d23d0 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa0d1a48 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa0d19f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880 0xa09bc60)
            (CallExpr 0xa0d19c0 <col:13, col:18> '<dependent type>'
              (MemberExpr 0xa0d19a0 <col:13> '<bound member function type>' ->size 0xa086210
                (CXXThisExpr 0xa0d1990 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa0d19dc <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa0d0f80 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0xa0d1d88 <line:180:6, line:183:6>
            (CallExpr 0xa0d1d60 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d1a90 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
              (CallExpr 0xa0d1c70 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d1ae8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
                (CallExpr 0xa0d1b70 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d1b38 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d1b20 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0d1be0 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d1ba8 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d1b8c <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0d1c50 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0d1c10 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0xa0d1ce8 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d1ca8 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0xa0d1d40 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d1d04 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0xa0d23b8 <line:185:6, line:192:6>
            (CallExpr 0xa0d2050 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d1dc0 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
              (CXXDependentScopeMemberExpr 0xa0d1e48 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d1e10 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0xa0d1df8 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0xa0d1fa8 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d1f58 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                (CXXDependentScopeMemberExpr 0xa0d1ed0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d1e98 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d1e7c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0d1f38 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0xa0d1f18 <col:63> '<bound member function type>' ->size 0xa086210
                    (CXXThisExpr 0xa0d1f08 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa0d2018 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d1fe0 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d1fd0 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0xa0d2388 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d20a0 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
              (CXXOperatorCallExpr 0xa0d2200 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d21b0 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                (CXXDependentScopeMemberExpr 0xa0d2128 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d20f0 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d20d8 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa0d2190 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0xa0d2170 <col:59> '<bound member function type>' ->size 0xa086210
                    (CXXThisExpr 0xa0d2160 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa0d2278 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d2240 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa0d2224 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa0d0c20 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0xa0d22f8 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d22c0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d22b0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa0d2368 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d232c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0xa0d25a0 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0d2458 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d2420 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d2410 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0d2578 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d2528 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (CXXDependentScopeMemberExpr 0xa0d24d8 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d24a0 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d2490 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa0d250c <col:55> 'const size_type':'const unsigned int' lvalue Var 0xa0d0f80 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0xa0d2620 <line:195:7, col:15>
    (UnaryOperator 0xa0d2608 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0d25f8 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0xa0d34d8 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0xa0d34b8 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0d2b10 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d2ac0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
      (DeclRefExpr 0xa0d2a58 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa0d28f0 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa0d2aa0 <col:17, col:26> '<dependent type>'
        (MemberExpr 0xa0d2a80 <col:17> '<bound member function type>' ->capacity 0xa086460
          (CXXThisExpr 0xa0d2a70 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa0d2cd0 <line:204:2, line:207:2>
      (DeclStmt 0xa0d2c28 <line:205:4, col:51>
        0xa0d2b40 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0xa0d2c00 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0xa0d2b74 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0xa0d28f0 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0xa0d2b8c <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0xa0d2940 '__val' 'const value_type &')
            (CallExpr 0xa0d2be0 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0xa0d2ba4 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0xa0d2cb0 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0d2c50 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa0d2c38 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0xa0d2b40 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0xa0d2c98 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0d2c88 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0xa0d3498 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa0d2da0 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d2d50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
        (DeclRefExpr 0xa0d2ce8 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa0d28f0 '__n' 'size_t':'unsigned int')
        (CallExpr 0xa0d2d30 <col:22, col:27> '<dependent type>'
          (MemberExpr 0xa0d2d10 <col:22> '<bound member function type>' ->size 0xa086210
            (CXXThisExpr 0xa0d2d00 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0xa0d3300 <line:209:2, line:215:2>
        (CallExpr 0xa0d2f18 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d2de8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0 0xa0a6160)
          (CallExpr 0xa0d2e70 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa0d2e30 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa0d2ee0 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0xa0d2ea0 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa0d2efc <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa0d2940 '__val' 'const value_type &'))
        (CallExpr 0xa0d3160 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d2f68 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa07a710 0xa07b040)
          (CXXDependentScopeMemberExpr 0xa0d2fe8 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d2fb0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d2fa0 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa0d30c8 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0xa0d3088 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
            (DeclRefExpr 0xa0d301c <col:6> 'size_t':'unsigned int' lvalue ParmVar 0xa0d28f0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa0d3068 <col:12, col:17> '<dependent type>'
              (MemberExpr 0xa0d3048 <col:12> '<bound member function type>' ->size 0xa086210
                (CXXThisExpr 0xa0d3038 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0xa0d30ec <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0xa0d2940 '__val' 'const value_type &')
          (CallExpr 0xa0d3140 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa0d3104 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0xa0d32e0 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0d31d8 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d31a0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d3190 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa0d32b8 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa0d3278 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
            (DeclRefExpr 0xa0d320c <col:31> 'size_t':'unsigned int' lvalue ParmVar 0xa0d28f0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa0d3258 <col:37, col:42> '<dependent type>'
              (MemberExpr 0xa0d3238 <col:37> '<bound member function type>' ->size 0xa086210
                (CXXThisExpr 0xa0d3228 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa0d3478 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0xa0d3330 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa089ff0
          (CXXThisExpr 0xa0d3320 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa0d3450 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d3368 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce8850)
          (CXXDependentScopeMemberExpr 0xa0d33e8 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d33b0 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d33a0 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa0d341c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa0d28f0 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0xa0d3434 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0xa0d2940 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa0d40a0 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0xa0d3b28 <line:227:2, col:39>
    0xa0d3a50 "pointer __cur =
      (ParenListExpr 0xa0d3b08 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0xa0d3ad0 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d3a98 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d3a88 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0xa0d3e18 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa0d3d10 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0d3bc8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d3b68 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
        (DeclRefExpr 0xa0d3b38 <col:9> '_InputIterator' lvalue ParmVar 0xa0d37f0 '__first' '_InputIterator')
        (DeclRefExpr 0xa0d3b50 <col:20> '_InputIterator' lvalue ParmVar 0xa0d3830 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa0d3ce8 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d3c88 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
        (DeclRefExpr 0xa0d3bec <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d3a50 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0xa0d3c50 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d3c18 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d3c08 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0xa0d3d88 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0xa0d3d40 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0d3d28 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d3a50 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa0d3d70 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0d3d54 <col:18> '_InputIterator' lvalue ParmVar 0xa0d37f0 '__first' '_InputIterator')))
    (BinaryOperator 0xa0d3e00 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0xa0d3db8 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0d3da0 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d3a50 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa0d3de8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0d3dcc <col:14> '_InputIterator' lvalue ParmVar 0xa0d37f0 '__first' '_InputIterator'))))
  (IfStmt 0xa0d4080 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0d3ed0 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d3e70 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfe790 0x9cb4f30 0x9cb75a0 0x9d038a0 0x9d24470 0x9d24800 0x9e10c00 0x9e11670 0x9e11eb0 0x9e12440 0x9f24dc0 0xa099da0)
      (DeclRefExpr 0xa0d3e3c <col:6> '_InputIterator' lvalue ParmVar 0xa0d37f0 '__first' '_InputIterator')
      (DeclRefExpr 0xa0d3e54 <col:17> '_InputIterator' lvalue ParmVar 0xa0d3830 '__last' '_InputIterator'))
    (CallExpr 0xa0d3f40 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0xa0d3f08 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa089ff0
        (CXXThisExpr 0xa0d3ef8 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa0d3f28 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d3a50 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0xa0d4058 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa0d3f70 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa0d4008 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa0d3fc8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa0d4024 <col:18> '_InputIterator' lvalue ParmVar 0xa0d37f0 '__first' '_InputIterator')
      (DeclRefExpr 0xa0d403c <col:27> '_InputIterator' lvalue ParmVar 0xa0d3830 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa0d5860 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0xa0d4700 <line:244:2, col:56>
    0xa0d4620 "const size_type __len =
      (CallExpr 0xa0d46d8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d4670 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
        (DeclRefExpr 0xa0d46a4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa0d43c0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa0d46bc <col:49> '_ForwardIterator' lvalue ParmVar 0xa0d4400 '__last' '_ForwardIterator'))")
  (IfStmt 0xa0d5840 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0d47c8 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d4778 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
      (DeclRefExpr 0xa0d4710 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa0d4620 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa0d4758 <col:14, col:23> '<dependent type>'
        (MemberExpr 0xa0d4738 <col:14> '<bound member function type>' ->capacity 0xa086460
          (CXXThisExpr 0xa0d4728 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa0d50d0 <line:247:4, line:257:4>
      (DeclStmt 0xa0d4918 <line:248:6, col:65>
        0xa0d4800 "pointer __tmp =
          (ParenListExpr 0xa0d48f8 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa0d48d0 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0xa0d4848 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa0d4884 <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa0d4620 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0xa0d489c <col:48> '_ForwardIterator' lvalue ParmVar 0xa0d43c0 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa0d48b4 <col:57> '_ForwardIterator' lvalue ParmVar 0xa0d4400 '__last' '_ForwardIterator')))")
      (CallExpr 0xa0d4ae8 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d4950 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (CXXDependentScopeMemberExpr 0xa0d49d8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d49a0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d4990 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0d4a58 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d4a20 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d4a10 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa0d4ac8 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa0d4a8c <col:6> '<dependent type>' lvalue)))
      (CallExpr 0xa0d4d38 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa0d4b10 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa0d4b98 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d4b60 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d4b50 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0d4d10 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d4cd0 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (CXXDependentScopeMemberExpr 0xa0d4c18 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d4be0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d4bd0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa0d4c98 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d4c60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d4c50 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa0d4df8 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0d4da8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d4d70 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d4d60 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa0d4ddc <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d4800 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa0d4fa0 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0d4e58 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d4e20 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d4e10 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0d4f78 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d4f28 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (CXXDependentScopeMemberExpr 0xa0d4ed8 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d4ea0 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d4e90 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa0d4f0c <col:57> 'const size_type':'const unsigned int' lvalue Var 0xa0d4620 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa0d50b8 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0d5000 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d4fc8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d4fb8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0d5080 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d5048 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d5038 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0xa0d5820 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa0d51b0 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d5160 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880 0xa09bc60)
        (CallExpr 0xa0d5128 <col:11, col:16> '<dependent type>'
          (MemberExpr 0xa0d5108 <col:11> '<bound member function type>' ->size 0xa086210
            (CXXThisExpr 0xa0d50f8 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa0d5144 <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa0d4620 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0xa0d5330 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0xa0d51e8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa089ff0
          (CXXThisExpr 0xa0d51d8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa0d5308 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d5220 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
          (DeclRefExpr 0xa0d5258 <col:30> '_ForwardIterator' lvalue ParmVar 0xa0d43c0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa0d5270 <col:39> '_ForwardIterator' lvalue ParmVar 0xa0d4400 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa0d52d0 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d5298 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d5288 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0xa0d5800 <line:261:4, line:269:4>
        (DeclStmt 0xa0d53b0 <line:262:6, col:38>
          0xa0d5360 "_ForwardIterator __mid =
            (DeclRefExpr 0xa0d5394 <col:31> '_ForwardIterator' lvalue ParmVar 0xa0d43c0 '__first' '_ForwardIterator')")
        (CallExpr 0xa0d5488 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d53e8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cae340)
          (DeclRefExpr 0xa0d541c <col:19> '_ForwardIterator' lvalue Var 0xa0d5360 '__mid' '_ForwardIterator')
          (CallExpr 0xa0d5468 <col:26, col:31> '<dependent type>'
            (MemberExpr 0xa0d5448 <col:26> '<bound member function type>' ->size 0xa086210
              (CXXThisExpr 0xa0d5438 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0xa0d55b8 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d54d0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
          (DeclRefExpr 0xa0d5508 <col:16> '_ForwardIterator' lvalue ParmVar 0xa0d43c0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa0d5520 <col:25> '_ForwardIterator' lvalue Var 0xa0d5360 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa0d5580 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d5548 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d5538 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0xa0d57e8 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa0d5628 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d55f0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d55e0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0xa0d57b8 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa0d5678 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
            (DeclRefExpr 0xa0d56b0 <col:36> '_ForwardIterator' lvalue Var 0xa0d5360 '__mid' '_ForwardIterator')
            (DeclRefExpr 0xa0d56c8 <col:43> '_ForwardIterator' lvalue ParmVar 0xa0d4400 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0xa0d5728 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0d56f0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d56e0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa0d5798 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa0d575c <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0xa0d7a40 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0xa0d7a20 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0d5e08 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d5da8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (CXXDependentScopeMemberExpr 0xa0d5cf0 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0d5cb8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa0d5ca8 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa0d5d70 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0d5d38 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa0d5d28 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa0d64f8 <line:305:2, line:321:2>
      (CallExpr 0xa0d6078 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0d5e78 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d5e40 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d5e30 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0d5ef8 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d5ec0 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d5eb0 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0xa0d6060 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0xa0d6048 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0xa0d6030 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0xa0d6008 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d5fc8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                (CXXDependentScopeMemberExpr 0xa0d5f78 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d5f40 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d5f30 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0xa0d5fb0 <line:308:11> 'int' 1))))))
      (UnaryOperator 0xa0d6120 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa0d60e8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d60b0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d60a0 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0xa0d6190 <line:311:4, col:22>
        0xa0d6140 "_Tp __x_copy =
          (DeclRefExpr 0xa0d6174 <col:19> 'const _Tp' lvalue ParmVar 0xa0d5b90 '__x' 'const _Tp &')")
      (CallExpr 0xa0d6470 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d61c8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce29b0)
        (CallExpr 0xa0d6250 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0d6218 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0xa0d61fc <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d5b20 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0xa0d6348 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d6308 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (CXXDependentScopeMemberExpr 0xa0d62b8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d6280 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d6270 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa0d62f0 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0xa0d6448 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d6408 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (CXXDependentScopeMemberExpr 0xa0d63b8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d6380 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d6370 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa0d63f0 <col:33> 'int' 1)))
      (BinaryOperator 0xa0d64e0 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0xa0d64b0 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa0d6498 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d5b20 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0xa0d64c4 <col:18> '_Tp' lvalue Var 0xa0d6140 '__x_copy' '_Tp')))
    (CompoundStmt 0xa0d79e0 <line:323:2, line:372:2>
      (DeclStmt 0xa0d6640 <line:324:4, line:325:57>
        0xa0d6530 "const size_type __len =
          (CallExpr 0xa0d6618 <col:6, col:56> '<dependent type>'
            (MemberExpr 0xa0d6578 <col:6> '<bound member function type>' ->_M_check_len 0xa089ee0
              (CXXThisExpr 0xa0d6568 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0xa0d65c8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa0d65b8 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0d65a0 <col:29> 'int' 1)))
            (StringLiteral 0xa0d65e0 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0xa0d6788 <line:326:4, col:57>
        0xa0d6660 "const size_type __elems_before =
          (CXXOperatorCallExpr 0xa0d6760 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa0d6720 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
            (DeclRefExpr 0xa0d6694 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d5b20 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0xa0d6700 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0xa0d66c0 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0xa0d6878 <line:327:4, col:49>
        0xa0d67a0 "pointer __new_start =
          (ParenListExpr 0xa0d6858 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa0d6838 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0d67e8 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d67d8 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0xa0d681c <col:42> 'const size_type':'const unsigned int' lvalue Var 0xa0d6530 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0xa0d6900 <line:328:4, col:37>
        0xa0d6890 "pointer __new_finish =
          (ParenListExpr 0xa0d68e0 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0xa0d68c4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0xa0d6f48 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0d6910 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa0d6f20 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0xa0d6a60 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0d6968 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0d6930 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa0d6920 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0d6a20 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d69d0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
              (DeclRefExpr 0xa0d699c <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa0d69b4 <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa0d6660 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0xa0d6a44 <line:339:32> 'const _Tp' lvalue ParmVar 0xa0d5b90 '__x' 'const _Tp &'))
          (BinaryOperator 0xa0d6ab8 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0xa0d6a84 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0xa0d6aa0 <col:23> 'int' 0))
          (BinaryOperator 0xa0d6cc8 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0xa0d6ad0 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa0d6c98 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d6b00 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
              (CXXDependentScopeMemberExpr 0xa0d6b80 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d6b48 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d6b38 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa0d6c08 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0d6bd0 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa0d6bb4 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d5b20 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0xa0d6c24 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa0d6c78 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d6c3c <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0xa0d6cf8 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa0d6ce0 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa0d6f08 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0xa0d6d0c <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa0d6ed8 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d6d40 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
              (CallExpr 0xa0d6dc8 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0d6d90 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0xa0d6d74 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d5b20 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0xa0d6e30 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d6df8 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d6de8 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa0d6e64 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa0d6eb8 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d6e7c <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa0d72f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa0d6f68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa0d72d0 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0xa0d7210 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0xa0d6f90 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0xa0d6f78 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0xa0d70d0 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0d6ff0 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d6fb8 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d6fa8 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa0d70a8 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d7058 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                (DeclRefExpr 0xa0d7024 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa0d703c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa0d6660 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0xa0d71e8 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d7118 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
              (DeclRefExpr 0xa0d7158 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa0d7170 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa0d71c8 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0xa0d7188 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0xa0d7298 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0xa0d722c <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0xa0d7268 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0xa0d7280 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa0d6530 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0xa0d72c0 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0xa0d74c8 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa0d7330 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
        (CXXDependentScopeMemberExpr 0xa0d73b8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d7380 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d7370 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa0d7438 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d7400 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d73f0 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa0d74a8 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa0d746c <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa0d7718 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa0d74f0 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa0d7578 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d7540 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d7530 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0d76f0 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d76b0 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
          (CXXDependentScopeMemberExpr 0xa0d75f8 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d75c0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d75b0 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa0d7678 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0d7640 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa0d7630 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa0d77d8 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0d7788 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d7750 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d7740 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa0d77bc <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa0d7888 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0d7838 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d7800 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d77f0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa0d786c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d6890 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa0d79c8 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0d78e8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0d78b0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0d78a0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa0d79a0 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa0d7950 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (DeclRefExpr 0xa0d791c <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d67a0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa0d7934 <col:52> 'const size_type':'const unsigned int' lvalue Var 0xa0d6530 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa0da998 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0xa0da978 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0xa0d7ef0 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0xa0d7ed0 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0d7e9c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa0d7ee0 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0d7eb8 <col:18> 'int' 0)))
    (CompoundStmt 0xa0da960 <line:381:2, line:463:2>
      (IfStmt 0xa0da940 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0xa0d80c0 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa0d8078 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa0d8050 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa0d8010 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
              (CXXDependentScopeMemberExpr 0xa0d7f58 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d7f20 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d7f10 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa0d7fd8 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0d7fa0 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0d7f90 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa0d80b0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0d8094 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0xa0d9268 <line:384:6, line:413:6>
          (DeclStmt 0xa0d8130 <line:385:8, col:33>
            0xa0d80e0 "value_type __x_copy =
              (DeclRefExpr 0xa0d8114 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa0d7da0 '__x' 'const value_type &')")
          (DeclStmt 0xa0d8278 <line:386:8, col:58>
            0xa0d8150 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa0d8250 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d8210 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                (CallExpr 0xa0d81d8 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0d8198 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa0d81f4 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa0d8368 <line:387:8, col:53>
            0xa0d8290 "pointer __old_finish =
              (ParenListExpr 0xa0d8348 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa0d8310 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d82d8 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d82c8 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa0d9248 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0xa0d83c8 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0xa0d83a8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0d8378 <col:12> 'const size_type':'const unsigned int' lvalue Var 0xa0d8150 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa0d83b8 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0d8390 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0xa0d8b38 <line:389:3, line:399:3>
              (CallExpr 0xa0d8698 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d8408 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                (CXXOperatorCallExpr 0xa0d8518 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0d84d8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                  (CXXDependentScopeMemberExpr 0xa0d8488 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0d8450 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0d8440 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa0d84bc <col:59> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0xa0d8588 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d8550 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d8540 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa0d8608 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d85d0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d85c0 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa0d8678 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0d863c <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa0d8760 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0d8710 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d86d8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d86c8 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa0d8744 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
              (CallExpr 0xa0d8900 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d87a8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce29b0)
                (CallExpr 0xa0d8830 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d87f8 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d87dc <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa0d88c0 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0d8880 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                  (DeclRefExpr 0xa0d884c <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d8290 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa0d8864 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa0d88e4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d8290 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa0d8b10 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d8950 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0 0xa0a6160)
                (CallExpr 0xa0d89d8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d89a0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d8988 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa0d8ad0 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0d8a80 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                  (CallExpr 0xa0d8a48 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0d8a10 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0xa0d89f4 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa0d8a64 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa0d8af4 <line:398:8> 'value_type':'_Tp' lvalue Var 0xa0d80e0 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0xa0d9220 <line:401:3, line:412:3>
              (CallExpr 0xa0d8d18 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d8b80 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa07a710 0xa07b040)
                (CXXDependentScopeMemberExpr 0xa0d8c00 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d8bc8 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d8bb8 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa0d8c88 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa0d8c68 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0d8c34 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa0d8c78 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0d8c4c <col:13> 'const size_type':'const unsigned int' lvalue Var 0xa0d8150 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0xa0d8ca0 <line:404:7> 'value_type':'_Tp' lvalue Var 0xa0d80e0 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0xa0d8cf8 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0d8cb8 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa0d8e30 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0d8d90 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d8d58 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d8d48 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa0d8e18 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa0d8df8 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0d8dc4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa0d8e08 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0d8ddc <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa0d8150 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa0d9010 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d8e78 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                (CallExpr 0xa0d8f00 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d8ec8 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d8eac <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa0d8f1c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d8290 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa0d8f80 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d8f48 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d8f38 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa0d8ff0 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0d8fb4 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa0d90d8 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0d9088 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0d9050 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d9040 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa0d90bc <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa0d8150 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa0d91f8 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d9120 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce60f0 0xa0a6160)
                (CallExpr 0xa0d91a8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d9170 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0d9158 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa0d91c4 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d8290 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa0d91dc <col:48> 'value_type':'_Tp' lvalue Var 0xa0d80e0 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0xa0da900 <line:415:6, line:462:6>
          (DeclStmt 0xa0d9370 <line:416:8, line:417:46>
            0xa0d9290 "const size_type __len =
              (CallExpr 0xa0d9348 <col:3, col:45> '<dependent type>'
                (MemberExpr 0xa0d92d8 <col:3> '<bound member function type>' ->_M_check_len 0xa089ee0
                  (CXXThisExpr 0xa0d92c8 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa0d92f8 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa0d9310 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0xa0d94b8 <line:418:8, col:61>
            0xa0d9390 "const size_type __elems_before =
              (CXXOperatorCallExpr 0xa0d9490 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d9450 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                (DeclRefExpr 0xa0d93c4 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0xa0d9430 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0d93f0 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0xa0d95a8 <line:419:8, col:53>
            0xa0d94d0 "pointer __new_start =
              (ParenListExpr 0xa0d9588 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa0d9568 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0d9518 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0d9508 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa0d954c <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa0d9290 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa0d9630 <line:420:8, col:41>
            0xa0d95c0 "pointer __new_finish =
              (ParenListExpr 0xa0d9610 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa0d95f4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa0d9cf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa0d9640 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa0d9cc8 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0xa0d97e0 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa0d9678 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa07a710 0xa07b040)
                (CXXOperatorCallExpr 0xa0d9730 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0d96e0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                  (DeclRefExpr 0xa0d96b0 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa0d96c8 <col:49> 'const size_type':'const unsigned int' lvalue Var 0xa0d9390 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa0d9754 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0xa0d976c <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0xa0d7da0 '__x' 'const value_type &')
                (CallExpr 0xa0d97c0 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0d9784 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0xa0d9840 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0xa0d980c <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0xa0d9828 <col:20> 'int' 0))
              (BinaryOperator 0xa0d9a50 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0xa0d9858 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa0d9a20 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0d9888 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                  (CXXDependentScopeMemberExpr 0xa0d9908 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0d98d0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0d98c0 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa0d9990 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0d9958 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa0d993c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa0d99ac <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa0d9a00 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa0d99c4 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0xa0d9a98 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa0d9a68 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa0d9a80 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0xa0d9cb0 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0xa0d9ab8 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa0d9c80 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0d9ae8 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                  (CallExpr 0xa0d9b70 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0d9b38 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa0d9b1c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0d7d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa0d9bd8 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0d9ba0 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0d9b90 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa0d9c0c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa0d9c60 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa0d9c24 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa0da210 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa0d9d10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa0da1f0 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0xa0da130 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0xa0d9d38 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa0d9d20 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0xa0d9fe8 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0d9d70 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
                  (CXXOperatorCallExpr 0xa0d9e30 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0xa0d9de0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                    (DeclRefExpr 0xa0d9db0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0xa0d9dc8 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa0d9390 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0xa0d9f68 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa0d9f18 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                    (CXXOperatorCallExpr 0xa0d9ed8 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0xa0d9e88 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
                      (DeclRefExpr 0xa0d9e54 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0xa0d9e6c <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa0d9390 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0xa0d9efc <col:38> 'size_type':'unsigned int' lvalue ParmVar 0xa0d7d50 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0xa0d9fc8 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa0d9f8c <col:7> '<dependent type>' lvalue)))
                (CallExpr 0xa0da108 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0da038 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
                  (DeclRefExpr 0xa0da078 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa0da090 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa0da0e8 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa0da0a8 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0xa0da1b8 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa0da14c <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0xa0da188 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa0da1a0 <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa0d9290 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa0da1e0 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0xa0da3e8 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa0da250 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
            (CXXDependentScopeMemberExpr 0xa0da2d8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0da2a0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa0da290 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa0da358 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0da320 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa0da310 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa0da3c8 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa0da38c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa0da638 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa0da410 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa0da498 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0da460 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa0da450 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0da610 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa0da5d0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
              (CXXDependentScopeMemberExpr 0xa0da518 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0da4e0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0da4d0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa0da598 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0da560 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0da550 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa0da6f8 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0da6a8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0da670 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa0da660 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa0da6dc <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa0da7a8 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0da758 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0da720 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa0da710 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa0da78c <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d95c0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa0da8e8 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0da808 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0da7d0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa0da7c0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0da8c0 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0xa0da870 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
              (DeclRefExpr 0xa0da83c <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0d94d0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa0da854 <col:56> 'const size_type':'const unsigned int' lvalue Var 0xa0d9290 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa0db170 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0xa0db148 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0dafb0 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa0daf50 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (DeclRefExpr 0xa0daf1c <col:9> '_InputIterator' lvalue ParmVar 0xa0dacf0 '__first' '_InputIterator')
      (DeclRefExpr 0xa0daf34 <col:20> '_InputIterator' lvalue ParmVar 0xa0dad30 '__last' '_InputIterator'))
    (UnaryOperator 0xa0daff0 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa0dafd4 <col:30> '_InputIterator' lvalue ParmVar 0xa0dacf0 '__first' '_InputIterator'))
    (CompoundStmt 0xa0db130 <line:527:4, line:530:4>
      (BinaryOperator 0xa0db0e8 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa0db004 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0dacb0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa0db0c0 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa0db030 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa0db074 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0dacb0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0xa0db0a8 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0db08c <col:29> '_InputIterator' lvalue ParmVar 0xa0dacf0 '__first' '_InputIterator'))))
      (UnaryOperator 0xa0db118 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0db100 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0dacb0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa0ddcb0 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0xa0ddc90 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0db790 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa0db730 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (DeclRefExpr 0xa0db6fc <col:6> '_ForwardIterator' lvalue ParmVar 0xa0db4d0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa0db714 <col:17> '_ForwardIterator' lvalue ParmVar 0xa0db510 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa0ddc78 <line:541:4, line:614:4>
      (DeclStmt 0xa0db8a0 <line:542:6, col:58>
        0xa0db7c0 "const size_type __n =
          (CallExpr 0xa0db878 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa0db810 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
            (DeclRefExpr 0xa0db844 <col:42> '_ForwardIterator' lvalue ParmVar 0xa0db4d0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa0db85c <col:51> '_ForwardIterator' lvalue ParmVar 0xa0db510 '__last' '_ForwardIterator'))")
      (IfStmt 0xa0ddc58 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0xa0dba68 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa0dba20 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa0db9f8 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0xa0db9b8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
              (CXXDependentScopeMemberExpr 0xa0db900 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0db8c8 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0db8b8 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa0db980 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0db948 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0db938 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa0dba58 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0dba3c <col:36> 'const size_type':'const unsigned int' lvalue Var 0xa0db7c0 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0xa0dcad8 <line:545:8, line:574:8>
          (DeclStmt 0xa0dbbb8 <line:546:3, col:53>
            0xa0dba90 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa0dbb90 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dbb50 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                (CallExpr 0xa0dbb18 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0dbad8 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa0dbb34 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0db490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa0dbca8 <line:547:3, col:48>
            0xa0dbbd0 "pointer __old_finish =
              (ParenListExpr 0xa0dbc88 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa0dbc50 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dbc18 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dbc08 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa0dcab8 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0xa0dbd08 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0xa0dbce8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0dbcb8 <col:7> 'const size_type':'const unsigned int' lvalue Var 0xa0dba90 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa0dbcf8 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0dbcd0 <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa0db7c0 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0xa0dc338 <line:549:5, line:558:5>
              (CallExpr 0xa0dbfd8 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dbd48 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                (CXXOperatorCallExpr 0xa0dbe58 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0dbe18 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                  (CXXDependentScopeMemberExpr 0xa0dbdc8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0dbd90 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0dbd80 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa0dbdfc <col:61> 'const size_type':'const unsigned int' lvalue Var 0xa0db7c0 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0xa0dbec8 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dbe90 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dbe80 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa0dbf48 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dbf10 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dbf00 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa0dbfb8 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0dbf7c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa0dc0a0 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0dc050 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dc018 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dc008 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa0dc084 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa0db7c0 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0xa0dc240 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dc0e8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce29b0)
                (CallExpr 0xa0dc170 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0dc138 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0dc11c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0db490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa0dc200 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0dc1c0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
                  (DeclRefExpr 0xa0dc18c <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dbbd0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa0dc1a4 <col:25> 'const size_type':'const unsigned int' lvalue Var 0xa0db7c0 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa0dc224 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dbbd0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa0dc310 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dc290 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
                (DeclRefExpr 0xa0dc2c8 <col:17> '_ForwardIterator' lvalue ParmVar 0xa0db4d0 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa0dc2e0 <col:26> '_ForwardIterator' lvalue ParmVar 0xa0db510 '__last' '_ForwardIterator')
                (DeclRefExpr 0xa0dc2f8 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0db490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0xa0dca88 <line:560:5, line:573:5>
              (DeclStmt 0xa0dc3b0 <line:561:7, col:39>
                0xa0dc360 "_ForwardIterator __mid =
                  (DeclRefExpr 0xa0dc394 <col:32> '_ForwardIterator' lvalue ParmVar 0xa0db4d0 '__first' '_ForwardIterator')")
              (CallExpr 0xa0dc450 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dc3e8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cae340)
                (DeclRefExpr 0xa0dc41c <col:20> '_ForwardIterator' lvalue Var 0xa0dc360 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa0dc434 <col:27> 'const size_type':'const unsigned int' lvalue Var 0xa0dba90 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa0dc5d8 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dc498 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
                (DeclRefExpr 0xa0dc4d0 <col:35> '_ForwardIterator' lvalue Var 0xa0dc360 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa0dc4e8 <col:42> '_ForwardIterator' lvalue ParmVar 0xa0db510 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0xa0dc548 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dc510 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dc500 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa0dc5b8 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0dc57c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa0dc6f0 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0dc650 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dc618 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dc608 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa0dc6d8 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa0dc6b8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0dc684 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa0db7c0 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0xa0dc6c8 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0dc69c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa0dba90 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa0dc8d0 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dc738 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                (CallExpr 0xa0dc7c0 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0dc788 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0xa0dc76c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0db490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa0dc7dc <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dbbd0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa0dc840 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dc808 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dc7f8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa0dc8b0 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0dc874 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa0dc998 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0dc948 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa0dc910 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dc900 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa0dc97c <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa0dba90 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa0dca60 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dc9e0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
                (DeclRefExpr 0xa0dca18 <col:17> '_ForwardIterator' lvalue ParmVar 0xa0db4d0 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa0dca30 <col:26> '_ForwardIterator' lvalue Var 0xa0dc360 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa0dca48 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0db490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0xa0ddc20 <line:576:8, line:613:8>
          (DeclStmt 0xa0dcbe0 <line:577:3, line:578:49>
            0xa0dcb00 "const size_type __len =
              (CallExpr 0xa0dcbb8 <col:5, col:48> '<dependent type>'
                (MemberExpr 0xa0dcb48 <col:5> '<bound member function type>' ->_M_check_len 0xa089ee0
                  (CXXThisExpr 0xa0dcb38 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa0dcb68 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa0db7c0 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0xa0dcb80 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0xa0dccd8 <line:579:3, col:48>
            0xa0dcc00 "pointer __new_start =
              (ParenListExpr 0xa0dccb8 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa0dcc98 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0dcc48 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa0dcc38 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa0dcc7c <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa0dcb00 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa0dcd60 <line:580:3, col:36>
            0xa0dccf0 "pointer __new_finish =
              (ParenListExpr 0xa0dcd40 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa0dcd24 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dcc00 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa0dd318 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa0dcd70 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa0dd2f8 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0xa0dcf78 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0xa0dcd80 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dccf0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa0dcf48 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0dcdb0 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                  (CXXDependentScopeMemberExpr 0xa0dce30 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0dcdf8 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0dcde8 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa0dceb8 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0dce80 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0xa0dce64 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0db490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa0dced4 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dcc00 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa0dcf28 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa0dceec <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa0dd0d0 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0xa0dcf90 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dccf0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa0dd0a0 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0dcfc0 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa072f70 0xa073870)
                  (DeclRefExpr 0xa0dcff8 <col:37> '_ForwardIterator' lvalue ParmVar 0xa0db4d0 '__first' '_ForwardIterator')
                  (DeclRefExpr 0xa0dd010 <col:46> '_ForwardIterator' lvalue ParmVar 0xa0db510 '__last' '_ForwardIterator')
                  (DeclRefExpr 0xa0dd028 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dccf0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa0dd080 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa0dd040 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa0dd2e0 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0xa0dd0e8 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dccf0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa0dd2b0 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa0dd118 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa073c80)
                  (CallExpr 0xa0dd1a0 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0dd168 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0xa0dd14c <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa0db490 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa0dd208 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa0dd1d0 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0xa0dd1c0 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa0dd23c <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dccf0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa0dd290 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa0dd254 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa0dd530 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa0dd338 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa0dd510 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0xa0dd440 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa0dd370 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
                (DeclRefExpr 0xa0dd3b0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dcc00 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa0dd3c8 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dccf0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa0dd420 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0dd3e0 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0xa0dd4d8 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0xa0dd468 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0xa0dd4a4 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dcc00 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa0dd4bc <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa0dcb00 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa0dd500 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0xa0dd708 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa0dd570 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa06d020 0xa06dce0 0xa06e380 0xa06e930)
            (CXXDependentScopeMemberExpr 0xa0dd5f8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0dd5c0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa0dd5b0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa0dd678 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0dd640 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa0dd630 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa0dd6e8 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0xa0dd6ac <col:10> '<dependent type>' lvalue)))
          (CallExpr 0xa0dd958 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0xa0dd730 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa0dd7b8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0dd780 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa0dd770 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0dd930 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa0dd8f0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
              (CXXDependentScopeMemberExpr 0xa0dd838 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0dd800 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0dd7f0 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa0dd8b8 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0dd880 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0dd870 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa0dda18 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0dd9c8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0dd990 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0dd980 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa0dd9fc <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dcc00 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa0ddac8 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0dda78 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0dda40 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0dda30 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa0ddaac <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dccf0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa0ddc08 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0ddb28 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0ddaf0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0ddae0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa0ddbe0 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa0ddb90 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
              (DeclRefExpr 0xa0ddb5c <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa0dcc00 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa0ddb74 <col:51> 'const size_type':'const unsigned int' lvalue Var 0xa0dcb00 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0xa0dea50 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0xa0de1d0 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0de0d8 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa0de088 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bffdc0 0x9cb5ca0 0x9cb8850 0x9e14c40 0x9e15170 0x9e156a0 0xa09b1d0)
      (DeclRefExpr 0xa0de004 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0ddf20 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa0de068 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0de030 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa0de020 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa0de1a0 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0xa0de190 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0de174 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9c63690 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa0de1c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa0de160 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa0de134 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa0dea30 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0de2c0 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa0de270 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bfee30 0x9cb53d0 0x9cb7aa0 0x9e13b30 0x9e14060 0x9e145d0 0xa09a590)
      (CallExpr 0xa0de238 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0de200 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa0de1f0 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa0de254 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa0ddf20 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa0dea08 <line:628:2, line:636:2>
      (DeclStmt 0xa0de3b8 <line:629:4, col:43>
        0xa0de300 "_Bit_type *__q =
          (CallExpr 0xa0de398 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0de348 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0xa0de338 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa0de37c <col:39> 'size_type':'unsigned int' lvalue ParmVar 0xa0ddf20 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0xa0de608 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0de410 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0de3d8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0de3c8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa0de5e0 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0xa0de458 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0xa0ac4d0
            (CXXThisExpr 0xa0de448 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0xa0de4c8 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0xa0de488 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0xa0de538 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0xa0de4f8 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0xa0de5b0 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0xa0de590 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa0de560 <col:20> '_Bit_type *' lvalue Var 0xa0de300 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0xa0de5a0 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0de578 <col:25> 'int' 0)))))
      (CallExpr 0xa0de668 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0de630 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa0de620 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa0de790 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0de6d0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0de698 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0de688 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa0de760 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa0de740 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa0de710 <col:38> '_Bit_type *' lvalue Var 0xa0de300 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa0de750 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0de728 <col:43> 'int' 0))))
      (BinaryOperator 0xa0de9f0 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0de7f0 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0de7b8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0de7a8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa0de9d8 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0xa0de9c0 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa0de9b0 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa0de824 <col:39> '_Bit_type *' lvalue Var 0xa0de300 '__q' '_Bit_type *'))
            (BinaryOperator 0xa0de998 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0xa0de920 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0xa0de908 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0xa0de8c8 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa0de8a8 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa0de83c <col:46> 'size_type':'unsigned int' lvalue ParmVar 0xa0ddf20 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa0de8b8 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa0de890 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa0de880 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0xa0de864 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0xa0de8f8 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa0de8e0 <col:71> 'int' 1))))
              (ImplicitCastExpr 0xa0de988 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa0de970 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa0de960 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa0de944 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0xa0e05c8 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0xa0deeb8 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0xa0dee90 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0xa0dee70 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0dee3c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa0dee80 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0dee58 <col:18> 'int' 0)))
    (ReturnStmt 0xa0deea8 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0xa0e05a8 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0df048 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0xa0deff8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880 0xa09bc60)
      (CXXOperatorCallExpr 0xa0defb8 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa0def78 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
        (CallExpr 0xa0def08 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa0deee8 <col:11> '<bound member function type>' ->capacity 0xa0aab60
            (CXXThisExpr 0xa0deed8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa0def58 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa0def38 <col:24> '<bound member function type>' ->size 0xa0aaa60
            (CXXThisExpr 0xa0def28 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa0defdc <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa0df8b8 <line:647:2, line:652:2>
      (CallExpr 0xa0df2a0 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa0df090 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce29b0)
        (DeclRefExpr 0xa0df0c4 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0decc0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa0df130 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa0df0f0 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa0df278 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa0df228 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (CXXDependentScopeMemberExpr 0xa0df198 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0df160 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa0df150 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0xa0df210 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0xa0df200 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0xa0df1f0 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa0df1d8 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0xa0df708 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0xa0df6f8 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0df6b8 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa0a6160 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa0df740 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa0df730 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa0df328 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0decc0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa0df788 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa0df778 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa0df768 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa0df3e8 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa0df3d8 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0df3c0 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa0a21d0 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa0df3b0 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa0df340 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0decc0 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa0df398 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa0df388 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa0df378 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa0df360 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa0df7b0 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa0df40c <col:61> '_Bool' lvalue ParmVar 0xa0ded40 '__x' '_Bool')))
      (CompoundAssignOperator 0xa0df898 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0df808 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0df7d0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0df7c0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0xa0df880 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa0df870 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa0df860 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa0df848 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0xa0e0578 <line:654:2, line:668:2>
      (DeclStmt 0xa0df9c0 <line:655:4, line:656:55>
        0xa0df8e0 "const size_type __len =
          (CallExpr 0xa0df998 <col:6, col:54> '<dependent type>'
            (MemberExpr 0xa0df928 <col:6> '<bound member function type>' ->_M_check_len 0xa0ae690
              (CXXThisExpr 0xa0df918 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa0df948 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int')
            (StringLiteral 0xa0df960 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0xa0dfa98 <line:657:4, col:46>
        0xa0df9e0 "_Bit_type *__q =
          (CallExpr 0xa0dfa78 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0dfa28 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa0dfa18 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa0dfa5c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa0df8e0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa0dfc50 <line:658:4, line:659:24>
        0xa0dfab0 "iterator __i =
          (CallExpr 0xa0dfc28 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0xa0dfaf8 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0xa0ac4d0
              (CXXThisExpr 0xa0dfae8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa0dfb68 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa0dfb28 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa0dfb84 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0decc0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa0dfbf8 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa0dfbd8 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa0dfba8 <col:16> '_Bit_type *' lvalue Var 0xa0df9e0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa0dfbe8 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0dfbc0 <col:21> 'int' 0))))")
      (CallExpr 0xa0dfe58 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0xa0dfe48 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0dfe28 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa0a6160 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa0dfe90 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa0dfe80 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa0dfcc0 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0dfab0 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa0dfed8 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa0dfec8 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa0dfeb8 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa0dfda0 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa0dfd90 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa0dfd78 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa0a21d0 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa0dfd68 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa0dfcd8 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0dfab0 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa0dfd50 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa0dfd40 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa0dfd30 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa0dfd18 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa0dff00 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa0dfdc4 <col:47> '_Bool' lvalue ParmVar 0xa0ded40 '__x' '_Bool')))
      (BinaryOperator 0xa0e0160 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0dff58 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0dff20 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0dff10 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa0e0138 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa0dffa8 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
          (DeclRefExpr 0xa0dffe0 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0decc0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa0e0048 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa0e0008 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0xa0e0110 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa0e0100 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0e00e8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa0a21d0 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0xa0e00d8 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0xa0e0064 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0dfab0 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0xa0e00c0 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa0e00b0 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa0e00a0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa0e0088 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa0ded00 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0xa0e01c0 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0e0188 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa0e0178 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa0e0440 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0e0228 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e01f0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e01e0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa0e0428 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0xa0e0410 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa0e0400 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa0e025c <col:39> '_Bit_type *' lvalue Var 0xa0df9e0 '__q' '_Bit_type *'))
            (ParenExpr 0xa0e03e8 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0xa0e03d0 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0xa0e0358 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0xa0e0340 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0xa0e0300 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa0e02e0 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa0e0274 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa0df8e0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa0e02f0 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa0e02c8 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa0e02b8 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa0e029c <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa0e0330 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa0e0318 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa0e03c0 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa0e03a8 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa0e0398 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa0e037c <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa0e0560 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0e04a0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e0468 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e0458 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa0e0530 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa0e0510 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa0e04e0 <col:38> '_Bit_type *' lvalue Var 0xa0df9e0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa0e0520 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0e04f8 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa0e1d88 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0xa0e1d68 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0e0b90 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa0e0b30 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (DeclRefExpr 0xa0e0afc <col:6> '_ForwardIterator' lvalue ParmVar 0xa0e08d0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa0e0b14 <col:17> '_ForwardIterator' lvalue ParmVar 0xa0e0910 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa0e1d50 <line:679:4, line:705:4>
      (DeclStmt 0xa0e0ca0 <line:680:6, col:52>
        0xa0e0bc0 "size_type __n =
          (CallExpr 0xa0e0c78 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa0e0c10 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9caca10)
            (DeclRefExpr 0xa0e0c44 <col:36> '_ForwardIterator' lvalue ParmVar 0xa0e08d0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa0e0c5c <col:45> '_ForwardIterator' lvalue ParmVar 0xa0e0910 '__last' '_ForwardIterator'))")
      (IfStmt 0xa0e1d30 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa0e0e20 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa0e0dd0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9c9f620 0x9cb64b0 0x9cb9770 0x9e16e20 0x9e17350 0x9e17880 0xa09bc60)
          (CXXOperatorCallExpr 0xa0e0d90 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa0e0d50 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6a00 0x9cb9cf0 0xa0a1490)
            (CallExpr 0xa0e0ce0 <col:10, col:19> '<dependent type>'
              (MemberExpr 0xa0e0cc0 <col:10> '<bound member function type>' ->capacity 0xa0aab60
                (CXXThisExpr 0xa0e0cb0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa0e0d30 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa0e0d10 <col:23> '<bound member function type>' ->size 0xa0aaa60
                (CXXThisExpr 0xa0e0d00 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0xa0e0db4 <col:33> 'size_type':'unsigned int' lvalue Var 0xa0e0bc0 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0xa0e1268 <line:682:8, line:688:8>
          (CallExpr 0xa0e1078 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa0e0e68 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce29b0)
            (DeclRefExpr 0xa0e0e9c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e0890 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa0e0f08 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0xa0e0ec8 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0xa0e1050 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa0e1000 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
              (CXXDependentScopeMemberExpr 0xa0e0f70 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa0e0f38 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0e0f28 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0xa0e0fe8 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0xa0e0fd8 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0xa0e0fc8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa0e0fb0 <col:26> 'size_type':'unsigned int' lvalue Var 0xa0e0bc0 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0xa0e1148 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0xa0e10c8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
            (DeclRefExpr 0xa0e1100 <col:13> '_ForwardIterator' lvalue ParmVar 0xa0e08d0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa0e1118 <col:22> '_ForwardIterator' lvalue ParmVar 0xa0e0910 '__last' '_ForwardIterator')
            (DeclRefExpr 0xa0e1130 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e0890 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0xa0e1248 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0e11b8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0e1180 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0e1170 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0xa0e1230 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa0e1220 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa0e1210 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa0e11f8 <col:46> 'size_type':'unsigned int' lvalue Var 0xa0e0bc0 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0xa0e1d00 <line:690:8, line:704:8>
          (DeclStmt 0xa0e13b8 <line:691:3, line:692:55>
            0xa0e1290 "const size_type __len =
              (CallExpr 0xa0e1390 <col:5, col:54> '<dependent type>'
                (MemberExpr 0xa0e12d8 <col:5> '<bound member function type>' ->_M_check_len 0xa0ae690
                  (CXXThisExpr 0xa0e12c8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa0e12f8 <col:18> 'size_type':'unsigned int' lvalue Var 0xa0e0bc0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa0e1350 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0xa0e1498 <line:693:3, col:45>
            0xa0e13e0 "_Bit_type *__q =
              (CallExpr 0xa0e1478 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0e1428 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0e1418 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa0e145c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa0e1290 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0xa0e1650 <line:694:3, line:695:30>
            0xa0e14b0 "iterator __i =
              (CallExpr 0xa0e1628 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0xa0e14f8 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0xa0ac4d0
                  (CXXThisExpr 0xa0e14e8 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0xa0e1568 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0xa0e1528 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa0e1584 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e0890 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0xa0e15f8 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0xa0e15d8 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0xa0e15a8 <col:22> '_Bit_type *' lvalue Var 0xa0e13e0 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0xa0e15e8 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa0e15c0 <col:27> 'int' 0))))")
          (BinaryOperator 0xa0e1738 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0xa0e1660 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0e14b0 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa0e1710 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0xa0e1690 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
              (DeclRefExpr 0xa0e16c8 <col:19> '_ForwardIterator' lvalue ParmVar 0xa0e08d0 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa0e16e0 <col:28> '_ForwardIterator' lvalue ParmVar 0xa0e0910 '__last' '_ForwardIterator')
              (DeclRefExpr 0xa0e16f8 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0e14b0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0xa0e18e8 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0e1798 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0e1760 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0e1750 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa0e18c0 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0xa0e17e8 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
              (DeclRefExpr 0xa0e1820 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e0890 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0xa0e1888 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0xa0e1848 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa0e18a4 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0e14b0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0xa0e1948 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0e1910 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa0e1900 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0xa0e1bc8 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0e19b0 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0e1978 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0e1968 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0xa0e1bb0 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0xa0e1b98 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0xa0e1b88 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0xa0e19e4 <col:38> '_Bit_type *' lvalue Var 0xa0e13e0 '__q' '_Bit_type *'))
                (ParenExpr 0xa0e1b70 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0xa0e1b58 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0xa0e1ae0 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0xa0e1ac8 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0xa0e1a88 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0xa0e1a68 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0xa0e19fc <col:14> 'const size_type':'const unsigned int' lvalue Var 0xa0e1290 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0xa0e1a78 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0xa0e1a50 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0xa0e1a40 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0xa0e1a24 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0xa0e1ab8 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa0e1aa0 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0xa0e1b48 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa0e1b30 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa0e1b20 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0xa0e1b04 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0xa0e1ce8 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa0e1c28 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0e1bf0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa0e1be0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0xa0e1cb8 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa0e1c98 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa0e1c68 <col:37> '_Bit_type *' lvalue Var 0xa0e13e0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa0e1ca8 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0e1c80 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0xa0e3240 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0xa0e3220 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0e22c0 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa0e2260 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9bff870 0x9cb5870 0x9cb83d0 0x9d03c90 0x9d24bd0 0x9d24f40 0x9e12ad0 0x9e12fd0 0x9e134e0 0x9f252d0 0xa09ac60)
      (CXXDependentScopeMemberExpr 0xa0e21a8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0e2170 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e2138 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e2128 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa0e2228 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa0e21f0 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa0e21e0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa0e2690 <line:714:2, line:719:2>
      (CallExpr 0xa0e24e8 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa0e2308 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ce29b0)
        (DeclRefExpr 0xa0e233c <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e1ff0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0xa0e23a0 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e2368 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e2358 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0xa0e24c0 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa0e2470 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9cb6fc0 0x9e0e720 0x9e39fc0 0x9e3abc0 0x9e0fa10 0x9e10210 0xa0a3930 0xa0a5ab0)
          (CXXDependentScopeMemberExpr 0xa0e2420 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa0e23e8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa0e23d8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa0e2458 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0xa0e25d0 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa0e25c0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0e25a8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa09ca10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa0e2560 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa0e2550 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0e2538 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa0a1b90 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa0e2528 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa0e2510 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e1ff0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa0e2598 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa0e2580 <col:18> '_Bool' lvalue ParmVar 0xa0e2030 '__x' '_Bool')))
      (UnaryOperator 0xa0e2678 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa0e2640 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e2608 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e25f8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0xa0e31f0 <line:721:2, line:734:2>
      (DeclStmt 0xa0e2810 <line:722:4, line:723:63>
        0xa0e26c0 "const size_type __len =
          (CallExpr 0xa0e27e8 <col:6, col:62> '<dependent type>'
            (MemberExpr 0xa0e2708 <col:6> '<bound member function type>' ->_M_check_len 0xa0ae690
              (CXXThisExpr 0xa0e26f8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0xa0e2758 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa0e2748 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0e2730 <col:29> 'int' 1)))
            (StringLiteral 0xa0e27b0 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0xa0e28e8 <line:724:4, col:46>
        0xa0e2830 "_Bit_type *__q =
          (CallExpr 0xa0e28c8 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0e2878 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa0e2868 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa0e28ac <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa0e26c0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa0e2aa0 <line:725:4, line:726:24>
        0xa0e2900 "iterator __i =
          (CallExpr 0xa0e2a78 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0xa0e2948 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0xa0ac4d0
              (CXXThisExpr 0xa0e2938 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa0e29b8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa0e2978 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa0e29d4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e1ff0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa0e2a48 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa0e2a28 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa0e29f8 <col:16> '_Bit_type *' lvalue Var 0xa0e2830 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa0e2a38 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa0e2a10 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0xa0e2c18 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa0e2c08 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0e2bf0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa09ca10 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa0e2ba8 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa0e2b98 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa0e2b80 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa0a1b90 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa0e2b70 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0xa0e2b48 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0xa0e2b38 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa0e2ae0 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0xa0a1da0 'operator++' 'iterator (int)'))
              (DeclRefExpr 0xa0e2ab0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0e2900 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0xa0e2ac8 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0xa0e2be0 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa0e2bc8 <col:13> '_Bool' lvalue ParmVar 0xa0e2030 '__x' '_Bool')))
      (BinaryOperator 0xa0e2dd8 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0e2c88 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e2c50 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e2c40 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa0e2db0 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa0e2cd8 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9cddca0 0x9f280c0)
          (DeclRefExpr 0xa0e2d10 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa0e1ff0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa0e2d78 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa0e2d38 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa0e2d94 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa0e2900 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0xa0e2e38 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0e2e00 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa0e2df0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa0e30b8 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0e2ea0 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e2e68 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e2e58 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa0e30a0 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0xa0e3088 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa0e3078 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa0e2ed4 <col:39> '_Bit_type *' lvalue Var 0xa0e2830 '__q' '_Bit_type *'))
            (ParenExpr 0xa0e3060 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0xa0e3048 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0xa0e2fd0 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0xa0e2fb8 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0xa0e2f78 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa0e2f58 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa0e2eec <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa0e26c0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa0e2f68 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa0e2f40 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa0e2f30 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa0e2f14 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa0e2fa8 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa0e2f90 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa0e3038 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa0e3020 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa0e3010 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa0e2ff4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa09c4d0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa0e31d8 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0e3118 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa0e30e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa0e30d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa0e31a8 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa0e3188 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa0e3158 <col:38> '_Bit_type *' lvalue Var 0xa0e2830 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa0e3198 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0e3170 <col:43> 'int' 0)))))))


}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0xa0e3ed8 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0xa0e3ec8 <line:18:5, col:18>
    (ConditionalOperator 0xa0e3ea8 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa0e3e60 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0xa0e3e30 <col:12> 'T' lvalue ParmVar 0xa0e3cc0 'a' 'T')
        (DeclRefExpr 0xa0e3e48 <col:14> 'T' lvalue ParmVar 0xa0e3d00 'b' 'T'))
      (DeclRefExpr 0xa0e3e78 <col:16> 'T' lvalue ParmVar 0xa0e3cc0 'a' 'T')
      (DeclRefExpr 0xa0e3e90 <col:18> 'T' lvalue ParmVar 0xa0e3d00 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0xa0e4148 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0xa0e4138 <line:27:5, col:18>
    (ConditionalOperator 0xa0e4118 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa0e40d0 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0xa0e40a0 <col:12> 'T' lvalue ParmVar 0xa0e3f50 'a' 'T')
        (DeclRefExpr 0xa0e40b8 <col:14> 'T' lvalue ParmVar 0xa0e3f90 'b' 'T'))
      (DeclRefExpr 0xa0e40e8 <col:16> 'T' lvalue ParmVar 0xa0e3f50 'a' 'T')
      (DeclRefExpr 0xa0e4100 <col:18> 'T' lvalue ParmVar 0xa0e3f90 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0xa0e48f8 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0e47a0 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0xa0e4770 <col:18> 'int' 1)
    (IntegerLiteral 0xa0e4788 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0xa0e4908 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0e4828 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0xa0e47f8 <col:24> 'int' 1)
    (IntegerLiteral 0xa0e4810 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0xa0e4918 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0e48a8 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0xa0e4878 <col:23> 'int' 1)
    (IntegerLiteral 0xa0e4890 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0xa0e5e38 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0e5c60 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0xa0e6090 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0xa0e5f70 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0e5f60 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa0e5f50 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa0e5f34 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa0e5e50 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa0e6058 <line:277:5, line:283:5>
      (CaseStmt 0xa0e5fa8 <line:278:9, line:280:20>
        (ImplicitCastExpr 0xa0e6080 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0e5f8c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa0e5c80 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa0e5fe0 <line:279:9, line:280:20>
          (ImplicitCastExpr 0xa0e6070 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa0e5fc8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa0e5cc0 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0xa0e6010 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0xa0e6000 <col:20> '_Bool' false))))
      (DefaultStmt 0xa0e6040 <line:281:9, line:282:20>
        (ReturnStmt 0xa0e6030 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa0e6020 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0xa0e6350 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0xa0e61a0 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa0e6190 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa0e6180 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa0e6164 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa0e60b0 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa0e62f8 <line:290:5, line:298:5>
      (CaseStmt 0xa0e61d8 <line:291:9, line:295:20>
        (ImplicitCastExpr 0xa0e6340 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa0e61bc <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa0e5c80 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa0e6210 <line:292:9, line:295:20>
          (ImplicitCastExpr 0xa0e6330 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa0e61f8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa0e5cc0 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0xa0e6248 <line:293:9, line:295:20>
            (ImplicitCastExpr 0xa0e6320 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0xa0e6230 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa0e5d00 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0xa0e6280 <line:294:9, line:295:20>
              (ImplicitCastExpr 0xa0e6310 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0xa0e6268 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa0e5d40 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0xa0e62b0 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0xa0e62a0 <col:20> '_Bool' true))))))
      (DefaultStmt 0xa0e62e0 <line:296:9, line:297:20>
        (ReturnStmt 0xa0e62d0 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa0e62c0 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0xa0e6880 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0e6868 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0xa0e68a8 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0e6890 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0xa0e6994 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0xa0e5e00 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0xa0e7338 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7328 <col:14> 'int'))
, const char *param2 = (ImplicitCastExpr 0xa0e73a8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7398 <col:14> 'int'))
, const char *param3 = (ImplicitCastExpr 0xa0e7418 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7408 <col:14> 'int'))
, const char *param4 = (ImplicitCastExpr 0xa0e7488 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7478 <col:14> 'int'))
, const char *param5 = (ImplicitCastExpr 0xa0e74f8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e74e8 <col:14> 'int'))
, const char *param6 = (ImplicitCastExpr 0xa0e7568 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7558 <col:14> 'int'))
, const char *param7 = (ImplicitCastExpr 0xa0e75d8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e75c8 <col:14> 'int'))
, const char *param8 = (ImplicitCastExpr 0xa0e7648 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7638 <col:14> 'int'))
, const char *param9 = (ImplicitCastExpr 0xa0e76b8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e76a8 <col:14> 'int'))
, const char *param10 = (ImplicitCastExpr 0xa0e7728 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7718 <col:14> 'int'))
, const char *param11 = (ImplicitCastExpr 0xa0e7798 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e7788 <col:14> 'int'))
, const char *param12 = (ImplicitCastExpr 0xa0e7808 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa0e77f8 <col:14> 'int'))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0xa1151c8 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa1151b8 <line:395:5, col:51>
    (BinaryOperator 0xa1151a0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa114f98 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa114f60 <col:14, col:22> '_Bool'
          (MemberExpr 0xa114f40 <col:14, col:16> '<bound member function type>' .empty 0x9e7c230
            (DeclRefExpr 0xa114f28 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa114c40 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa115190 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa115148 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa115138 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa11511c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9c49580 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa115170 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa115030 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa115180 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa1150f0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa1150d0 <col:44, col:46> '<bound member function type>' .at 0x9e7cbc0
                (DeclRefExpr 0xa115060 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa114c40 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa115110 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa1150b8 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0xa112f00 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0xa112738 <line:354:5, col:13>
    0xa112700 "T result")
  (DeclStmt 0xa112e80 <line:355:5, col:33>
    0xa1127a0 "std::wstringstream stream =
      (CXXConstructExpr 0xa112e58 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa1127d4 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa0e7cd0 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0xa112e40 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa112ec0 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa112e90 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa1127a0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa112ea8 <col:15> 'T' lvalue Var 0xa112700 'result' 'T'))
  (ReturnStmt 0xa112ef0 <line:357:5, col:12>
    (DeclRefExpr 0xa112ed8 <col:12> 'T' lvalue Var 0xa112700 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0xa114c08 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa114bf8 <line:389:5, col:50>
    (BinaryOperator 0xa114be0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa1149e0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa1149c0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa1149a0 <col:14, col:16> '<bound member function type>' .empty 0x9e56cc0
            (DeclRefExpr 0xa114988 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa1146a0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa114bd0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa114b78 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa114b68 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa114b0c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9bef780 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa114ba0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa114a2c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa114bc0 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa114bb0 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa114ae0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa114ac0 <col:43, col:45> '<bound member function type>' .at 0x9e57690
                  (DeclRefExpr 0xa114a50 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa1146a0 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa114b00 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa114aa8 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0xa1138f0 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0xa113148 <line:363:5, col:19>
    0xa1130f0 "T result =
      (CXXUnresolvedConstructExpr 0xa113130 <col:16, col:18> 'T')")
  (DeclStmt 0xa113870 <line:364:5, col:32>
    0xa1131b0 "std::stringstream stream =
      (CXXConstructExpr 0xa113848 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa1131e4 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa112fb0 'x' 'const std::string &')
        (CXXDefaultArgExpr 0xa113830 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa1138b0 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa113880 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0xa1131b0 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0xa113898 <col:15> 'T' lvalue Var 0xa1130f0 'result' 'T'))
  (ReturnStmt 0xa1138e0 <line:366:5, col:12>
    (DeclRefExpr 0xa1138c8 <col:12> 'T' lvalue Var 0xa1130f0 'result' 'T')))

;
template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0xa114638 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa114198 <line:381:5, col:22>
    0xa114160 "wchar_t buff[128]")
  (CallExpr 0xa114258 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa114248 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa114210 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa0e7bf0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa114280 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa1141e0 <col:22> 'wchar_t [128]' lvalue Var 0xa114160 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa114290 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa1141f8 <col:28> 'const long' lvalue ParmVar 0xa113e00 'x' 'const long &')))
  (ReturnStmt 0xa114628 <line:383:5, col:25>
    (ExprWithCleanups 0xa114608 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa114310)
      (CXXTemporary 0xa114590)
      (CXXConstructExpr 0xa1145e0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa1145d0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa1145c0 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa1145a8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa114598 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa114590)
                (CXXConstructExpr 0xa114568 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa1142d0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa1142c0 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa1142a8 <col:21> 'wchar_t [128]' lvalue Var 0xa114160 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa114550 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0xa115700 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa1156f0 <line:401:5, col:42>
    (ExprWithCleanups 0xa1156d0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa115670)
      (CXXConstructExpr 0xa1156a8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa115698 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa115688 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa115678 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa115670)
              (CallExpr 0xa115638 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa115628 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa1155d0 <col:12> 'wcstring (const long &)' lvalue Function 0xa113ea0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa113aa0 'to_string')))
                (MaterializeTemporaryExpr 0xa115658 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa115588 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa115578 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa115568 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa11553c <col:40> 'const int' lvalue ParmVar 0xa115200 'x' 'const int &')))))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0xa113da0 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0xa113be8 <line:372:5, col:30>
    0xa113b00 "std::wstringstream stream =
      (CXXConstructExpr 0xa113bc0 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0xa113ba8 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa113c28 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0xa113bf8 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa113b00 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa113c10 <col:15> 'const T' lvalue ParmVar 0xa1139a0 'x' 'const T &'))
  (ReturnStmt 0xa113d90 <line:374:5, col:23>
    (ExprWithCleanups 0xa113d70 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa113d10)
      (CXXConstructExpr 0xa113d48 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa113d38 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa113d28 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa113d18 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0xa113d10)
              (CXXMemberCallExpr 0xa113cb8 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0xa113c98 <col:12, col:19> '<bound member function type>' .str 0xa06c720
                  (ImplicitCastExpr 0xa113cf8 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0xa113c40 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa113b00 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0xa114638 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa114198 <line:381:5, col:22>
    0xa114160 "wchar_t buff[128]")
  (CallExpr 0xa114258 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa114248 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa114210 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa0e7bf0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa114280 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa1141e0 <col:22> 'wchar_t [128]' lvalue Var 0xa114160 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa114290 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa1141f8 <col:28> 'const long' lvalue ParmVar 0xa113e00 'x' 'const long &')))
  (ReturnStmt 0xa114628 <line:383:5, col:25>
    (ExprWithCleanups 0xa114608 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa114310)
      (CXXTemporary 0xa114590)
      (CXXConstructExpr 0xa1145e0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa1145d0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa1145c0 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa1145a8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa114598 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa114590)
                (CXXConstructExpr 0xa114568 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa1142d0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa1142c0 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa1142a8 <col:21> 'wchar_t [128]' lvalue Var 0xa114160 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa114550 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0xa114c08 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa114bf8 <line:389:5, col:50>
    (BinaryOperator 0xa114be0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa1149e0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa1149c0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa1149a0 <col:14, col:16> '<bound member function type>' .empty 0x9e56cc0
            (DeclRefExpr 0xa114988 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa1146a0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa114bd0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa114b78 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa114b68 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa114b0c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9bef780 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa114ba0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa114a2c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa114bc0 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa114bb0 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa114ae0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa114ac0 <col:43, col:45> '<bound member function type>' .at 0x9e57690
                  (DeclRefExpr 0xa114a50 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa1146a0 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa114b00 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa114aa8 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0xa1151c8 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa1151b8 <line:395:5, col:51>
    (BinaryOperator 0xa1151a0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa114f98 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa114f60 <col:14, col:22> '_Bool'
          (MemberExpr 0xa114f40 <col:14, col:16> '<bound member function type>' .empty 0x9e7c230
            (DeclRefExpr 0xa114f28 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa114c40 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa115190 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa115148 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa115138 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa11511c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9c49580 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa115170 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa115030 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa115180 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa1150f0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa1150d0 <col:44, col:46> '<bound member function type>' .at 0x9e7cbc0
                (DeclRefExpr 0xa115060 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa114c40 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa115110 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa1150b8 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0xa115700 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa1156f0 <line:401:5, col:42>
    (ExprWithCleanups 0xa1156d0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa115670)
      (CXXConstructExpr 0xa1156a8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa115698 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa115688 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa115678 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa115670)
              (CallExpr 0xa115638 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa115628 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa1155d0 <col:12> 'wcstring (const long &)' lvalue Function 0xa113ea0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa113aa0 'to_string')))
                (MaterializeTemporaryExpr 0xa115658 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa115588 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa115578 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa115568 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa11553c <col:40> 'const int' lvalue ParmVar 0xa115200 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0xa116f38 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0xa116d40 <line:421:9, col:23>
    0xa116ce0 "size_t len =
      (ImplicitCastExpr 0xa116d30 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa116d18 <col:22> 'int' 0))")
  (IfStmt 0xa116ee0 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0xa116dc8 <line:422:13, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
      (MemberExpr 0xa116d94 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0xa115f30
        (CXXThisExpr 0xa116d68 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (GNUNullExpr 0xa116db8 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
    (CompoundStmt 0xa116ec8 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0xa116eb0 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0xa116e50 <line:424:20, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0xa116e28 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0xa116df0 <col:20> 'CharType_t **const' lvalue ->array 0xa115f30
              (CXXThisExpr 0xa116de0 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0xa116e10 <col:26> 'size_t':'unsigned int' lvalue Var 0xa116ce0 'len' 'size_t':'unsigned int'))
          (GNUNullExpr 0xa116e40 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
        (CompoundStmt 0xa116e98 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0xa116e80 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa116e68 <col:17> 'size_t':'unsigned int' lvalue Var 0xa116ce0 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa116f28 <line:429:9, col:16>
    (ImplicitCastExpr 0xa116f18 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa116efc <col:16> 'size_t':'unsigned int' lvalue Var 0xa116ce0 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0xa117090 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0xa117018 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0xa117008 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa116f6c <col:9, col:11> 'void (void *) throw()' lvalue Function 0x9bbead0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa116fd0 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0xa116fa0 <col:24> 'CharType_t **' lvalue ->array 0xa115f30
        (CXXThisExpr 0xa116f90 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0xa117078 <line:435:9, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '='
    (MemberExpr 0xa117048 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0xa115f30
      (CXXThisExpr 0xa117038 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (GNUNullExpr 0xa117068 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')))


public:
public:
    null_terminated_array_t<CharType_t>() : array((GNUNullExpr 0xa1170a8 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')
) (CompoundStmt 0xa117100 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0xa117160 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0xa117110 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0xa115c00 0xa1157d0)
  (DeclRefExpr 0xa117148 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa1168b0 'argv' 'const string_list_t &'))
) (CompoundStmt 0xa1171c0 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0xa117238 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0xa117218 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1171e0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1171d0 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0xa117388 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0xa117298 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa117260 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa117250 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0xa117370 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa1172c8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1172b8 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0xa117350 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa117300 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0xa115c00 0xa1157d0)
      (DeclRefExpr 0xa117338 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa116a70 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0xa1173e0 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0xa1173d0 <line:457:9, col:16>
    (MemberExpr 0xa1173b0 <col:16> 'CharType_t **const' lvalue ->array 0xa115f30
      (CXXThisExpr 0xa1173a0 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0xa117460 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0xa117440 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa117408 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1173f8 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0xa118048 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0xa118028 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0xa118018 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa118000 <col:9> 'void (void *) throw()' lvalue Function 0x9bbead0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa117fe8 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa117fd8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa117fc8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa117f98 <col:22> 'const char *' lvalue ->str 0xa1179e0
            (CXXThisExpr 0xa117f88 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0xa118070 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa118060 <col:14> 'int'))
) (CompoundStmt 0xa1180a0 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0xa1182f0 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0xa118188 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0xa118178 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa118160 <col:9> 'void (void *) throw()' lvalue Function 0x9bbead0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa118148 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa118138 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa118128 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa1180f8 <col:22> 'const char *' lvalue ->str 0xa1179e0
            (CXXThisExpr 0xa1180e8 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0xa1182d8 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0xa1181b8 <col:9> 'const char *' lvalue ->str 0xa1179e0
      (CXXThisExpr 0xa1181a8 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0xa1182c8 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0xa1182a8 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0xa118298 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa118264 <col:15> 'char *(const wchar_t *)' lvalue Function 0xa0e52b0 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0xa118248 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0xa118228 <col:23, col:25> '<bound member function type>' .c_str 0x9e8dfa0
            (DeclRefExpr 0xa118210 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa117dd0 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0xa118378 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0xa118368 <line:495:9, col:16>
    (ImplicitCastExpr 0xa118358 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0xa118338 <col:16> 'const char *const' lvalue ->str 0xa1179e0
        (CXXThisExpr 0xa118328 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0xa1192bc <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0xa118f40 'r' 'T *')
), saved_value((UnaryOperator 0xa119330 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa119318 <col:45> 'T *' lvalue ParmVar 0xa118f40 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa119388 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0xa1193e8 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0xa1193f8 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0xa119050 'r' 'T *')
), saved_value((UnaryOperator 0xa119460 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa119448 <col:66> 'T *' lvalue ParmVar 0xa119050 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa1194b8 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0xa119578 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0xa119560 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0xa119530 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa119514 <col:10> 'T *' lvalue ParmVar 0xa119050 'r' 'T *'))
    (DeclRefExpr 0xa119544 <col:14> 'const T' lvalue ParmVar 0xa1190c0 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0xa1195f8 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0xa1195d8 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0xa1195b8 <col:9> '<bound member function type>' ->restore 0xa119260
      (CXXThisExpr 0xa1195a8 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0xa1197f8 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0xa1197d8 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0xa119650 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa119640 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0xa119620 <col:14> '_Bool' lvalue ->restored 0xa118ec0
          (CXXThisExpr 0xa119610 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0xa1197c0 <line:551:9, line:554:9>
      (CallExpr 0xa119740 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa119688 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x9c92610 0x9bfcdd0 0x9e17f40 0xa09c200)
        (UnaryOperator 0xa1196f8 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0xa1196d8 <col:24> 'T *const' lvalue ->ref 0xa118e40
            (CXXThisExpr 0xa1196c8 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0xa119720 <col:29> 'T' lvalue ->saved_value 0xa118e80
          (CXXThisExpr 0xa119710 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0xa1197a8 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0xa119778 <col:13> '_Bool' lvalue ->restored 0xa118ec0
          (CXXThisExpr 0xa119768 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0xa119798 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0xa11dbd8 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11dae0 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0xa11dbe8 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11db38 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0xa11dbf8 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11db88 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0xa1201e8 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0xa1201d0 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0xa120250 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0xa120238 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0xa120428 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0xa1206f8 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1204e0 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0xa120988 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa120770 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0xa120a98 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa120a00 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0xa120be8 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa120b10 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0xa120cf8 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa120c60 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0xa120f08 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa120d70 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0xa121118 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa120f80 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0xa121a78 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa121950 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0xa121a88 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa121a28 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0xa141708 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa141670 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0xa141fb8 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa141ae0 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef int tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
enum  {
    R_NULL = (ImplicitCastExpr 0xa155eb8 <../codeBase/fish-shell-master/input_common.h:14:31> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa155e20 <col:31> 'int' 57344))
,
    R_EOF
};
void input_common_init(int (*ih)());
void input_common_destroy();
wchar_t input_common_readch(int timed);
void input_common_unreadch(wint_t ch);
void input_common_add_callback(void (*callback)(void *), void *arg);
int writestr(char *str) (CompoundStmt 0xa156758 <../codeBase/fish-shell-master/key_reader.cpp:24:1, line:27:1>
  (CallExpr 0xa1566e8 <line:25:5, col:30> 'ssize_t':'int'
    (ImplicitCastExpr 0xa1566d8 <col:5> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa156684 <col:5> 'ssize_t (int, const void *, size_t)' lvalue Function 0x9c0e9d0 'write' 'ssize_t (int, const void *, size_t)'))
    (IntegerLiteral 0xa156580 <col:11> 'int' 1)
    (ImplicitCastExpr 0xa156720 <col:14> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa156710 <col:14> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa156598 <col:14> 'char *' lvalue ParmVar 0xa156480 'str' 'char *')))
    (CallExpr 0xa156648 <col:19, col:29> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa156638 <col:19> 'size_t (*)(const char *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1565fc <col:19> 'size_t (const char *) throw()' lvalue Function 0x9bf1af0 'strlen' 'size_t (const char *) throw()'))
      (ImplicitCastExpr 0xa156678 <col:26> 'const char *' <NoOp>
        (ImplicitCastExpr 0xa156668 <col:26> 'char *' <LValueToRValue>
          (DeclRefExpr 0xa1565e4 <col:26> 'char *' lvalue ParmVar 0xa156480 'str' 'char *')))))
  (ReturnStmt 0xa156748 <line:26:5, col:12>
    (IntegerLiteral 0xa156730 <col:12> 'int' 0)))


int main(int argc, char **argv) (CompoundStmt 0xa158ef8 <../codeBase/fish-shell-master/key_reader.cpp:30:1, line:97:1>
  (CallExpr 0xa156918 <line:31:5, col:21> 'void'
    (ImplicitCastExpr 0xa156908 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa1568ec <col:5> 'void (void)' lvalue Function 0xa11c610 'set_main_thread' 'void (void)')))
  (CallExpr 0xa156998 <line:32:5, col:23> 'void'
    (ImplicitCastExpr 0xa156988 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa15696c <col:5> 'void (void)' lvalue Function 0xa11c7d0 'setup_fork_guards' 'void (void)')))
  (CallExpr 0xa156ab8 <line:33:5, col:25> 'char *'
    (ImplicitCastExpr 0xa156aa8 <col:5> 'char *(*)(int, const char *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa156a4c <col:5> 'char *(int, const char *) throw()' lvalue Function 0x9c40cf0 'setlocale' 'char *(int, const char *) throw()'))
    (ImplicitCastExpr 0xa156ae0 </usr/include/locale.h:42:19> 'int' <IntegralCast>
      (DeclRefExpr 0xa1569ec <col:19> 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>' EnumConstant 0x9c3e1e0 '__LC_ALL' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>'))
    (ImplicitCastExpr 0xa156af0 <../codeBase/fish-shell-master/key_reader.cpp:33:23> 'const char *' <ArrayToPointerDecay>
      (StringLiteral 0xa156a30 <col:23> 'const char [1]' lvalue "")))
  (IfStmt 0xa158eb0 <line:36:5, line:94:5>
    <<<NULL>>>
    (BinaryOperator 0xa156b40 <line:36:9, col:17> '_Bool' '=='
      (ImplicitCastExpr 0xa156b30 <col:9> 'int' <LValueToRValue>
        (DeclRefExpr 0xa156afc <col:9> 'int' lvalue ParmVar 0xa156780 'argc' 'int'))
      (IntegerLiteral 0xa156b18 <col:17> 'int' 2))
    (CompoundStmt 0xa1575c0 <line:37:5, line:60:5>
      (DeclStmt 0xa156be8 <line:38:9, col:38>
        0xa156bb0 "static char term_buffer[2048]")
      (DeclStmt 0xa156d78 <line:39:9, col:40>
        0xa156c10 "char *termtype =
          (CallExpr 0xa156d48 <col:26, col:39> 'char *'
            (ImplicitCastExpr 0xa156d38 <col:26> 'char *(*)(const char *) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0xa156ce0 <col:26> 'char *(const char *) throw()' lvalue Function 0x9bc2d60 'getenv' 'char *(const char *) throw()'))
            (ImplicitCastExpr 0xa156d68 <col:33> 'const char *' <ArrayToPointerDecay>
              (StringLiteral 0xa156cc0 <col:33> 'const char [5]' lvalue "TERM")))")
      (DeclStmt 0xa156e38 <line:40:9, col:37>
        0xa156da0 "char *tbuff =
          (CXXNewExpr 0xa156df8 <col:23, col:27> 'char *'
            (IntegerLiteral 0xa156dd8 <col:32> 'int' 9999))")
      (DeclStmt 0xa156e98 <line:41:9, col:18>
        0xa156e60 "char *res")
      (CallExpr 0xa156f58 <line:43:9, col:38> 'int'
        (ImplicitCastExpr 0xa156f48 <col:9> 'int (*)(char *, const char *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa156f0c <col:9> 'int (char *, const char *)' lvalue Function 0x9c46650 'tgetent' 'int (char *, const char *)'))
        (ImplicitCastExpr 0xa156f80 <col:17> 'char *' <ArrayToPointerDecay>
          (DeclRefExpr 0xa156edc <col:17> 'char [2048]' lvalue Var 0xa156bb0 'term_buffer' 'char [2048]'))
        (ImplicitCastExpr 0xa156fa0 <col:30> 'const char *' <NoOp>
          (ImplicitCastExpr 0xa156f90 <col:30> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa156ef4 <col:30> 'char *' lvalue Var 0xa156c10 'termtype' 'char *'))))
      (BinaryOperator 0xa157110 <line:44:9, col:38> 'char *' lvalue '='
        (DeclRefExpr 0xa156fac <col:9> 'char *' lvalue Var 0xa156e60 'res' 'char *')
        (CallExpr 0xa1570c8 <col:15, col:38> 'char *'
          (ImplicitCastExpr 0xa1570b8 <col:15> 'char *(*)(const char *, char **)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa157084 <col:15> 'char *(const char *, char **)' lvalue Function 0x9c46350 'tgetstr' 'char *(const char *, char **)'))
          (ImplicitCastExpr 0xa157100 <col:23, col:29> 'const char *' <NoOp>
            (ImplicitCastExpr 0xa1570f0 <col:23, col:29> 'char *' <LValueToRValue>
              (ArraySubscriptExpr 0xa157040 <col:23, col:29> 'char *' lvalue
                (ImplicitCastExpr 0xa157030 <col:23> 'char **' <LValueToRValue>
                  (DeclRefExpr 0xa156ffc <col:23> 'char **' lvalue ParmVar 0xa1567d0 'argv' 'char **'))
                (IntegerLiteral 0xa157018 <col:28> 'int' 1))))
          (UnaryOperator 0xa157070 <col:32, col:33> 'char **' prefix '&'
            (DeclRefExpr 0xa157054 <col:33> 'char *' lvalue Var 0xa156da0 'tbuff' 'char *'))))
      (IfStmt 0xa1575a0 <line:45:9, line:59:9>
        <<<NULL>>>
        (BinaryOperator 0xa157178 <line:45:13, col:20> '_Bool' '!='
          (ImplicitCastExpr 0xa157158 <col:13> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa157128 <col:13> 'char *' lvalue Var 0xa156e60 'res' 'char *'))
          (ImplicitCastExpr 0xa157168 <col:20> 'char *' <NullToPointer>
            (IntegerLiteral 0xa157140 <col:20> 'int' 0)))
        (CompoundStmt 0xa1574b0 <line:46:9, line:55:9>
          (WhileStmt 0xa1573e8 <line:47:13, line:53:13>
            <<<NULL>>>
            (BinaryOperator 0xa157208 <line:47:20, col:28> '_Bool' '!='
              (ImplicitCastExpr 0xa1571f8 <col:20, col:21> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa1571e8 <col:20, col:21> 'char' <LValueToRValue>
                  (UnaryOperator 0xa1571b8 <col:20, col:21> 'char' lvalue prefix '*'
                    (ImplicitCastExpr 0xa1571a8 <col:21> 'char *' <LValueToRValue>
                      (DeclRefExpr 0xa157190 <col:21> 'char *' lvalue Var 0xa156e60 'res' 'char *')))))
              (IntegerLiteral 0xa1571d0 <col:28> 'int' 0))
            (CompoundStmt 0xa1573d0 <line:48:13, line:53:13>
              (CallExpr 0xa157348 <line:49:17, col:35> 'int'
                (ImplicitCastExpr 0xa157338 <col:17> 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa1572dc <col:17> 'int (const char *restrict, ...)' lvalue Function 0x9be1800 'printf' 'int (const char *restrict, ...)'))
                (ImplicitCastExpr 0xa157370 <col:24> 'const char *' <ArrayToPointerDecay>
                  (StringLiteral 0xa157280 <col:24> 'const char [4]' lvalue "%d "))
                (ImplicitCastExpr 0xa157390 <col:31, col:32> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa157380 <col:31, col:32> 'char' <LValueToRValue>
                    (UnaryOperator 0xa1572c8 <col:31, col:32> 'char' lvalue prefix '*'
                      (ImplicitCastExpr 0xa1572b8 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0xa1572a0 <col:32> 'char *' lvalue Var 0xa156e60 'res' 'char *'))))))
              (UnaryOperator 0xa1573b8 <line:52:17, col:20> 'char *' postfix '++'
                (DeclRefExpr 0xa15739c <col:17> 'char *' lvalue Var 0xa156e60 'res' 'char *'))))
          (CallExpr 0xa157480 <line:54:13, col:24> 'int'
            (ImplicitCastExpr 0xa157470 <col:13> 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa157454 <col:13> 'int (const char *restrict, ...)' lvalue Function 0x9be1800 'printf' 'int (const char *restrict, ...)'))
            (ImplicitCastExpr 0xa1574a0 <col:20> 'const char *' <ArrayToPointerDecay>
              (StringLiteral 0xa157434 <col:20> 'const char [2]' lvalue "\n"))))
        (CompoundStmt 0xa157588 <line:57:9, line:59:9>
          (CallExpr 0xa157558 <line:58:13, col:42> 'int'
            (ImplicitCastExpr 0xa157548 <col:13> 'int (*)(const char *restrict, ...)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa15752c <col:13> 'int (const char *restrict, ...)' lvalue Function 0x9be1800 'printf' 'int (const char *restrict, ...)'))
            (ImplicitCastExpr 0xa157578 <col:20> 'const char *' <ArrayToPointerDecay>
              (StringLiteral 0xa1574fc <col:20> 'const char [20]' lvalue "Undefined sequence\n"))))))
    (CompoundStmt 0xa158e68 <line:62:5, line:94:5>
      (DeclStmt 0xa157688 <line:63:9, col:27>
        0xa157650 "char scratch[1024]")
      (DeclStmt 0xa1576e8 <line:64:9, col:23>
        0xa1576b0 "unsigned int c")
      (DeclStmt 0xa157978 <line:66:9, line:67:26>
        0xa157710 "struct termios modes =
          (CXXConstructExpr 0xa1578e0 <line:66:24> 'struct termios':'struct termios''void (void) throw()')"
        0xa157910 "struct termios savemodes =
          (CXXConstructExpr 0xa157948 <line:67:17> 'struct termios':'struct termios''void (void) throw()')")
      (CallExpr 0xa157a38 <line:69:9, col:28> 'void'
        (ImplicitCastExpr 0xa157a28 <col:9> 'void (*)(int (*)(void))' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1579d8 <col:9> 'void (int (*)(void))' lvalue Function 0xa155fd0 'input_common_init' 'void (int (*)(void))'))
        (ImplicitCastExpr 0xa157a58 <col:27> 'int (*)(void)' <NullToPointer>
          (IntegerLiteral 0xa1579c0 <col:27> 'int' 0)))
      (CallExpr 0xa157b48 <line:72:9, col:27> 'int'
        (ImplicitCastExpr 0xa157b38 <col:9> 'int (*)(int, struct termios *) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa157ae4 <col:9> 'int (int, struct termios *) throw()' lvalue Function 0x9bf5560 'tcgetattr' 'int (int, struct termios *) throw()'))
        (IntegerLiteral 0xa157aa0 <col:19> 'int' 0)
        (UnaryOperator 0xa157ad0 <col:21, col:22> 'struct termios *' prefix '&'
          (DeclRefExpr 0xa157ab8 <col:22> 'struct termios':'struct termios' lvalue Var 0xa157710 'modes' 'struct termios':'struct termios')))
      (CXXOperatorCallExpr 0xa1581d8 <line:73:9, col:21> 'struct termios' lvalue
        (ImplicitCastExpr 0xa1581c8 <col:19, <invalid sloc>> 'struct termios &(*)(const struct termios &) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa158178 <col:19, <invalid sloc>> 'struct termios &(const struct termios &) throw()' lvalue CXXMethod 0xa157c00 'operator=' 'struct termios &(const struct termios &) throw()'))
        (DeclRefExpr 0xa157b6c <col:9> 'struct termios':'struct termios' lvalue Var 0xa157910 'savemodes' 'struct termios':'struct termios')
        (ImplicitCastExpr 0xa158168 <col:21> 'const struct termios' lvalue <NoOp>
          (DeclRefExpr 0xa157b84 <col:21> 'struct termios':'struct termios' lvalue Var 0xa157710 'modes' 'struct termios':'struct termios')))
      (CompoundAssignOperator 0xa158278 <line:75:9, /usr/include/i386-linux-gnu/bits/termios.h:180:16> 'tcflag_t':'unsigned int' lvalue '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
        (MemberExpr 0xa158214 <../codeBase/fish-shell-master/key_reader.cpp:75:9, col:15> 'tcflag_t':'unsigned int' lvalue .c_lflag 0x9bf4c60
          (DeclRefExpr 0xa1581fc <col:9> 'struct termios':'struct termios' lvalue Var 0xa157710 'modes' 'struct termios':'struct termios'))
        (ImplicitCastExpr 0xa158268 <col:26, /usr/include/i386-linux-gnu/bits/termios.h:180:16> 'unsigned int' <IntegralCast>
          (UnaryOperator 0xa158250 <../codeBase/fish-shell-master/key_reader.cpp:75:26, /usr/include/i386-linux-gnu/bits/termios.h:180:16> 'int' prefix '~'
            (IntegerLiteral 0xa158238 <col:16> 'int' 2))))
      (CompoundAssignOperator 0xa158310 <../codeBase/fish-shell-master/key_reader.cpp:76:9, /usr/include/i386-linux-gnu/bits/termios.h:184:14> 'tcflag_t':'unsigned int' lvalue '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
        (MemberExpr 0xa1582b0 <../codeBase/fish-shell-master/key_reader.cpp:76:9, col:15> 'tcflag_t':'unsigned int' lvalue .c_lflag 0x9bf4c60
          (DeclRefExpr 0xa158298 <col:9> 'struct termios':'struct termios' lvalue Var 0xa157710 'modes' 'struct termios':'struct termios'))
        (ImplicitCastExpr 0xa158300 <col:26, /usr/include/i386-linux-gnu/bits/termios.h:184:14> 'unsigned int' <IntegralCast>
          (UnaryOperator 0xa1582e8 <../codeBase/fish-shell-master/key_reader.cpp:76:26, /usr/include/i386-linux-gnu/bits/termios.h:184:14> 'int' prefix '~'
            (IntegerLiteral 0xa1582d0 <col:14> 'int' 8))))
      (BinaryOperator 0xa1583e8 <../codeBase/fish-shell-master/key_reader.cpp:77:9, col:26> 'cc_t':'unsigned char' lvalue '='
        (ArraySubscriptExpr 0xa1583a8 <col:9, col:24> 'cc_t':'unsigned char' lvalue
          (ImplicitCastExpr 0xa158398 <col:9, col:15> 'cc_t *' <ArrayToPointerDecay>
            (MemberExpr 0xa158348 <col:9, col:15> 'cc_t [32]' lvalue .c_cc 0x9bf4d60
              (DeclRefExpr 0xa158330 <col:9> 'struct termios':'struct termios' lvalue Var 0xa157710 'modes' 'struct termios':'struct termios')))
          (IntegerLiteral 0xa158368 </usr/include/i386-linux-gnu/bits/termios.h:50:14> 'int' 6))
        (ImplicitCastExpr 0xa1583d8 <../codeBase/fish-shell-master/key_reader.cpp:77:26> 'cc_t':'unsigned char' <IntegralCast>
          (IntegerLiteral 0xa1583c0 <col:26> 'int' 1)))
      (BinaryOperator 0xa1584a0 <line:78:9, col:27> 'cc_t':'unsigned char' lvalue '='
        (ArraySubscriptExpr 0xa158460 <col:9, col:25> 'cc_t':'unsigned char' lvalue
          (ImplicitCastExpr 0xa158450 <col:9, col:15> 'cc_t *' <ArrayToPointerDecay>
            (MemberExpr 0xa158418 <col:9, col:15> 'cc_t [32]' lvalue .c_cc 0x9bf4d60
              (DeclRefExpr 0xa158400 <col:9> 'struct termios':'struct termios' lvalue Var 0xa157710 'modes' 'struct termios':'struct termios')))
          (IntegerLiteral 0xa158438 </usr/include/i386-linux-gnu/bits/termios.h:49:15> 'int' 5))
        (ImplicitCastExpr 0xa158490 <../codeBase/fish-shell-master/key_reader.cpp:78:27> 'cc_t':'unsigned char' <IntegralCast>
          (IntegerLiteral 0xa158478 <col:27> 'int' 0)))
      (CallExpr 0xa1585b8 <line:79:9, col:35> 'int'
        (ImplicitCastExpr 0xa1585a8 <col:9> 'int (*)(int, int, const struct termios *) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa15854c <col:9> 'int (int, int, const struct termios *) throw()' lvalue Function 0x9c01b60 'tcsetattr' 'int (int, int, const struct termios *) throw()'))
        (IntegerLiteral 0xa1584f0 <col:19> 'int' 0)
        (IntegerLiteral 0xa158508 </usr/include/i386-linux-gnu/bits/termios.h:214:18> 'int' 0)
        (ImplicitCastExpr 0xa1585e0 <../codeBase/fish-shell-master/key_reader.cpp:79:29, col:30> 'const struct termios *' <NoOp>
          (UnaryOperator 0xa158538 <col:29, col:30> 'struct termios *' prefix '&'
            (DeclRefExpr 0xa158520 <col:30> 'struct termios':'struct termios' lvalue Var 0xa157710 'modes' 'struct termios':'struct termios'))))
      (WhileStmt 0xa158cd8 <line:80:9, line:89:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa158608 <line:80:16> '_Bool' <IntegralToBoolean>
          (IntegerLiteral 0xa1585f0 <col:16> 'int' 1))
        (CompoundStmt 0xa158cb8 <line:81:5, line:89:9>
          (IfStmt 0xa1587b0 <line:82:13, line:83:17>
            <<<NULL>>>
            (BinaryOperator 0xa158790 <line:82:17, /usr/include/libio.h:90:17> '_Bool' '=='
              (ImplicitCastExpr 0xa158770 <../codeBase/fish-shell-master/key_reader.cpp:82:17, col:42> 'unsigned int' <LValueToRValue>
                (ParenExpr 0xa158710 <col:17, col:42> 'unsigned int' lvalue
                  (BinaryOperator 0xa1586f8 <col:18, col:41> 'unsigned int' lvalue '='
                    (DeclRefExpr 0xa158614 <col:18> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int')
                    (ImplicitCastExpr 0xa1586e8 <col:20, col:41> 'unsigned int' <IntegralCast>
                      (CallExpr 0xa1586c8 <col:20, col:41> 'wchar_t'
                        (ImplicitCastExpr 0xa1586b8 <col:20> 'wchar_t (*)(int)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa158680 <col:20> 'wchar_t (int)' lvalue Function 0xa156140 'input_common_readch' 'wchar_t (int)'))
                        (IntegerLiteral 0xa158668 <col:40> 'int' 0))))))
              (ImplicitCastExpr 0xa158780 </usr/include/libio.h:90:14, col:17> 'unsigned int' <IntegralCast>
                (ParenExpr 0xa158758 <col:14, col:17> 'int'
                  (UnaryOperator 0xa158740 <col:15, col:16> 'int' prefix '-'
                    (IntegerLiteral 0xa158728 <col:16> 'int' 1)))))
            (BreakStmt 0xa1587a8 <../codeBase/fish-shell-master/key_reader.cpp:83:17>)
            <<<NULL>>>)
          (IfStmt 0xa158bd8 <line:84:13, line:87:59>
            <<<NULL>>>
            (BinaryOperator 0xa1588d0 <line:84:17, col:38> '_Bool' '&&'
              (ParenExpr 0xa158838 <col:17, col:24> '_Bool'
                (BinaryOperator 0xa158820 <col:18, col:22> '_Bool' '>'
                  (ImplicitCastExpr 0xa158800 <col:18> 'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa1587cc <col:18> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int'))
                  (ImplicitCastExpr 0xa158810 <col:22> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa1587e8 <col:22> 'int' 31))))
              (ParenExpr 0xa1588b8 <col:29, col:38> '_Bool'
                (BinaryOperator 0xa1588a0 <col:30, col:35> '_Bool' '!='
                  (ImplicitCastExpr 0xa158880 <col:30> 'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa15884c <col:30> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int'))
                  (ImplicitCastExpr 0xa158890 <col:35> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa158868 <col:35> 'int' 127)))))
            (CallExpr 0xa158a18 <line:85:17, col:71> 'int'
              (ImplicitCastExpr 0xa158a08 <col:17> 'int (*)(char *restrict, const char *restrict, ...) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa1589b4 <col:17> 'int (char *restrict, const char *restrict, ...) throw()' lvalue Function 0x9be19c0 'sprintf' 'int (char *restrict, const char *restrict, ...) throw()'))
              (ImplicitCastExpr 0xa158a48 <col:25> 'char *' <ArrayToPointerDecay>
                (DeclRefExpr 0xa15891c <col:25> 'char [1024]' lvalue Var 0xa157650 'scratch' 'char [1024]'))
              (ImplicitCastExpr 0xa158a58 <col:34> 'const char *' <ArrayToPointerDecay>
                (StringLiteral 0xa158934 <col:34> 'const char [26]' lvalue "dec: %d hex: %x char: %c\n"))
              (ImplicitCastExpr 0xa158a68 <col:64> 'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa15896c <col:64> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int'))
              (ImplicitCastExpr 0xa158a78 <col:67> 'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa158984 <col:67> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int'))
              (ImplicitCastExpr 0xa158a88 <col:70> 'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa15899c <col:70> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int')))
            (CallExpr 0xa158b68 <line:87:17, col:59> 'int'
              (ImplicitCastExpr 0xa158b58 <col:17> 'int (*)(char *restrict, const char *restrict, ...) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa158b40 <col:17> 'int (char *restrict, const char *restrict, ...) throw()' lvalue Function 0x9be19c0 'sprintf' 'int (char *restrict, const char *restrict, ...) throw()'))
              (ImplicitCastExpr 0xa158b98 <col:25> 'char *' <ArrayToPointerDecay>
                (DeclRefExpr 0xa158acc <col:25> 'char [1024]' lvalue Var 0xa157650 'scratch' 'char [1024]'))
              (ImplicitCastExpr 0xa158ba8 <col:34> 'const char *' <ArrayToPointerDecay>
                (StringLiteral 0xa158ae4 <col:34> 'const char [17]' lvalue "dec: %d hex: %x\n"))
              (ImplicitCastExpr 0xa158bb8 <col:55> 'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa158b10 <col:55> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int'))
              (ImplicitCastExpr 0xa158bc8 <col:58> 'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa158b28 <col:58> 'unsigned int' lvalue Var 0xa1576b0 'c' 'unsigned int'))))
          (CallExpr 0xa158c88 <line:88:13, col:29> 'int'
            (ImplicitCastExpr 0xa158c78 <col:13> 'int (*)(char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa158c44 <col:13> 'int (char *)' lvalue Function 0xa1564e0 'writestr' 'int (char *)'))
            (ImplicitCastExpr 0xa158ca8 <col:22> 'char *' <ArrayToPointerDecay>
              (DeclRefExpr 0xa158c2c <col:22> 'char [1024]' lvalue Var 0xa157650 'scratch' 'char [1024]')))))
      (CallExpr 0xa158db0 <line:91:9, col:39> 'int'
        (ImplicitCastExpr 0xa158da0 <col:9> 'int (*)(int, int, const struct termios *) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa158d84 <col:9> 'int (int, int, const struct termios *) throw()' lvalue Function 0x9c01b60 'tcsetattr' 'int (int, int, const struct termios *) throw()'))
        (IntegerLiteral 0xa158d28 <col:19> 'int' 0)
        (IntegerLiteral 0xa158d40 </usr/include/i386-linux-gnu/bits/termios.h:214:18> 'int' 0)
        (ImplicitCastExpr 0xa158dd8 <../codeBase/fish-shell-master/key_reader.cpp:91:29, col:30> 'const struct termios *' <NoOp>
          (UnaryOperator 0xa158d70 <col:29, col:30> 'struct termios *' prefix '&'
            (DeclRefExpr 0xa158d58 <col:30> 'struct termios':'struct termios' lvalue Var 0xa157910 'savemodes' 'struct termios':'struct termios'))))
      (CallExpr 0xa158e48 <line:93:9, col:30> 'void'
        (ImplicitCastExpr 0xa158e38 <col:9> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa158e1c <col:9> 'void (void)' lvalue Function 0xa156050 'input_common_destroy' 'void (void)')))))
  (ReturnStmt 0xa158ee8 <line:96:5, col:12>
    (IntegerLiteral 0xa158ed0 <col:12> 'int' 0)))



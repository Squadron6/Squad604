typedef char *__builtin_va_list;
typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x9cdb250 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x9cdb2b0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x9cdb310 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9cdb370 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x9cdb510 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x9cdb570 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9cdb5d0 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef unsigned char __u_char;
        typedef unsigned short __u_short;
        typedef unsigned int __u_int;
        typedef unsigned long __u_long;
        typedef signed char __int8_t;
        typedef unsigned char __uint8_t;
        typedef short __int16_t;
        typedef unsigned short __uint16_t;
        typedef int __int32_t;
        typedef unsigned int __uint32_t;
        typedef long long __int64_t;
        typedef unsigned long long __uint64_t;
        typedef long long __quad_t;
        typedef unsigned long long __u_quad_t;
        typedef __u_quad_t __dev_t;
        typedef unsigned int __uid_t;
        typedef unsigned int __gid_t;
        typedef unsigned long __ino_t;
        typedef __u_quad_t __ino64_t;
        typedef unsigned int __mode_t;
        typedef unsigned int __nlink_t;
        typedef long __off_t;
        typedef __quad_t __off64_t;
        typedef int __pid_t;
        struct {
            int __val[2];
        };
        typedef struct __fsid_t __fsid_t;
        typedef long __clock_t;
        typedef unsigned long __rlim_t;
        typedef __u_quad_t __rlim64_t;
        typedef unsigned int __id_t;
        typedef long __time_t;
        typedef unsigned int __useconds_t;
        typedef long __suseconds_t;
        typedef int __daddr_t;
        typedef long __swblk_t;
        typedef int __key_t;
        typedef int __clockid_t;
        typedef void *__timer_t;
        typedef long __blksize_t;
        typedef long __blkcnt_t;
        typedef __quad_t __blkcnt64_t;
        typedef unsigned long __fsblkcnt_t;
        typedef __u_quad_t __fsblkcnt64_t;
        typedef unsigned long __fsfilcnt_t;
        typedef __u_quad_t __fsfilcnt64_t;
        typedef int __ssize_t;
        typedef __off64_t __loff_t;
        typedef __quad_t *__qaddr_t;
        typedef char *__caddr_t;
        typedef int __intptr_t;
        typedef unsigned int __socklen_t;
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __off_t off_t;
        typedef __off64_t off64_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __ssize_t ssize_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef signed char int8_t;
        typedef short int16_t;
        typedef int int32_t;
        typedef long long int64_t;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                } ;
                ;
                ;
            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
extern "C" {
    typedef __intptr_t intptr_t;
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x9d99098 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9d8a0d4 <col:26> 'int' EnumConstant 0x9d8a0a0 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x9d990a8 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d94ca8 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x9d94c74 <line:468:33> 'int' EnumConstant 0x9d948c0 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x9d94c90 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x9d9e188 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d99298 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x9d9e198 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d994a8 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
extern "C" {
    struct stat {
        struct stat;
        __dev_t st_dev;
        unsigned short __pad1;
        __ino_t st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned short __pad2;
        __off_t st_size;
        __blksize_t st_blksize;
        __blkcnt_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        unsigned long __unused4;
        unsigned long __unused5;
    };
    struct stat64 {
        struct stat64;
        __dev_t st_dev;
        unsigned int __pad1;
        __ino_t __st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned int __pad2;
        __off64_t st_size;
        __blksize_t st_blksize;
        __blkcnt64_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        __ino64_t st_ino;
    };
    extern int stat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int fstat(int __fd, struct stat *__buf) throw();
    extern int stat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int fstat64(int __fd, struct stat64 *__buf) throw();
    extern int fstatat(int __fd, const char *restrict __file, struct stat *restrict __buf, int __flag) throw();
    extern int fstatat64(int __fd, const char *restrict __file, struct stat64 *restrict __buf, int __flag) throw();
    extern int lstat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int lstat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int chmod(const char *__file, __mode_t __mode) throw();
    extern int lchmod(const char *__file, __mode_t __mode) throw();
    extern int fchmod(int __fd, __mode_t __mode) throw();
    extern int fchmodat(int __fd, const char *__file, __mode_t __mode, int __flag) throw();
    extern __mode_t umask(__mode_t __mask) throw();
    extern __mode_t getumask() throw();
    extern int mkdir(const char *__path, __mode_t __mode) throw();
    extern int mkdirat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int mknod(const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mknodat(int __fd, const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mkfifo(const char *__path, __mode_t __mode) throw();
    extern int mkfifoat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int utimensat(int __fd, const char *__path, const struct timespec __times[2], int __flags) throw();
    extern int futimens(int __fd, const struct timespec __times[2]) throw();
    extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf) throw();
    extern int __xstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __lxstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __fxstatat(int __ver, int __fildes, const char *__filename, struct stat *__stat_buf, int __flag) throw();
    extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf) throw();
    extern int __xstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __lxstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __fxstatat64(int __ver, int __fildes, const char *__filename, struct stat64 *__stat_buf, int __flag) throw();
    extern int __xmknod(int __ver, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
    extern int __xmknodat(int __ver, int __fd, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    struct iovec {
        struct iovec;
        void *iov_base;
        size_t iov_len;
    };
    struct flock {
        struct flock;
        short l_type;
        short l_whence;
        __off_t l_start;
        __off_t l_len;
        __pid_t l_pid;
    };
    struct flock64 {
        struct flock64;
        short l_type;
        short l_whence;
        __off64_t l_start;
        __off64_t l_len;
        __pid_t l_pid;
    };
    enum __pid_type {
        F_OWNER_TID = (ImplicitCastExpr 0x9d4e5e8 </usr/include/i386-linux-gnu/bits/fcntl.h:182:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9d4e4c0 <col:19> 'int' 0))
,
        F_OWNER_PID,
        F_OWNER_PGRP,
        F_OWNER_GID = (ImplicitCastExpr 0x9d4e5f8 </usr/include/i386-linux-gnu/bits/fcntl.h:185:19> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9d4e594 <col:19> 'int' EnumConstant 0x9d4e560 'F_OWNER_PGRP' 'enum __pid_type'))

    };
    struct f_owner_ex {
        struct f_owner_ex;
        enum __pid_type type;
        __pid_t pid;
    };
    struct file_handle {
        struct file_handle;
        unsigned int handle_bytes;
        int handle_type;
        unsigned char f_handle[0];
    };
    extern "C" {
        extern ssize_t readahead(int __fd, __off64_t __offset, size_t __count) throw();
        extern int sync_file_range(int __fd, __off64_t __offset, __off64_t __count, unsigned int __flags);
        extern ssize_t vmsplice(int __fdout, const struct iovec *__iov, size_t __count, unsigned int __flags);
        extern ssize_t splice(int __fdin, __off64_t *__offin, int __fdout, __off64_t *__offout, size_t __len, unsigned int __flags);
        extern ssize_t tee(int __fdin, int __fdout, size_t __len, unsigned int __flags);
        extern int fallocate(int __fd, int __mode, __off_t __offset, __off_t __len);
        extern int fallocate64(int __fd, int __mode, __off64_t __offset, __off64_t __len);
        extern int name_to_handle_at(int __dfd, const char *__name, struct file_handle *__handle, int *__mnt_id, int __flags) throw();
        extern int open_by_handle_at(int __mountdirfd, struct file_handle *__handle, int __flags);
    }
    extern int fcntl(int __fd, int __cmd, ...);
    extern int open(const char *__file, int __oflag, ...);
    extern int open64(const char *__file, int __oflag, ...);
    extern int openat(int __fd, const char *__file, int __oflag, ...);
    extern int openat64(int __fd, const char *__file, int __oflag, ...);
    extern int creat(const char *__file, __mode_t __mode);
    extern int creat64(const char *__file, __mode_t __mode);
    extern int posix_fadvise(int __fd, __off_t __offset, __off_t __len, int __advise) throw();
    extern int posix_fadvise64(int __fd, __off64_t __offset, __off64_t __len, int __advise) throw();
    extern int posix_fallocate(int __fd, __off_t __offset, __off_t __len);
    extern int posix_fallocate64(int __fd, __off64_t __offset, __off64_t __len);
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x9de3290 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x9de32e8 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x9de3338 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x9de3388 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x9de33d8 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x9de3428 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x9de3478 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x9de34c8 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x9de3518 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x9de3568 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x9de35b8 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x9de3608 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x9de3be8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9de3bc8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9de36a0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9de3670 <col:3, col:7> 'int'
        (DeclRefExpr 0x9de3654 <line:87:24> 'int' EnumConstant 0x9de32b0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9de3688 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9de3798 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9de3788 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9de3760 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9de3748 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9de3718 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9de3700 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9de36b8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9de36e8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9de36d0 <line:87:24> 'int' EnumConstant 0x9de32b0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9de3730 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9de3bb0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9de3b90 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9de37f8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9de37c8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9de37b0 <line:87:24> 'int' EnumConstant 0x9de32b0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9de37e0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9de38f0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9de38e0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9de38b8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9de38a0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9de3870 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9de3858 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9de3810 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9de3840 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9de3828 <line:87:24> 'int' EnumConstant 0x9de32b0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9de3888 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9de3b78 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9de3b58 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9de3950 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9de3920 <col:9, col:13> 'int'
                (DeclRefExpr 0x9de3908 <line:87:24> 'int' EnumConstant 0x9de32b0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9de3938 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9de3a48 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9de3a38 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9de3a10 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9de39f8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9de39c8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9de39b0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de3968 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9de3998 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9de3980 <line:87:24> 'int' EnumConstant 0x9de32b0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de39e0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9de3b40 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9de3b30 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9de3b08 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9de3af0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9de3ac0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9de3aa8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de3a60 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9de3a90 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9de3a78 <line:87:24> 'int' EnumConstant 0x9de32b0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de3ad8 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x9de8c28 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9de8c08 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9de3c80 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9de3c50 <col:3, col:7> 'int'
        (DeclRefExpr 0x9de3c34 <line:88:24> 'int' EnumConstant 0x9de3300 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9de3c68 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9de3d78 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9de3d68 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9de3d40 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9de3d28 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9de3cf8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9de3ce0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9de3c98 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9de3cc8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9de3cb0 <line:88:24> 'int' EnumConstant 0x9de3300 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9de3d10 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9de8bf0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9de8bd0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9de3dd8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9de3da8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9de3d90 <line:88:24> 'int' EnumConstant 0x9de3300 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9de3dc0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9de3ed0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9de3ec0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9de3e98 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9de3e80 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9de3e50 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9de3e38 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9de3df0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9de3e20 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9de3e08 <line:88:24> 'int' EnumConstant 0x9de3300 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9de3e68 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9de8bb8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9de4138 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9de3f30 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9de3f00 <col:9, col:13> 'int'
                (DeclRefExpr 0x9de3ee8 <line:88:24> 'int' EnumConstant 0x9de3300 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9de3f18 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9de4028 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9de4018 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9de3ff0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9de3fd8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9de3fa8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9de3f90 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de3f48 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9de3f78 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9de3f60 <line:88:24> 'int' EnumConstant 0x9de3300 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de3fc0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9de4120 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9de4110 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9de40e8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9de40d0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9de40a0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9de4088 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de4040 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9de4070 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9de4058 <line:88:24> 'int' EnumConstant 0x9de3300 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de40b8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x9de9208 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9de91e8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9de8cc0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9de8c90 <col:3, col:7> 'int'
        (DeclRefExpr 0x9de8c74 <line:89:24> 'int' EnumConstant 0x9de3350 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9de8ca8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9de8db8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9de8da8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9de8d80 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9de8d68 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9de8d38 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9de8d20 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9de8cd8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9de8d08 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9de8cf0 <line:89:24> 'int' EnumConstant 0x9de3350 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9de8d50 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9de91d0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9de91b0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9de8e18 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9de8de8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9de8dd0 <line:89:24> 'int' EnumConstant 0x9de3350 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9de8e00 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9de8f10 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9de8f00 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9de8ed8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9de8ec0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9de8e90 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9de8e78 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9de8e30 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9de8e60 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9de8e48 <line:89:24> 'int' EnumConstant 0x9de3350 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9de8ea8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9de9198 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9de9178 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9de8f70 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9de8f40 <col:9, col:13> 'int'
                (DeclRefExpr 0x9de8f28 <line:89:24> 'int' EnumConstant 0x9de3350 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9de8f58 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9de9068 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9de9058 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9de9030 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9de9018 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9de8fe8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9de8fd0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de8f88 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9de8fb8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9de8fa0 <line:89:24> 'int' EnumConstant 0x9de3350 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de9000 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9de9160 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9de9150 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9de9128 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9de9110 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9de90e0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9de90c8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de9080 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9de90b0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9de9098 <line:89:24> 'int' EnumConstant 0x9de3350 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de90f8 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x9de97e8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9de97c8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9de92a0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9de9270 <col:3, col:7> 'int'
        (DeclRefExpr 0x9de9254 <line:90:24> 'int' EnumConstant 0x9de33a0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9de9288 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9de9398 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9de9388 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9de9360 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9de9348 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9de9318 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9de9300 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9de92b8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9de92e8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9de92d0 <line:90:24> 'int' EnumConstant 0x9de33a0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9de9330 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9de97b0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9de9790 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9de93f8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9de93c8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9de93b0 <line:90:24> 'int' EnumConstant 0x9de33a0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9de93e0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9de94f0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9de94e0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9de94b8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9de94a0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9de9470 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9de9458 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9de9410 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9de9440 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9de9428 <line:90:24> 'int' EnumConstant 0x9de33a0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9de9488 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9de9778 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9de9758 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9de9550 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9de9520 <col:9, col:13> 'int'
                (DeclRefExpr 0x9de9508 <line:90:24> 'int' EnumConstant 0x9de33a0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9de9538 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9de9648 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9de9638 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9de9610 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9de95f8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9de95c8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9de95b0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de9568 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9de9598 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9de9580 <line:90:24> 'int' EnumConstant 0x9de33a0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de95e0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9de9740 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9de9730 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9de9708 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9de96f0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9de96c0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9de96a8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de9660 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9de9690 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9de9678 <line:90:24> 'int' EnumConstant 0x9de33a0 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de96d8 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x9de9de0 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9de9dc0 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9de9880 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9de9850 <col:3, col:7> 'int'
        (DeclRefExpr 0x9de9834 <line:91:25> 'int' EnumConstant 0x9de33f0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9de9868 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9de9978 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9de9968 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9de9940 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9de9928 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9de98f8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9de98e0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9de9898 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9de98c8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9de98b0 <line:91:25> 'int' EnumConstant 0x9de33f0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9de9910 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9de9da8 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9de9d88 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9de99d8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9de99a8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9de9990 <line:91:25> 'int' EnumConstant 0x9de33f0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9de99c0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9de9ad0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9de9ac0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9de9a98 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9de9a80 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9de9a50 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9de9a38 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9de99f0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9de9a20 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9de9a08 <line:91:25> 'int' EnumConstant 0x9de33f0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9de9a68 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9de9d70 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9de9d50 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9de9b30 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9de9b00 <col:9, col:13> 'int'
                (DeclRefExpr 0x9de9ae8 <line:91:25> 'int' EnumConstant 0x9de33f0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9de9b18 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9de9c40 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9de9c30 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9de9c08 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9de9bf0 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9de9bc0 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9de9b90 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de9b48 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9de9b78 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9de9b60 <line:91:25> 'int' EnumConstant 0x9de33f0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de9bd8 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9de9d38 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9de9d28 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9de9d00 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9de9ce8 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9de9cb8 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9de9ca0 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9de9c58 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9de9c88 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9de9c70 <line:91:25> 'int' EnumConstant 0x9de33f0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9de9cd0 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x9dea3c8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9dea3a8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9de9e80 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9de9e50 <col:3, col:7> 'int'
        (DeclRefExpr 0x9de9e34 <line:92:24> 'int' EnumConstant 0x9de3440 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9de9e68 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9de9f78 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9de9f68 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9de9f40 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9de9f28 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9de9ef8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9de9ee0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9de9e98 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9de9ec8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9de9eb0 <line:92:24> 'int' EnumConstant 0x9de3440 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9de9f10 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9dea390 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9dea370 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9de9fd8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9de9fa8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9de9f90 <line:92:24> 'int' EnumConstant 0x9de3440 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9de9fc0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9dea0d0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9dea0c0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9dea098 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9dea080 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9dea050 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9dea038 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9de9ff0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9dea020 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9dea008 <line:92:24> 'int' EnumConstant 0x9de3440 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9dea068 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9dea358 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9dea338 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9dea130 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9dea100 <col:9, col:13> 'int'
                (DeclRefExpr 0x9dea0e8 <line:92:24> 'int' EnumConstant 0x9de3440 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9dea118 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9dea228 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9dea218 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9dea1f0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9dea1d8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9dea1a8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9dea190 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dea148 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9dea178 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9dea160 <line:92:24> 'int' EnumConstant 0x9de3440 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9dea1c0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9dea320 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9dea310 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9dea2e8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9dea2d0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9dea2a0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9dea288 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dea240 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9dea270 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9dea258 <line:92:24> 'int' EnumConstant 0x9de3440 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9dea2b8 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x9dea9a8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9dea988 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9dea460 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9dea430 <col:3, col:7> 'int'
        (DeclRefExpr 0x9dea414 <line:93:24> 'int' EnumConstant 0x9de3490 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9dea448 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9dea558 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9dea548 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9dea520 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9dea508 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9dea4d8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9dea4c0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9dea478 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9dea4a8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9dea490 <line:93:24> 'int' EnumConstant 0x9de3490 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9dea4f0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9dea970 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9dea950 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9dea5b8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9dea588 <col:6, col:10> 'int'
            (DeclRefExpr 0x9dea570 <line:93:24> 'int' EnumConstant 0x9de3490 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9dea5a0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9dea6b0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9dea6a0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9dea678 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9dea660 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9dea630 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9dea618 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9dea5d0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9dea600 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9dea5e8 <line:93:24> 'int' EnumConstant 0x9de3490 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9dea648 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9dea938 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9dea918 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9dea710 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9dea6e0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9dea6c8 <line:93:24> 'int' EnumConstant 0x9de3490 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9dea6f8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9dea808 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9dea7f8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9dea7d0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9dea7b8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9dea788 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9dea770 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dea728 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9dea758 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9dea740 <line:93:24> 'int' EnumConstant 0x9de3490 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9dea7a0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9dea900 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9dea8f0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9dea8c8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9dea8b0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9dea880 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9dea868 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dea820 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9dea850 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9dea838 <line:93:24> 'int' EnumConstant 0x9de3490 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9dea898 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x9debfa8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9debf88 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9deaa40 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9deaa10 <col:3, col:7> 'int'
        (DeclRefExpr 0x9dea9f4 <line:94:24> 'int' EnumConstant 0x9de34e0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9deaa28 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9deab38 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9deab28 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9deab00 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9deaae8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9deaab8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9deaaa0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9deaa58 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9deaa88 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9deaa70 <line:94:24> 'int' EnumConstant 0x9de34e0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9deaad0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9debf70 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9debf50 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9deab98 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9deab68 <col:6, col:10> 'int'
            (DeclRefExpr 0x9deab50 <line:94:24> 'int' EnumConstant 0x9de34e0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9deab80 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9debcb0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9debca0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9debc78 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9debc60 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9debc30 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9debc18 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9debbd0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9debc00 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9debbe8 <line:94:24> 'int' EnumConstant 0x9de34e0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9debc48 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9debf38 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9debf18 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9debd10 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9debce0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9debcc8 <line:94:24> 'int' EnumConstant 0x9de34e0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9debcf8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9debe08 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9debdf8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9debdd0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9debdb8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9debd88 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9debd70 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9debd28 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9debd58 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9debd40 <line:94:24> 'int' EnumConstant 0x9de34e0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9debda0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9debf00 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9debef0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9debec8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9debeb0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9debe80 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9debe68 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9debe20 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9debe50 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9debe38 <line:94:24> 'int' EnumConstant 0x9de34e0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9debe98 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x9dec588 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9dec568 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9dec040 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9dec010 <col:3, col:7> 'int'
        (DeclRefExpr 0x9debff4 <line:95:24> 'int' EnumConstant 0x9de3530 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9dec028 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9dec138 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9dec128 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9dec100 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9dec0e8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9dec0b8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9dec0a0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9dec058 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9dec088 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9dec070 <line:95:24> 'int' EnumConstant 0x9de3530 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9dec0d0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9dec550 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9dec530 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9dec198 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9dec168 <col:6, col:10> 'int'
            (DeclRefExpr 0x9dec150 <line:95:24> 'int' EnumConstant 0x9de3530 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9dec180 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9dec290 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9dec280 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9dec258 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9dec240 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9dec210 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9dec1f8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9dec1b0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9dec1e0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9dec1c8 <line:95:24> 'int' EnumConstant 0x9de3530 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9dec228 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9dec518 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9dec4f8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9dec2f0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9dec2c0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9dec2a8 <line:95:24> 'int' EnumConstant 0x9de3530 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9dec2d8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9dec3e8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9dec3d8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9dec3b0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9dec398 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9dec368 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9dec350 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dec308 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9dec338 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9dec320 <line:95:24> 'int' EnumConstant 0x9de3530 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9dec380 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9dec4e0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9dec4d0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9dec4a8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9dec490 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9dec460 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9dec448 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dec400 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9dec430 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9dec418 <line:95:24> 'int' EnumConstant 0x9de3530 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9dec478 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x9decb68 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9decb48 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9dec620 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9dec5f0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9dec5d4 <line:96:24> 'int' EnumConstant 0x9de3580 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9dec608 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9dec718 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9dec708 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9dec6e0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9dec6c8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9dec698 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9dec680 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9dec638 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9dec668 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9dec650 <line:96:24> 'int' EnumConstant 0x9de3580 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9dec6b0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9decb30 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9decb10 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9dec778 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9dec748 <col:6, col:10> 'int'
            (DeclRefExpr 0x9dec730 <line:96:24> 'int' EnumConstant 0x9de3580 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9dec760 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9dec870 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9dec860 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9dec838 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9dec820 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9dec7f0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9dec7d8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9dec790 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9dec7c0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9dec7a8 <line:96:24> 'int' EnumConstant 0x9de3580 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9dec808 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9decaf8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9decad8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9dec8d0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9dec8a0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9dec888 <line:96:24> 'int' EnumConstant 0x9de3580 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9dec8b8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9dec9c8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9dec9b8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9dec990 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9dec978 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9dec948 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9dec930 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dec8e8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9dec918 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9dec900 <line:96:24> 'int' EnumConstant 0x9de3580 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9dec960 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9decac0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9decab0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9deca88 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9deca70 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9deca40 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9deca28 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9dec9e0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9deca10 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9dec9f8 <line:96:24> 'int' EnumConstant 0x9de3580 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9deca58 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x9ded168 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9ded148 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9decc20 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9decbf0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9decbd8 <line:97:24> 'int' EnumConstant 0x9de35d0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9decc08 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9decd18 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9decd08 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9decce0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9deccc8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9decc98 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9decc80 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9decc38 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9decc68 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9decc50 <line:97:24> 'int' EnumConstant 0x9de35d0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9deccb0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9ded130 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9ded110 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9decd78 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9decd48 <col:6, col:10> 'int'
            (DeclRefExpr 0x9decd30 <line:97:24> 'int' EnumConstant 0x9de35d0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9decd60 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9dece70 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9dece60 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9dece38 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9dece20 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9decdf0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9decdd8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9decd90 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9decdc0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9decda8 <line:97:24> 'int' EnumConstant 0x9de35d0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9dece08 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9ded0f8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9ded0d8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9deced0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9decea0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9dece88 <line:97:24> 'int' EnumConstant 0x9de35d0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9deceb8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9decfc8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9decfb8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9decf90 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9decf78 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9decf48 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9decf30 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9decee8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9decf18 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9decf00 <line:97:24> 'int' EnumConstant 0x9de35d0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9decf60 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9ded0c0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9ded0b0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9ded088 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9ded070 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9ded040 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9ded028 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9decfe0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9ded010 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9decff8 <line:97:24> 'int' EnumConstant 0x9de35d0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9ded058 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x9ded748 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9ded728 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9ded200 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9ded1d0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9ded1b4 <line:98:24> 'int' EnumConstant 0x9de3620 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9ded1e8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9ded2f8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9ded2e8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9ded2c0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9ded2a8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9ded278 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9ded260 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9ded218 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9ded248 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9ded230 <line:98:24> 'int' EnumConstant 0x9de3620 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9ded290 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9ded710 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9ded6f0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9ded358 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9ded328 <col:6, col:10> 'int'
            (DeclRefExpr 0x9ded310 <line:98:24> 'int' EnumConstant 0x9de3620 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9ded340 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9ded450 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9ded440 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9ded418 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9ded400 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9ded3d0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9ded3b8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9ded370 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9ded3a0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9ded388 <line:98:24> 'int' EnumConstant 0x9de3620 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9ded3e8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9ded6d8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9ded6b8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9ded4b0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9ded480 <col:9, col:13> 'int'
                (DeclRefExpr 0x9ded468 <line:98:24> 'int' EnumConstant 0x9de3620 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9ded498 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9ded5a8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9ded598 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9ded570 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9ded558 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9ded528 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9ded510 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9ded4c8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9ded4f8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9ded4e0 <line:98:24> 'int' EnumConstant 0x9de3620 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9ded540 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9ded6a0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9ded690 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9ded668 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9ded650 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9ded620 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9ded608 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9ded5c0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9ded5f0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9ded5d8 <line:98:24> 'int' EnumConstant 0x9de3620 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9ded638 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    struct dirent {
        struct dirent;
        __ino_t d_ino;
        __off_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    struct dirent64 {
        struct dirent64;
        __ino64_t d_ino;
        __off64_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    enum  {
        DT_UNKNOWN = (ImplicitCastExpr 0x9dfec08 </usr/include/dirent.h:101:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa4c0 <col:18> 'int' 0))
,
        DT_FIFO = (ImplicitCastExpr 0x9dfec18 </usr/include/dirent.h:103:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa518 <col:15> 'int' 1))
,
        DT_CHR = (ImplicitCastExpr 0x9dfec28 </usr/include/dirent.h:105:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa568 <col:14> 'int' 2))
,
        DT_DIR = (ImplicitCastExpr 0x9dfec38 </usr/include/dirent.h:107:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa5b8 <col:14> 'int' 4))
,
        DT_BLK = (ImplicitCastExpr 0x9dfec48 </usr/include/dirent.h:109:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa608 <col:14> 'int' 6))
,
        DT_REG = (ImplicitCastExpr 0x9dfec58 </usr/include/dirent.h:111:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa658 <col:14> 'int' 8))
,
        DT_LNK = (ImplicitCastExpr 0x9dfec68 </usr/include/dirent.h:113:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa6a8 <col:14> 'int' 10))
,
        DT_SOCK = (ImplicitCastExpr 0x9dfec78 </usr/include/dirent.h:115:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfa6f8 <col:15> 'int' 12))
,
        DT_WHT = (ImplicitCastExpr 0x9dfec88 </usr/include/dirent.h:117:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9dfebb8 <col:14> 'int' 14))

    };
    struct __dirstream;
    typedef struct __dirstream DIR;
    extern DIR *opendir(const char *__name);
    extern DIR *fdopendir(int __fd);
    extern int closedir(DIR *__dirp);
    extern struct dirent *readdir(DIR *__dirp);
    extern struct dirent64 *readdir64(DIR *__dirp);
    extern int readdir_r(DIR *restrict __dirp, struct dirent *restrict __entry, struct dirent **restrict __result);
    extern int readdir64_r(DIR *restrict __dirp, struct dirent64 *restrict __entry, struct dirent64 **restrict __result);
    extern void rewinddir(DIR *__dirp) throw();
    extern void seekdir(DIR *__dirp, long __pos) throw();
    extern long telldir(DIR *__dirp) throw();
    extern int dirfd(DIR *__dirp) throw();
    extern int scandir(const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandir64(const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int scandirat(int __dfd, const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandirat64(int __dfd, const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int alphasort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int alphasort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
    extern __ssize_t getdirentries(int __fd, char *restrict __buf, size_t __nbytes, __off_t *restrict __basep) throw();
    extern __ssize_t getdirentries64(int __fd, char *restrict __buf, size_t __nbytes, __off64_t *restrict __basep) throw();
    extern int versionsort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int versionsort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
}
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
typedef unsigned long chtype;
typedef unsigned long mmask_t;
typedef unsigned char NCURSES_BOOL;
extern "C" {
    extern chtype acs_map[];
    struct screen;
    typedef struct screen SCREEN;
    struct _win_st;
    typedef struct _win_st WINDOW;
    typedef chtype attr_t;
    struct {
        attr_t attr;
        wchar_t chars[5];
    };
    typedef struct cchar_t cchar_t;
    struct ldat;
    struct _win_st {
        struct _win_st;
        short _cury;
        short _curx;
        short _maxy;
        short _maxx;
        short _begy;
        short _begx;
        short _flags;
        attr_t _attrs;
        chtype _bkgd;
        bool _notimeout;
        bool _clear;
        bool _leaveok;
        bool _scroll;
        bool _idlok;
        bool _idcok;
        bool _immed;
        bool _sync;
        bool _use_keypad;
        int _delay;
        struct ldat *_line;
        short _regtop;
        short _regbottom;
        int _parx;
        int _pary;
        WINDOW *_parent;
        struct pdat {
            struct pdat;
            short _pad_y;
            short _pad_x;
            short _pad_top;
            short _pad_left;
            short _pad_bottom;
            short _pad_right;
        };
        struct pdat _pad;
        short _yoffset;
        cchar_t _bkgrnd;
    };
    typedef int (*NCURSES_OUTC)(int);
    extern int addch(const chtype);
    extern int addchnstr(const chtype *, int);
    extern int addchstr(const chtype *);
    extern int addnstr(const char *, int);
    extern int addstr(const char *);
    extern int attroff(int);
    extern int attron(int);
    extern int attrset(int);
    extern int attr_get(attr_t *, short *, void *);
    extern int attr_off(attr_t, void *);
    extern int attr_on(attr_t, void *);
    extern int attr_set(attr_t, short, void *);
    extern int baudrate();
    extern int beep();
    extern int bkgd(chtype);
    extern void bkgdset(chtype);
    extern int border(chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype);
    extern int box(WINDOW *, chtype, chtype);
    extern bool can_change_color();
    extern int cbreak();
    extern int chgat(int, attr_t, short, const void *);
    extern int clear();
    extern int clearok(WINDOW *, bool);
    extern int clrtobot();
    extern int clrtoeol();
    extern int color_content(short, short *, short *, short *);
    extern int color_set(short, void *);
    extern int COLOR_PAIR(int);
    extern int copywin(const WINDOW *, WINDOW *, int, int, int, int, int, int, int);
    extern int curs_set(int);
    extern int def_prog_mode();
    extern int def_shell_mode();
    extern int delay_output(int);
    extern int delch();
    extern void delscreen(SCREEN *);
    extern int delwin(WINDOW *);
    extern int deleteln();
    extern WINDOW *derwin(WINDOW *, int, int, int, int);
    extern int doupdate();
    extern WINDOW *dupwin(WINDOW *);
    extern int echo();
    extern int echochar(const chtype);
    extern int erase();
    extern int endwin();
    extern char erasechar();
    extern void filter();
    extern int flash();
    extern int flushinp();
    extern chtype getbkgd(WINDOW *);
    extern int getch();
    extern int getnstr(char *, int);
    extern int getstr(char *);
    extern WINDOW *getwin(FILE *);
    extern int halfdelay(int);
    extern bool has_colors();
    extern bool has_ic();
    extern bool has_il();
    extern int hline(chtype, int);
    extern void idcok(WINDOW *, bool);
    extern int idlok(WINDOW *, bool);
    extern void immedok(WINDOW *, bool);
    extern chtype inch();
    extern int inchnstr(chtype *, int);
    extern int inchstr(chtype *);
    extern WINDOW *initscr();
    extern int init_color(short, short, short, short);
    extern int init_pair(short, short, short);
    extern int innstr(char *, int);
    extern int insch(chtype);
    extern int insdelln(int);
    extern int insertln();
    extern int insnstr(const char *, int);
    extern int insstr(const char *);
    extern int instr(char *);
    extern int intrflush(WINDOW *, bool);
    extern bool isendwin();
    extern bool is_linetouched(WINDOW *, int);
    extern bool is_wintouched(WINDOW *);
    extern const char *keyname(int);
    extern int keypad(WINDOW *, bool);
    extern char killchar();
    extern int leaveok(WINDOW *, bool);
    extern char *longname();
    extern int meta(WINDOW *, bool);
    extern int move(int, int);
    extern int mvaddch(int, int, const chtype);
    extern int mvaddchnstr(int, int, const chtype *, int);
    extern int mvaddchstr(int, int, const chtype *);
    extern int mvaddnstr(int, int, const char *, int);
    extern int mvaddstr(int, int, const char *);
    extern int mvchgat(int, int, int, attr_t, short, const void *);
    extern int mvcur(int, int, int, int);
    extern int mvdelch(int, int);
    extern int mvderwin(WINDOW *, int, int);
    extern int mvgetch(int, int);
    extern int mvgetnstr(int, int, char *, int);
    extern int mvgetstr(int, int, char *);
    extern int mvhline(int, int, chtype, int);
    extern chtype mvinch(int, int);
    extern int mvinchnstr(int, int, chtype *, int);
    extern int mvinchstr(int, int, chtype *);
    extern int mvinnstr(int, int, char *, int);
    extern int mvinsch(int, int, chtype);
    extern int mvinsnstr(int, int, const char *, int);
    extern int mvinsstr(int, int, const char *);
    extern int mvinstr(int, int, char *);
    extern int mvprintw(int, int, const char *, ...);
    extern int mvscanw(int, int, const char *, ...);
    extern int mvvline(int, int, chtype, int);
    extern int mvwaddch(WINDOW *, int, int, const chtype);
    extern int mvwaddchnstr(WINDOW *, int, int, const chtype *, int);
    extern int mvwaddchstr(WINDOW *, int, int, const chtype *);
    extern int mvwaddnstr(WINDOW *, int, int, const char *, int);
    extern int mvwaddstr(WINDOW *, int, int, const char *);
    extern int mvwchgat(WINDOW *, int, int, int, attr_t, short, const void *);
    extern int mvwdelch(WINDOW *, int, int);
    extern int mvwgetch(WINDOW *, int, int);
    extern int mvwgetnstr(WINDOW *, int, int, char *, int);
    extern int mvwgetstr(WINDOW *, int, int, char *);
    extern int mvwhline(WINDOW *, int, int, chtype, int);
    extern int mvwin(WINDOW *, int, int);
    extern chtype mvwinch(WINDOW *, int, int);
    extern int mvwinchnstr(WINDOW *, int, int, chtype *, int);
    extern int mvwinchstr(WINDOW *, int, int, chtype *);
    extern int mvwinnstr(WINDOW *, int, int, char *, int);
    extern int mvwinsch(WINDOW *, int, int, chtype);
    extern int mvwinsnstr(WINDOW *, int, int, const char *, int);
    extern int mvwinsstr(WINDOW *, int, int, const char *);
    extern int mvwinstr(WINDOW *, int, int, char *);
    extern int mvwprintw(WINDOW *, int, int, const char *, ...);
    extern int mvwscanw(WINDOW *, int, int, const char *, ...);
    extern int mvwvline(WINDOW *, int, int, chtype, int);
    extern int napms(int);
    extern WINDOW *newpad(int, int);
    extern SCREEN *newterm(const char *, FILE *, FILE *);
    extern WINDOW *newwin(int, int, int, int);
    extern int nl();
    extern int nocbreak();
    extern int nodelay(WINDOW *, bool);
    extern int noecho();
    extern int nonl();
    extern void noqiflush();
    extern int noraw();
    extern int notimeout(WINDOW *, bool);
    extern int overlay(const WINDOW *, WINDOW *);
    extern int overwrite(const WINDOW *, WINDOW *);
    extern int pair_content(short, short *, short *);
    extern int PAIR_NUMBER(int);
    extern int pechochar(WINDOW *, const chtype);
    extern int pnoutrefresh(WINDOW *, int, int, int, int, int, int);
    extern int prefresh(WINDOW *, int, int, int, int, int, int);
    extern int printw(const char *, ...);
    extern int putwin(WINDOW *, FILE *);
    extern void qiflush();
    extern int raw();
    extern int redrawwin(WINDOW *);
    extern int refresh();
    extern int resetty();
    extern int reset_prog_mode();
    extern int reset_shell_mode();
    extern int ripoffline(int, int (*)(WINDOW *, int));
    extern int savetty();
    extern int scanw(const char *, ...);
    extern int scr_dump(const char *);
    extern int scr_init(const char *);
    extern int scrl(int);
    extern int scroll(WINDOW *);
    extern int scrollok(WINDOW *, bool);
    extern int scr_restore(const char *);
    extern int scr_set(const char *);
    extern int setscrreg(int, int);
    extern SCREEN *set_term(SCREEN *);
    extern int slk_attroff(const chtype);
    extern int slk_attr_off(const attr_t, void *);
    extern int slk_attron(const chtype);
    extern int slk_attr_on(attr_t, void *);
    extern int slk_attrset(const chtype);
    extern attr_t slk_attr();
    extern int slk_attr_set(const attr_t, short, void *);
    extern int slk_clear();
    extern int slk_color(short);
    extern int slk_init(int);
    extern char *slk_label(int);
    extern int slk_noutrefresh();
    extern int slk_refresh();
    extern int slk_restore();
    extern int slk_set(int, const char *, int);
    extern int slk_touch();
    extern int standout();
    extern int standend();
    extern int start_color();
    extern WINDOW *subpad(WINDOW *, int, int, int, int);
    extern WINDOW *subwin(WINDOW *, int, int, int, int);
    extern int syncok(WINDOW *, bool);
    extern chtype termattrs();
    extern char *termname();
    extern void timeout(int);
    extern int touchline(WINDOW *, int, int);
    extern int touchwin(WINDOW *);
    extern int typeahead(int);
    extern int ungetch(int);
    extern int untouchwin(WINDOW *);
    extern void use_env(bool);
    extern int vidattr(chtype);
    extern int vidputs(chtype, NCURSES_OUTC);
    extern int vline(chtype, int);
    extern int vwprintw(WINDOW *, const char *, va_list);
    extern int vw_printw(WINDOW *, const char *, va_list);
    extern int vwscanw(WINDOW *, const char *, va_list);
    extern int vw_scanw(WINDOW *, const char *, va_list);
    extern int waddch(WINDOW *, const chtype);
    extern int waddchnstr(WINDOW *, const chtype *, int);
    extern int waddchstr(WINDOW *, const chtype *);
    extern int waddnstr(WINDOW *, const char *, int);
    extern int waddstr(WINDOW *, const char *);
    extern int wattron(WINDOW *, int);
    extern int wattroff(WINDOW *, int);
    extern int wattrset(WINDOW *, int);
    extern int wattr_get(WINDOW *, attr_t *, short *, void *);
    extern int wattr_on(WINDOW *, attr_t, void *);
    extern int wattr_off(WINDOW *, attr_t, void *);
    extern int wattr_set(WINDOW *, attr_t, short, void *);
    extern int wbkgd(WINDOW *, chtype);
    extern void wbkgdset(WINDOW *, chtype);
    extern int wborder(WINDOW *, chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype);
    extern int wchgat(WINDOW *, int, attr_t, short, const void *);
    extern int wclear(WINDOW *);
    extern int wclrtobot(WINDOW *);
    extern int wclrtoeol(WINDOW *);
    extern int wcolor_set(WINDOW *, short, void *);
    extern void wcursyncup(WINDOW *);
    extern int wdelch(WINDOW *);
    extern int wdeleteln(WINDOW *);
    extern int wechochar(WINDOW *, const chtype);
    extern int werase(WINDOW *);
    extern int wgetch(WINDOW *);
    extern int wgetnstr(WINDOW *, char *, int);
    extern int wgetstr(WINDOW *, char *);
    extern int whline(WINDOW *, chtype, int);
    extern chtype winch(WINDOW *);
    extern int winchnstr(WINDOW *, chtype *, int);
    extern int winchstr(WINDOW *, chtype *);
    extern int winnstr(WINDOW *, char *, int);
    extern int winsch(WINDOW *, chtype);
    extern int winsdelln(WINDOW *, int);
    extern int winsertln(WINDOW *);
    extern int winsnstr(WINDOW *, const char *, int);
    extern int winsstr(WINDOW *, const char *);
    extern int winstr(WINDOW *, char *);
    extern int wmove(WINDOW *, int, int);
    extern int wnoutrefresh(WINDOW *);
    extern int wprintw(WINDOW *, const char *, ...);
    extern int wredrawln(WINDOW *, int, int);
    extern int wrefresh(WINDOW *);
    extern int wscanw(WINDOW *, const char *, ...);
    extern int wscrl(WINDOW *, int);
    extern int wsetscrreg(WINDOW *, int, int);
    extern int wstandout(WINDOW *);
    extern int wstandend(WINDOW *);
    extern void wsyncdown(WINDOW *);
    extern void wsyncup(WINDOW *);
    extern void wtimeout(WINDOW *, int);
    extern int wtouchln(WINDOW *, int, int, int);
    extern int wvline(WINDOW *, chtype, int);
    extern int tigetflag(const char *);
    extern int tigetnum(const char *);
    extern char *tigetstr(const char *);
    extern int putp(const char *);
    extern char *tparm(const char *, ...);
    extern char *tiparm(const char *, ...);
    extern int getattrs(const WINDOW *);
    extern int getcurx(const WINDOW *);
    extern int getcury(const WINDOW *);
    extern int getbegx(const WINDOW *);
    extern int getbegy(const WINDOW *);
    extern int getmaxx(const WINDOW *);
    extern int getmaxy(const WINDOW *);
    extern int getparx(const WINDOW *);
    extern int getpary(const WINDOW *);
    typedef int (*NCURSES_WINDOW_CB)(WINDOW *, void *);
    typedef int (*NCURSES_SCREEN_CB)(SCREEN *, void *);
    extern bool is_term_resized(int, int);
    extern char *keybound(int, int);
    extern const char *curses_version();
    extern int assume_default_colors(int, int);
    extern int define_key(const char *, int);
    extern int get_escdelay();
    extern int key_defined(const char *);
    extern int keyok(int, bool);
    extern int resize_term(int, int);
    extern int resizeterm(int, int);
    extern int set_escdelay(int);
    extern int set_tabsize(int);
    extern int use_default_colors();
    extern int use_extended_names(bool);
    extern int use_legacy_coding(int);
    extern int use_screen(SCREEN *, NCURSES_SCREEN_CB, void *);
    extern int use_window(WINDOW *, NCURSES_WINDOW_CB, void *);
    extern int wresize(WINDOW *, int, int);
    extern void nofilter();
    extern WINDOW *wgetparent(const WINDOW *);
    extern bool is_cleared(const WINDOW *);
    extern bool is_idcok(const WINDOW *);
    extern bool is_idlok(const WINDOW *);
    extern bool is_immedok(const WINDOW *);
    extern bool is_keypad(const WINDOW *);
    extern bool is_leaveok(const WINDOW *);
    extern bool is_nodelay(const WINDOW *);
    extern bool is_notimeout(const WINDOW *);
    extern bool is_pad(const WINDOW *);
    extern bool is_scrollok(const WINDOW *);
    extern bool is_subwin(const WINDOW *);
    extern bool is_syncok(const WINDOW *);
    extern int wgetscrreg(const WINDOW *, int *, int *);
    extern WINDOW *curscr;
    extern WINDOW *newscr;
    extern WINDOW *stdscr;
    extern char ttytype[];
    extern int COLORS;
    extern int COLOR_PAIRS;
    extern int COLS;
    extern int ESCDELAY;
    extern int LINES;
    extern int TABSIZE;
    struct {
        short id;
        int x;
        int y;
        int z;
        mmask_t bstate;
    };
    typedef struct MEVENT MEVENT;
    extern bool has_mouse();
    extern int getmouse(MEVENT *);
    extern int ungetmouse(MEVENT *);
    extern mmask_t mousemask(mmask_t, mmask_t *);
    extern bool wenclose(const WINDOW *, int, int);
    extern int mouseinterval(int);
    extern bool wmouse_trafo(const WINDOW *, int *, int *, bool);
    extern bool mouse_trafo(int *, int *, bool);
    extern int mcprint(char *, int);
    extern int has_key(int);
    extern void _tracef(const char *, ...);
    extern void _tracedump(const char *, WINDOW *);
    extern char *_traceattr(attr_t);
    extern char *_traceattr2(int, chtype);
    extern char *_nc_tracebits();
    extern char *_tracechar(int);
    extern char *_tracechtype(chtype);
    extern char *_tracechtype2(int, chtype);
    extern char *_tracecchar_t(const cchar_t *);
    extern char *_tracecchar_t2(int, const cchar_t *);
    extern char *_tracemouse(const MEVENT *);
    extern void trace(const unsigned int);
    extern "C" {
        const char *unctrl(chtype);
    }
}
extern "C" {
    extern "C" {
        typedef unsigned char cc_t;
        typedef unsigned int speed_t;
        typedef unsigned int tcflag_t;
        struct termios {
            struct termios;
            tcflag_t c_iflag;
            tcflag_t c_oflag;
            tcflag_t c_cflag;
            tcflag_t c_lflag;
            cc_t c_line;
            cc_t c_cc[32];
            speed_t c_ispeed;
            speed_t c_ospeed;
        };
        extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
        extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
        extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
        extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
        extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
        extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
        extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
        extern void cfmakeraw(struct termios *__termios_p) throw();
        extern int tcsendbreak(int __fd, int __duration) throw();
        extern int tcdrain(int __fd);
        extern int tcflush(int __fd, int __queue_selector) throw();
        extern int tcflow(int __fd, int __action) throw();
        extern __pid_t tcgetsid(int __fd) throw();
    }
    struct termtype {
        struct termtype;
        char *term_names;
        char *str_table;
        char *Booleans;
        short *Numbers;
        char **Strings;
        char *ext_str_table;
        char **ext_Names;
        unsigned short num_Booleans;
        unsigned short num_Numbers;
        unsigned short num_Strings;
        unsigned short ext_Booleans;
        unsigned short ext_Numbers;
        unsigned short ext_Strings;
    };
    typedef struct termtype TERMTYPE;
    struct term {
        struct term;
        TERMTYPE type;
        short Filedes;
        struct termios Ottyb;
        struct termios Nttyb;
        int _baudrate;
        char *_termname;
    };
    typedef struct term TERMINAL;
    extern TERMINAL *cur_term;
    extern const char *const boolnames[];
    extern const char *const boolcodes[];
    extern const char *const boolfnames[];
    extern const char *const numnames[];
    extern const char *const numcodes[];
    extern const char *const numfnames[];
    extern const char *const strnames[];
    extern const char *const strcodes[];
    extern const char *const strfnames[];
    extern int _nc_set_tty_mode(struct termios *buf);
    extern int _nc_get_tty_mode(struct termios *buf);
    extern int _nc_read_entry(const char *const, char *const, TERMTYPE *const);
    extern int _nc_read_file_entry(const char *const, TERMTYPE *);
    extern int _nc_read_termtype(TERMTYPE *, char *, int);
    extern char *_nc_first_name(const char *const);
    extern int _nc_name_match(const char *const, const char *const, const char *const);
    extern const TERMTYPE *_nc_fallback(const char *);
    extern TERMINAL *set_curterm(TERMINAL *);
    extern int del_curterm(TERMINAL *);
    extern int restartterm(const char *, int, int *);
    extern int setupterm(const char *, int, int *);
    extern char *tgetstr(const char *, char **);
    extern char *tgoto(const char *, int, int);
    extern int tgetent(char *, const char *);
    extern int tgetflag(const char *);
    extern int tgetnum(const char *);
    extern int tputs(const char *, int, int (*)(int));
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0x9e9c838 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e9c740 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0x9e9c848 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e9c798 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0x9e9c858 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e9c7e8 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0x9ead718 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0x9ead700 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0x9ead780 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0x9ead768 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0x9ead958 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0x9eaf4e8 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eada10 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0x9eaf778 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eaf560 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0x9eaf888 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eaf7f0 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0x9eaf9d8 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eaf900 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0x9eafae8 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eafa50 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0x9eafcf8 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eafb60 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0x9eaff08 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eafd70 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0x9eb30f8 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eb2fd0 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0x9eb3108 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9eb30a8 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0x9ec75d8 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ec7540 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0x9ec9bd8 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ec9700 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef int tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0x9ed0698 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0x9ed0688 <line:18:5, col:18>
    (ConditionalOperator 0x9ed0668 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9ed0620 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0x9ed05f0 <col:12> 'T' lvalue ParmVar 0x9ed0450 'a' 'T')
        (DeclRefExpr 0x9ed0608 <col:14> 'T' lvalue ParmVar 0x9ed0490 'b' 'T'))
      (DeclRefExpr 0x9ed0638 <col:16> 'T' lvalue ParmVar 0x9ed0450 'a' 'T')
      (DeclRefExpr 0x9ed0650 <col:18> 'T' lvalue ParmVar 0x9ed0490 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0x9ed0908 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0x9ed08f8 <line:27:5, col:18>
    (ConditionalOperator 0x9ed08d8 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9ed0890 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0x9ed0860 <col:12> 'T' lvalue ParmVar 0x9ed0710 'a' 'T')
        (DeclRefExpr 0x9ed0878 <col:14> 'T' lvalue ParmVar 0x9ed0750 'b' 'T'))
      (DeclRefExpr 0x9ed08a8 <col:16> 'T' lvalue ParmVar 0x9ed0710 'a' 'T')
      (DeclRefExpr 0x9ed08c0 <col:18> 'T' lvalue ParmVar 0x9ed0750 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
char **__environ = (ImplicitCastExpr 0x9ed0b40 <../codeBase/fish-shell-master/fallback.cpp:52:20> 'char **' <NullToPointer>
  (IntegerLiteral 0x9ed0b28 <col:20> 'int' 0))
;
static wchar_t *wcsdup_fallback(const wchar_t *in) (CompoundStmt 0x9ed1248 <../codeBase/fish-shell-master/fallback.cpp:808:1, line:818:1>
  (DeclStmt 0x9ed0d48 <line:809:5, col:26>
    0x9ed0c30 "size_t len =
      (CallExpr 0x9ed0d18 <col:16, col:25> 'size_t':'unsigned int'
        (ImplicitCastExpr 0x9ed0d08 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed0cb4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9ddb7d0 'wcslen' 'size_t (const wchar_t *) throw()'))
        (ImplicitCastExpr 0x9ed0d38 <col:23> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ed0c9c <col:23> 'const wchar_t *' lvalue ParmVar 0x9ed0b60 'in' 'const wchar_t *')))")
  (DeclStmt 0x9ed0f40 <line:810:5, col:62>
    0x9ed0d70 "wchar_t *out =
      (CStyleCastExpr 0x9ed0f28 <col:20, col:61> 'wchar_t *' <BitCast>
        (CallExpr 0x9ed0ef8 <col:31, col:61> 'void *'
          (ImplicitCastExpr 0x9ed0ee8 <col:31> 'void *(*)(size_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ed0e98 <col:31> 'void *(size_t) throw()' lvalue Function 0x9d48d70 'malloc' 'void *(size_t) throw()'))
          (BinaryOperator 0x9ed0e80 <col:38, col:60> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ed0de8 <col:38, col:52> 'unsigned int' sizeof 'wchar_t')
            (ParenExpr 0x9ed0e68 <col:54, col:60> 'unsigned int'
              (BinaryOperator 0x9ed0e50 <col:55, col:59> 'unsigned int' '+'
                (ImplicitCastExpr 0x9ed0e30 <col:55> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9ed0e00 <col:55> 'size_t':'unsigned int' lvalue Var 0x9ed0c30 'len' 'size_t':'unsigned int'))
                (ImplicitCastExpr 0x9ed0e40 <col:59> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9ed0e18 <col:59> 'int' 1)))))))")
  (IfStmt 0x9ed1008 <line:811:5, line:814:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed0fa0 <line:811:9, col:16> '_Bool' '=='
      (ImplicitCastExpr 0x9ed0f80 <col:9> 'wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed0f50 <col:9> 'wchar_t *' lvalue Var 0x9ed0d70 'out' 'wchar_t *'))
      (ImplicitCastExpr 0x9ed0f90 <col:16> 'wchar_t *' <NullToPointer>
        (IntegerLiteral 0x9ed0f68 <col:16> 'int' 0)))
    (CompoundStmt 0x9ed0ff0 <line:812:5, line:814:5>
      (ReturnStmt 0x9ed0fe0 <line:813:9, col:16>
        (ImplicitCastExpr 0x9ed0fd0 <col:16> 'wchar_t *' <NullToPointer>
          (IntegerLiteral 0x9ed0fb8 <col:16> 'int' 0))))
    <<<NULL>>>)
  (CallExpr 0x9ed11a8 <line:816:5, col:44> 'void *'
    (ImplicitCastExpr 0x9ed1198 <col:5> 'void *(*)(void *restrict, const void *restrict, size_t) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ed1148 <col:5> 'void *(void *restrict, const void *restrict, size_t) throw()' lvalue Function 0x9df0140 'memcpy' 'void *(void *restrict, const void *restrict, size_t) throw()'))
    (ImplicitCastExpr 0x9ed11e0 <col:12> 'void *' <BitCast>
      (ImplicitCastExpr 0x9ed11d0 <col:12> 'wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed105c <col:12> 'wchar_t *' lvalue Var 0x9ed0d70 'out' 'wchar_t *')))
    (ImplicitCastExpr 0x9ed1200 <col:17> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9ed11f0 <col:17> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed1074 <col:17> 'const wchar_t *' lvalue ParmVar 0x9ed0b60 'in' 'const wchar_t *')))
    (BinaryOperator 0x9ed1130 <col:21, col:43> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x9ed1098 <col:21, col:35> 'unsigned int' sizeof 'wchar_t')
      (ParenExpr 0x9ed1118 <col:37, col:43> 'unsigned int'
        (BinaryOperator 0x9ed1100 <col:38, col:42> 'unsigned int' '+'
          (ImplicitCastExpr 0x9ed10e0 <col:38> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ed10b0 <col:38> 'size_t':'unsigned int' lvalue Var 0x9ed0c30 'len' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9ed10f0 <col:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ed10c8 <col:42> 'int' 1))))))
  (ReturnStmt 0x9ed1238 <line:817:5, col:12>
    (ImplicitCastExpr 0x9ed1228 <col:12> 'wchar_t *' <LValueToRValue>
      (DeclRefExpr 0x9ed120c <col:12> 'wchar_t *' lvalue Var 0x9ed0d70 'out' 'wchar_t *'))))


static int wcscasecmp_fallback(const wchar_t *a, const wchar_t *b) (CompoundStmt 0x9ed2140 <../codeBase/fish-shell-master/fallback.cpp:821:1, line:835:1>
  (IfStmt 0x9ed1c88 <line:822:5, line:829:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed1410 <line:822:9, col:15> '_Bool' '=='
      (ImplicitCastExpr 0x9ed13f0 <col:9, col:10> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0x9ed13c0 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0x9ed13b0 <col:10> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0x9ed1398 <col:10> 'const wchar_t *' lvalue ParmVar 0x9ed1280 'a' 'const wchar_t *'))))
      (ImplicitCastExpr 0x9ed1400 <col:15> 'wchar_t' <IntegralCast>
        (IntegerLiteral 0x9ed13d8 <col:15> 'int' 0)))
    (CompoundStmt 0x9ed1548 <line:823:5, line:825:5>
      (ReturnStmt 0x9ed1538 <line:824:9, col:27>
        (ConditionalOperator 0x9ed1518 <col:16, col:27> 'int'
          (ParenExpr 0x9ed14b8 <col:16, col:22> '_Bool'
            (BinaryOperator 0x9ed14a0 <col:17, col:21> '_Bool' '=='
              (ImplicitCastExpr 0x9ed1480 <col:17, col:18> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0x9ed1450 <col:17, col:18> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0x9ed1440 <col:18> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9ed1428 <col:18> 'const wchar_t *' lvalue ParmVar 0x9ed12d0 'b' 'const wchar_t *'))))
              (ImplicitCastExpr 0x9ed1490 <col:21> 'wchar_t' <IntegralCast>
                (IntegerLiteral 0x9ed1468 <col:21> 'int' 0))))
          (IntegerLiteral 0x9ed14d0 <col:24> 'int' 0)
          (UnaryOperator 0x9ed1500 <col:26, col:27> 'int' prefix '-'
            (IntegerLiteral 0x9ed14e8 <col:27> 'int' 1)))))
    (IfStmt 0x9ed1c68 <line:826:10, line:829:5>
      <<<NULL>>>
      (BinaryOperator 0x9ed1c10 <line:826:14, col:20> '_Bool' '=='
        (ImplicitCastExpr 0x9ed1bf0 <col:14, col:15> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0x9ed1588 <col:14, col:15> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0x9ed1578 <col:15> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0x9ed155c <col:15> 'const wchar_t *' lvalue ParmVar 0x9ed12d0 'b' 'const wchar_t *'))))
        (ImplicitCastExpr 0x9ed1c00 <col:20> 'wchar_t' <IntegralCast>
          (IntegerLiteral 0x9ed1bd8 <col:20> 'int' 0)))
      (CompoundStmt 0x9ed1c50 <line:827:5, line:829:5>
        (ReturnStmt 0x9ed1c40 <line:828:9, col:16>
          (IntegerLiteral 0x9ed1c28 <col:16> 'int' 1)))
      <<<NULL>>>))
  (DeclStmt 0x9ed1f20 <line:830:5, col:41>
    0x9ed1cc0 "int diff =
      (ImplicitCastExpr 0x9ed1f10 <col:16, col:40> 'int' <IntegralCast>
        (BinaryOperator 0x9ed1ef8 <col:16, col:40> 'unsigned int' '-'
          (CallExpr 0x9ed1dd8 <col:16, col:27> 'wint_t':'unsigned int'
            (ImplicitCastExpr 0x9ed1dc8 <col:16> 'wint_t (*)(wint_t) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed1d6c <col:16> 'wint_t (wint_t) throw()' lvalue Function 0x9dee580 'towlower' 'wint_t (wint_t) throw()'))
            (ImplicitCastExpr 0x9ed1e08 <col:25, col:26> 'wint_t':'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ed1df8 <col:25, col:26> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0x9ed1d58 <col:25, col:26> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0x9ed1d48 <col:26> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9ed1d2c <col:26> 'const wchar_t *' lvalue ParmVar 0x9ed1280 'a' 'const wchar_t *'))))))
          (CallExpr 0x9ed1eb8 <col:29, col:40> 'wint_t':'unsigned int'
            (ImplicitCastExpr 0x9ed1ea8 <col:29> 'wint_t (*)(wint_t) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed1e8c <col:29> 'wint_t (wint_t) throw()' lvalue Function 0x9dee580 'towlower' 'wint_t (wint_t) throw()'))
            (ImplicitCastExpr 0x9ed1ee8 <col:38, col:39> 'wint_t':'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ed1ed8 <col:38, col:39> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0x9ed1e78 <col:38, col:39> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0x9ed1e68 <col:39> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9ed1e4c <col:39> 'const wchar_t *' lvalue ParmVar 0x9ed12d0 'b' 'const wchar_t *'))))))))")
  (IfStmt 0x9ed2120 <line:831:5, line:834:43>
    <<<NULL>>>
    (BinaryOperator 0x9ed1f70 <line:831:9, col:17> '_Bool' '!='
      (ImplicitCastExpr 0x9ed1f60 <col:9> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ed1f30 <col:9> 'int' lvalue Var 0x9ed1cc0 'diff' 'int'))
      (IntegerLiteral 0x9ed1f48 <col:17> 'int' 0))
    (ReturnStmt 0x9ed1fb0 <line:832:9, col:16>
      (ImplicitCastExpr 0x9ed1fa0 <col:16> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ed1f88 <col:16> 'int' lvalue Var 0x9ed1cc0 'diff' 'int')))
    (ReturnStmt 0x9ed2110 <line:834:9, col:43>
      (CallExpr 0x9ed20e8 <col:16, col:43> 'int'
        (ImplicitCastExpr 0x9ed20d8 <col:16> 'int (*)(const wchar_t *, const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed20a8 <col:16> 'int (const wchar_t *, const wchar_t *)' lvalue Function 0x9ed1330 'wcscasecmp_fallback' 'int (const wchar_t *, const wchar_t *)'))
        (BinaryOperator 0x9ed2038 <col:36, col:38> 'const wchar_t *' '+'
          (ImplicitCastExpr 0x9ed2028 <col:36> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0x9ed1ff4 <col:36> 'const wchar_t *' lvalue ParmVar 0x9ed1280 'a' 'const wchar_t *'))
          (IntegerLiteral 0x9ed2010 <col:38> 'int' 1))
        (BinaryOperator 0x9ed2090 <col:40, col:42> 'const wchar_t *' '+'
          (ImplicitCastExpr 0x9ed2080 <col:40> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0x9ed2050 <col:40> 'const wchar_t *' lvalue ParmVar 0x9ed12d0 'b' 'const wchar_t *'))
          (IntegerLiteral 0x9ed2068 <col:42> 'int' 1))))))


static int wcsncasecmp_fallback(const wchar_t *a, const wchar_t *b, size_t count) (CompoundStmt 0x9ed2b70 <../codeBase/fish-shell-master/fallback.cpp:838:1, line:855:1>
  (IfStmt 0x9ed2390 <line:839:5, line:840:16>
    <<<NULL>>>
    (BinaryOperator 0x9ed2350 <line:839:9, col:18> '_Bool' '=='
      (ImplicitCastExpr 0x9ed2330 <col:9> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed22fc <col:9> 'size_t':'unsigned int' lvalue ParmVar 0x9ed2200 'count' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ed2340 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ed2318 <col:18> 'int' 0)))
    (ReturnStmt 0x9ed2380 <line:840:9, col:16>
      (IntegerLiteral 0x9ed2368 <col:16> 'int' 0))
    <<<NULL>>>)
  (IfStmt 0x9ed2668 <line:842:5, line:849:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed2428 <line:842:9, col:15> '_Bool' '=='
      (ImplicitCastExpr 0x9ed2408 <col:9, col:10> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0x9ed23d8 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0x9ed23c8 <col:10> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0x9ed23ac <col:10> 'const wchar_t *' lvalue ParmVar 0x9ed2170 'a' 'const wchar_t *'))))
      (ImplicitCastExpr 0x9ed2418 <col:15> 'wchar_t' <IntegralCast>
        (IntegerLiteral 0x9ed23f0 <col:15> 'int' 0)))
    (CompoundStmt 0x9ed2560 <line:843:5, line:845:5>
      (ReturnStmt 0x9ed2550 <line:844:9, col:27>
        (ConditionalOperator 0x9ed2530 <col:16, col:27> 'int'
          (ParenExpr 0x9ed24d0 <col:16, col:22> '_Bool'
            (BinaryOperator 0x9ed24b8 <col:17, col:21> '_Bool' '=='
              (ImplicitCastExpr 0x9ed2498 <col:17, col:18> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0x9ed2468 <col:17, col:18> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0x9ed2458 <col:18> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9ed2440 <col:18> 'const wchar_t *' lvalue ParmVar 0x9ed21c0 'b' 'const wchar_t *'))))
              (ImplicitCastExpr 0x9ed24a8 <col:21> 'wchar_t' <IntegralCast>
                (IntegerLiteral 0x9ed2480 <col:21> 'int' 0))))
          (IntegerLiteral 0x9ed24e8 <col:24> 'int' 0)
          (UnaryOperator 0x9ed2518 <col:26, col:27> 'int' prefix '-'
            (IntegerLiteral 0x9ed2500 <col:27> 'int' 1)))))
    (IfStmt 0x9ed2648 <line:846:10, line:849:5>
      <<<NULL>>>
      (BinaryOperator 0x9ed25f0 <line:846:14, col:20> '_Bool' '=='
        (ImplicitCastExpr 0x9ed25d0 <col:14, col:15> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0x9ed25a0 <col:14, col:15> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0x9ed2590 <col:15> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0x9ed2574 <col:15> 'const wchar_t *' lvalue ParmVar 0x9ed21c0 'b' 'const wchar_t *'))))
        (ImplicitCastExpr 0x9ed25e0 <col:20> 'wchar_t' <IntegralCast>
          (IntegerLiteral 0x9ed25b8 <col:20> 'int' 0)))
      (CompoundStmt 0x9ed2630 <line:847:5, line:849:5>
        (ReturnStmt 0x9ed2620 <line:848:9, col:16>
          (IntegerLiteral 0x9ed2608 <col:16> 'int' 1)))
      <<<NULL>>>))
  (DeclStmt 0x9ed28c0 <line:850:5, col:41>
    0x9ed26a0 "int diff =
      (ImplicitCastExpr 0x9ed28b0 <col:16, col:40> 'int' <IntegralCast>
        (BinaryOperator 0x9ed2898 <col:16, col:40> 'unsigned int' '-'
          (CallExpr 0x9ed2778 <col:16, col:27> 'wint_t':'unsigned int'
            (ImplicitCastExpr 0x9ed2768 <col:16> 'wint_t (*)(wint_t) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed274c <col:16> 'wint_t (wint_t) throw()' lvalue Function 0x9dee580 'towlower' 'wint_t (wint_t) throw()'))
            (ImplicitCastExpr 0x9ed27a8 <col:25, col:26> 'wint_t':'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ed2798 <col:25, col:26> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0x9ed2738 <col:25, col:26> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0x9ed2728 <col:26> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9ed270c <col:26> 'const wchar_t *' lvalue ParmVar 0x9ed2170 'a' 'const wchar_t *'))))))
          (CallExpr 0x9ed2858 <col:29, col:40> 'wint_t':'unsigned int'
            (ImplicitCastExpr 0x9ed2848 <col:29> 'wint_t (*)(wint_t) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed282c <col:29> 'wint_t (wint_t) throw()' lvalue Function 0x9dee580 'towlower' 'wint_t (wint_t) throw()'))
            (ImplicitCastExpr 0x9ed2888 <col:38, col:39> 'wint_t':'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ed2878 <col:38, col:39> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0x9ed2818 <col:38, col:39> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0x9ed2808 <col:39> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0x9ed27ec <col:39> 'const wchar_t *' lvalue ParmVar 0x9ed21c0 'b' 'const wchar_t *'))))))))")
  (IfStmt 0x9ed2b50 <line:851:5, line:854:53>
    <<<NULL>>>
    (BinaryOperator 0x9ed2910 <line:851:9, col:17> '_Bool' '!='
      (ImplicitCastExpr 0x9ed2900 <col:9> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ed28d0 <col:9> 'int' lvalue Var 0x9ed26a0 'diff' 'int'))
      (IntegerLiteral 0x9ed28e8 <col:17> 'int' 0))
    (ReturnStmt 0x9ed2950 <line:852:9, col:16>
      (ImplicitCastExpr 0x9ed2940 <col:16> 'int' <LValueToRValue>
        (DeclRefExpr 0x9ed2928 <col:16> 'int' lvalue Var 0x9ed26a0 'diff' 'int')))
    (ReturnStmt 0x9ed2b40 <line:854:9, col:53>
      (CallExpr 0x9ed2b18 <col:16, col:53> 'int'
        (ImplicitCastExpr 0x9ed2b08 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed2ab0 <col:16> 'int (const wchar_t *, const wchar_t *, size_t)' lvalue Function 0x9ed2290 'wcsncasecmp_fallback' 'int (const wchar_t *, const wchar_t *, size_t)'))
        (BinaryOperator 0x9ed29d8 <col:37, col:39> 'const wchar_t *' '+'
          (ImplicitCastExpr 0x9ed29c8 <col:37> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0x9ed2994 <col:37> 'const wchar_t *' lvalue ParmVar 0x9ed2170 'a' 'const wchar_t *'))
          (IntegerLiteral 0x9ed29b0 <col:39> 'int' 1))
        (BinaryOperator 0x9ed2a30 <col:41, col:43> 'const wchar_t *' '+'
          (ImplicitCastExpr 0x9ed2a20 <col:41> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0x9ed29f0 <col:41> 'const wchar_t *' lvalue ParmVar 0x9ed21c0 'b' 'const wchar_t *'))
          (IntegerLiteral 0x9ed2a08 <col:43> 'int' 1))
        (BinaryOperator 0x9ed2a98 <col:46, col:52> 'unsigned int' '-'
          (ImplicitCastExpr 0x9ed2a78 <col:46> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ed2a48 <col:46> 'size_t':'unsigned int' lvalue ParmVar 0x9ed2200 'count' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9ed2a88 <col:52> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ed2a60 <col:52> 'int' 1)))))))


wchar_t *wcsndup(const wchar_t *in, size_t c) (CompoundStmt 0x9ed3548 <../codeBase/fish-shell-master/fallback.cpp:930:1, line:938:1>
  (DeclStmt 0x9ed32a8 <line:931:5, col:60>
    0x9ed3110 "wchar_t *res =
      (CStyleCastExpr 0x9ed3290 <col:20, col:59> 'wchar_t *' <BitCast>
        (CallExpr 0x9ed3260 <col:31, col:59> 'void *'
          (ImplicitCastExpr 0x9ed3250 <col:31> 'void *(*)(size_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x9ed3238 <col:31> 'void *(size_t) throw()' lvalue Function 0x9d48d70 'malloc' 'void *(size_t) throw()'))
          (BinaryOperator 0x9ed3220 <col:38, col:58> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ed3188 <col:38, col:52> 'unsigned int' sizeof 'wchar_t')
            (ParenExpr 0x9ed3208 <col:54, col:58> 'unsigned int'
              (BinaryOperator 0x9ed31f0 <col:55, col:57> 'unsigned int' '+'
                (ImplicitCastExpr 0x9ed31d0 <col:55> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x9ed31a0 <col:55> 'size_t':'unsigned int' lvalue ParmVar 0x9ed3030 'c' 'size_t':'unsigned int'))
                (ImplicitCastExpr 0x9ed31e0 <col:57> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9ed31b8 <col:57> 'int' 1)))))))")
  (IfStmt 0x9ed3370 <line:932:5, line:935:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed3308 <line:932:9, col:16> '_Bool' '=='
      (ImplicitCastExpr 0x9ed32e8 <col:9> 'wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed32b8 <col:9> 'wchar_t *' lvalue Var 0x9ed3110 'res' 'wchar_t *'))
      (ImplicitCastExpr 0x9ed32f8 <col:16> 'wchar_t *' <NullToPointer>
        (IntegerLiteral 0x9ed32d0 <col:16> 'int' 0)))
    (CompoundStmt 0x9ed3358 <line:933:5, line:935:5>
      (ReturnStmt 0x9ed3348 <line:934:9, col:16>
        (ImplicitCastExpr 0x9ed3338 <col:16> 'wchar_t *' <NullToPointer>
          (IntegerLiteral 0x9ed3320 <col:16> 'int' 0))))
    <<<NULL>>>)
  (CallExpr 0x9ed34c8 <line:936:5, col:25> 'size_t':'unsigned int'
    (ImplicitCastExpr 0x9ed34b8 <col:5> 'size_t (*)(wchar_t *, const wchar_t *, size_t)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ed3460 <col:5> 'size_t (wchar_t *, const wchar_t *, size_t)' lvalue Function 0x9ecfe70 'wcslcpy' 'size_t (wchar_t *, const wchar_t *, size_t)'))
    (ImplicitCastExpr 0x9ed34f0 <col:13> 'wchar_t *' <LValueToRValue>
      (DeclRefExpr 0x9ed33c4 <col:13> 'wchar_t *' lvalue Var 0x9ed3110 'res' 'wchar_t *'))
    (ImplicitCastExpr 0x9ed3500 <col:18> 'const wchar_t *' <LValueToRValue>
      (DeclRefExpr 0x9ed33dc <col:18> 'const wchar_t *' lvalue ParmVar 0x9ed2ff0 'in' 'const wchar_t *'))
    (BinaryOperator 0x9ed3448 <col:22, col:24> 'unsigned int' '+'
      (ImplicitCastExpr 0x9ed3428 <col:22> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed33f4 <col:22> 'size_t':'unsigned int' lvalue ParmVar 0x9ed3030 'c' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ed3438 <col:24> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ed3410 <col:24> 'int' 1))))
  (ReturnStmt 0x9ed3538 <line:937:5, col:12>
    (ImplicitCastExpr 0x9ed3528 <col:12> 'wchar_t *' <LValueToRValue>
      (DeclRefExpr 0x9ed350c <col:12> 'wchar_t *' lvalue Var 0x9ed3110 'res' 'wchar_t *'))))


long convert_digit(wchar_t d, int base) (CompoundStmt 0x9ed3e58 <../codeBase/fish-shell-master/fallback.cpp:942:1, line:962:1>
  (DeclStmt 0x9ed3718 <line:943:5, col:16>
    0x9ed36a0 "long res =
      (ImplicitCastExpr 0x9ed3708 <col:14, col:15> 'long' <IntegralCast>
        (UnaryOperator 0x9ed36f0 <col:14, col:15> 'int' prefix '-'
          (IntegerLiteral 0x9ed36d8 <col:15> 'int' 1)))")
  (IfStmt 0x9ed3ce0 <line:944:5, line:955:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed3808 <line:944:9, col:34> '_Bool' '&&'
      (ParenExpr 0x9ed3780 <col:9, col:19> '_Bool'
        (BinaryOperator 0x9ed3768 <col:10, col:15> '_Bool' '<='
          (ImplicitCastExpr 0x9ed3758 <col:10> 'wchar_t' <LValueToRValue>
            (DeclRefExpr 0x9ed3728 <col:10> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
          (CharacterLiteral 0x9ed3740 <col:15> 'wchar_t'57)))
      (ParenExpr 0x9ed37f0 <col:24, col:34> '_Bool'
        (BinaryOperator 0x9ed37d8 <col:25, col:30> '_Bool' '>='
          (ImplicitCastExpr 0x9ed37c8 <col:25> 'wchar_t' <LValueToRValue>
            (DeclRefExpr 0x9ed3794 <col:25> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
          (CharacterLiteral 0x9ed37b0 <col:30> 'wchar_t'48))))
    (CompoundStmt 0x9ed38b8 <line:945:5, line:947:5>
      (BinaryOperator 0x9ed38a0 <line:946:9, col:19> 'long' lvalue '='
        (DeclRefExpr 0x9ed3820 <col:9> 'long' lvalue Var 0x9ed36a0 'res' 'long')
        (ImplicitCastExpr 0x9ed3890 <col:15, col:19> 'long' <IntegralCast>
          (BinaryOperator 0x9ed3878 <col:15, col:19> 'wchar_t' '-'
            (ImplicitCastExpr 0x9ed3868 <col:15> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0x9ed3838 <col:15> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
            (CharacterLiteral 0x9ed3850 <col:19> 'wchar_t'48)))))
    (IfStmt 0x9ed3cc0 <line:948:10, line:955:5>
      <<<NULL>>>
      (BinaryOperator 0x9ed39b0 <line:948:14, col:39> '_Bool' '&&'
        (ParenExpr 0x9ed3928 <col:14, col:24> '_Bool'
          (BinaryOperator 0x9ed3910 <col:15, col:20> '_Bool' '<='
            (ImplicitCastExpr 0x9ed3900 <col:15> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0x9ed38cc <col:15> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
            (CharacterLiteral 0x9ed38e8 <col:20> 'wchar_t'122)))
        (ParenExpr 0x9ed3998 <col:29, col:39> '_Bool'
          (BinaryOperator 0x9ed3980 <col:30, col:35> '_Bool' '>='
            (ImplicitCastExpr 0x9ed3970 <col:30> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0x9ed393c <col:30> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
            (CharacterLiteral 0x9ed3958 <col:35> 'wchar_t'97))))
      (CompoundStmt 0x9ed3aa0 <line:949:5, line:951:5>
        (BinaryOperator 0x9ed3a88 <line:950:9, col:24> 'long' lvalue '='
          (DeclRefExpr 0x9ed39c8 <col:9> 'long' lvalue Var 0x9ed36a0 'res' 'long')
          (ImplicitCastExpr 0x9ed3a78 <col:15, col:24> 'long' <IntegralCast>
            (BinaryOperator 0x9ed3a60 <col:15, col:24> 'wchar_t' '-'
              (BinaryOperator 0x9ed3a30 <col:15, col:19> 'wchar_t' '+'
                (ImplicitCastExpr 0x9ed3a10 <col:15> 'wchar_t' <LValueToRValue>
                  (DeclRefExpr 0x9ed39e0 <col:15> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
                (ImplicitCastExpr 0x9ed3a20 <col:19> 'wchar_t' <IntegralCast>
                  (IntegerLiteral 0x9ed39f8 <col:19> 'int' 10)))
              (CharacterLiteral 0x9ed3a48 <col:24> 'wchar_t'97)))))
      (IfStmt 0x9ed3ca0 <line:952:10, line:955:5>
        <<<NULL>>>
        (BinaryOperator 0x9ed3b98 <line:952:14, col:39> '_Bool' '&&'
          (ParenExpr 0x9ed3b10 <col:14, col:24> '_Bool'
            (BinaryOperator 0x9ed3af8 <col:15, col:20> '_Bool' '<='
              (ImplicitCastExpr 0x9ed3ae8 <col:15> 'wchar_t' <LValueToRValue>
                (DeclRefExpr 0x9ed3ab4 <col:15> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
              (CharacterLiteral 0x9ed3ad0 <col:20> 'wchar_t'90)))
          (ParenExpr 0x9ed3b80 <col:29, col:39> '_Bool'
            (BinaryOperator 0x9ed3b68 <col:30, col:35> '_Bool' '>='
              (ImplicitCastExpr 0x9ed3b58 <col:30> 'wchar_t' <LValueToRValue>
                (DeclRefExpr 0x9ed3b24 <col:30> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
              (CharacterLiteral 0x9ed3b40 <col:35> 'wchar_t'65))))
        (CompoundStmt 0x9ed3c88 <line:953:5, line:955:5>
          (BinaryOperator 0x9ed3c70 <line:954:9, col:24> 'long' lvalue '='
            (DeclRefExpr 0x9ed3bb0 <col:9> 'long' lvalue Var 0x9ed36a0 'res' 'long')
            (ImplicitCastExpr 0x9ed3c60 <col:15, col:24> 'long' <IntegralCast>
              (BinaryOperator 0x9ed3c48 <col:15, col:24> 'wchar_t' '-'
                (BinaryOperator 0x9ed3c18 <col:15, col:19> 'wchar_t' '+'
                  (ImplicitCastExpr 0x9ed3bf8 <col:15> 'wchar_t' <LValueToRValue>
                    (DeclRefExpr 0x9ed3bc8 <col:15> 'wchar_t' lvalue ParmVar 0x9ed3570 'd' 'wchar_t'))
                  (ImplicitCastExpr 0x9ed3c08 <col:19> 'wchar_t' <IntegralCast>
                    (IntegerLiteral 0x9ed3be0 <col:19> 'int' 10)))
                (CharacterLiteral 0x9ed3c30 <col:24> 'wchar_t'65)))))
        <<<NULL>>>)))
  (IfStmt 0x9ed3e00 <line:956:5, line:959:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed3d60 <line:956:9, col:16> '_Bool' '>='
      (ImplicitCastExpr 0x9ed3d30 <col:9> 'long' <LValueToRValue>
        (DeclRefExpr 0x9ed3cfc <col:9> 'long' lvalue Var 0x9ed36a0 'res' 'long'))
      (ImplicitCastExpr 0x9ed3d50 <col:16> 'long' <IntegralCast>
        (ImplicitCastExpr 0x9ed3d40 <col:16> 'int' <LValueToRValue>
          (DeclRefExpr 0x9ed3d14 <col:16> 'int' lvalue ParmVar 0x9ed35c0 'base' 'int'))))
    (CompoundStmt 0x9ed3de8 <line:957:5, line:959:5>
      (BinaryOperator 0x9ed3dd0 <line:958:9, col:16> 'long' lvalue '='
        (DeclRefExpr 0x9ed3d78 <col:9> 'long' lvalue Var 0x9ed36a0 'res' 'long')
        (ImplicitCastExpr 0x9ed3dc0 <col:15, col:16> 'long' <IntegralCast>
          (UnaryOperator 0x9ed3da8 <col:15, col:16> 'int' prefix '-'
            (IntegerLiteral 0x9ed3d90 <col:16> 'int' 1)))))
    <<<NULL>>>)
  (ReturnStmt 0x9ed3e48 <line:961:5, col:12>
    (ImplicitCastExpr 0x9ed3e38 <col:12> 'long' <LValueToRValue>
      (DeclRefExpr 0x9ed3e1c <col:12> 'long' lvalue Var 0x9ed36a0 'res' 'long'))))


size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz) (CompoundStmt 0x9ed4f08 <../codeBase/fish-shell-master/fallback.cpp:1029:1, line:1059:1>
  (DeclStmt 0x9ed4580 <line:1031:5, col:30>
    0x9ed4520 "register wchar_t *d =
      (ImplicitCastExpr 0x9ed4570 <col:27> 'wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed4554 <col:27> 'wchar_t *' lvalue ParmVar 0x9ed3e90 'dst' 'wchar_t *'))")
  (DeclStmt 0x9ed4600 <line:1032:5, col:36>
    0x9ed45a0 "register const wchar_t *s =
      (ImplicitCastExpr 0x9ed45f0 <col:33> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed45d4 <col:33> 'const wchar_t *' lvalue ParmVar 0x9ed3ee0 'src' 'const wchar_t *'))")
  (DeclStmt 0x9ed4680 <line:1033:5, col:28>
    0x9ed4620 "register size_t n =
      (ImplicitCastExpr 0x9ed4670 <col:25> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed4654 <col:25> 'size_t':'unsigned int' lvalue ParmVar 0x9ed3f20 'siz' 'size_t':'unsigned int'))")
  (DeclStmt 0x9ed46d8 <line:1034:5, col:16>
    0x9ed46a0 "size_t dlen")
  (WhileStmt 0x9ed4830 <line:1037:5, line:1038:10>
    <<<NULL>>>
    (BinaryOperator 0x9ed47e8 <line:1037:12, col:30> '_Bool' '&&'
      (BinaryOperator 0x9ed4740 <col:12, col:19> '_Bool' '!='
        (UnaryOperator 0x9ed4700 <col:12, col:13> 'size_t':'unsigned int' postfix '--'
          (DeclRefExpr 0x9ed46e8 <col:12> 'size_t':'unsigned int' lvalue Var 0x9ed4620 'n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x9ed4730 <col:19> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ed4718 <col:19> 'int' 0)))
      (BinaryOperator 0x9ed47d0 <col:24, col:30> '_Bool' '!='
        (ImplicitCastExpr 0x9ed47b0 <col:24, col:25> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0x9ed4780 <col:24, col:25> 'wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0x9ed4770 <col:25> 'wchar_t *' <LValueToRValue>
              (DeclRefExpr 0x9ed4758 <col:25> 'wchar_t *' lvalue Var 0x9ed4520 'd' 'wchar_t *'))))
        (ImplicitCastExpr 0x9ed47c0 <col:30> 'wchar_t' <IntegralCast>
          (CharacterLiteral 0x9ed4798 <col:30> 'char'0))))
    (UnaryOperator 0x9ed4818 <line:1038:9, col:10> 'wchar_t *' postfix '++'
      (DeclRefExpr 0x9ed4800 <col:9> 'wchar_t *' lvalue Var 0x9ed4520 'd' 'wchar_t *')))
  (BinaryOperator 0x9ed48d8 <line:1040:5, col:16> 'size_t':'unsigned int' lvalue '='
    (DeclRefExpr 0x9ed4844 <col:5> 'size_t':'unsigned int' lvalue Var 0x9ed46a0 'dlen' 'size_t':'unsigned int')
    (ImplicitCastExpr 0x9ed48c8 <col:12, col:16> 'size_t':'unsigned int' <IntegralCast>
      (BinaryOperator 0x9ed48b0 <col:12, col:16> 'int' '-'
        (ImplicitCastExpr 0x9ed4890 <col:12> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ed485c <col:12> 'wchar_t *' lvalue Var 0x9ed4520 'd' 'wchar_t *'))
        (ImplicitCastExpr 0x9ed48a0 <col:16> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9ed4874 <col:16> 'wchar_t *' lvalue ParmVar 0x9ed3e90 'dst' 'wchar_t *')))))
  (BinaryOperator 0x9ed4970 <line:1041:5, col:15> 'size_t':'unsigned int' lvalue '='
    (DeclRefExpr 0x9ed48f0 <col:5> 'size_t':'unsigned int' lvalue Var 0x9ed4620 'n' 'size_t':'unsigned int')
    (BinaryOperator 0x9ed4958 <col:9, col:15> 'unsigned int' '-'
      (ImplicitCastExpr 0x9ed4938 <col:9> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed4908 <col:9> 'size_t':'unsigned int' lvalue ParmVar 0x9ed3f20 'siz' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ed4948 <col:15> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed4920 <col:15> 'size_t':'unsigned int' lvalue Var 0x9ed46a0 'dlen' 'size_t':'unsigned int'))))
  (IfStmt 0x9ed4b00 <line:1043:5, line:1044:32>
    <<<NULL>>>
    (BinaryOperator 0x9ed49d8 <line:1043:9, col:14> '_Bool' '=='
      (ImplicitCastExpr 0x9ed49b8 <col:9> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed4988 <col:9> 'size_t':'unsigned int' lvalue Var 0x9ed4620 'n' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ed49c8 <col:14> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ed49a0 <col:14> 'int' 0)))
    (ReturnStmt 0x9ed4af0 <line:1044:9, col:32>
      (ParenExpr 0x9ed4ad8 <col:15, col:32> 'unsigned int'
        (BinaryOperator 0x9ed4ac0 <col:16, col:31> 'unsigned int' '+'
          (ImplicitCastExpr 0x9ed4ab0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ed49f0 <col:16> 'size_t':'unsigned int' lvalue Var 0x9ed46a0 'dlen' 'size_t':'unsigned int'))
          (CallExpr 0x9ed4a80 <col:23, col:31> 'size_t':'unsigned int'
            (ImplicitCastExpr 0x9ed4a70 <col:23> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ed4a54 <col:23> 'size_t (const wchar_t *) throw()' lvalue Function 0x9ddb7d0 'wcslen' 'size_t (const wchar_t *) throw()'))
            (ImplicitCastExpr 0x9ed4aa0 <col:30> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0x9ed4a3c <col:30> 'const wchar_t *' lvalue Var 0x9ed45a0 's' 'const wchar_t *'))))))
    <<<NULL>>>)
  (WhileStmt 0x9ed4d78 <line:1046:5, line:1054:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed4b98 <line:1046:12, col:18> '_Bool' '!='
      (ImplicitCastExpr 0x9ed4b78 <col:12, col:13> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0x9ed4b48 <col:12, col:13> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0x9ed4b38 <col:13> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0x9ed4b1c <col:13> 'const wchar_t *' lvalue Var 0x9ed45a0 's' 'const wchar_t *'))))
      (ImplicitCastExpr 0x9ed4b88 <col:18> 'wchar_t' <IntegralCast>
        (CharacterLiteral 0x9ed4b60 <col:18> 'char'0)))
    (CompoundStmt 0x9ed4d60 <line:1047:5, line:1054:5>
      (IfStmt 0x9ed4d10 <line:1048:9, line:1052:9>
        <<<NULL>>>
        (BinaryOperator 0x9ed4c00 <line:1048:13, col:18> '_Bool' '!='
          (ImplicitCastExpr 0x9ed4be0 <col:13> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ed4bb0 <col:13> 'size_t':'unsigned int' lvalue Var 0x9ed4620 'n' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9ed4bf0 <col:18> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ed4bc8 <col:18> 'int' 1)))
        (CompoundStmt 0x9ed4cf8 <line:1049:9, line:1052:9>
          (BinaryOperator 0x9ed4cb0 <line:1050:13, col:21> 'wchar_t' lvalue '='
            (UnaryOperator 0x9ed4c48 <col:13, col:15> 'wchar_t' lvalue prefix '*'
              (UnaryOperator 0x9ed4c30 <col:14, col:15> 'wchar_t *' postfix '++'
                (DeclRefExpr 0x9ed4c18 <col:14> 'wchar_t *' lvalue Var 0x9ed4520 'd' 'wchar_t *')))
            (ImplicitCastExpr 0x9ed4ca0 <col:20, col:21> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0x9ed4c88 <col:20, col:21> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0x9ed4c78 <col:21> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0x9ed4c5c <col:21> 'const wchar_t *' lvalue Var 0x9ed45a0 's' 'const wchar_t *')))))
          (UnaryOperator 0x9ed4ce0 <line:1051:13, col:14> 'size_t':'unsigned int' postfix '--'
            (DeclRefExpr 0x9ed4cc8 <col:13> 'size_t':'unsigned int' lvalue Var 0x9ed4620 'n' 'size_t':'unsigned int')))
        <<<NULL>>>)
      (UnaryOperator 0x9ed4d48 <line:1053:9, col:10> 'const wchar_t *' postfix '++'
        (DeclRefExpr 0x9ed4d2c <col:9> 'const wchar_t *' lvalue Var 0x9ed45a0 's' 'const wchar_t *'))))
  (BinaryOperator 0x9ed4df8 <line:1055:5, col:10> 'wchar_t' lvalue '='
    (UnaryOperator 0x9ed4db8 <col:5, col:6> 'wchar_t' lvalue prefix '*'
      (ImplicitCastExpr 0x9ed4da8 <col:6> 'wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed4d8c <col:6> 'wchar_t *' lvalue Var 0x9ed4520 'd' 'wchar_t *')))
    (ImplicitCastExpr 0x9ed4de8 <col:10> 'wchar_t' <IntegralCast>
      (CharacterLiteral 0x9ed4dd0 <col:10> 'char'0)))
  (ReturnStmt 0x9ed4ef8 <line:1057:5, col:28>
    (ParenExpr 0x9ed4ee0 <col:11, col:28> 'unsigned int'
      (BinaryOperator 0x9ed4ec8 <col:12, col:27> 'unsigned int' '+'
        (ImplicitCastExpr 0x9ed4ea8 <col:12> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ed4e10 <col:12> 'size_t':'unsigned int' lvalue Var 0x9ed46a0 'dlen' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x9ed4eb8 <col:19, col:27> 'unsigned int' <IntegralCast>
          (ParenExpr 0x9ed4e90 <col:19, col:27> 'int'
            (BinaryOperator 0x9ed4e78 <col:20, col:24> 'int' '-'
              (ImplicitCastExpr 0x9ed4e58 <col:20> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0x9ed4e28 <col:20> 'const wchar_t *' lvalue Var 0x9ed45a0 's' 'const wchar_t *'))
              (ImplicitCastExpr 0x9ed4e68 <col:24> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0x9ed4e40 <col:24> 'const wchar_t *' lvalue ParmVar 0x9ed3ee0 'src' 'const wchar_t *')))))))))


size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz) (CompoundStmt 0x9ed5c98 <../codeBase/fish-shell-master/fallback.cpp:1084:1, line:1111:1>
  (DeclStmt 0x9ed5130 <line:1085:5, col:30>
    0x9ed50d0 "register wchar_t *d =
      (ImplicitCastExpr 0x9ed5120 <col:27> 'wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed5104 <col:27> 'wchar_t *' lvalue ParmVar 0x9ed4f60 'dst' 'wchar_t *'))")
  (DeclStmt 0x9ed51b0 <line:1086:5, col:36>
    0x9ed5150 "register const wchar_t *s =
      (ImplicitCastExpr 0x9ed51a0 <col:33> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed5184 <col:33> 'const wchar_t *' lvalue ParmVar 0x9ed4fb0 'src' 'const wchar_t *'))")
  (DeclStmt 0x9ed5230 <line:1087:5, col:28>
    0x9ed51d0 "register size_t n =
      (ImplicitCastExpr 0x9ed5220 <col:25> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed5204 <col:25> 'size_t':'unsigned int' lvalue ParmVar 0x9ed4ff0 'siz' 'size_t':'unsigned int'))")
  (IfStmt 0x9ed5970 <line:1090:5, line:1098:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed5328 <line:1090:9, col:26> '_Bool' '&&'
      (BinaryOperator 0x9ed5290 <col:9, col:14> '_Bool' '!='
        (ImplicitCastExpr 0x9ed5270 <col:9> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ed5240 <col:9> 'size_t':'unsigned int' lvalue Var 0x9ed51d0 'n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x9ed5280 <col:14> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ed5258 <col:14> 'int' 0)))
      (BinaryOperator 0x9ed5310 <col:19, col:26> '_Bool' '!='
        (ImplicitCastExpr 0x9ed52f0 <col:19, col:21> 'size_t':'unsigned int' <LValueToRValue>
          (UnaryOperator 0x9ed52c0 <col:19, col:21> 'size_t':'unsigned int' lvalue prefix '--'
            (DeclRefExpr 0x9ed52a8 <col:21> 'size_t':'unsigned int' lvalue Var 0x9ed51d0 'n' 'size_t':'unsigned int')))
        (ImplicitCastExpr 0x9ed5300 <col:26> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ed52d8 <col:26> 'int' 0))))
    (CompoundStmt 0x9ed5958 <line:1091:5, line:1098:5>
      (DoStmt 0x9ed5940 <line:1092:9, line:1097:24>
        (CompoundStmt 0x9ed5488 <line:1093:9, line:1096:9>
          (IfStmt 0x9ed5468 <line:1094:13, line:1095:17>
            <<<NULL>>>
            (BinaryOperator 0x9ed5448 <line:1094:17, col:34> '_Bool' '=='
              (ImplicitCastExpr 0x9ed5428 <col:17, col:29> 'wchar_t' <LValueToRValue>
                (ParenExpr 0x9ed53f8 <col:17, col:29> 'wchar_t' lvalue
                  (BinaryOperator 0x9ed53e0 <col:18, col:27> 'wchar_t' lvalue '='
                    (UnaryOperator 0x9ed5370 <col:18, col:20> 'wchar_t' lvalue prefix '*'
                      (UnaryOperator 0x9ed5358 <col:19, col:20> 'wchar_t *' postfix '++'
                        (DeclRefExpr 0x9ed5340 <col:19> 'wchar_t *' lvalue Var 0x9ed50d0 'd' 'wchar_t *')))
                    (ImplicitCastExpr 0x9ed53d0 <col:25, col:27> 'wchar_t' <LValueToRValue>
                      (UnaryOperator 0x9ed53b8 <col:25, col:27> 'const wchar_t' lvalue prefix '*'
                        (UnaryOperator 0x9ed53a0 <col:26, col:27> 'const wchar_t *' postfix '++'
                          (DeclRefExpr 0x9ed5384 <col:26> 'const wchar_t *' lvalue Var 0x9ed5150 's' 'const wchar_t *')))))))
              (ImplicitCastExpr 0x9ed5438 <col:34> 'wchar_t' <IntegralCast>
                (IntegerLiteral 0x9ed5410 <col:34> 'int' 0)))
            (BreakStmt 0x9ed5460 <line:1095:17>)
            <<<NULL>>>))
        (BinaryOperator 0x9ed5928 <line:1097:16, col:23> '_Bool' '!='
          (ImplicitCastExpr 0x9ed54e8 <col:16, col:18> 'size_t':'unsigned int' <LValueToRValue>
            (UnaryOperator 0x9ed54b8 <col:16, col:18> 'size_t':'unsigned int' lvalue prefix '--'
              (DeclRefExpr 0x9ed549c <col:18> 'size_t':'unsigned int' lvalue Var 0x9ed51d0 'n' 'size_t':'unsigned int')))
          (ImplicitCastExpr 0x9ed5918 <col:23> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ed54d0 <col:23> 'int' 0)))))
    <<<NULL>>>)
  (IfStmt 0x9ed5ba8 <line:1101:5, line:1108:5>
    <<<NULL>>>
    (BinaryOperator 0x9ed59e0 <line:1101:9, col:14> '_Bool' '=='
      (ImplicitCastExpr 0x9ed59c0 <col:9> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed598c <col:9> 'size_t':'unsigned int' lvalue Var 0x9ed51d0 'n' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ed59d0 <col:14> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ed59a8 <col:14> 'int' 0)))
    (CompoundStmt 0x9ed5b90 <line:1102:5, line:1108:5>
      (IfStmt 0x9ed5ae0 <line:1103:9, line:1104:18>
        <<<NULL>>>
        (BinaryOperator 0x9ed5a48 <line:1103:13, col:20> '_Bool' '!='
          (ImplicitCastExpr 0x9ed5a28 <col:13> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ed59f8 <col:13> 'size_t':'unsigned int' lvalue ParmVar 0x9ed4ff0 'siz' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x9ed5a38 <col:20> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ed5a10 <col:20> 'int' 0)))
        (BinaryOperator 0x9ed5ac8 <line:1104:13, col:18> 'wchar_t' lvalue '='
          (UnaryOperator 0x9ed5a88 <col:13, col:14> 'wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0x9ed5a78 <col:14> 'wchar_t *' <LValueToRValue>
              (DeclRefExpr 0x9ed5a60 <col:14> 'wchar_t *' lvalue Var 0x9ed50d0 'd' 'wchar_t *')))
          (ImplicitCastExpr 0x9ed5ab8 <col:18> 'wchar_t' <IntegralCast>
            (CharacterLiteral 0x9ed5aa0 <col:18> 'char'0)))
        <<<NULL>>>)
      (WhileStmt 0x9ed5b78 <line:1106:9, line:1107:13>
        <<<NULL>>>
        (ImplicitCastExpr 0x9ed5b58 <line:1106:16, col:18> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9ed5b48 <col:16, col:18> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0x9ed5b30 <col:16, col:18> 'const wchar_t' lvalue prefix '*'
              (UnaryOperator 0x9ed5b18 <col:17, col:18> 'const wchar_t *' postfix '++'
                (DeclRefExpr 0x9ed5afc <col:17> 'const wchar_t *' lvalue Var 0x9ed5150 's' 'const wchar_t *')))))
        (NullStmt 0x9ed5b68 <line:1107:13>)))
    <<<NULL>>>)
  (ReturnStmt 0x9ed5c88 <line:1109:5, col:23>
    (ImplicitCastExpr 0x9ed5c78 <col:11, col:23> 'size_t':'unsigned int' <IntegralCast>
      (ParenExpr 0x9ed5c60 <col:11, col:23> 'int'
        (BinaryOperator 0x9ed5c48 <col:12, col:22> 'int' '-'
          (BinaryOperator 0x9ed5c18 <col:12, col:16> 'int' '-'
            (ImplicitCastExpr 0x9ed5bf8 <col:12> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0x9ed5bc4 <col:12> 'const wchar_t *' lvalue Var 0x9ed5150 's' 'const wchar_t *'))
            (ImplicitCastExpr 0x9ed5c08 <col:16> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0x9ed5bdc <col:16> 'const wchar_t *' lvalue ParmVar 0x9ed4fb0 'src' 'const wchar_t *')))
          (IntegerLiteral 0x9ed5c30 <col:22> 'int' 1))))))


char *fish_gettext(const char *msgid) (CompoundStmt 0x9ed5df8 <../codeBase/fish-shell-master/fallback.cpp:1161:1, line:1163:1>
  (ReturnStmt 0x9ed5de8 <line:1162:5, col:20>
    (CStyleCastExpr 0x9ed5dd0 <col:12, col:20> 'char *' <NoOp>
      (ImplicitCastExpr 0x9ed5dc0 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9ed5d94 <col:20> 'const char *' lvalue ParmVar 0x9ed5cd0 'msgid' 'const char *')))))


char *fish_bindtextdomain(const char *domainname, const char *dirname) (CompoundStmt 0x9ed5f70 <../codeBase/fish-shell-master/fallback.cpp:1166:1, line:1168:1>
  (ReturnStmt 0x9ed5f60 <line:1167:5, /usr/include/linux/stddef.h:8:14>
    (ImplicitCastExpr 0x9ed5f50 <col:14> 'char *' <NullToPointer>
      (IntegerLiteral 0x9ed5f38 <col:14> 'int' 0))))


char *fish_textdomain(const char *domainname) (CompoundStmt 0x9ed60a0 <../codeBase/fish-shell-master/fallback.cpp:1171:1, line:1173:1>
  (ReturnStmt 0x9ed6090 <line:1172:5, /usr/include/linux/stddef.h:8:14>
    (ImplicitCastExpr 0x9ed6080 <col:14> 'char *' <NullToPointer>
      (IntegerLiteral 0x9ed6068 <col:14> 'int' 0))))


char *fish_dcgettext(const char *domainname, const char *msgid, int category) (CompoundStmt 0x9ed62a0 <../codeBase/fish-shell-master/fallback.cpp:1187:1, line:1189:1>
  (ReturnStmt 0x9ed6290 <line:1188:5, col:20>
    (CStyleCastExpr 0x9ed6278 <col:12, col:20> 'char *' <NoOp>
      (ImplicitCastExpr 0x9ed6268 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9ed623c <col:20> 'const char *' lvalue ParmVar 0x9ed6120 'msgid' 'const char *')))))


int _nl_msg_cat_cntr = (IntegerLiteral 0x9ed6308 <../codeBase/fish-shell-master/fallback.cpp:1196:22> 'int' 0)
;
int fish_wcwidth(wchar_t wc) (CompoundStmt 0x9ed64e8 <../codeBase/fish-shell-master/fallback.cpp:1271:1, line:1273:1>
  (ReturnStmt 0x9ed64d8 <line:1272:5, col:22>
    (CallExpr 0x9ed64a8 <col:12, col:22> 'int'
      (ImplicitCastExpr 0x9ed6498 <col:12> 'int (*)(wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ed6444 <col:12> 'int (wchar_t) throw()' lvalue Function 0x9dddb30 'wcwidth' 'int (wchar_t) throw()'))
      (ImplicitCastExpr 0x9ed64c8 <col:20> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ed642c <col:20> 'wchar_t' lvalue ParmVar 0x9ed6330 'wc' 'wchar_t')))))


int fish_wcswidth(const wchar_t *str, size_t n) (CompoundStmt 0x9ed6740 <../codeBase/fish-shell-master/fallback.cpp:1276:1, line:1278:1>
  (ReturnStmt 0x9ed6730 <line:1277:5, col:27>
    (CallExpr 0x9ed66e8 <col:12, col:27> 'int'
      (ImplicitCastExpr 0x9ed66d8 <col:12> 'int (*)(const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ed667c <col:12> 'int (const wchar_t *, size_t) throw()' lvalue Function 0x9dddc90 'wcswidth' 'int (const wchar_t *, size_t) throw()'))
      (ImplicitCastExpr 0x9ed6710 <col:21> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9ed664c <col:21> 'const wchar_t *' lvalue ParmVar 0x9ed6510 'str' 'const wchar_t *'))
      (ImplicitCastExpr 0x9ed6720 <col:26> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ed6664 <col:26> 'size_t':'unsigned int' lvalue ParmVar 0x9ed6550 'n' 'size_t':'unsigned int')))))



typedef char *__builtin_va_list;
extern "C" {
    typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
    typedef typeof (sizeof(int)) size_t;
    typedef unsigned char __u_char;
    typedef unsigned short __u_short;
    typedef unsigned int __u_int;
    typedef unsigned long __u_long;
    typedef signed char __int8_t;
    typedef unsigned char __uint8_t;
    typedef short __int16_t;
    typedef unsigned short __uint16_t;
    typedef int __int32_t;
    typedef unsigned int __uint32_t;
    typedef long long __int64_t;
    typedef unsigned long long __uint64_t;
    typedef long long __quad_t;
    typedef unsigned long long __u_quad_t;
    typedef __u_quad_t __dev_t;
    typedef unsigned int __uid_t;
    typedef unsigned int __gid_t;
    typedef unsigned long __ino_t;
    typedef __u_quad_t __ino64_t;
    typedef unsigned int __mode_t;
    typedef unsigned int __nlink_t;
    typedef long __off_t;
    typedef __quad_t __off64_t;
    typedef int __pid_t;
    struct {
        int __val[2];
    };
    typedef struct __fsid_t __fsid_t;
    typedef long __clock_t;
    typedef unsigned long __rlim_t;
    typedef __u_quad_t __rlim64_t;
    typedef unsigned int __id_t;
    typedef long __time_t;
    typedef unsigned int __useconds_t;
    typedef long __suseconds_t;
    typedef int __daddr_t;
    typedef long __swblk_t;
    typedef int __key_t;
    typedef int __clockid_t;
    typedef void *__timer_t;
    typedef long __blksize_t;
    typedef long __blkcnt_t;
    typedef __quad_t __blkcnt64_t;
    typedef unsigned long __fsblkcnt_t;
    typedef __u_quad_t __fsblkcnt64_t;
    typedef unsigned long __fsfilcnt_t;
    typedef __u_quad_t __fsfilcnt64_t;
    typedef int __ssize_t;
    typedef __off64_t __loff_t;
    typedef __quad_t *__qaddr_t;
    typedef char *__caddr_t;
    typedef int __intptr_t;
    typedef unsigned int __socklen_t;
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef __off_t off_t;
    typedef __off64_t off64_t;
    typedef __ssize_t ssize_t;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x9ea9450 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x9ea94b0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x9ea9510 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9ea9570 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x9ea9710 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x9ea9770 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9ea97d0 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef signed char int8_t;
        typedef short int16_t;
        typedef int int32_t;
        typedef long long int64_t;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
            inline timeval() throw() (CompoundStmt 0xa4a0ae0 </usr/include/i386-linux-gnu/bits/time.h:31:8>)


            inline timeval(const timeval &) throw();
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                } ;
                ;
                ;
            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
extern "C" {
    typedef float float_t;
    typedef double double_t;
    extern double acos(double __x) throw();
    extern double __acos(double __x) throw();
    extern double asin(double __x) throw();
    extern double __asin(double __x) throw();
    extern double atan(double __x) throw();
    extern double __atan(double __x) throw();
    extern double atan2(double __y, double __x) throw();
    extern double __atan2(double __y, double __x) throw();
    extern double cos(double __x) throw();
    extern double __cos(double __x) throw();
    extern double sin(double __x) throw();
    extern double __sin(double __x) throw();
    extern double tan(double __x) throw();
    extern double __tan(double __x) throw();
    extern double cosh(double __x) throw();
    extern double __cosh(double __x) throw();
    extern double sinh(double __x) throw();
    extern double __sinh(double __x) throw();
    extern double tanh(double __x) throw();
    extern double __tanh(double __x) throw();
    extern void sincos(double __x, double *__sinx, double *__cosx) throw();
    extern void __sincos(double __x, double *__sinx, double *__cosx) throw();
    extern double acosh(double __x) throw();
    extern double __acosh(double __x) throw();
    extern double asinh(double __x) throw();
    extern double __asinh(double __x) throw();
    extern double atanh(double __x) throw();
    extern double __atanh(double __x) throw();
    extern double exp(double __x) throw();
    extern double __exp(double __x) throw();
    extern double frexp(double __x, int *__exponent) throw();
    extern double __frexp(double __x, int *__exponent) throw();
    extern double ldexp(double __x, int __exponent) throw();
    extern double __ldexp(double __x, int __exponent) throw();
    extern double log(double __x) throw();
    extern double __log(double __x) throw();
    extern double log10(double __x) throw();
    extern double __log10(double __x) throw();
    extern double modf(double __x, double *__iptr) throw();
    extern double __modf(double __x, double *__iptr) throw();
    extern double exp10(double __x) throw();
    extern double __exp10(double __x) throw();
    extern double pow10(double __x) throw();
    extern double __pow10(double __x) throw();
    extern double expm1(double __x) throw();
    extern double __expm1(double __x) throw();
    extern double log1p(double __x) throw();
    extern double __log1p(double __x) throw();
    extern double logb(double __x) throw();
    extern double __logb(double __x) throw();
    extern double exp2(double __x) throw();
    extern double __exp2(double __x) throw();
    extern double log2(double __x) throw();
    extern double __log2(double __x) throw();
    extern double pow(double __x, double __y) throw();
    extern double __pow(double __x, double __y) throw();
    extern double sqrt(double __x) throw();
    extern double __sqrt(double __x) throw();
    extern double hypot(double __x, double __y) throw();
    extern double __hypot(double __x, double __y) throw();
    extern double cbrt(double __x) throw();
    extern double __cbrt(double __x) throw();
    extern double ceil(double __x) throw();
    extern double __ceil(double __x) throw();
    extern double fabs(double __x) throw();
    extern double __fabs(double __x) throw();
    extern double floor(double __x) throw();
    extern double __floor(double __x) throw();
    extern double fmod(double __x, double __y) throw();
    extern double __fmod(double __x, double __y) throw();
    extern int __isinf(double __value) throw();
    extern int __finite(double __value) throw();
    extern int isinf(double __value) throw();
    extern int finite(double __value) throw();
    extern double drem(double __x, double __y) throw();
    extern double __drem(double __x, double __y) throw();
    extern double significand(double __x) throw();
    extern double __significand(double __x) throw();
    extern double copysign(double __x, double __y) throw();
    extern double __copysign(double __x, double __y) throw();
    extern double nan(const char *__tagb) throw();
    extern double __nan(const char *__tagb) throw();
    extern int __isnan(double __value) throw();
    extern int isnan(double __value) throw();
    extern double j0(double) throw();
    extern double __j0(double) throw();
    extern double j1(double) throw();
    extern double __j1(double) throw();
    extern double jn(int, double) throw();
    extern double __jn(int, double) throw();
    extern double y0(double) throw();
    extern double __y0(double) throw();
    extern double y1(double) throw();
    extern double __y1(double) throw();
    extern double yn(int, double) throw();
    extern double __yn(int, double) throw();
    extern double erf(double) throw();
    extern double __erf(double) throw();
    extern double erfc(double) throw();
    extern double __erfc(double) throw();
    extern double lgamma(double) throw();
    extern double __lgamma(double) throw();
    extern double tgamma(double) throw();
    extern double __tgamma(double) throw();
    extern double gamma(double) throw();
    extern double __gamma(double) throw();
    extern double lgamma_r(double, int *__signgamp) throw();
    extern double __lgamma_r(double, int *__signgamp) throw();
    extern double rint(double __x) throw();
    extern double __rint(double __x) throw();
    extern double nextafter(double __x, double __y) throw();
    extern double __nextafter(double __x, double __y) throw();
    extern double nexttoward(double __x, long double __y) throw();
    extern double __nexttoward(double __x, long double __y) throw();
    extern double remainder(double __x, double __y) throw();
    extern double __remainder(double __x, double __y) throw();
    extern double scalbn(double __x, int __n) throw();
    extern double __scalbn(double __x, int __n) throw();
    extern int ilogb(double __x) throw();
    extern int __ilogb(double __x) throw();
    extern double scalbln(double __x, long __n) throw();
    extern double __scalbln(double __x, long __n) throw();
    extern double nearbyint(double __x) throw();
    extern double __nearbyint(double __x) throw();
    extern double round(double __x) throw();
    extern double __round(double __x) throw();
    extern double trunc(double __x) throw();
    extern double __trunc(double __x) throw();
    extern double remquo(double __x, double __y, int *__quo) throw();
    extern double __remquo(double __x, double __y, int *__quo) throw();
    extern long lrint(double __x) throw();
    extern long __lrint(double __x) throw();
    extern long long llrint(double __x) throw();
    extern long long __llrint(double __x) throw();
    extern long lround(double __x) throw();
    extern long __lround(double __x) throw();
    extern long long llround(double __x) throw();
    extern long long __llround(double __x) throw();
    extern double fdim(double __x, double __y) throw();
    extern double __fdim(double __x, double __y) throw();
    extern double fmax(double __x, double __y) throw();
    extern double __fmax(double __x, double __y) throw();
    extern double fmin(double __x, double __y) throw();
    extern double __fmin(double __x, double __y) throw();
    extern int __fpclassify(double __value) throw();
    extern int __signbit(double __value) throw();
    extern double fma(double __x, double __y, double __z) throw();
    extern double __fma(double __x, double __y, double __z) throw();
    extern double scalb(double __x, double __n) throw();
    extern double __scalb(double __x, double __n) throw();
    extern float acosf(float __x) throw();
    extern float __acosf(float __x) throw();
    extern float asinf(float __x) throw();
    extern float __asinf(float __x) throw();
    extern float atanf(float __x) throw();
    extern float __atanf(float __x) throw();
    extern float atan2f(float __y, float __x) throw();
    extern float __atan2f(float __y, float __x) throw();
    extern float cosf(float __x) throw();
    extern float __cosf(float __x) throw();
    extern float sinf(float __x) throw();
    extern float __sinf(float __x) throw();
    extern float tanf(float __x) throw();
    extern float __tanf(float __x) throw();
    extern float coshf(float __x) throw();
    extern float __coshf(float __x) throw();
    extern float sinhf(float __x) throw();
    extern float __sinhf(float __x) throw();
    extern float tanhf(float __x) throw();
    extern float __tanhf(float __x) throw();
    extern void sincosf(float __x, float *__sinx, float *__cosx) throw();
    extern void __sincosf(float __x, float *__sinx, float *__cosx) throw();
    extern float acoshf(float __x) throw();
    extern float __acoshf(float __x) throw();
    extern float asinhf(float __x) throw();
    extern float __asinhf(float __x) throw();
    extern float atanhf(float __x) throw();
    extern float __atanhf(float __x) throw();
    extern float expf(float __x) throw();
    extern float __expf(float __x) throw();
    extern float frexpf(float __x, int *__exponent) throw();
    extern float __frexpf(float __x, int *__exponent) throw();
    extern float ldexpf(float __x, int __exponent) throw();
    extern float __ldexpf(float __x, int __exponent) throw();
    extern float logf(float __x) throw();
    extern float __logf(float __x) throw();
    extern float log10f(float __x) throw();
    extern float __log10f(float __x) throw();
    extern float modff(float __x, float *__iptr) throw();
    extern float __modff(float __x, float *__iptr) throw();
    extern float exp10f(float __x) throw();
    extern float __exp10f(float __x) throw();
    extern float pow10f(float __x) throw();
    extern float __pow10f(float __x) throw();
    extern float expm1f(float __x) throw();
    extern float __expm1f(float __x) throw();
    extern float log1pf(float __x) throw();
    extern float __log1pf(float __x) throw();
    extern float logbf(float __x) throw();
    extern float __logbf(float __x) throw();
    extern float exp2f(float __x) throw();
    extern float __exp2f(float __x) throw();
    extern float log2f(float __x) throw();
    extern float __log2f(float __x) throw();
    extern float powf(float __x, float __y) throw();
    extern float __powf(float __x, float __y) throw();
    extern float sqrtf(float __x) throw();
    extern float __sqrtf(float __x) throw();
    extern float hypotf(float __x, float __y) throw();
    extern float __hypotf(float __x, float __y) throw();
    extern float cbrtf(float __x) throw();
    extern float __cbrtf(float __x) throw();
    extern float ceilf(float __x) throw();
    extern float __ceilf(float __x) throw();
    extern float fabsf(float __x) throw();
    extern float __fabsf(float __x) throw();
    extern float floorf(float __x) throw();
    extern float __floorf(float __x) throw();
    extern float fmodf(float __x, float __y) throw();
    extern float __fmodf(float __x, float __y) throw();
    extern int __isinff(float __value) throw();
    extern int __finitef(float __value) throw();
    extern int isinff(float __value) throw();
    extern int finitef(float __value) throw();
    extern float dremf(float __x, float __y) throw();
    extern float __dremf(float __x, float __y) throw();
    extern float significandf(float __x) throw();
    extern float __significandf(float __x) throw();
    extern float copysignf(float __x, float __y) throw();
    extern float __copysignf(float __x, float __y) throw();
    extern float nanf(const char *__tagb) throw();
    extern float __nanf(const char *__tagb) throw();
    extern int __isnanf(float __value) throw();
    extern int isnanf(float __value) throw();
    extern float j0f(float) throw();
    extern float __j0f(float) throw();
    extern float j1f(float) throw();
    extern float __j1f(float) throw();
    extern float jnf(int, float) throw();
    extern float __jnf(int, float) throw();
    extern float y0f(float) throw();
    extern float __y0f(float) throw();
    extern float y1f(float) throw();
    extern float __y1f(float) throw();
    extern float ynf(int, float) throw();
    extern float __ynf(int, float) throw();
    extern float erff(float) throw();
    extern float __erff(float) throw();
    extern float erfcf(float) throw();
    extern float __erfcf(float) throw();
    extern float lgammaf(float) throw();
    extern float __lgammaf(float) throw();
    extern float tgammaf(float) throw();
    extern float __tgammaf(float) throw();
    extern float gammaf(float) throw();
    extern float __gammaf(float) throw();
    extern float lgammaf_r(float, int *__signgamp) throw();
    extern float __lgammaf_r(float, int *__signgamp) throw();
    extern float rintf(float __x) throw();
    extern float __rintf(float __x) throw();
    extern float nextafterf(float __x, float __y) throw();
    extern float __nextafterf(float __x, float __y) throw();
    extern float nexttowardf(float __x, long double __y) throw();
    extern float __nexttowardf(float __x, long double __y) throw();
    extern float remainderf(float __x, float __y) throw();
    extern float __remainderf(float __x, float __y) throw();
    extern float scalbnf(float __x, int __n) throw();
    extern float __scalbnf(float __x, int __n) throw();
    extern int ilogbf(float __x) throw();
    extern int __ilogbf(float __x) throw();
    extern float scalblnf(float __x, long __n) throw();
    extern float __scalblnf(float __x, long __n) throw();
    extern float nearbyintf(float __x) throw();
    extern float __nearbyintf(float __x) throw();
    extern float roundf(float __x) throw();
    extern float __roundf(float __x) throw();
    extern float truncf(float __x) throw();
    extern float __truncf(float __x) throw();
    extern float remquof(float __x, float __y, int *__quo) throw();
    extern float __remquof(float __x, float __y, int *__quo) throw();
    extern long lrintf(float __x) throw();
    extern long __lrintf(float __x) throw();
    extern long long llrintf(float __x) throw();
    extern long long __llrintf(float __x) throw();
    extern long lroundf(float __x) throw();
    extern long __lroundf(float __x) throw();
    extern long long llroundf(float __x) throw();
    extern long long __llroundf(float __x) throw();
    extern float fdimf(float __x, float __y) throw();
    extern float __fdimf(float __x, float __y) throw();
    extern float fmaxf(float __x, float __y) throw();
    extern float __fmaxf(float __x, float __y) throw();
    extern float fminf(float __x, float __y) throw();
    extern float __fminf(float __x, float __y) throw();
    extern int __fpclassifyf(float __value) throw();
    extern int __signbitf(float __value) throw();
    extern float fmaf(float __x, float __y, float __z) throw();
    extern float __fmaf(float __x, float __y, float __z) throw();
    extern float scalbf(float __x, float __n) throw();
    extern float __scalbf(float __x, float __n) throw();
    extern long double acosl(long double __x) throw();
    extern long double __acosl(long double __x) throw();
    extern long double asinl(long double __x) throw();
    extern long double __asinl(long double __x) throw();
    extern long double atanl(long double __x) throw();
    extern long double __atanl(long double __x) throw();
    extern long double atan2l(long double __y, long double __x) throw();
    extern long double __atan2l(long double __y, long double __x) throw();
    extern long double cosl(long double __x) throw();
    extern long double __cosl(long double __x) throw();
    extern long double sinl(long double __x) throw();
    extern long double __sinl(long double __x) throw();
    extern long double tanl(long double __x) throw();
    extern long double __tanl(long double __x) throw();
    extern long double coshl(long double __x) throw();
    extern long double __coshl(long double __x) throw();
    extern long double sinhl(long double __x) throw();
    extern long double __sinhl(long double __x) throw();
    extern long double tanhl(long double __x) throw();
    extern long double __tanhl(long double __x) throw();
    extern void sincosl(long double __x, long double *__sinx, long double *__cosx) throw();
    extern void __sincosl(long double __x, long double *__sinx, long double *__cosx) throw();
    extern long double acoshl(long double __x) throw();
    extern long double __acoshl(long double __x) throw();
    extern long double asinhl(long double __x) throw();
    extern long double __asinhl(long double __x) throw();
    extern long double atanhl(long double __x) throw();
    extern long double __atanhl(long double __x) throw();
    extern long double expl(long double __x) throw();
    extern long double __expl(long double __x) throw();
    extern long double frexpl(long double __x, int *__exponent) throw();
    extern long double __frexpl(long double __x, int *__exponent) throw();
    extern long double ldexpl(long double __x, int __exponent) throw();
    extern long double __ldexpl(long double __x, int __exponent) throw();
    extern long double logl(long double __x) throw();
    extern long double __logl(long double __x) throw();
    extern long double log10l(long double __x) throw();
    extern long double __log10l(long double __x) throw();
    extern long double modfl(long double __x, long double *__iptr) throw();
    extern long double __modfl(long double __x, long double *__iptr) throw();
    extern long double exp10l(long double __x) throw();
    extern long double __exp10l(long double __x) throw();
    extern long double pow10l(long double __x) throw();
    extern long double __pow10l(long double __x) throw();
    extern long double expm1l(long double __x) throw();
    extern long double __expm1l(long double __x) throw();
    extern long double log1pl(long double __x) throw();
    extern long double __log1pl(long double __x) throw();
    extern long double logbl(long double __x) throw();
    extern long double __logbl(long double __x) throw();
    extern long double exp2l(long double __x) throw();
    extern long double __exp2l(long double __x) throw();
    extern long double log2l(long double __x) throw();
    extern long double __log2l(long double __x) throw();
    extern long double powl(long double __x, long double __y) throw();
    extern long double __powl(long double __x, long double __y) throw();
    extern long double sqrtl(long double __x) throw();
    extern long double __sqrtl(long double __x) throw();
    extern long double hypotl(long double __x, long double __y) throw();
    extern long double __hypotl(long double __x, long double __y) throw();
    extern long double cbrtl(long double __x) throw();
    extern long double __cbrtl(long double __x) throw();
    extern long double ceill(long double __x) throw();
    extern long double __ceill(long double __x) throw();
    extern long double fabsl(long double __x) throw();
    extern long double __fabsl(long double __x) throw();
    extern long double floorl(long double __x) throw();
    extern long double __floorl(long double __x) throw();
    extern long double fmodl(long double __x, long double __y) throw();
    extern long double __fmodl(long double __x, long double __y) throw();
    extern int __isinfl(long double __value) throw();
    extern int __finitel(long double __value) throw();
    extern int isinfl(long double __value) throw();
    extern int finitel(long double __value) throw();
    extern long double dreml(long double __x, long double __y) throw();
    extern long double __dreml(long double __x, long double __y) throw();
    extern long double significandl(long double __x) throw();
    extern long double __significandl(long double __x) throw();
    extern long double copysignl(long double __x, long double __y) throw();
    extern long double __copysignl(long double __x, long double __y) throw();
    extern long double nanl(const char *__tagb) throw();
    extern long double __nanl(const char *__tagb) throw();
    extern int __isnanl(long double __value) throw();
    extern int isnanl(long double __value) throw();
    extern long double j0l(long double) throw();
    extern long double __j0l(long double) throw();
    extern long double j1l(long double) throw();
    extern long double __j1l(long double) throw();
    extern long double jnl(int, long double) throw();
    extern long double __jnl(int, long double) throw();
    extern long double y0l(long double) throw();
    extern long double __y0l(long double) throw();
    extern long double y1l(long double) throw();
    extern long double __y1l(long double) throw();
    extern long double ynl(int, long double) throw();
    extern long double __ynl(int, long double) throw();
    extern long double erfl(long double) throw();
    extern long double __erfl(long double) throw();
    extern long double erfcl(long double) throw();
    extern long double __erfcl(long double) throw();
    extern long double lgammal(long double) throw();
    extern long double __lgammal(long double) throw();
    extern long double tgammal(long double) throw();
    extern long double __tgammal(long double) throw();
    extern long double gammal(long double) throw();
    extern long double __gammal(long double) throw();
    extern long double lgammal_r(long double, int *__signgamp) throw();
    extern long double __lgammal_r(long double, int *__signgamp) throw();
    extern long double rintl(long double __x) throw();
    extern long double __rintl(long double __x) throw();
    extern long double nextafterl(long double __x, long double __y) throw();
    extern long double __nextafterl(long double __x, long double __y) throw();
    extern long double nexttowardl(long double __x, long double __y) throw();
    extern long double __nexttowardl(long double __x, long double __y) throw();
    extern long double remainderl(long double __x, long double __y) throw();
    extern long double __remainderl(long double __x, long double __y) throw();
    extern long double scalbnl(long double __x, int __n) throw();
    extern long double __scalbnl(long double __x, int __n) throw();
    extern int ilogbl(long double __x) throw();
    extern int __ilogbl(long double __x) throw();
    extern long double scalblnl(long double __x, long __n) throw();
    extern long double __scalblnl(long double __x, long __n) throw();
    extern long double nearbyintl(long double __x) throw();
    extern long double __nearbyintl(long double __x) throw();
    extern long double roundl(long double __x) throw();
    extern long double __roundl(long double __x) throw();
    extern long double truncl(long double __x) throw();
    extern long double __truncl(long double __x) throw();
    extern long double remquol(long double __x, long double __y, int *__quo) throw();
    extern long double __remquol(long double __x, long double __y, int *__quo) throw();
    extern long lrintl(long double __x) throw();
    extern long __lrintl(long double __x) throw();
    extern long long llrintl(long double __x) throw();
    extern long long __llrintl(long double __x) throw();
    extern long lroundl(long double __x) throw();
    extern long __lroundl(long double __x) throw();
    extern long long llroundl(long double __x) throw();
    extern long long __llroundl(long double __x) throw();
    extern long double fdiml(long double __x, long double __y) throw();
    extern long double __fdiml(long double __x, long double __y) throw();
    extern long double fmaxl(long double __x, long double __y) throw();
    extern long double __fmaxl(long double __x, long double __y) throw();
    extern long double fminl(long double __x, long double __y) throw();
    extern long double __fminl(long double __x, long double __y) throw();
    extern int __fpclassifyl(long double __value) throw();
    extern int __signbitl(long double __value) throw();
    extern long double fmal(long double __x, long double __y, long double __z) throw();
    extern long double __fmal(long double __x, long double __y, long double __z) throw();
    extern long double scalbl(long double __x, long double __n) throw();
    extern long double __scalbl(long double __x, long double __n) throw();
    extern int signgam;
    enum  {
        FP_NAN,
        FP_INFINITE,
        FP_ZERO,
        FP_SUBNORMAL,
        FP_NORMAL
    };
    enum  {
        _IEEE_ = (UnaryOperator 0x9f27ad8 </usr/include/math.h:298:12, col:13> 'int' prefix '-'
  (IntegerLiteral 0x9f27ac0 <col:13> 'int' 1))
,
        _SVID_,
        _XOPEN_,
        _POSIX_,
        _ISOC_
    };
    typedef enum _LIB_VERSION_TYPE _LIB_VERSION_TYPE;
    extern _LIB_VERSION_TYPE _LIB_VERSION;
    struct __exception {
        struct __exception;
        int type;
        char *name;
        double arg1;
        double arg2;
        double retval;
    };
    extern int matherr(struct __exception *__exc) throw();
}
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0x9f293a8 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f292b0 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0x9f293b8 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f29308 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0x9f293c8 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f29358 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0x9f3e998 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f39ef0 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f39ed0 <col:24, col:76> 'int'
      (BinaryOperator 0x9f39d38 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f39d08 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f39cf0 <line:50:22> 'int' 0))
        (IntegerLiteral 0x9f39d20 <line:45:32> 'int' 8))
      (ParenExpr 0x9f39df8 <col:36, col:54> 'int'
        (BinaryOperator 0x9f39de0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f39db0 <col:37, col:48> 'int'
            (BinaryOperator 0x9f39d98 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f39d50 <col:38> 'int' 1)
              (ParenExpr 0x9f39d80 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f39d68 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9f39dc8 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f39eb8 <col:58, col:76> 'int'
        (BinaryOperator 0x9f39ea0 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f39e70 <col:59, col:70> 'int'
            (BinaryOperator 0x9f39e58 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f39e10 <col:60> 'int' 1)
              (ParenExpr 0x9f39e40 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f39e28 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9f39e88 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0x9f3e9a8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3a148 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3a128 <col:24, col:76> 'int'
      (BinaryOperator 0x9f39f90 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f39f60 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f39f48 <line:51:22> 'int' 1))
        (IntegerLiteral 0x9f39f78 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3a050 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3a038 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3a008 <col:37, col:48> 'int'
            (BinaryOperator 0x9f39ff0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f39fa8 <col:38> 'int' 1)
              (ParenExpr 0x9f39fd8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f39fc0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9f3a020 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3a110 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3a0f8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3a0c8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3a0b0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3a068 <col:60> 'int' 1)
              (ParenExpr 0x9f3a098 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3a080 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9f3a0e0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0x9f3e9b8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3a398 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3a378 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3a1e0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3a1b0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3a198 <line:52:22> 'int' 2))
        (IntegerLiteral 0x9f3a1c8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3a2a0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3a288 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3a258 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3a240 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3a1f8 <col:38> 'int' 1)
              (ParenExpr 0x9f3a228 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3a210 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9f3a270 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3a360 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3a348 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3a318 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3a300 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3a2b8 <col:60> 'int' 1)
              (ParenExpr 0x9f3a2e8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3a2d0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9f3a330 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0x9f3e9c8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3a5e8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3a5c8 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3a430 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3a400 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3a3e8 <line:53:22> 'int' 3))
        (IntegerLiteral 0x9f3a418 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3a4f0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3a4d8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3a4a8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3a490 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3a448 <col:38> 'int' 1)
              (ParenExpr 0x9f3a478 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3a460 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9f3a4c0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3a5b0 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3a598 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3a568 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3a550 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3a508 <col:60> 'int' 1)
              (ParenExpr 0x9f3a538 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3a520 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9f3a580 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0x9f3e9d8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3a838 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3a818 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3a680 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3a650 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3a638 <line:54:23> 'int' 4))
        (IntegerLiteral 0x9f3a668 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3a740 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3a728 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3a6f8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3a6e0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3a698 <col:38> 'int' 1)
              (ParenExpr 0x9f3a6c8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3a6b0 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9f3a710 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3a800 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3a7e8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3a7b8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3a7a0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3a758 <col:60> 'int' 1)
              (ParenExpr 0x9f3a788 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3a770 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9f3a7d0 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0x9f3e9e8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3db68 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3db48 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3a8d0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3a8a0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3a888 <line:55:22> 'int' 5))
        (IntegerLiteral 0x9f3a8b8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3a990 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3a978 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3a948 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3a930 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3a8e8 <col:38> 'int' 1)
              (ParenExpr 0x9f3a918 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3a900 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9f3a960 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3db30 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3db18 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3aa08 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3a9f0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3a9a8 <col:60> 'int' 1)
              (ParenExpr 0x9f3a9d8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3a9c0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9f3aa20 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0x9f3e9f8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3ddb8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3dd98 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3dc00 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3dbd0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3dbb8 <line:56:22> 'int' 6))
        (IntegerLiteral 0x9f3dbe8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3dcc0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3dca8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3dc78 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3dc60 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3dc18 <col:38> 'int' 1)
              (ParenExpr 0x9f3dc48 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3dc30 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9f3dc90 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3dd80 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3dd68 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3dd38 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3dd20 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3dcd8 <col:60> 'int' 1)
              (ParenExpr 0x9f3dd08 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3dcf0 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9f3dd50 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0x9f3ea08 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3e008 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3dfe8 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3de50 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3de20 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3de08 <line:57:22> 'int' 7))
        (IntegerLiteral 0x9f3de38 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3df10 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3def8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3dec8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3deb0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3de68 <col:38> 'int' 1)
              (ParenExpr 0x9f3de98 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3de80 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9f3dee0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3dfd0 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3dfb8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3df88 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3df70 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3df28 <col:60> 'int' 1)
              (ParenExpr 0x9f3df58 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3df40 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9f3dfa0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0x9f3ea18 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3e258 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3e238 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3e0a0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3e070 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3e058 <line:58:22> 'int' 8))
        (IntegerLiteral 0x9f3e088 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3e160 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3e148 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3e118 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3e100 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3e0b8 <col:38> 'int' 1)
              (ParenExpr 0x9f3e0e8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3e0d0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9f3e130 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3e220 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3e208 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3e1d8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3e1c0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3e178 <col:60> 'int' 1)
              (ParenExpr 0x9f3e1a8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3e190 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9f3e1f0 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0x9f3ea28 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3e4a8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3e488 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3e2f0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3e2c0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3e2a8 <line:59:22> 'int' 9))
        (IntegerLiteral 0x9f3e2d8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3e3b0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3e398 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3e368 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3e350 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3e308 <col:38> 'int' 1)
              (ParenExpr 0x9f3e338 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3e320 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9f3e380 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3e470 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3e458 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3e428 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3e410 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3e3c8 <col:60> 'int' 1)
              (ParenExpr 0x9f3e3f8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3e3e0 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9f3e440 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0x9f3ea38 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3e6f8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3e6d8 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3e540 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3e510 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3e4f8 <line:60:22> 'int' 10))
        (IntegerLiteral 0x9f3e528 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3e600 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3e5e8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3e5b8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3e5a0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3e558 <col:38> 'int' 1)
              (ParenExpr 0x9f3e588 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3e570 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9f3e5d0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3e6c0 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3e6a8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3e678 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3e660 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3e618 <col:60> 'int' 1)
              (ParenExpr 0x9f3e648 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3e630 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9f3e690 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0x9f3ea48 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f3e948 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f3e928 <col:24, col:76> 'int'
      (BinaryOperator 0x9f3e790 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f3e760 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f3e748 <line:61:22> 'int' 11))
        (IntegerLiteral 0x9f3e778 <line:45:32> 'int' 8))
      (ParenExpr 0x9f3e850 <col:36, col:54> 'int'
        (BinaryOperator 0x9f3e838 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f3e808 <col:37, col:48> 'int'
            (BinaryOperator 0x9f3e7f0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f3e7a8 <col:38> 'int' 1)
              (ParenExpr 0x9f3e7d8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f3e7c0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9f3e820 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f3e910 <col:58, col:76> 'int'
        (BinaryOperator 0x9f3e8f8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f3e8c8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f3e8b0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f3e868 <col:60> 'int' 1)
              (ParenExpr 0x9f3e898 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f3e880 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9f3e8e0 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x9e87530 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x9e87588 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x9e875d8 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x9e87628 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x9e87678 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x9e876c8 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x9e87718 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x9e87768 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x9e877b8 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x9e87808 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x9e87858 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x9e878a8 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x9f4d5d0 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4d5b0 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9e87940 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9e87910 <col:3, col:7> 'int'
        (DeclRefExpr 0x9e878f4 <line:87:24> 'int' EnumConstant 0x9e87550 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9e87928 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9e87a38 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9e87a28 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9e87a00 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9e879e8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9e879b8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9e879a0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9e87958 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9e87988 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9e87970 <line:87:24> 'int' EnumConstant 0x9e87550 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9e879d0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4d598 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4d578 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9e87a98 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9e87a68 <col:6, col:10> 'int'
            (DeclRefExpr 0x9e87a50 <line:87:24> 'int' EnumConstant 0x9e87550 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9e87a80 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9e87b90 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9e87b80 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9e87b58 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9e87b40 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9e87b10 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9e87af8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9e87ab0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9e87ae0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9e87ac8 <line:87:24> 'int' EnumConstant 0x9e87550 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9e87b28 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4d560 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4d540 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9e87bf0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9e87bc0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9e87ba8 <line:87:24> 'int' EnumConstant 0x9e87550 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9e87bd8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9e87ce8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9e87cd8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9e87cb0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9e87c98 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9e87c68 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9e87c50 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e87c08 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9e87c38 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9e87c20 <line:87:24> 'int' EnumConstant 0x9e87550 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9e87c80 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4d528 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4d518 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4d4f0 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4d4d8 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4d4a8 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4d490 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9e87d00 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9e87d30 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9e87d18 <line:87:24> 'int' EnumConstant 0x9e87550 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4d4c0 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x9f4dbb8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4db98 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4d670 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4d640 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4d624 <line:88:24> 'int' EnumConstant 0x9e875a0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4d658 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f4d768 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f4d758 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f4d730 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f4d718 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f4d6e8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f4d6d0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4d688 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f4d6b8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f4d6a0 <line:88:24> 'int' EnumConstant 0x9e875a0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f4d700 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4db80 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4db60 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f4d7c8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f4d798 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f4d780 <line:88:24> 'int' EnumConstant 0x9e875a0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f4d7b0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f4d8c0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f4d8b0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f4d888 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f4d870 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f4d840 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f4d828 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f4d7e0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f4d810 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f4d7f8 <line:88:24> 'int' EnumConstant 0x9e875a0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f4d858 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4db48 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4db28 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f4d920 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f4d8f0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f4d8d8 <line:88:24> 'int' EnumConstant 0x9e875a0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f4d908 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f4da18 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4da08 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f4d9e0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f4d9c8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f4d998 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f4d980 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4d938 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f4d968 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f4d950 <line:88:24> 'int' EnumConstant 0x9e875a0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4d9b0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4db10 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4db00 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4dad8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4dac0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4da90 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4da78 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4da30 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f4da60 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f4da48 <line:88:24> 'int' EnumConstant 0x9e875a0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4daa8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x9f4e198 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4e178 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4dc50 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4dc20 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4dc04 <line:89:24> 'int' EnumConstant 0x9e875f0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4dc38 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f4dd48 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f4dd38 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f4dd10 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f4dcf8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f4dcc8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f4dcb0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4dc68 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f4dc98 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f4dc80 <line:89:24> 'int' EnumConstant 0x9e875f0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f4dce0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4e160 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4e140 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f4dda8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f4dd78 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f4dd60 <line:89:24> 'int' EnumConstant 0x9e875f0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f4dd90 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f4dea0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f4de90 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f4de68 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f4de50 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f4de20 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f4de08 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f4ddc0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f4ddf0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f4ddd8 <line:89:24> 'int' EnumConstant 0x9e875f0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f4de38 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4e128 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4e108 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f4df00 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f4ded0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f4deb8 <line:89:24> 'int' EnumConstant 0x9e875f0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f4dee8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f4dff8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4dfe8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f4dfc0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f4dfa8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f4df78 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f4df60 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4df18 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f4df48 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f4df30 <line:89:24> 'int' EnumConstant 0x9e875f0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4df90 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4e0f0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4e0e0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4e0b8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4e0a0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4e070 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4e058 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4e010 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f4e040 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f4e028 <line:89:24> 'int' EnumConstant 0x9e875f0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4e088 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x9f4e790 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4e770 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4e230 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4e200 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4e1e4 <line:90:24> 'int' EnumConstant 0x9e87640 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4e218 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f4e328 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f4e318 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f4e2f0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f4e2d8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f4e2a8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f4e290 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4e248 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f4e278 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f4e260 <line:90:24> 'int' EnumConstant 0x9e87640 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f4e2c0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4e758 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4e738 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f4e388 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f4e358 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f4e340 <line:90:24> 'int' EnumConstant 0x9e87640 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f4e370 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f4e498 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f4e470 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f4e448 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f4e430 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f4e400 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f4e3e8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f4e3a0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f4e3d0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f4e3b8 <line:90:24> 'int' EnumConstant 0x9e87640 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f4e418 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4e720 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4e700 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f4e4f8 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f4e4c8 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f4e4b0 <line:90:24> 'int' EnumConstant 0x9e87640 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f4e4e0 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f4e5f0 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4e5e0 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f4e5b8 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f4e5a0 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f4e570 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f4e558 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4e510 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f4e540 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f4e528 <line:90:24> 'int' EnumConstant 0x9e87640 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4e588 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4e6e8 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4e6d8 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4e6b0 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4e698 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4e668 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4e650 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4e608 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f4e638 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f4e620 <line:90:24> 'int' EnumConstant 0x9e87640 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4e680 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x9f4ed78 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4ed58 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4e830 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4e800 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4e7e4 <line:91:25> 'int' EnumConstant 0x9e87690 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4e818 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f4e928 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f4e918 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f4e8f0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f4e8d8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f4e8a8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f4e890 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4e848 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f4e878 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f4e860 <line:91:25> 'int' EnumConstant 0x9e87690 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f4e8c0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4ed40 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4ed20 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f4e988 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f4e958 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f4e940 <line:91:25> 'int' EnumConstant 0x9e87690 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f4e970 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f4ea80 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f4ea70 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f4ea48 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f4ea30 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f4ea00 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f4e9e8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f4e9a0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f4e9d0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f4e9b8 <line:91:25> 'int' EnumConstant 0x9e87690 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f4ea18 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4ed08 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4ece8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f4eae0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f4eab0 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f4ea98 <line:91:25> 'int' EnumConstant 0x9e87690 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f4eac8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f4ebd8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4ebc8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f4eba0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f4eb88 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f4eb58 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f4eb40 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4eaf8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f4eb28 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f4eb10 <line:91:25> 'int' EnumConstant 0x9e87690 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4eb70 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4ecd0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4ecc0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4ec98 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4ec80 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4ec50 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4ec38 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4ebf0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f4ec20 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f4ec08 <line:91:25> 'int' EnumConstant 0x9e87690 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4ec68 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x9f4f358 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4f338 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4ee10 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4ede0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4edc4 <line:92:24> 'int' EnumConstant 0x9e876e0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4edf8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f4ef08 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f4eef8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f4eed0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f4eeb8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f4ee88 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f4ee70 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4ee28 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f4ee58 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f4ee40 <line:92:24> 'int' EnumConstant 0x9e876e0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f4eea0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4f320 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4f300 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f4ef68 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f4ef38 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f4ef20 <line:92:24> 'int' EnumConstant 0x9e876e0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f4ef50 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f4f060 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f4f050 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f4f028 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f4f010 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f4efe0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f4efc8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f4ef80 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f4efb0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f4ef98 <line:92:24> 'int' EnumConstant 0x9e876e0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f4eff8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4f2e8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4f2c8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f4f0c0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f4f090 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f4f078 <line:92:24> 'int' EnumConstant 0x9e876e0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f4f0a8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f4f1b8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4f1a8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f4f180 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f4f168 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f4f138 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f4f120 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4f0d8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f4f108 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f4f0f0 <line:92:24> 'int' EnumConstant 0x9e876e0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4f150 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4f2b0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4f2a0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4f278 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4f260 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4f230 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4f218 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4f1d0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f4f200 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f4f1e8 <line:92:24> 'int' EnumConstant 0x9e876e0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4f248 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x9f4f958 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4f938 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4f3f0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4f3c0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4f3a4 <line:93:24> 'int' EnumConstant 0x9e87730 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4f3d8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f4f508 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f4f4f8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f4f4d0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f4f4b8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f4f468 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f4f450 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4f408 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f4f438 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f4f420 <line:93:24> 'int' EnumConstant 0x9e87730 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f4f4a0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4f920 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4f900 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f4f568 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f4f538 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f4f520 <line:93:24> 'int' EnumConstant 0x9e87730 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f4f550 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f4f660 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f4f650 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f4f628 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f4f610 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f4f5e0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f4f5c8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f4f580 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f4f5b0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f4f598 <line:93:24> 'int' EnumConstant 0x9e87730 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f4f5f8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4f8e8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4f8c8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f4f6c0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f4f690 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f4f678 <line:93:24> 'int' EnumConstant 0x9e87730 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f4f6a8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f4f7b8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4f7a8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f4f780 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f4f768 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f4f738 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f4f720 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4f6d8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f4f708 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f4f6f0 <line:93:24> 'int' EnumConstant 0x9e87730 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4f750 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4f8b0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4f8a0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4f878 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4f860 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4f830 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4f818 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4f7d0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f4f800 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f4f7e8 <line:93:24> 'int' EnumConstant 0x9e87730 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4f848 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x9f4ff38 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f4ff18 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4f9f0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4f9c0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4f9a4 <line:94:24> 'int' EnumConstant 0x9e87780 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4f9d8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f4fae8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f4fad8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f4fab0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f4fa98 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f4fa68 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f4fa50 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4fa08 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f4fa38 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f4fa20 <line:94:24> 'int' EnumConstant 0x9e87780 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f4fa80 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f4ff00 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f4fee0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f4fb48 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f4fb18 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f4fb00 <line:94:24> 'int' EnumConstant 0x9e87780 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f4fb30 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f4fc40 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f4fc30 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f4fc08 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f4fbf0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f4fbc0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f4fba8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f4fb60 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f4fb90 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f4fb78 <line:94:24> 'int' EnumConstant 0x9e87780 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f4fbd8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f4fec8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f4fea8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f4fca0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f4fc70 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f4fc58 <line:94:24> 'int' EnumConstant 0x9e87780 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f4fc88 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f4fd98 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4fd88 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f4fd60 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f4fd48 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f4fd18 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f4fd00 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4fcb8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f4fce8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f4fcd0 <line:94:24> 'int' EnumConstant 0x9e87780 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4fd30 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f4fe90 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f4fe80 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f4fe58 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f4fe40 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f4fe10 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f4fdf8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f4fdb0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f4fde0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f4fdc8 <line:94:24> 'int' EnumConstant 0x9e87780 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f4fe28 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x9f50538 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f50518 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f4ffd0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f4ffa0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f4ff84 <line:95:24> 'int' EnumConstant 0x9e877d0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f4ffb8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f500c8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f500b8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f50090 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f50078 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f50048 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f50030 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f4ffe8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f50018 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f50000 <line:95:24> 'int' EnumConstant 0x9e877d0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f50060 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f50500 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f504e0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f50128 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f500f8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f500e0 <line:95:24> 'int' EnumConstant 0x9e877d0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f50110 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f50220 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f50210 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f501e8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f501d0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f501a0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f50188 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f50140 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f50170 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f50158 <line:95:24> 'int' EnumConstant 0x9e877d0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f501b8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f504c8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f504a8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f50280 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f50250 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f50238 <line:95:24> 'int' EnumConstant 0x9e877d0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f50268 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f50378 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f50368 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f50340 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f50328 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f502f8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f502e0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f50298 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f502c8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f502b0 <line:95:24> 'int' EnumConstant 0x9e877d0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f50310 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f50470 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f50460 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f50438 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f50420 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f503f0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f503d8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f50390 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f503c0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f503a8 <line:95:24> 'int' EnumConstant 0x9e877d0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f50408 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x9f50b18 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f50af8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f505d0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f505a0 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f50584 <line:96:24> 'int' EnumConstant 0x9e87820 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f505b8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f506c8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f506b8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f50690 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f50678 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f50648 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f50630 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f505e8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f50618 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f50600 <line:96:24> 'int' EnumConstant 0x9e87820 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f50660 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f50ae0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f50ac0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f50728 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f506f8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f506e0 <line:96:24> 'int' EnumConstant 0x9e87820 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f50710 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f50820 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f50810 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f507e8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f507d0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f507a0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f50788 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f50740 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f50770 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f50758 <line:96:24> 'int' EnumConstant 0x9e87820 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f507b8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f50aa8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f50a88 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f50880 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f50850 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f50838 <line:96:24> 'int' EnumConstant 0x9e87820 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f50868 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f50978 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f50968 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f50940 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f50928 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f508f8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f508e0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f50898 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f508c8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f508b0 <line:96:24> 'int' EnumConstant 0x9e87820 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f50910 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f50a70 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f50a60 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f50a38 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f50a20 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f509f0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f509d8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f50990 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f509c0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f509a8 <line:96:24> 'int' EnumConstant 0x9e87820 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f50a08 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x9f510f8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f510d8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f50bb0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f50b80 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f50b64 <line:97:24> 'int' EnumConstant 0x9e87870 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f50b98 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f50ca8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f50c98 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f50c70 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f50c58 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f50c28 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f50c10 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f50bc8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f50bf8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f50be0 <line:97:24> 'int' EnumConstant 0x9e87870 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f50c40 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f510c0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f510a0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f50d08 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f50cd8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f50cc0 <line:97:24> 'int' EnumConstant 0x9e87870 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f50cf0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f50e00 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f50df0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f50dc8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f50db0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f50d80 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f50d68 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f50d20 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f50d50 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f50d38 <line:97:24> 'int' EnumConstant 0x9e87870 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f50d98 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f51088 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f51068 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f50e60 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f50e30 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f50e18 <line:97:24> 'int' EnumConstant 0x9e87870 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f50e48 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f50f58 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f50f48 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f50f20 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f50f08 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f50ed8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f50ec0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f50e78 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f50ea8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f50e90 <line:97:24> 'int' EnumConstant 0x9e87870 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f50ef0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f51050 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f51040 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f51018 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f51000 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f50fd0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f50fb8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f50f70 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f50fa0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f50f88 <line:97:24> 'int' EnumConstant 0x9e87870 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f50fe8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x9f516e8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x9f516c8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x9f51190 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x9f51160 <col:3, col:7> 'int'
        (DeclRefExpr 0x9f51144 <line:98:24> 'int' EnumConstant 0x9e878c0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x9f51178 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x9f51288 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x9f51278 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x9f51250 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x9f51238 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x9f51208 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x9f511f0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x9f511a8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x9f511d8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x9f511c0 <line:98:24> 'int' EnumConstant 0x9e878c0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x9f51220 <line:66:40> 'int' 24)))))
    (ParenExpr 0x9f516b0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x9f51690 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x9f512e8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x9f512b8 <col:6, col:10> 'int'
            (DeclRefExpr 0x9f512a0 <line:98:24> 'int' EnumConstant 0x9e878c0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x9f512d0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x9f513e0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x9f513d0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x9f513a8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x9f51390 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x9f51360 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x9f51348 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x9f51300 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x9f51330 <col:34, col:38> 'int'
                      (DeclRefExpr 0x9f51318 <line:98:24> 'int' EnumConstant 0x9e878c0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x9f51378 <line:67:44> 'int' 8)))))
        (ParenExpr 0x9f51678 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x9f51658 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x9f51440 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x9f51410 <col:9, col:13> 'int'
                (DeclRefExpr 0x9f513f8 <line:98:24> 'int' EnumConstant 0x9e878c0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x9f51428 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x9f51548 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x9f51538 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x9f51510 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x9f514f8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x9f514c8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x9f514b0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f51458 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x9f51488 <col:37, col:41> 'int'
                          (DeclRefExpr 0x9f51470 <line:98:24> 'int' EnumConstant 0x9e878c0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f514e0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x9f51640 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x9f51630 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x9f51608 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x9f515f0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x9f515c0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x9f515a8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x9f51560 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x9f51590 <col:26, col:30> 'int'
                          (DeclRefExpr 0x9f51578 <line:98:24> 'int' EnumConstant 0x9e878c0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x9f515d8 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
extern "C" {
    typedef __intptr_t intptr_t;
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x9f725a8 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f673e4 <col:26> 'int' EnumConstant 0x9f673b0 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x9f725b8 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f72218 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x9f721e4 <line:468:33> 'int' EnumConstant 0x9f71e30 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x9f72200 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x9f77688 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f727a8 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x9f77698 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f729b8 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
extern "C" {
    struct stat {
        struct stat;
        __dev_t st_dev;
        unsigned short __pad1;
        __ino_t st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned short __pad2;
        __off_t st_size;
        __blksize_t st_blksize;
        __blkcnt_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        unsigned long __unused4;
        unsigned long __unused5;
    };
    struct stat64 {
        struct stat64;
        __dev_t st_dev;
        unsigned int __pad1;
        __ino_t __st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned int __pad2;
        __off64_t st_size;
        __blksize_t st_blksize;
        __blkcnt64_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        __ino64_t st_ino;
    };
    extern int stat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int fstat(int __fd, struct stat *__buf) throw();
    extern int stat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int fstat64(int __fd, struct stat64 *__buf) throw();
    extern int fstatat(int __fd, const char *restrict __file, struct stat *restrict __buf, int __flag) throw();
    extern int fstatat64(int __fd, const char *restrict __file, struct stat64 *restrict __buf, int __flag) throw();
    extern int lstat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int lstat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int chmod(const char *__file, __mode_t __mode) throw();
    extern int lchmod(const char *__file, __mode_t __mode) throw();
    extern int fchmod(int __fd, __mode_t __mode) throw();
    extern int fchmodat(int __fd, const char *__file, __mode_t __mode, int __flag) throw();
    extern __mode_t umask(__mode_t __mask) throw();
    extern __mode_t getumask() throw();
    extern int mkdir(const char *__path, __mode_t __mode) throw();
    extern int mkdirat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int mknod(const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mknodat(int __fd, const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mkfifo(const char *__path, __mode_t __mode) throw();
    extern int mkfifoat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int utimensat(int __fd, const char *__path, const struct timespec __times[2], int __flags) throw();
    extern int futimens(int __fd, const struct timespec __times[2]) throw();
    extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf) throw();
    extern int __xstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __lxstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __fxstatat(int __ver, int __fildes, const char *__filename, struct stat *__stat_buf, int __flag) throw();
    extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf) throw();
    extern int __xstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __lxstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __fxstatat64(int __ver, int __fildes, const char *__filename, struct stat64 *__stat_buf, int __flag) throw();
    extern int __xmknod(int __ver, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
    extern int __xmknodat(int __ver, int __fd, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
}
extern "C" {
    struct dirent {
        struct dirent;
        __ino_t d_ino;
        __off_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    struct dirent64 {
        struct dirent64;
        __ino64_t d_ino;
        __off64_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    enum  {
        DT_UNKNOWN = (ImplicitCastExpr 0x9f9d5e8 </usr/include/dirent.h:101:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d310 <col:18> 'int' 0))
,
        DT_FIFO = (ImplicitCastExpr 0x9f9d5f8 </usr/include/dirent.h:103:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d368 <col:15> 'int' 1))
,
        DT_CHR = (ImplicitCastExpr 0x9f9d608 </usr/include/dirent.h:105:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d3b8 <col:14> 'int' 2))
,
        DT_DIR = (ImplicitCastExpr 0x9f9d618 </usr/include/dirent.h:107:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d408 <col:14> 'int' 4))
,
        DT_BLK = (ImplicitCastExpr 0x9f9d628 </usr/include/dirent.h:109:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d458 <col:14> 'int' 6))
,
        DT_REG = (ImplicitCastExpr 0x9f9d638 </usr/include/dirent.h:111:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d4a8 <col:14> 'int' 8))
,
        DT_LNK = (ImplicitCastExpr 0x9f9d648 </usr/include/dirent.h:113:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d4f8 <col:14> 'int' 10))
,
        DT_SOCK = (ImplicitCastExpr 0x9f9d658 </usr/include/dirent.h:115:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d548 <col:15> 'int' 12))
,
        DT_WHT = (ImplicitCastExpr 0x9f9d668 </usr/include/dirent.h:117:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f9d598 <col:14> 'int' 14))

    };
    struct __dirstream;
    typedef struct __dirstream DIR;
    extern DIR *opendir(const char *__name);
    extern DIR *fdopendir(int __fd);
    extern int closedir(DIR *__dirp);
    extern struct dirent *readdir(DIR *__dirp);
    extern struct dirent64 *readdir64(DIR *__dirp);
    extern int readdir_r(DIR *restrict __dirp, struct dirent *restrict __entry, struct dirent **restrict __result);
    extern int readdir64_r(DIR *restrict __dirp, struct dirent64 *restrict __entry, struct dirent64 **restrict __result);
    extern void rewinddir(DIR *__dirp) throw();
    extern void seekdir(DIR *__dirp, long __pos) throw();
    extern long telldir(DIR *__dirp) throw();
    extern int dirfd(DIR *__dirp) throw();
    extern int scandir(const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandir64(const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int scandirat(int __dfd, const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandirat64(int __dfd, const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int alphasort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int alphasort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
    extern __ssize_t getdirentries(int __fd, char *restrict __buf, size_t __nbytes, __off_t *restrict __basep) throw();
    extern __ssize_t getdirentries64(int __fd, char *restrict __buf, size_t __nbytes, __off64_t *restrict __basep) throw();
    extern int versionsort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int versionsort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0x9fd24c8 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0x9fd24b0 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0x9fd2530 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0x9fd2518 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0x9fd2708 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0x9fd29d8 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd27c0 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0x9fd2c68 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd2a50 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0x9fd2d78 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd2ce0 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0x9fd2ec8 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd2df0 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0x9fd2fd8 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd2f40 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0x9fd31e8 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd3050 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0x9fd6628 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd6498 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0x9fd6fb8 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd6e90 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0x9fd6fc8 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fd6f68 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0x9fed268 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fed1d0 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0x9fedb18 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9fed640 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef char tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0x9ff5ca8 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0x9ff5c98 <line:18:5, col:18>
    (ConditionalOperator 0x9ff5c78 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9ff5c30 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0x9ff5c00 <col:12> 'T' lvalue ParmVar 0x9ff5a90 'a' 'T')
        (DeclRefExpr 0x9ff5c18 <col:14> 'T' lvalue ParmVar 0x9ff5ad0 'b' 'T'))
      (DeclRefExpr 0x9ff5c48 <col:16> 'T' lvalue ParmVar 0x9ff5a90 'a' 'T')
      (DeclRefExpr 0x9ff5c60 <col:18> 'T' lvalue ParmVar 0x9ff5ad0 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0x9ff5f18 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0x9ff5f08 <line:27:5, col:18>
    (ConditionalOperator 0x9ff5ee8 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x9ff5ea0 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0x9ff5e70 <col:12> 'T' lvalue ParmVar 0x9ff5d20 'a' 'T')
        (DeclRefExpr 0x9ff5e88 <col:14> 'T' lvalue ParmVar 0x9ff5d60 'b' 'T'))
      (DeclRefExpr 0x9ff5eb8 <col:16> 'T' lvalue ParmVar 0x9ff5d20 'a' 'T')
      (DeclRefExpr 0x9ff5ed0 <col:18> 'T' lvalue ParmVar 0x9ff5d60 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa0d10e8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa4a8cd0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4a8a24 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa0d7fc0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa0d1200 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa0d1220 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc> class allocator;
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb338 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa0bb320 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa0bb2e0 <col:9> 'char_type':'char' lvalue ParmVar 0xa0b9080 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bb310 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa0bb2f8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb3e8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa0bb3d8 <col:9, col:24>
    (BinaryOperator 0xa0bb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bb390 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb380 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb34c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9230 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb3b0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb3a0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb364 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa0b9280 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb498 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa0bb488 <col:9, col:23>
    (BinaryOperator 0xa0bb470 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bb440 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb430 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb3fc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b93a0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb460 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb450 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb414 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa0b93f0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bb5c0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa0bb5b0 <col:9, col:48>
    (CallExpr 0xa0bb538 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa0bb528 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb4ac <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa0bb570 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb560 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4c4 <col:33> 'const char_type *' lvalue ParmVar 0xa0b94f0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb590 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb580 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4dc <col:39> 'const char_type *' lvalue ParmVar 0xa0b9540 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb5a0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bb4f4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bb758 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa0bb748 <col:9, col:36>
    (CallExpr 0xa0bb718 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa0bb708 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb6b4 <col:16> 'unsigned int (const char *)' lvalue Function 0xa0bb5e0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa0bb738 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bb6cc <col:33> 'const char_type *' lvalue ParmVar 0xa0b9690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bba18 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa0bba08 <col:9, col:77>
    (CXXStaticCastExpr 0xa0bb9f0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa0bb968 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa0bb958 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bb8d4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa0bb770 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bb9a0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bb990 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bb8ec <col:63> 'const char_type *' lvalue ParmVar 0xa0b9790 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa0bb9c0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bb9b0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bb904 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa0b9820 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa0bb9d0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bb91c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa0b97d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbb68 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa0bbb58 <col:9, col:74>
    (CXXStaticCastExpr 0xa0bbb40 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbab8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa0bbaa8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bba2c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa086460 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbaf0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbae0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba44 <col:58> 'char_type *' lvalue ParmVar 0xa0b9980 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbb10 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbb00 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba5c <col:64> 'const char_type *' lvalue ParmVar 0xa0b99d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbb20 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bba74 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9a10 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbe08 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa0bbdf8 <col:9, col:73>
    (CXXStaticCastExpr 0xa0bbde0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbd58 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa0bbd48 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbce4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbd90 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbd80 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbcfc <col:57> 'char_type *' lvalue ParmVar 0xa0b9b20 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbdb0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbda0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbd14 <col:63> 'const char_type *' lvalue ParmVar 0xa0baa50 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbdc0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbd2c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa0baa90 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0bbf58 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa0bbf48 <col:9, col:71>
    (CXXStaticCastExpr 0xa0bbf30 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbea8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa0bbe98 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbe1c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa092370 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bbee0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbed0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbe34 <col:57> 'char_type *' lvalue ParmVar 0xa0bab70 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa0bbf00 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bbef0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bbe4c <col:62> 'char_type':'char' lvalue ParmVar 0xa0babf0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa0bbf10 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbe64 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa0babb0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0bbfd8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa0bbfc8 <col:9, col:42>
    (CXXStaticCastExpr 0xa0bbfb0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa0bbfa0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa0bbf90 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa0bbf6c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa0bad80 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0bc090 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa0bc080 <col:9, col:69>
    (CXXStaticCastExpr 0xa0bc068 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa0bc058 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa0bc038 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa0bc028 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa0bc018 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa0bbfec <col:65> 'const char_type':'const char' lvalue ParmVar 0xa0baea0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0bc120 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa0bc110 <col:9, col:24>
    (BinaryOperator 0xa0bc0f8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bc0d8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0a4 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa0bafc0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0bc0e8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0bc <col:24> 'const int_type':'const int' lvalue ParmVar 0xa0bb010 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0bc198 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa0bc188 <col:9, col:56>
    (CXXStaticCastExpr 0xa0bc170 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa0bc150 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa0bc138 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0bc2f8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa0bc2e8 <col:9, col:37>
    (ConditionalOperator 0xa0bc2c8 <col:16, col:37> 'int'
      (ParenExpr 0xa0bc270 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa0bc258 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa0bc248 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0bc1ac <col:17> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &'))
          (CallExpr 0xa0bc228 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa0bc218 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0bc1c4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa0bb150 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0bc288 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0bc2b8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc2a0 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf968 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa0bf950 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa0bf910 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0bc6b0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bf940 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa0bf928 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc740 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf9f8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa0bf9e8 <col:9, col:24>
    (BinaryOperator 0xa0bf9d0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bf9b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf97c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc860 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bf9c0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf994 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc8b0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bfa88 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0bfa78 <col:9, col:23>
    (BinaryOperator 0xa0bfa60 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bfa40 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa0c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc9d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bfa50 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa24 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0be920 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bfbf0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa0bfbe0 <col:9, col:39>
    (CallExpr 0xa0bfb88 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0bfb78 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfb1c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea2d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab010 'wmemcmp')))
      (ImplicitCastExpr 0xa0bfbb0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfad4 <col:24> 'const char_type *' lvalue ParmVar 0xa0bea20 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbc0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfaec <col:30> 'const char_type *' lvalue ParmVar 0xa0bea70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbd0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfb04 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0beab0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bfcf8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa0bfce8 <col:9, col:26>
    (CallExpr 0xa0bfcb8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa0bfca8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfc54 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9ee9c10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa0aaa60 'wcslen')))
      (ImplicitCastExpr 0xa0bfcd8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfc3c <col:23> 'const char_type *' lvalue ParmVar 0xa0bebc0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bfe38 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa0bfe28 <col:9, col:37>
    (ImplicitCastExpr 0xa0bfe18 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa0bfdc0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa0bfdb0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bfd90 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea120 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab470 'wmemchr')))
        (ImplicitCastExpr 0xa0bfde8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bfd48 <col:24> 'const char_type *' lvalue ParmVar 0xa0becc0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa0bfdf8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0bfd60 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bed50 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa0bfe08 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bfd78 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bed00 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bffa0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa0bff90 <col:9, col:40>
    (CallExpr 0xa0bff38 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa0bff28 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfecc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea620 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab0f0 'wmemmove')))
      (ImplicitCastExpr 0xa0bff60 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe84 <col:25> 'char_type *' lvalue ParmVar 0xa0beeb0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0bff70 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe9c <col:31> 'const char_type *' lvalue ParmVar 0xa0bef00 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bff80 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfeb4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa0bef40 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0c00e0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa0c00d0 <col:9, col:39>
    (CallExpr 0xa0c0078 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa0c0068 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0034 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9eea480 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa0ab080 'wmemcpy')))
      (ImplicitCastExpr 0xa0c00a0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bffec <col:24> 'char_type *' lvalue ParmVar 0xa0bf050 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0c00b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c0004 <col:30> 'const char_type *' lvalue ParmVar 0xa0bf0a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0c00c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c001c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf0e0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0c0240 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa0c0230 <col:9, col:37>
    (CallExpr 0xa0c01d8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa0c01c8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0174 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea820 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab160 'wmemset')))
      (ImplicitCastExpr 0xa0c0200 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c012c <col:24> 'char_type *' lvalue ParmVar 0xa0bf1c0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa0c0210 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0c0144 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa0bf240 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa0c0220 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c015c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf200 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0c02c0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0c02b0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0c0298 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0c0288 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0c0278 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0c0260 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf3b0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0c0340 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa0c0330 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa0c0318 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa0c0308 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa0c02f8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0c02e0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bf4d0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0c03d0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0c03c0 <col:9, col:24>
    (BinaryOperator 0xa0c03a8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0c0388 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c0354 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf5f0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0c0398 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c036c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf640 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0c0448 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa0c0438 <col:9, col:42>
    (CXXStaticCastExpr 0xa0c0420 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa0c0400 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa0c03e8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0c0620 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa0c0610 <col:9, col:46>
    (ConditionalOperator 0xa0c05f0 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa0c0568 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa0c0558 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c045c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa0bf6e0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0c0474 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0c0590 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa0c04f8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa0c04e8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0c048c <col:33> 'int_type (void)' lvalue CXXMethod 0xa0bf780 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa0c05e0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0c05a0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa0c05d0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c05b8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa4a8838 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa4a8698 <line:180:4, col:62>
    0xa4a84c0 "void *__p =
      (CXXReinterpretCastExpr 0xa4a8680 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa4a8668 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa4a8610 <col:41> 'size_type []' lvalue Var 0xa244d70 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa4a8828 <line:181:4, col:39>
    (UnaryOperator 0xa4a8810 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa4a87f8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa4a87e8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa4a87cc <col:36> 'void *' lvalue Var 0xa4a84c0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa4a84a8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa4a8488 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4a81b0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa4a8168 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa4a8158 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1a80dc <col:8> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa4a8190 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa4a8140 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa4a7fa0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa4a8128 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa4a8108 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa4a80f8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa4a80c0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa244ef0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa4a81a0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa1a81c8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa4a8470 <line:236:6, line:245:6>
      (NullStmt 0xa1a8200 <line:238:67>)
      (IfStmt 0xa4a8450 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa4a82a8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa4a8280 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa4a8270 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1a8230 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181750 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa4a8258 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa4a8238 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa244540
                (ImplicitCastExpr 0xa4a8228 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa4a8200 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa1a82c8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa1a82b0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa1a8308 <col:16> 'int' 0))
        (CompoundStmt 0xa4a8438 <line:241:3, line:244:3>
          (NullStmt 0xa1a8388 <line:242:63>)
          (CXXMemberCallExpr 0xa4a8418 <line:243:5, col:19> 'void'
            (MemberExpr 0xa4a83e0 <col:5> '<bound member function type>' ->_M_destroy 0xa245ba0
              (CXXThisExpr 0xa4a82c0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa4a8400 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa245a80 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa4a7700 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa223f18 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa223f08 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa1846f0 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa1846d8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa4a7f40 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4a7f30 <col:9, col:29>
    (ImplicitCastExpr 0xa4a7f20 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa4a7f00 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa2244a0
        (MemberExpr 0xa4a7ee0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa2244d0
          (CXXThisExpr 0xa4a7dc0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa4a7da8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa4a7d98 <col:9, col:59>
    (UnaryOperator 0xa4a7d80 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa4a7d68 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4a7d50 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa4a7d38 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4a7d20 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa4a7d00 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa4a7ce0 <col:44> '<bound member function type>' ->_M_data 0xa224550
                  (CXXThisExpr 0xa4a7cd0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa1a8a48 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa1a8a30 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa4a7650 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa4a7630 <col:9, col:51> 'void'
    (CXXTemporary 0xa4a75b0)
    (CXXMemberCallExpr 0xa4a75c8 <col:9, col:51> 'void'
      (MemberExpr 0xa4a752c <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa245ad0
        (CXXMemberCallExpr 0xa4a7500 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa4a74e0 <col:9> '<bound member function type>' ->_M_rep 0xa224840
            (ImplicitCastExpr 0xa4a7520 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa4a73c0 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa4a7620 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa4a7610 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa4a75b8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa4a75b0)
            (CXXMemberCallExpr 0xa4a7580 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa4a7560 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa23c310
                (ImplicitCastExpr 0xa4a75a0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa4a7550 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa4aa180 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa4aa170 <col:9, col:26>
    (ImplicitCastExpr 0xa4aa160 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa4aa140 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa2443c0
        (ImplicitCastExpr 0xa4aa130 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa4aa110 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa4aa0f0 <col:16> '<bound member function type>' ->_M_rep 0xa224840
              (CXXThisExpr 0xa4a9fd0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa4a9fb8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa4a9fa8 <col:9, col:32>
    (BinaryOperator 0xa4a9f90 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa4a9f60 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa4a9f40 <col:16, col:22> '<bound member function type>' ->size 0xa22b760
          (CXXThisExpr 0xa4a9f30 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa4a9f80 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1afdf8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa4aa820 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4aa2a8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa4aa250 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa4aa240 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa4aa1d4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa22ccc0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa4aa220 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa4aa200 <col:13, col:19> '<bound member function type>' ->size 0xa22b760
          (CXXThisExpr 0xa4aa1f0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa4aa278 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4aa268 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b0264 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4aa298 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b0250 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b0220 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa4aa810 <line:859:2, col:22>
    (ImplicitCastExpr 0xa4aa800 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa4aa7e8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa4aa7a0 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa4aa780 <col:9> '<bound member function type>' ->_M_data 0xa224550
            (CXXThisExpr 0xa4aa770 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa4aa7d8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa4aa7bc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa22ccc0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa4aad50 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa4aad40 <col:9, col:24>
    (ImplicitCastExpr 0xa4aad30 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa4aad10 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa4aacf0 <col:16> '<bound member function type>' ->_M_data 0xa224550
          (CXXThisExpr 0xa4aace0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa4a8a10 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa4a8a00 <col:9, col:16>
    (CXXConstructExpr 0xa4a89d8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa4a89c8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa4a89b8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa4a8970 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa2244d0
            (CXXThisExpr 0xa4a8850 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa1fc9e8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa1fc9d8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa1846f0 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa1846d8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa4a9830 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4a9820 <col:9, col:29>
    (ImplicitCastExpr 0xa4a9810 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa4a97f0 <col:17, col:29> 'char *' lvalue ._M_p 0xa1fcf70
        (MemberExpr 0xa4a97d0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa1fcfa0
          (CXXThisExpr 0xa4a96b0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa4a9698 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa4a9688 <col:9, col:59>
    (UnaryOperator 0xa4a9670 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa4a9658 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4a9640 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa4a9628 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4a9610 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa4a95f0 <col:44, col:52> 'char *'
                (MemberExpr 0xa4a95d0 <col:44> '<bound member function type>' ->_M_data 0xa1fd020
                  (CXXThisExpr 0xa4a95c0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa1a8a48 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa1a8a30 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa4a8fe8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa4a8fd8 <col:9, col:26>
    (ImplicitCastExpr 0xa4a8fc8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa4a8fa8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa21eea0
        (ImplicitCastExpr 0xa4a8f98 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa4a8f60 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa4a8f40 <col:16> '<bound member function type>' ->_M_rep 0xa1fd2f0
              (CXXThisExpr 0xa4a8e18 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa4a8e00 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa4a8df0 <col:9, col:32>
    (BinaryOperator 0xa4a8dd8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa4a8da8 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa4a8d88 <col:16, col:22> '<bound member function type>' ->size 0xa206280
          (CXXThisExpr 0xa4a8d78 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa4a8dc8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1afdf8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa4a9ed0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4a9958 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa4a9900 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa4a98f0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa4a9884 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa2077e0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa4a98d0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa4a98b0 <col:13, col:19> '<bound member function type>' ->size 0xa206280
          (CXXThisExpr 0xa4a98a0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa4a9928 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4a9918 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b0264 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4a9948 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b0250 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b0220 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa4a9ec0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa4a9eb0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa4a9e98 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa4a9e50 <col:9, col:17> 'char *'
          (MemberExpr 0xa4a9e30 <col:9> '<bound member function type>' ->_M_data 0xa1fd020
            (CXXThisExpr 0xa4a9e20 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa4a9e88 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa4a9e6c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa2077e0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa4a2938 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa4a28e8 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa4a26a8 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa4a2698 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa4a2674 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0xa024250 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0xa4a28d0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa4a28c0 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa4a289c <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0xa4a2820 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa4a2e68 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa4a2e18 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa4a2bd0 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa4a2bc0 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa4a2ba0 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0xa4a2900 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0xa4a2e00 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa4a2df0 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa4a2dcc <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0xa4a2d50 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0xa01f720 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0xa01f688 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0xa01f660 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0xa01f700 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0xa01f6d8 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0xa0202a0 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0xa020730 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0xa020dd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa020d80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0xa020a80 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0xa020dd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa020d80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa038008 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa021d30 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa03a2f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa021d30 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa025908 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0258b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa022398 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022340 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa023c68 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023c10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa023f78 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023f20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa024288 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa024230 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0255f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0255a0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa023958 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023900 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa024598 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa024540 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa022088 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022030 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa025c18 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa025bc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa039d88 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa021d30 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0252e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa025290 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0226a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022650 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0229b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022960 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0xa021d30 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa022088 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022030 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa022398 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022340 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0226a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022650 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0229b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa022960 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa023958 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023900 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa023c68 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023c10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa023f78 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa023f20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa024288 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa024230 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa024598 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa024540 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0252e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa025290 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa0255f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0255a0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa025908 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0258b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa025c18 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa025bc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa0275a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa027550 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa026f88 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa026f30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa4a2858 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa025f20 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa027298 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa027240 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0xa025f20 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa026f88 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa026f30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa027298 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa027240 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa0275a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa027550 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0xa4a2d88 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0278b0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0xa0278b0 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0xa027cd0 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa4a12a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa029ce0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0xa029ce0 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0xa02a260 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa02c828 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02c7d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa02d808 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02d7b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0xa02c4d0 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa02c828 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02c7d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa02d808 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02d7b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa02de68 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02de10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa02e178 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02e120 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa02e488 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02e430 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0xa02db10 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa02de68 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02de10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa02e178 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02e120 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa02e488 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa02e430 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0xa02f710 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0xa037398 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0xa037388 <col:7, col:23>
    (BinaryOperator 0xa037370 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0xa03733c <col:14> '_Type *' lvalue ParmVar 0xa037210 '__ptr' '_Type *')
      (IntegerLiteral 0xa037358 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0xa037560 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0xa037550 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa037540 <col:14> '_Bool' false)))

;
    template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0xa037680 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0xa30be30 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa30be18 <col:3, col:68> 'int'
    (ConditionalOperator 0xa30bdf8 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa30bc50 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa30bc38 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa30bc28 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa30bc10 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa30bc00 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0xa03e1a8 <col:37, col:40> 'int'
                  (UnaryOperator 0xa03e190 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa03e178 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa03e1e0 <col:44> 'int' 0)))
      (BinaryOperator 0xa30bda0 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa30bd90 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa30bc80 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa30bc70 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0xa03e228 <col:33> 'int' 1))))
        (ParenExpr 0xa30bd78 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa30bd60 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa30bcc8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa30bca0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0xa30bcb8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa03e280 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa30bd50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa30bd38 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa30bd20 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa30bd10 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa30bcf8 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0xa30bce8 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0xa03e2f0 <col:37, col:40> 'int'
                          (UnaryOperator 0xa03e2d8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0xa03e2c0 <col:39> 'int' 1))))))
                  (IntegerLiteral 0xa03e328 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa30bde8 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa30bdd0 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0xa30bdc0 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0xa03e3b8 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0xa30c1d0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa30c1b8 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa30c198 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa30bef0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa30bed8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa30bec8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa30beb0 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa30bea0 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0xa03e498 <col:37, col:40> 'int'
                  (UnaryOperator 0xa03e480 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa03e468 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa03e4d0 <col:44> 'int' 0)))
      (ParenExpr 0xa30c128 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa30c110 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa30c0f8 <col:5, col:56> 'int'
            (BinaryOperator 0xa30c0e0 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa30c0c8 <col:6, col:50> 'int'
                (BinaryOperator 0xa30c0b0 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa30c098 <col:7, col:45> 'int'
                    (BinaryOperator 0xa30c080 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa30c070 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa30bf20 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0xa30bf10 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0xa03e518 <col:13> 'int' 1))))
                      (ParenExpr 0xa30c058 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa30c040 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa30c018 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa30c000 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa30bf68 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa30bf40 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0xa30bf58 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0xa03e570 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa30bff0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa30bfd8 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa30bfc0 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa30bfb0 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa30bf98 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0xa30bf88 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0xa03e5e0 <col:37, col:40> 'int'
                                            (UnaryOperator 0xa03e5c8 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0xa03e5b0 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0xa03e618 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa30c030 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0xa03e690 <col:43> 'int' 1))))))
                  (IntegerLiteral 0xa03e708 <col:49> 'int' 1)))
              (IntegerLiteral 0xa03e750 <col:55> 'int' 1)))
          (IntegerLiteral 0xa03e798 <col:60> 'int' 1)))
      (UnaryOperator 0xa30c180 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa30c170 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa30c158 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa30c148 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0xa03e7e0 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa30c280 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa30c268 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa30c258 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa30c240 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0xa30c230 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0xa03e8d8 <col:37, col:40> 'int'
            (UnaryOperator 0xa03e8c0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa03e8a8 <col:39> 'int' 1))))))
    (IntegerLiteral 0xa03e910 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa30c3e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa30c3c8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa30c3b0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa30c318 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa30c2f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0xa30c308 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa03e9c8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa30c3a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa30c388 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa30c370 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa30c360 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa30c348 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0xa30c338 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0xa03ea38 <col:37, col:40> 'int'
                    (UnaryOperator 0xa03ea20 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0xa03ea08 <col:39> 'int' 1))))))
            (IntegerLiteral 0xa03ea70 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0xa3b73d0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa3b73b8 <col:3, col:68> 'int'
    (ConditionalOperator 0xa3b7398 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa3b71f0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa3b71d8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa3b71c8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa3b71b0 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa3b71a0 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0xa03e1a8 <col:37, col:40> 'int'
                  (UnaryOperator 0xa03e190 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa03e178 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa03e1e0 <col:44> 'int' 0)))
      (BinaryOperator 0xa3b7340 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa3b7330 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa3b7220 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa3b7210 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0xa03e228 <col:33> 'int' 1))))
        (ParenExpr 0xa3b7318 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa3b7300 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa3b7268 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa3b7240 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0xa3b7258 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa03e280 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa3b72f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa3b72d8 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa3b72c0 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa3b72b0 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa3b7298 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0xa3b7288 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0xa03e2f0 <col:37, col:40> 'int'
                          (UnaryOperator 0xa03e2d8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0xa03e2c0 <col:39> 'int' 1))))))
                  (IntegerLiteral 0xa03e328 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa3b7388 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa3b7370 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0xa3b7360 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0xa03e3b8 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0xa3b7770 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa3b7758 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa3b7738 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa3b7490 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa3b7478 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa3b7468 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa3b7450 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa3b7440 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0xa03e498 <col:37, col:40> 'int'
                  (UnaryOperator 0xa03e480 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa03e468 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa03e4d0 <col:44> 'int' 0)))
      (ParenExpr 0xa3b76c8 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa3b76b0 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa3b7698 <col:5, col:56> 'int'
            (BinaryOperator 0xa3b7680 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa3b7668 <col:6, col:50> 'int'
                (BinaryOperator 0xa3b7650 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa3b7638 <col:7, col:45> 'int'
                    (BinaryOperator 0xa3b7620 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa3b7610 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa3b74c0 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0xa3b74b0 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0xa03e518 <col:13> 'int' 1))))
                      (ParenExpr 0xa3b75f8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa3b75e0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa3b75b8 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa3b75a0 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa3b7508 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa3b74e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0xa3b74f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0xa03e570 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa3b7590 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa3b7578 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa3b7560 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa3b7550 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa3b7538 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0xa3b7528 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0xa03e5e0 <col:37, col:40> 'int'
                                            (UnaryOperator 0xa03e5c8 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0xa03e5b0 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0xa03e618 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa3b75d0 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0xa03e690 <col:43> 'int' 1))))))
                  (IntegerLiteral 0xa03e708 <col:49> 'int' 1)))
              (IntegerLiteral 0xa03e750 <col:55> 'int' 1)))
          (IntegerLiteral 0xa03e798 <col:60> 'int' 1)))
      (UnaryOperator 0xa3b7720 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa3b7710 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa3b76f8 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa3b76e8 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0xa03e7e0 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa3b7820 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa3b7808 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa3b77f8 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa3b77e0 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0xa3b77d0 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0xa03e8d8 <col:37, col:40> 'int'
            (UnaryOperator 0xa03e8c0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa03e8a8 <col:39> 'int' 1))))))
    (IntegerLiteral 0xa03e910 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa3b7980 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa3b7968 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa3b7950 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa3b78b8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa3b7890 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0xa3b78a8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa03e9c8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa3b7940 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa3b7928 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa3b7910 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa3b7900 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa3b78e8 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0xa3b78d8 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0xa03ea38 <col:37, col:40> 'int'
                    (UnaryOperator 0xa03ea20 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0xa03ea08 <col:39> 'int' 1))))))
            (IntegerLiteral 0xa03ea70 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0xa1ae268 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0xa1ae248 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0xa1ae100 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa1ae0e8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa1ae0d0 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0xa03e1a8 <col:37, col:40> 'int'
            (UnaryOperator 0xa03e190 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa03e178 <col:39> 'int' 1))))
        (IntegerLiteral 0xa03e1e0 <col:44> 'int' 0)))
    (BinaryOperator 0xa1ae210 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0xa1ae120 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0xa03e228 <col:33> 'int' 1))
      (ParenExpr 0xa1ae1f8 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0xa1ae1e0 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0xa1ae168 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa1ae140 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0xa1ae158 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa03e280 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa1ae1d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0xa1ae1b8 <col:31, col:45> '_Bool'
              (BinaryOperator 0xa1ae1a0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0xa1ae188 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0xa03e2f0 <col:37, col:40> 'int'
                    (UnaryOperator 0xa03e2d8 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0xa03e2c0 <col:39> 'int' 1))))
                (IntegerLiteral 0xa03e328 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0xa1ae230 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0xa03e3b8 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0xa1ae578 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0xa1ae558 <line:42:31, line:51:71> 'int'
    (ParenExpr 0xa1ae310 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa1ae2f8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa1ae2e0 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0xa03e498 <col:37, col:40> 'int'
            (UnaryOperator 0xa03e480 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa03e468 <col:39> 'int' 1))))
        (IntegerLiteral 0xa03e4d0 <col:44> 'int' 0)))
    (ParenExpr 0xa1ae508 <line:51:4, col:61> 'int'
      (BinaryOperator 0xa1ae4f0 <col:5, col:60> 'int' '+'
        (ParenExpr 0xa1ae4d8 <col:5, col:56> 'int'
          (BinaryOperator 0xa1ae4c0 <col:6, col:55> 'int' '<<'
            (ParenExpr 0xa1ae4a8 <col:6, col:50> 'int'
              (BinaryOperator 0xa1ae490 <col:7, col:49> 'int' '-'
                (ParenExpr 0xa1ae478 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0xa1ae460 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0xa1ae330 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0xa03e518 <col:13> 'int' 1))
                    (ParenExpr 0xa1ae448 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0xa1ae430 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0xa1ae408 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0xa1ae3f0 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0xa1ae378 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa1ae350 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0xa1ae368 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0xa03e570 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0xa1ae3e0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0xa1ae3c8 <col:31, col:45> '_Bool'
                                (BinaryOperator 0xa1ae3b0 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0xa1ae398 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0xa03e5e0 <col:37, col:40> 'int'
                                      (UnaryOperator 0xa03e5c8 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0xa03e5b0 <col:39> 'int' 1))))
                                  (IntegerLiteral 0xa03e618 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0xa1ae420 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa03e690 <col:43> 'int' 1))))))
                (IntegerLiteral 0xa03e708 <col:49> 'int' 1)))
            (IntegerLiteral 0xa03e750 <col:55> 'int' 1)))
        (IntegerLiteral 0xa03e798 <col:60> 'int' 1)))
    (UnaryOperator 0xa1ae540 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0xa1ae528 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0xa03e7e0 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0xa1ae610 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa1ae5f8 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0xa1ae5e0 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0xa03e8d8 <col:37, col:40> 'int'
        (UnaryOperator 0xa03e8c0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0xa03e8a8 <col:39> 'int' 1))))
    (IntegerLiteral 0xa03e910 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa1ae750 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa1ae738 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa1ae720 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa1ae6a8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa1ae680 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0xa1ae698 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa03e9c8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa1ae710 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa1ae6f8 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa1ae6e0 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0xa1ae6c8 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0xa03ea38 <col:37, col:40> 'int'
                (UnaryOperator 0xa03ea20 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0xa03ea08 <col:39> 'int' 1))))
            (IntegerLiteral 0xa03ea70 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0xa26ec88 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0xa26ec68 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0xa26eae0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa26eac8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa26eaa0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa26ea90 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0xa03e1a8 <col:37, col:40> 'int'
              (UnaryOperator 0xa03e190 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0xa03e178 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa26eab8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa03e1e0 <col:44> 'int' 0))))
    (BinaryOperator 0xa26ec20 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0xa26eb10 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa26eb00 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa03e228 <col:33> 'int' 1)))
      (ParenExpr 0xa26ec08 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0xa26ebf0 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0xa26eb58 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa26eb30 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0xa26eb48 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa03e280 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa26ebe0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0xa26ebc8 <col:31, col:45> '_Bool'
              (BinaryOperator 0xa26ebb0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0xa26eb88 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0xa26eb78 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0xa03e2f0 <col:37, col:40> 'int'
                      (UnaryOperator 0xa03e2d8 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0xa03e2c0 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0xa26eba0 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0xa03e328 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0xa26ec50 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa26ec40 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0xa03e3b8 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0xa26f018 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0xa26eff8 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0xa26ed50 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa26ed38 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa26ed10 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa26ed00 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0xa03e498 <col:37, col:40> 'int'
              (UnaryOperator 0xa03e480 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0xa03e468 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa26ed28 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa03e4d0 <col:44> 'int' 0))))
    (ParenExpr 0xa26ef98 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0xa26ef80 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0xa26ef58 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0xa26ef40 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0xa26ef28 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0xa26ef10 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0xa26eee8 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0xa26eed0 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0xa26ed80 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0xa26ed70 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0xa03e518 <col:13> 'int' 1)))
                    (ParenExpr 0xa26eeb8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0xa26eea0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0xa26ee78 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0xa26ee60 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0xa26edc8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa26eda0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0xa26edb8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0xa03e570 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0xa26ee50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0xa26ee38 <col:31, col:45> '_Bool'
                                (BinaryOperator 0xa26ee20 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0xa26edf8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0xa26ede8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0xa03e5e0 <col:37, col:40> 'int'
                                        (UnaryOperator 0xa03e5c8 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0xa03e5b0 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0xa26ee10 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0xa03e618 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0xa26ee90 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa03e690 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0xa26ef00 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0xa03e708 <col:49> 'int' 1))))
            (IntegerLiteral 0xa03e750 <col:55> 'int' 1)))
        (ImplicitCastExpr 0xa26ef70 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa03e798 <col:60> 'int' 1))))
    (UnaryOperator 0xa26efe0 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0xa26efc8 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa26efb8 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa03e7e0 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0xa26f0d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa26f0b8 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0xa26f090 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa26f080 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0xa03e8d8 <col:37, col:40> 'int'
          (UnaryOperator 0xa03e8c0 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0xa03e8a8 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0xa26f0a8 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0xa03e910 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0xa26f230 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa26f218 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa26f200 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa26f168 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa26f140 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0xa26f158 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa03e9c8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa26f1f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa26f1d8 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa26f1c0 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0xa26f198 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0xa26f188 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0xa03ea38 <col:37, col:40> 'int'
                  (UnaryOperator 0xa03ea20 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa03ea08 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0xa26f1b0 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0xa03ea70 <col:44> 'int' 0))))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0xa03e410 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0xa03e3f0 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0xa03e210 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0xa03e1f8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0xa03e1c8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0xa03e1a8 <col:37, col:40> 'int'
            (UnaryOperator 0xa03e190 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa03e178 <col:39> 'int' 1))))
        (IntegerLiteral 0xa03e1e0 <col:44> 'int' 0)))
    (BinaryOperator 0xa03e3a0 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0xa03e248 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0xa03e228 <col:33> 'int' 1))
      (ParenExpr 0xa03e388 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0xa03e370 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0xa03e2a8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa03e268 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0xa03e298 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa03e280 <col:22> 'int' 8)))
          (ParenExpr 0xa03e358 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0xa03e340 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0xa03e310 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0xa03e2f0 <col:37, col:40> 'int'
                  (UnaryOperator 0xa03e2d8 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa03e2c0 <col:39> 'int' 1))))
              (IntegerLiteral 0xa03e328 <col:44> 'int' 0))))))
    (CStyleCastExpr 0xa03e3d8 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0xa03e3b8 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0xa03e850 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0xa03e830 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0xa03e500 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0xa03e4e8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0xa03e4b8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0xa03e498 <col:37, col:40> 'int'
            (UnaryOperator 0xa03e480 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa03e468 <col:39> 'int' 1))))
        (IntegerLiteral 0xa03e4d0 <col:44> 'int' 0)))
    (ParenExpr 0xa03e7c8 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0xa03e7b0 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0xa03e780 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0xa03e768 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0xa03e738 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0xa03e720 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0xa03e6f0 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0xa03e6d8 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0xa03e538 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0xa03e518 <col:13> 'int' 1))
                    (ParenExpr 0xa03e6c0 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0xa03e6a8 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0xa03e678 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0xa03e660 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0xa03e598 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa03e558 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0xa03e588 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0xa03e570 <col:22> 'int' 8)))
                            (ParenExpr 0xa03e648 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0xa03e630 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0xa03e600 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0xa03e5e0 <col:37, col:40> 'int'
                                    (UnaryOperator 0xa03e5c8 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0xa03e5b0 <col:39> 'int' 1))))
                                (IntegerLiteral 0xa03e618 <col:44> 'int' 0)))))
                        (IntegerLiteral 0xa03e690 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0xa03e708 <col:49> 'int' 1)))
            (IntegerLiteral 0xa03e750 <col:55> 'int' 1)))
        (IntegerLiteral 0xa03e798 <col:60> 'int' 1)))
    (UnaryOperator 0xa03e818 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0xa03e800 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0xa03e7e0 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0xa03e940 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0xa03e928 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0xa03e8f8 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0xa03e8d8 <col:37, col:40> 'int'
        (UnaryOperator 0xa03e8c0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0xa03e8a8 <col:39> 'int' 1))))
    (IntegerLiteral 0xa03e910 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0xa03ead0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0xa03eab8 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0xa03e9f0 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0xa03e9b0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0xa03e9e0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa03e9c8 <col:22> 'int' 8)))
    (ParenExpr 0xa03eaa0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0xa03ea88 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0xa03ea58 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0xa03ea38 <col:37, col:40> 'int'
            (UnaryOperator 0xa03ea20 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa03ea08 <col:39> 'int' 1))))
        (IntegerLiteral 0xa03ea70 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0xa043148 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0xa043130 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0xa043118 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0xa043108 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0xa042c88 <col:4> 'int' 2))
      (BinaryOperator 0xa0430f0 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0xa0430b0 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0xa0430a0 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0xa043070 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0xa043050 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0xa042e30 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0xa042e58 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0xa043030 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0xa042fd8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0xa043000 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0xa043018 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0xa043088 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0xa0430e0 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0xa0430c8 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0xa043198 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0xa043510 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0xa0434f0 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0xa043320 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0xa043348 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0xa0434d0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0xa043478 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0xa0434a0 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0xa0434b8 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0xa043890 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0xa043870 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0xa0436a0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0xa0436c8 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0xa043850 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0xa0437f8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0xa043820 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0xa043838 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0xa044e20 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0xa044e10 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0xa044df8 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0xa044dd0 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0xa044db8 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0xa044d58 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0xa044d0c <col:61> '_Tp' lvalue ParmVar 0xa044bc0 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0xa045248 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0xa045178 <line:127:7, col:37>
    0xa045110 "_Tp __tmp =
      (ParenExpr 0xa045160 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0xa045144 <line:127:33> '_Tp' lvalue ParmVar 0xa044f80 '__a' '_Tp &'))")
  (BinaryOperator 0xa0451d0 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0xa045188 <line:128:7> '_Tp' lvalue ParmVar 0xa044f80 '__a' '_Tp &')
    (ParenExpr 0xa0451b8 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0xa0451a0 <line:128:27> '_Tp' lvalue ParmVar 0xa044fd0 '__b' '_Tp &')))
  (BinaryOperator 0xa045230 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0xa0451e8 <line:129:7> '_Tp' lvalue ParmVar 0xa044fd0 '__b' '_Tp &')
    (ParenExpr 0xa045218 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0xa045200 <line:129:27> '_Tp' lvalue Var 0xa045110 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0xa045860 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0xa045838 <line:138:7, line:139:25>
    (DeclStmt 0xa0456b0 <line:138:12, col:26>
      0xa045650 "size_t __n =
        (ImplicitCastExpr 0xa0456a0 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa045688 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa045700 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0xa0456f0 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0456c0 <col:28> 'size_t':'unsigned int' lvalue Var 0xa045650 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0xa0456d8 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0xa0452e0 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0xa045730 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa045718 <col:41> 'size_t':'unsigned int' lvalue Var 0xa045650 '__n' 'size_t':'unsigned int'))
    (CallExpr 0xa045810 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa045748 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa045610 0xa0450d0)
      (ArraySubscriptExpr 0xa0457b0 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa045780 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0xa045430 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0xa045798 <col:11> 'size_t':'unsigned int' lvalue Var 0xa045650 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0xa0457f8 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0xa0457c4 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0xa045510 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0xa0457dc <col:21> 'size_t':'unsigned int' lvalue Var 0xa045650 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1 = unsigned long long, class _T2 = unsigned long> struct pair
template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0xa0463e0 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0xa0463f0 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0xa045e00 '__a' 'const _T1 &')
), second((DeclRefExpr 0xa04b438 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0xa045e90 '__b' 'const _T2 &')
) (CompoundStmt 0xa04b490 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0xa04b4b8 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0xa04b4a0 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0xa046230 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0xa04b540 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0xa04b528 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0xa046230 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0xa04b5c0 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa04bc98 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0xa04bc88 <col:7, col:58>
    (BinaryOperator 0xa04bc70 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa04bb48 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0xa04bb10 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40)
        (CXXDependentScopeMemberExpr 0xa04ba88 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa04ba70 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04b7d0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0xa04bad8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa04babc <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04b940 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0xa04bc48 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa04bc10 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40)
        (CXXDependentScopeMemberExpr 0xa04bb88 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0xa04bb6c <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04b7d0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0xa04bbd8 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0xa04bbbc <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04b940 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa04c498 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0xa04c488 <line:208:7, line:209:62>
    (BinaryOperator 0xa04c470 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa04c1e8 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa04c1b0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0)
        (CXXDependentScopeMemberExpr 0xa04c128 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa04c110 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04be90 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0xa04c178 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa04c15c <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04c000 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0xa04c458 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0xa04c440 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0xa04c328 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0xa04c310 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0xa04c2e8 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0xa04c2b0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0)
                (CXXDependentScopeMemberExpr 0xa04c228 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0xa04c20c <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04c000 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0xa04c278 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa04c25c <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04be90 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0xa04c418 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa04c3e0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0)
            (CXXDependentScopeMemberExpr 0xa04c358 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0xa04c33c <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04be90 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0xa04c3a8 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0xa04c38c <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04c000 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa04c9e0 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0xa04c9d0 <col:7, col:26>
    (UnaryOperator 0xa04c9b8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa04c9a0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa04c978 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa04c940 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40)
          (DeclRefExpr 0xa04c910 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04c690 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0xa04c928 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04c800 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa04cf00 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0xa04cef0 <col:7, col:20>
    (CXXOperatorCallExpr 0xa04cec8 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa04ce90 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0)
      (DeclRefExpr 0xa04ce60 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04cd50 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0xa04ce78 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04cbe0 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa051470 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0xa051460 <col:7, col:25>
    (UnaryOperator 0xa051448 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa051430 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa051408 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa04d3b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0)
          (DeclRefExpr 0xa04d380 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04d270 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0xa04d398 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0xa04d100 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa0519c0 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0xa0519b0 <col:7, col:25>
    (UnaryOperator 0xa051998 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa051980 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa051958 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa051920 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0)
          (DeclRefExpr 0xa0518f0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0xa051670 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0xa051908 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0xa0517e0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0xa051e78 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0xa051e68 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0xa051e48 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0xa051e18 <col:29> '_T1' lvalue ParmVar 0xa051b70 '__x' '_T1')
      (DeclRefExpr 0xa051e30 <col:34> '_T2' lvalue ParmVar 0xa051bb0 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0xa442ae0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0xa445430 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0xa057fe0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0xa057fd0 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0xa057fb8 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0xa4a70c8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa4a70b8 <col:9, col:16>
    (ImplicitCastExpr 0xa4a70a8 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0xa4a708c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa4a1680 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0xa0584a8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa058498 <col:9, col:16>
    (DeclRefExpr 0xa058480 <col:16> '_Iterator' lvalue ParmVar 0xa058360 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0xa058ad0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0xa058ac0 <col:9, col:26>
    (CallExpr 0xa058aa0 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa058a68 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0xa058a50 <col:16> '_Iterator' lvalue ParmVar 0xa058930 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa059168 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0xa059010 <line:78:7, col:72>
    0xa058fc0 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0xa058ff8 <col:71> 'int' 0)")
  (WhileStmt 0xa059128 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa059088 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa059050 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0)
      (DeclRefExpr 0xa059020 <col:14> '_InputIterator' lvalue ParmVar 0xa058cf0 '__first' '_InputIterator')
      (DeclRefExpr 0xa059038 <col:25> '_InputIterator' lvalue ParmVar 0xa058d30 '__last' '_InputIterator'))
    (CompoundStmt 0xa059110 <line:80:2, line:83:2>
      (UnaryOperator 0xa0590c8 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0590ac <col:6> '_InputIterator' lvalue ParmVar 0xa058cf0 '__first' '_InputIterator'))
      (UnaryOperator 0xa0590f8 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0590dc <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0xa058fc0 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0xa059158 <line:84:7, col:14>
    (DeclRefExpr 0xa05913c <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0xa058fc0 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0xa05bce0 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0xa05bcd0 <line:95:7, col:23>
    (BinaryOperator 0xa05bcb8 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0xa05bc88 <col:14> '_RandomAccessIterator' lvalue ParmVar 0xa059300 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0xa05bca0 <col:23> '_RandomAccessIterator' lvalue ParmVar 0xa0592c0 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa05c100 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0xa05c0f0 <line:115:7, line:116:42>
    (CallExpr 0xa05c0c8 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0xa05bfd8 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa058ea0 0xa059470)
      (DeclRefExpr 0xa05c010 <col:30> '_InputIterator' lvalue ParmVar 0xa05be30 '__first' '_InputIterator')
      (DeclRefExpr 0xa05c028 <col:39> '_InputIterator' lvalue ParmVar 0xa05be70 '__last' '_InputIterator')
      (CallExpr 0xa05c0a8 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa05c058 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa057ea0)
        (DeclRefExpr 0xa05c08c <col:34> '_InputIterator' lvalue ParmVar 0xa05be30 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0xa05c468 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0xa05c450 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0xa05c408 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0xa05c3d4 <col:14> '_Distance' lvalue ParmVar 0xa05c240 '__n' '_Distance'))
    (UnaryOperator 0xa05c438 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa05c41c <col:4> '_InputIterator' lvalue ParmVar 0xa05c200 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0xa05c908 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0xa05c8e8 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa05c7a0 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa05c768 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30)
      (DeclRefExpr 0xa05c734 <col:11> '_Distance' lvalue ParmVar 0xa05c5a0 '__n' '_Distance')
      (IntegerLiteral 0xa05c750 <col:17> 'int' 0))
    (WhileStmt 0xa05c840 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0xa05c7f8 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0xa05c7c4 <col:16> '_Distance' lvalue ParmVar 0xa05c5a0 '__n' '_Distance'))
      (UnaryOperator 0xa05c828 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa05c80c <col:6> '_BidirectionalIterator' lvalue ParmVar 0xa05c560 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0xa05c8d0 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0xa05c888 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa05c854 <col:16> '_Distance' lvalue ParmVar 0xa05c5a0 '__n' '_Distance'))
      (UnaryOperator 0xa05c8b8 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa05c89c <col:6> '_BidirectionalIterator' lvalue ParmVar 0xa05c560 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0xa05cc28 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0xa05cc08 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa05cbd4 <col:7> '_RandomAccessIterator' lvalue ParmVar 0xa05ca00 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0xa05cbec <col:14> '_Distance' lvalue ParmVar 0xa05ca40 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0xa05d128 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0xa05cfd0 <line:173:7, col:74>
    0xa05cf80 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0xa05cfb4 <col:71> '_Distance' lvalue ParmVar 0xa05cd60 '__n' '_Distance')")
  (CallExpr 0xa05d100 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa05d008 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05c3a0 0xa05c700 0xa05cba0)
    (DeclRefExpr 0xa05d044 <col:22> '_InputIterator' lvalue ParmVar 0xa05cd20 '__i' '_InputIterator &')
    (DeclRefExpr 0xa05d05c <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0xa05cf80 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0xa05d0e0 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0xa05d090 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa057ea0)
      (DeclRefExpr 0xa05d0c4 <col:57> '_InputIterator' lvalue ParmVar 0xa05cd20 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0xa061740 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0xa061750 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0xa060830 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0xa0617b0 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0xa0617d8 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0xa0617c0 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa060970 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0xa061850 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0xa0618b0 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa061878 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0xa061860 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0xa060bd0 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0xa061910 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0xa061998 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0xa061988 <col:9, col:16>
    (MemberExpr 0xa061964 <col:16> 'const _Iterator' lvalue ->current 0xa05dbb0
      (CXXThisExpr 0xa061938 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0xa061a90 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0xa061a28 <line:158:2, col:27>
    0xa0619c0 "_Iterator __tmp =
      (MemberExpr 0xa061a08 <col:20> 'const _Iterator' lvalue ->current 0xa05dbb0
        (CXXThisExpr 0xa0619f8 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0xa061a80 <line:159:2, col:12>
    (UnaryOperator 0xa061a68 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0xa061a50 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa061a38 <col:12> '_Iterator' lvalue Var 0xa0619c0 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0xa061b38 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0xa061b28 <col:9, col:29>
    (UnaryOperator 0xa061b10 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0xa061af8 <col:17, col:29> '<dependent type>'
        (CallExpr 0xa061ad8 <col:18, col:28> '<dependent type>'
          (MemberExpr 0xa061ab8 <col:18, col:26> '<bound member function type>' ->operator* 0xa060e20
            (CXXThisExpr 0xa061aa8 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0xa061bd0 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0xa061b80 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0xa061b60 <col:4> '_Iterator' lvalue ->current 0xa05dbb0
      (CXXThisExpr 0xa061b50 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa061bc0 <line:180:2, col:10>
    (UnaryOperator 0xa061ba8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa061b98 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0xa061cd0 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0xa061c50 <line:191:2, col:32>
    0xa061bf0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0xa061c38 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa061c28 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0xa061c90 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0xa061c70 <col:4> '_Iterator' lvalue ->current 0xa05dbb0
      (CXXThisExpr 0xa061c60 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa061cc0 <line:193:2, col:9>
    (DeclRefExpr 0xa061ca4 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0xa061bf0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0xa061d70 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0xa061d20 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa061d00 <col:4> '_Iterator' lvalue ->current 0xa05dbb0
      (CXXThisExpr 0xa061cf0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa061d60 <line:205:2, col:10>
    (UnaryOperator 0xa061d48 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa061d38 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0xa061e70 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0xa061df0 <line:216:2, col:32>
    0xa061d90 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0xa061dd8 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa061dc8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0xa061e30 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa061e10 <col:4> '_Iterator' lvalue ->current 0xa05dbb0
      (CXXThisExpr 0xa061e00 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa061e60 <line:218:2, col:9>
    (DeclRefExpr 0xa061e44 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0xa061d90 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0xa061f28 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0xa061f18 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa061ef8 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0xa061ee0 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0xa061ea8 <col:33> 'const _Iterator' lvalue ->current 0xa05dbb0
          (CXXThisExpr 0xa061e98 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0xa061ec8 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa061250 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0xa061fe0 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0xa061f88 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa061f50 <col:2> '_Iterator' lvalue ->current 0xa05dbb0
      (CXXThisExpr 0xa061f40 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0xa061f70 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa061360 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0xa061fd0 <line:239:2, col:10>
    (UnaryOperator 0xa061fb8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa061fa8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0xa062090 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0xa062080 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa062060 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0xa062048 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0xa062010 <col:33> 'const _Iterator' lvalue ->current 0xa05dbb0
          (CXXThisExpr 0xa062000 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0xa062030 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa061470 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0xa062148 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0xa0620f0 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0620b8 <col:2> '_Iterator' lvalue ->current 0xa05dbb0
      (CXXThisExpr 0xa0620a8 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0xa0620d8 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa061530 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0xa062138 <line:260:2, col:10>
    (UnaryOperator 0xa062120 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa062110 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0xa0621f8 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0xa0621e8 <col:9, col:29>
    (UnaryOperator 0xa0621d0 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0xa0621b8 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0xa0621a0 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0xa062170 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0xa062160 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0xa062184 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa061600 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa0655b0 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0xa0655a0 <col:7, col:37>
    (CXXOperatorCallExpr 0xa065578 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa065540 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa065430 0xa04ba40)
      (CallExpr 0xa0654b0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa065478 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa065460 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa062350 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0xa065520 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0654e8 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0xa0654cc <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa062450 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa065a50 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0xa065a40 <col:7, col:36>
    (CXXOperatorCallExpr 0xa065a18 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa0659e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0658d0 0xa04c0e0)
      (CallExpr 0xa065950 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa065918 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa065900 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0657f0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0xa0659c0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa065988 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa06596c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0656f0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa065e70 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0xa065e60 <col:7, col:26>
    (UnaryOperator 0xa065e48 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa065e30 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa065e08 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa065dd0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa065430 0xa04ba40)
          (DeclRefExpr 0xa065da0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa065b90 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0xa065db8 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa065c90 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa066260 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0xa066250 <col:7, col:20>
    (CXXOperatorCallExpr 0xa066228 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa0661f0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0658d0 0xa04c0e0)
      (DeclRefExpr 0xa0661c0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0660b0 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0xa0661d8 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa065fb0 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa066680 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0xa066670 <col:7, col:25>
    (UnaryOperator 0xa066658 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa066640 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa066618 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa0665e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0658d0 0xa04c0e0)
          (DeclRefExpr 0xa0665b0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0664a0 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0xa0665c8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0663a0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa066aa0 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0xa066a90 <col:7, col:25>
    (UnaryOperator 0xa066a78 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa066a60 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa066a38 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa066a00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0658d0 0xa04c0e0)
          (DeclRefExpr 0xa0669d0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0667c0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0xa0669e8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0668c0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa067070 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0xa067060 <col:7, col:36>
    (CXXOperatorCallExpr 0xa067038 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa067000 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0)
      (CallExpr 0xa066f70 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa066f38 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa066f20 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa066de0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0xa066fe0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa066fa8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa066f8c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa066ce0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0xa0676b8 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0xa0676a8 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0xa067688 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0xa067660 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa067628 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0)
        (CallExpr 0xa0675f0 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0675b8 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0xa0675a0 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa0673a0 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0xa06760c <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0xa067260 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa067c28 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0xa067c18 <col:7, col:37>
    (CXXOperatorCallExpr 0xa067bf0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa067bb0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa067aa0 0xa065430 0xa04ba40)
      (CallExpr 0xa067b20 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa067ae8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa067ad0 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa067850 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0xa067b90 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa067b58 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0xa067b3c <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa0679a0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa068128 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0xa068118 <col:7, col:36>
    (CXXOperatorCallExpr 0xa0680f0 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa0680b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa067fa0 0xa0658d0 0xa04c0e0)
      (CallExpr 0xa068020 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa067fe8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa067fd0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa067ec0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0xa068090 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa068058 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa06803c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa067dc0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa0685a8 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0xa068598 <col:7, col:26>
    (UnaryOperator 0xa068580 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa068568 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa068540 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa068500 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa067aa0 0xa065430 0xa04ba40)
          (DeclRefExpr 0xa0684d0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa0682c0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0xa0684e8 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa0683c0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa0689f8 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0xa0689e8 <col:7, col:20>
    (CXXOperatorCallExpr 0xa0689c0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa068980 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa067fa0 0xa0658d0 0xa04c0e0)
      (DeclRefExpr 0xa068950 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa068840 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0xa068968 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa068740 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa068e78 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0xa068e68 <col:7, col:25>
    (UnaryOperator 0xa068e50 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa068e38 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa068e10 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa068dd0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa067fa0 0xa0658d0 0xa04c0e0)
          (DeclRefExpr 0xa068da0 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa068c90 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0xa068db8 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa068b90 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa0692f8 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0xa0692e8 <col:7, col:25>
    (UnaryOperator 0xa0692d0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa0692b8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa069290 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa069250 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa067fa0 0xa0658d0 0xa04c0e0)
          (DeclRefExpr 0xa069220 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa069010 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0xa069238 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa069110 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa06a330 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0xa06a320 <col:7, col:36>
    (CXXOperatorCallExpr 0xa06a2f8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa06a2c0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa06a1b0 0xa066ef0)
      (CallExpr 0xa06a230 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa06a1f8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa06a1e0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa06a0a0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0xa06a2a0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa06a268 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa06a24c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa069fa0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0xa06b0a0 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0xa06b084 <col:58> '_Container' lvalue ParmVar 0xa06aba0 '__x' '_Container &'))
) (CompoundStmt 0xa06b100 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0xa06b200 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0xa06b1a8 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa06b158 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0xa06b138 <col:2> '_Container *' lvalue ->container 0xa06aac0
        (CXXThisExpr 0xa06b128 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0xa06b18c <col:23> 'typename _Container::const_reference' lvalue ParmVar 0xa06ad50 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0xa06b1f0 <line:426:2, col:10>
    (UnaryOperator 0xa06b1d8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06b1c8 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0xa06b250 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0xa06b240 <col:9, col:17>
    (UnaryOperator 0xa06b228 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06b218 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0xa06b2a0 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0xa06b290 <col:9, col:17>
    (UnaryOperator 0xa06b278 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06b268 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0xa06b2f0 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0xa06b2e0 <col:9, col:17>
    (UnaryOperator 0xa06b2c8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06b2b8 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0xa06b658 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0xa06b648 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0xa06b628 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0xa06b610 <col:47> '_Container' lvalue ParmVar 0xa06b420 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0xa06d0c0 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0xa06d0a4 <col:68> '_Container' lvalue ParmVar 0xa06bb60 '__x' '_Container &'))
) (CompoundStmt 0xa06d120 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0xa06d220 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0xa06d1c8 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa06d178 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0xa06d158 <col:2> '_Container *' lvalue ->container 0xa06ba80
        (CXXThisExpr 0xa06d148 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0xa06d1ac <col:24> 'typename _Container::const_reference' lvalue ParmVar 0xa06bcd0 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0xa06d210 <line:516:2, col:10>
    (UnaryOperator 0xa06d1f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06d1e8 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0xa06d270 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0xa06d260 <col:9, col:17>
    (UnaryOperator 0xa06d248 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06d238 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0xa06d2c0 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0xa06d2b0 <col:9, col:17>
    (UnaryOperator 0xa06d298 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06d288 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0xa06d310 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0xa06d300 <col:9, col:17>
    (UnaryOperator 0xa06d2e8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06d2d8 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0xa06d678 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0xa06d668 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0xa06d648 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0xa06d630 <col:48> '_Container' lvalue ParmVar 0xa06d440 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0xa06e190 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0xa06e174 <col:20> '_Container' lvalue ParmVar 0xa06dc40 '__x' '_Container &'))
), iter((DeclRefExpr 0xa06e1e8 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0xa06dcc0 '__i' 'typename _Container::iterator')
) (CompoundStmt 0xa06e240 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0xa06e408 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0xa06e370 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0xa06e278 <col:2> 'typename _Container::iterator' lvalue ->iter 0xa06db60
      (CXXThisExpr 0xa06e268 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0xa06e348 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa06e2c8 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0xa06e2a8 <col:9> '_Container *' lvalue ->container 0xa06daa0
          (CXXThisExpr 0xa06e298 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0xa06e310 <col:27> 'typename _Container::iterator' lvalue ->iter 0xa06db60
        (CXXThisExpr 0xa06e300 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0xa06e330 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0xa06de40 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0xa06e3b8 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa06e398 <col:4> 'typename _Container::iterator' lvalue ->iter 0xa06db60
      (CXXThisExpr 0xa06e388 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0xa06e3f8 <line:628:2, col:10>
    (UnaryOperator 0xa06e3e0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06e3d0 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0xa06e460 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0xa06e450 <col:9, col:17>
    (UnaryOperator 0xa06e438 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06e428 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0xa06e4b0 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0xa06e4a0 <col:9, col:17>
    (UnaryOperator 0xa06e488 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06e478 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0xa06e500 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0xa06e4f0 <col:9, col:17>
    (UnaryOperator 0xa06e4d8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa06e4c8 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0xa06e9b0 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0xa06e9a0 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0xa06e980 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0xa06e8d0 <line:679:42> '_Container' lvalue ParmVar 0xa06e690 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0xa06e960 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0xa06e944 <col:37> '_Iterator' lvalue ParmVar 0xa06e6d0 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0xa071998 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0xa0719f0 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0xa071a00 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0xa0706f0 '__i' 'const _Iterator &')
) (CompoundStmt 0xa071a60 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0xa071ac0 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa071a88 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0xa071a70 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0xa070e10 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0xa071b20 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0xa071bc0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0xa071bb0 <col:9, col:17>
    (UnaryOperator 0xa071b98 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0xa071b74 <col:17> 'const _Iterator' lvalue ->_M_current 0xa06edb0
        (CXXThisExpr 0xa071b48 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0xa071c18 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0xa071c08 <col:9, col:16>
    (MemberExpr 0xa071be8 <col:16> 'const _Iterator' lvalue ->_M_current 0xa06edb0
      (CXXThisExpr 0xa071bd8 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0xa071cb0 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0xa071c60 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa071c40 <col:4> '_Iterator' lvalue ->_M_current 0xa06edb0
      (CXXThisExpr 0xa071c30 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0xa071ca0 <line:743:2, col:10>
    (UnaryOperator 0xa071c88 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa071c78 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0xa071d60 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0xa071d50 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa071d30 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0xa071d18 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0xa071ce0 <col:34> '_Iterator' lvalue ->_M_current 0xa06edb0
          (CXXThisExpr 0xa071cd0 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0xa071df8 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0xa071da8 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0xa071d88 <col:4> '_Iterator' lvalue ->_M_current 0xa06edb0
      (CXXThisExpr 0xa071d78 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0xa071de8 <line:755:2, col:10>
    (UnaryOperator 0xa071dd0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa071dc0 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0xa071ea8 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0xa071e98 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa071e78 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0xa071e60 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0xa071e28 <col:34> '_Iterator' lvalue ->_M_current 0xa06edb0
          (CXXThisExpr 0xa071e18 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0xa071f30 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0xa071f20 <col:9, col:30>
    (ArraySubscriptExpr 0xa071f08 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0xa071ed0 <col:16> 'const _Iterator' lvalue ->_M_current 0xa06edb0
        (CXXThisExpr 0xa071ec0 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0xa071ef0 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa0713e0 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0xa071fe8 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0xa071f90 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa071f58 <col:9> '_Iterator' lvalue ->_M_current 0xa06edb0
      (CXXThisExpr 0xa071f48 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0xa071f78 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa071500 '__n' 'const difference_type &'))
  (ReturnStmt 0xa071fd8 <col:28, col:36>
    (UnaryOperator 0xa071fc0 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa071fb0 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0xa072098 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0xa072088 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0xa072068 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0xa072050 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0xa072018 <col:34> 'const _Iterator' lvalue ->_M_current 0xa06edb0
          (CXXThisExpr 0xa072008 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0xa072038 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa071620 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0xa072150 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0xa0720f8 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0720c0 <col:9> '_Iterator' lvalue ->_M_current 0xa06edb0
      (CXXThisExpr 0xa0720b0 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0xa0720e0 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa071740 '__n' 'const difference_type &'))
  (ReturnStmt 0xa072140 <col:28, col:36>
    (UnaryOperator 0xa072128 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa072118 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0xa074190 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0xa0721f0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0xa0721d0 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0xa0721b8 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0xa072180 <col:34> 'const _Iterator' lvalue ->_M_current 0xa06edb0
          (CXXThisExpr 0xa072170 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0xa0721a0 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa071820 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0xa0741e8 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0xa0741d8 <col:9, col:16>
    (MemberExpr 0xa0741b8 <col:16> 'const _Iterator' lvalue ->_M_current 0xa06edb0
      (CXXThisExpr 0xa0741a8 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa074900 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0xa0748f0 <col:7, col:41>
    (CXXOperatorCallExpr 0xa0748c8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa074890 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa074780)
      (CallExpr 0xa074800 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0747c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa0747b0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa0744a0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa074870 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa074838 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa07481c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa074680 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa074f10 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0xa074f00 <col:7, col:41>
    (CXXOperatorCallExpr 0xa074ed8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa074ea0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa074d90 0xa074780)
      (CallExpr 0xa074e10 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa074dd8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa074dc0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa074b20 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa074e80 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa074e48 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa074e2c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa074c90 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa075530 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0xa075520 <col:7, col:41>
    (CXXOperatorCallExpr 0xa0754f8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa0754c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0753b0)
      (CallExpr 0xa075430 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0753f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa0753e0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa075160 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa0754a0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa075468 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa07544c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa0752d0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa075b00 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0xa075af0 <col:7, col:41>
    (CXXOperatorCallExpr 0xa075ac8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa075a90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa075980 0xa0753b0)
      (CallExpr 0xa075a00 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0759c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa0759b0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa075730 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa075a70 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa075a38 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa075a1c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa0758a0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa076120 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0xa076110 <col:7, col:40>
    (CXXOperatorCallExpr 0xa0760e8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa0760b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa075fa0)
      (CallExpr 0xa076020 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa075fe8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa075fd0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa075d50 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa076090 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa076058 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa07603c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa075ec0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa077700 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0xa0776f0 <col:7, col:40>
    (CXXOperatorCallExpr 0xa0776c8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa077690 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa077580 0xa075fa0)
      (CallExpr 0xa077600 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0775c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa0775b0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa077330 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa077670 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa077638 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa07761c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa0774a0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa077d20 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0xa077d10 <col:7, col:40>
    (CXXOperatorCallExpr 0xa077ce8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa077cb0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa077ba0)
      (CallExpr 0xa077c20 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa077be8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa077bd0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa077950 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa077c90 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa077c58 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa077c3c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa077ac0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa0782f0 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0xa0782e0 <col:7, col:40>
    (CXXOperatorCallExpr 0xa0782b8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa078280 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa078170 0xa077ba0)
      (CallExpr 0xa0781f0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0781b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa0781a0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa077f20 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa078260 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa078228 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa07820c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa078090 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa078910 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0xa078900 <col:7, col:41>
    (CXXOperatorCallExpr 0xa0788d8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa0788a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa078790)
      (CallExpr 0xa078810 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0787d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa0787c0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa078540 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa078880 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa078848 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa07882c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa0786b0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa078ee0 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0xa078ed0 <col:7, col:41>
    (CXXOperatorCallExpr 0xa078ea8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa078e70 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa078d60 0xa078790)
      (CallExpr 0xa078de0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa078da8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa078d90 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa078b10 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa078e50 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa078e18 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa078dfc <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa078c80 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa07a530 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0xa07a520 <col:7, col:41>
    (CXXOperatorCallExpr 0xa07a4f8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa07a4c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa07a3b0)
      (CallExpr 0xa07a430 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07a3f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa07a3e0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa079130 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa07a4a0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07a468 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa07a44c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa07a2d0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa07ab00 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0xa07aaf0 <col:7, col:41>
    (CXXOperatorCallExpr 0xa07aac8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa07aa90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa07a980 0xa07a3b0)
      (CallExpr 0xa07aa00 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07a9c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa07a9b0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa07a730 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa07aa70 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07aa38 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa07aa1c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa07a8a0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa07b2a0 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0xa07b290 <col:7, col:40>
    (CXXOperatorCallExpr 0xa07b268 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa07b230 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa07b120)
      (CallExpr 0xa07b1a0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07b168 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa07b150 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa07aea0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa07b210 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07b1d8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa07b1bc <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa07b010 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa07b9f0 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0xa07b9e0 <col:7, col:40>
    (CXXOperatorCallExpr 0xa07b9b8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa07b980 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa07b870 0xa07b120)
      (CallExpr 0xa07b8f0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07b8b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa07b8a0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa07b5f0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa07b960 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa07b928 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa07b90c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa07b760 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0xa07c800 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0xa07c7f0 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0xa07c7d0 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0xa07c178 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa07c140 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa07bf80)
        (CallExpr 0xa07c108 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa07c0d0 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0xa07c0b8 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa07be50 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0xa07c124 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0xa07bce0 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa07d730 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0xa07d708 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0xa07d670 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0xa0450d0 0xa045610)
    (UnaryOperator 0xa07d6c0 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa07d6a8 <col:17> '_ForwardIterator1' lvalue ParmVar 0xa07d4f0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0xa07d6f0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa07d6d4 <col:23> '_ForwardIterator2' lvalue ParmVar 0xa07d530 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa07d208 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0xa07d040 <line:87:11, line:88:24>
    0xa07d010 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0xa07d0f0 <line:89:11, col:50>
    0xa07d070 "_ValueType1 __tmp =
      (ParenExpr 0xa07d0d8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0xa07d0c0 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa07d0a4 <col:46> '_ForwardIterator1' lvalue ParmVar 0xa07cd40 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0xa07d178 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0xa07d118 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa07d100 <col:12> '_ForwardIterator1' lvalue ParmVar 0xa07cd40 '__a' '_ForwardIterator1'))
    (ParenExpr 0xa07d160 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0xa07d148 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa07d12c <col:33> '_ForwardIterator2' lvalue ParmVar 0xa07cd80 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0xa07d1f0 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0xa07d1a8 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa07d190 <col:12> '_ForwardIterator2' lvalue ParmVar 0xa07cd80 '__b' '_ForwardIterator2'))
    (ParenExpr 0xa07d1d8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0xa07d1bc </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0xa07d070 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa07d730 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0xa07d708 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0xa07d670 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0xa0450d0 0xa045610)
    (UnaryOperator 0xa07d6c0 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa07d6a8 <col:17> '_ForwardIterator1' lvalue ParmVar 0xa07d4f0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0xa07d6f0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa07d6d4 <col:23> '_ForwardIterator2' lvalue ParmVar 0xa07d530 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa07e5e8 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0xa07da80 <line:120:7, line:121:13>
    0xa07da50 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0xa07dc10 <line:122:7, line:123:13>
    0xa07dbe0 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0xa07dd40 <line:135:7, line:136:17>
    0xa07dd10 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0xa07de90 <line:137:7, line:138:17>
    0xa07de60 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0xa07e5c0 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa07e568 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa07e58c <col:12> '_ForwardIterator1' lvalue ParmVar 0xa07d810 '__a' '_ForwardIterator1')
    (DeclRefExpr 0xa07e5a4 <col:17> '_ForwardIterator2' lvalue ParmVar 0xa07d850 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0xa081a30 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0xa081808 <line:167:56>)
  (ForStmt 0xa0819e0 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa081888 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa081848 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa081814 <col:14> '_ForwardIterator1' lvalue ParmVar 0xa07e6d0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0xa08182c <col:26> '_ForwardIterator1' lvalue ParmVar 0xa07e710 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0xa081910 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0xa0818c8 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0818ac <col:37> '_ForwardIterator1' lvalue ParmVar 0xa07e6d0 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0xa0818f8 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0818dc <col:49> '_ForwardIterator2' lvalue ParmVar 0xa07e750 '__first2' '_ForwardIterator2')))
    (CallExpr 0xa0819b8 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa081950 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa07d930)
      (DeclRefExpr 0xa081984 <col:17> '_ForwardIterator1' lvalue ParmVar 0xa07e6d0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0xa08199c <col:27> '_ForwardIterator2' lvalue ParmVar 0xa07e750 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0xa081a20 <line:171:7, col:14>
    (DeclRefExpr 0xa081a04 <col:14> '_ForwardIterator2' lvalue ParmVar 0xa07e750 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0xa081d68 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0xa081d20 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa081cd0 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa081c90 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
      (DeclRefExpr 0xa081c60 <col:11> 'const _Tp' lvalue ParmVar 0xa081b30 '__b' 'const _Tp &')
      (DeclRefExpr 0xa081c78 <col:17> 'const _Tp' lvalue ParmVar 0xa081ae0 '__a' 'const _Tp &'))
    (ReturnStmt 0xa081d10 <line:193:2, col:9>
      (DeclRefExpr 0xa081cf4 <col:9> 'const _Tp' lvalue ParmVar 0xa081b30 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa081d58 <line:194:7, col:14>
    (DeclRefExpr 0xa081d3c <col:14> 'const _Tp' lvalue ParmVar 0xa081ae0 '__a' 'const _Tp &')))

;
    template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0xa082078 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0xa082030 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa081fe0 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa081fa0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
      (DeclRefExpr 0xa081f70 <col:11> 'const _Tp' lvalue ParmVar 0xa081e10 '__a' 'const _Tp &')
      (DeclRefExpr 0xa081f88 <col:17> 'const _Tp' lvalue ParmVar 0xa081e60 '__b' 'const _Tp &'))
    (ReturnStmt 0xa082020 <line:216:2, col:9>
      (DeclRefExpr 0xa082004 <col:9> 'const _Tp' lvalue ParmVar 0xa081e60 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa082068 <line:217:7, col:14>
    (DeclRefExpr 0xa08204c <col:14> 'const _Tp' lvalue ParmVar 0xa081e10 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0xa082438 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0xa0823f0 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0xa0823a0 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0xa082354 <col:11> '_Compare' lvalue ParmVar 0xa082200 '__comp' '_Compare')
      (DeclRefExpr 0xa08236c <col:18> 'const _Tp' lvalue ParmVar 0xa0821c0 '__b' 'const _Tp &')
      (DeclRefExpr 0xa082384 <col:23> 'const _Tp' lvalue ParmVar 0xa082170 '__a' 'const _Tp &'))
    (ReturnStmt 0xa0823e0 <line:237:2, col:9>
      (DeclRefExpr 0xa0823c4 <col:9> 'const _Tp' lvalue ParmVar 0xa0821c0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa082428 <line:238:7, col:14>
    (DeclRefExpr 0xa08240c <col:14> 'const _Tp' lvalue ParmVar 0xa082170 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0xa0827c8 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0xa082780 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0xa082730 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0xa0826e4 <col:11> '_Compare' lvalue ParmVar 0xa0825c0 '__comp' '_Compare')
      (DeclRefExpr 0xa0826fc <col:18> 'const _Tp' lvalue ParmVar 0xa082530 '__a' 'const _Tp &')
      (DeclRefExpr 0xa082714 <col:23> 'const _Tp' lvalue ParmVar 0xa082580 '__b' 'const _Tp &'))
    (ReturnStmt 0xa082770 <line:258:2, col:9>
      (DeclRefExpr 0xa082754 <col:9> 'const _Tp' lvalue ParmVar 0xa082580 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa0827b8 <line:259:7, col:14>
    (DeclRefExpr 0xa08279c <col:14> 'const _Tp' lvalue ParmVar 0xa082530 '__a' 'const _Tp &')))

;
    template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0xa4a7078 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa4a7068 <col:7, col:55>
    (CallExpr 0xa4a7038 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa4a7028 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4a6fcc <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0xa4a1720 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0xa4a7058 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa4a6fec <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa4a1830 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0xa083050 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa083040 <col:7, col:55>
    (CallExpr 0xa083020 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa082fe0 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0xa083004 <col:51> '_Iterator' lvalue ParmVar 0xa082de0 '__it' '_Iterator'))))

;
    template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0xa084950 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0xa084940 <col:7, col:55>
    (CallExpr 0xa084920 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0848e0 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0xa084904 <col:51> '_Iterator' lvalue ParmVar 0xa083670 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0xa085bf8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0xa0857c0 <line:326:4, col:68>
    0xa085790 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0xa085ba8 <line:327:4, line:332:6>
    (DeclStmt 0xa0858b8 <line:327:8, col:40>
      0xa0857f0 "_Distance __n =
        (CXXOperatorCallExpr 0xa085890 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa085858 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (DeclRefExpr 0xa085824 <col:24> '_II' lvalue ParmVar 0xa085520 '__last' '_II')
          (DeclRefExpr 0xa08583c <col:33> '_II' lvalue ParmVar 0xa0854e0 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa085938 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa0858f8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa0858c8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa0857f0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0xa0858e0 <col:48> 'int' 0))
    (UnaryOperator 0xa085978 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa08595c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa0857f0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0xa085b88 <line:328:6, line:332:6>
      (BinaryOperator 0xa085b10 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0xa0859a8 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa08598c <col:9> '_OI' lvalue ParmVar 0xa085560 '__result' '_OI'))
        (UnaryOperator 0xa0859d8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa0859bc <col:21> '_II' lvalue ParmVar 0xa0854e0 '__first' '_II')))
      (UnaryOperator 0xa085b40 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa085b28 <col:10> '_II' lvalue ParmVar 0xa0854e0 '__first' '_II'))
      (UnaryOperator 0xa085b70 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa085b54 <col:10> '_OI' lvalue ParmVar 0xa085560 '__result' '_OI'))))
  (ReturnStmt 0xa085be8 <line:333:4, col:11>
    (DeclRefExpr 0xa085bcc <col:11> '_OI' lvalue ParmVar 0xa085560 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0xa085168 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0xa085118 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa085000 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa084fc0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa084f90 <col:11> '_II' lvalue ParmVar 0xa084da0 '__first' '_II')
      (DeclRefExpr 0xa084fa8 <col:22> '_II' lvalue ParmVar 0xa084de0 '__last' '_II'))
    (BinaryOperator 0xa085088 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0xa085040 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa085024 <col:32> '_OI' lvalue ParmVar 0xa084e20 '__result' '_OI'))
      (UnaryOperator 0xa085070 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa085054 <col:44> '_II' lvalue ParmVar 0xa084da0 '__first' '_II')))
    (BinaryOperator 0xa085100 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0xa0850b8 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0850a0 <col:7> '_OI' lvalue ParmVar 0xa084e20 '__result' '_OI'))
      (UnaryOperator 0xa0850e8 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0850cc <col:19> '_II' lvalue ParmVar 0xa084da0 '__first' '_II'))))
  (ReturnStmt 0xa085158 <line:300:4, col:11>
    (DeclRefExpr 0xa08513c <col:11> '_OI' lvalue ParmVar 0xa084e20 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0xa085bf8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0xa0857c0 <line:326:4, col:68>
    0xa085790 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0xa085ba8 <line:327:4, line:332:6>
    (DeclStmt 0xa0858b8 <line:327:8, col:40>
      0xa0857f0 "_Distance __n =
        (CXXOperatorCallExpr 0xa085890 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa085858 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (DeclRefExpr 0xa085824 <col:24> '_II' lvalue ParmVar 0xa085520 '__last' '_II')
          (DeclRefExpr 0xa08583c <col:33> '_II' lvalue ParmVar 0xa0854e0 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa085938 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa0858f8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa0858c8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa0857f0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0xa0858e0 <col:48> 'int' 0))
    (UnaryOperator 0xa085978 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa08595c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa0857f0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0xa085b88 <line:328:6, line:332:6>
      (BinaryOperator 0xa085b10 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0xa0859a8 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa08598c <col:9> '_OI' lvalue ParmVar 0xa085560 '__result' '_OI'))
        (UnaryOperator 0xa0859d8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa0859bc <col:21> '_II' lvalue ParmVar 0xa0854e0 '__first' '_II')))
      (UnaryOperator 0xa085b40 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa085b28 <col:10> '_II' lvalue ParmVar 0xa0854e0 '__first' '_II'))
      (UnaryOperator 0xa085b70 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa085b54 <col:10> '_OI' lvalue ParmVar 0xa085560 '__result' '_OI'))))
  (ReturnStmt 0xa085be8 <line:333:4, col:11>
    (DeclRefExpr 0xa085bcc <col:11> '_OI' lvalue ParmVar 0xa085560 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0xa087c28 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0xa086418 <line:364:4, col:43>
    0xa086350 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0xa0863f0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa0863b8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa086384 <col:27> 'const _Tp *' lvalue ParmVar 0xa086140 '__last' 'const _Tp *')
        (DeclRefExpr 0xa08639c <col:36> 'const _Tp *' lvalue ParmVar 0xa0860f0 '__first' 'const _Tp *'))")
  (IfStmt 0xa0866a8 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0xa086450 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa086440 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0xa086428 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0xa086350 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0xa086680 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0xa0865c4 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa086460 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0xa0865dc <col:24> '_Tp *' lvalue ParmVar 0xa0861d0 '__result' '_Tp *')
      (DeclRefExpr 0xa0865f4 <col:34> 'const _Tp *' lvalue ParmVar 0xa0860f0 '__first' 'const _Tp *')
      (BinaryOperator 0xa086668 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa086618 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0xa086658 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa086648 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0xa086630 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0xa086350 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa087c18 <line:367:4, col:22>
    (CXXOperatorCallExpr 0xa086730 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa0866f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
      (DeclRefExpr 0xa0866c4 <col:11> '_Tp *' lvalue ParmVar 0xa0861d0 '__result' '_Tp *')
      (DeclRefExpr 0xa0866dc <col:22> 'const ptrdiff_t':'const int' lvalue Var 0xa086350 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0xa088a58 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0xa088040 <line:375:7, col:68>
    0xa088010 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0xa0881d0 <line:376:7, col:68>
    0xa0881a0 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0xa088320 <line:377:7, col:73>
    0xa0882f0 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0xa0887b0 <line:378:7, line:381:58>
    0xa088340 "const bool __simple =
      (ParenExpr 0xa088798 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0xa088780 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0xa0885d8 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0xa0884b8 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0xa088398 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0xa088490 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0xa0885b0 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa088758 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa088a48 <line:383:7, line:384:70>
    (CallExpr 0xa088a20 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0889b0 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0xa0889d4 <col:45> '_II' lvalue ParmVar 0xa087d50 '__first' '_II')
      (DeclRefExpr 0xa0889ec <col:54> '_II' lvalue ParmVar 0xa087d90 '__last' '_II')
      (DeclRefExpr 0xa088a04 <col:62> '_OI' lvalue ParmVar 0xa087dd0 '__result' '_OI'))))

;
    template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb338 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa0bb320 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa0bb2e0 <col:9> 'char_type':'char' lvalue ParmVar 0xa0b9080 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bb310 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa0bb2f8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb3e8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa0bb3d8 <col:9, col:24>
    (BinaryOperator 0xa0bb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bb390 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb380 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb34c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9230 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb3b0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb3a0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb364 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa0b9280 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb498 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa0bb488 <col:9, col:23>
    (BinaryOperator 0xa0bb470 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bb440 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb430 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb3fc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b93a0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb460 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb450 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb414 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa0b93f0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bb5c0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa0bb5b0 <col:9, col:48>
    (CallExpr 0xa0bb538 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa0bb528 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb4ac <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa0bb570 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb560 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4c4 <col:33> 'const char_type *' lvalue ParmVar 0xa0b94f0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb590 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb580 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4dc <col:39> 'const char_type *' lvalue ParmVar 0xa0b9540 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb5a0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bb4f4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bb758 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa0bb748 <col:9, col:36>
    (CallExpr 0xa0bb718 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa0bb708 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb6b4 <col:16> 'unsigned int (const char *)' lvalue Function 0xa0bb5e0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa0bb738 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bb6cc <col:33> 'const char_type *' lvalue ParmVar 0xa0b9690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bba18 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa0bba08 <col:9, col:77>
    (CXXStaticCastExpr 0xa0bb9f0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa0bb968 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa0bb958 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bb8d4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa0bb770 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bb9a0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bb990 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bb8ec <col:63> 'const char_type *' lvalue ParmVar 0xa0b9790 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa0bb9c0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bb9b0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bb904 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa0b9820 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa0bb9d0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bb91c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa0b97d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbb68 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa0bbb58 <col:9, col:74>
    (CXXStaticCastExpr 0xa0bbb40 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbab8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa0bbaa8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bba2c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa086460 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbaf0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbae0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba44 <col:58> 'char_type *' lvalue ParmVar 0xa0b9980 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbb10 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbb00 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba5c <col:64> 'const char_type *' lvalue ParmVar 0xa0b99d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbb20 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bba74 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9a10 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbe08 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa0bbdf8 <col:9, col:73>
    (CXXStaticCastExpr 0xa0bbde0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbd58 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa0bbd48 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbce4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbd90 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbd80 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbcfc <col:57> 'char_type *' lvalue ParmVar 0xa0b9b20 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbdb0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbda0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbd14 <col:63> 'const char_type *' lvalue ParmVar 0xa0baa50 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbdc0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbd2c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa0baa90 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0bbf58 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa0bbf48 <col:9, col:71>
    (CXXStaticCastExpr 0xa0bbf30 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbea8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa0bbe98 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbe1c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa092370 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bbee0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbed0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbe34 <col:57> 'char_type *' lvalue ParmVar 0xa0bab70 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa0bbf00 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bbef0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bbe4c <col:62> 'char_type':'char' lvalue ParmVar 0xa0babf0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa0bbf10 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbe64 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa0babb0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0bbfd8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa0bbfc8 <col:9, col:42>
    (CXXStaticCastExpr 0xa0bbfb0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa0bbfa0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa0bbf90 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa0bbf6c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa0bad80 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0bc090 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa0bc080 <col:9, col:69>
    (CXXStaticCastExpr 0xa0bc068 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa0bc058 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa0bc038 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa0bc028 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa0bc018 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa0bbfec <col:65> 'const char_type':'const char' lvalue ParmVar 0xa0baea0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0bc120 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa0bc110 <col:9, col:24>
    (BinaryOperator 0xa0bc0f8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bc0d8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0a4 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa0bafc0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0bc0e8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0bc <col:24> 'const int_type':'const int' lvalue ParmVar 0xa0bb010 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0bc198 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa0bc188 <col:9, col:56>
    (CXXStaticCastExpr 0xa0bc170 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa0bc150 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa0bc138 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0bc2f8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa0bc2e8 <col:9, col:37>
    (ConditionalOperator 0xa0bc2c8 <col:16, col:37> 'int'
      (ParenExpr 0xa0bc270 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa0bc258 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa0bc248 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0bc1ac <col:17> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &'))
          (CallExpr 0xa0bc228 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa0bc218 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0bc1c4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa0bb150 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0bc288 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0bc2b8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc2a0 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &')))))


    }
template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf968 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa0bf950 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa0bf910 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0bc6b0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bf940 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa0bf928 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc740 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf9f8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa0bf9e8 <col:9, col:24>
    (BinaryOperator 0xa0bf9d0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bf9b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf97c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc860 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bf9c0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf994 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc8b0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bfa88 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0bfa78 <col:9, col:23>
    (BinaryOperator 0xa0bfa60 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bfa40 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa0c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc9d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bfa50 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa24 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0be920 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bfbf0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa0bfbe0 <col:9, col:39>
    (CallExpr 0xa0bfb88 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0bfb78 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfb1c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea2d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab010 'wmemcmp')))
      (ImplicitCastExpr 0xa0bfbb0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfad4 <col:24> 'const char_type *' lvalue ParmVar 0xa0bea20 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbc0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfaec <col:30> 'const char_type *' lvalue ParmVar 0xa0bea70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbd0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfb04 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0beab0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bfcf8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa0bfce8 <col:9, col:26>
    (CallExpr 0xa0bfcb8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa0bfca8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfc54 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9ee9c10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa0aaa60 'wcslen')))
      (ImplicitCastExpr 0xa0bfcd8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfc3c <col:23> 'const char_type *' lvalue ParmVar 0xa0bebc0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bfe38 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa0bfe28 <col:9, col:37>
    (ImplicitCastExpr 0xa0bfe18 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa0bfdc0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa0bfdb0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bfd90 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea120 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab470 'wmemchr')))
        (ImplicitCastExpr 0xa0bfde8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bfd48 <col:24> 'const char_type *' lvalue ParmVar 0xa0becc0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa0bfdf8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0bfd60 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bed50 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa0bfe08 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bfd78 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bed00 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bffa0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa0bff90 <col:9, col:40>
    (CallExpr 0xa0bff38 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa0bff28 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfecc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea620 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab0f0 'wmemmove')))
      (ImplicitCastExpr 0xa0bff60 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe84 <col:25> 'char_type *' lvalue ParmVar 0xa0beeb0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0bff70 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe9c <col:31> 'const char_type *' lvalue ParmVar 0xa0bef00 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bff80 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfeb4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa0bef40 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0c00e0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa0c00d0 <col:9, col:39>
    (CallExpr 0xa0c0078 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa0c0068 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0034 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9eea480 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa0ab080 'wmemcpy')))
      (ImplicitCastExpr 0xa0c00a0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bffec <col:24> 'char_type *' lvalue ParmVar 0xa0bf050 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0c00b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c0004 <col:30> 'const char_type *' lvalue ParmVar 0xa0bf0a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0c00c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c001c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf0e0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0c0240 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa0c0230 <col:9, col:37>
    (CallExpr 0xa0c01d8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa0c01c8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0174 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea820 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab160 'wmemset')))
      (ImplicitCastExpr 0xa0c0200 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c012c <col:24> 'char_type *' lvalue ParmVar 0xa0bf1c0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa0c0210 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0c0144 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa0bf240 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa0c0220 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c015c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf200 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0c02c0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0c02b0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0c0298 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0c0288 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0c0278 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0c0260 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf3b0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0c0340 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa0c0330 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa0c0318 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa0c0308 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa0c02f8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0c02e0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bf4d0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0c03d0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0c03c0 <col:9, col:24>
    (BinaryOperator 0xa0c03a8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0c0388 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c0354 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf5f0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0c0398 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c036c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf640 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0c0448 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa0c0438 <col:9, col:42>
    (CXXStaticCastExpr 0xa0c0420 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa0c0400 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa0c03e8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0c0620 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa0c0610 <col:9, col:46>
    (ConditionalOperator 0xa0c05f0 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa0c0568 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa0c0558 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c045c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa0bf6e0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0c0474 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0c0590 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa0c04f8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa0c04e8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0c048c <col:33> 'int_type (void)' lvalue CXXMethod 0xa0bf780 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa0c05e0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0c05a0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa0c05d0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c05b8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0xa08b2f8 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0xa08b2e8 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0xa08b2c8 <line:420:14, line:422:39> '_OI'
      (CallExpr 0xa08b2a0 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa08b0a0 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0xa087ef0)
        (CallExpr 0xa08b170 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa08b120 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
          (DeclRefExpr 0xa08b154 <col:64> '_II' lvalue ParmVar 0xa08aeb0 '__first' '_II'))
        (CallExpr 0xa08b1f8 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa08b1a8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
          (DeclRefExpr 0xa08b1dc <col:29> '_II' lvalue ParmVar 0xa08aef0 '__last' '_II'))
        (CallExpr 0xa08b280 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa08b230 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
          (DeclRefExpr 0xa08b264 <col:29> '_OI' lvalue ParmVar 0xa08af30 '__result' '_OI'))))))

;
    template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0xa08b898 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0xa08b578 <line:450:54>)
  (ReturnStmt 0xa08b888 <line:452:7, line:454:18>
    (ParenExpr 0xa08b870 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0xa08b848 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0xa08b6a8 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0xa0898e0 0xa08a470 0xa08ad70 0xa08b020)
        (CallExpr 0xa08b788 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa08b738 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0847f0)
          (DeclRefExpr 0xa08b76c <col:27> '_II' lvalue ParmVar 0xa08b3d0 '__first' '_II'))
        (CallExpr 0xa08b810 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0xa08b7c0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0847f0)
          (DeclRefExpr 0xa08b7f4 <col:55> '_II' lvalue ParmVar 0xa08b410 '__last' '_II'))
        (DeclRefExpr 0xa08b830 <line:454:9> '_OI' lvalue ParmVar 0xa08b450 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa08d818 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0xa08d468 <line:529:4, col:55>
    0xa08d430 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0xa08d7c8 <line:530:4, line:531:23>
    (BinaryOperator 0xa08d640 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa08d478 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa08d430 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0xa08d4f8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa08d4c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa08d490 <col:15> '_BI1' lvalue ParmVar 0xa08d1c0 '__last' '_BI1')
        (DeclRefExpr 0xa08d4a8 <col:24> '_BI1' lvalue ParmVar 0xa08d180 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa08d6c8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa08d688 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa08d658 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa08d430 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0xa08d670 <col:39> 'int' 0))
    (UnaryOperator 0xa08d708 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa08d6ec <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa08d430 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0xa08d7b0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0xa08d750 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0xa08d738 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa08d71c <col:9> '_BI2' lvalue ParmVar 0xa08d200 '__result' '_BI2')))
      (UnaryOperator 0xa08d798 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0xa08d780 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa08d764 <col:23> '_BI1' lvalue ParmVar 0xa08d1c0 '__last' '_BI1')))))
  (ReturnStmt 0xa08d808 <line:532:4, col:11>
    (DeclRefExpr 0xa08d7ec <col:11> '_BI2' lvalue ParmVar 0xa08d200 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa08ce10 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0xa08cdd0 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa08cd00 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa08bee0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa08beb0 <col:11> '_BI1' lvalue ParmVar 0xa08bcf0 '__first' '_BI1')
      (DeclRefExpr 0xa08bec8 <col:22> '_BI1' lvalue ParmVar 0xa08bd30 '__last' '_BI1'))
    (BinaryOperator 0xa08cdb8 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0xa08cd58 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0xa08cd40 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa08cd24 <col:9> '_BI2' lvalue ParmVar 0xa08bd70 '__result' '_BI2')))
      (UnaryOperator 0xa08cda0 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0xa08cd88 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa08cd6c <col:23> '_BI1' lvalue ParmVar 0xa08bd30 '__last' '_BI1')))))
  (ReturnStmt 0xa08ce00 <line:503:4, col:11>
    (DeclRefExpr 0xa08cde4 <col:11> '_BI2' lvalue ParmVar 0xa08bd70 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa08d818 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0xa08d468 <line:529:4, col:55>
    0xa08d430 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0xa08d7c8 <line:530:4, line:531:23>
    (BinaryOperator 0xa08d640 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa08d478 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa08d430 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0xa08d4f8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa08d4c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa08d490 <col:15> '_BI1' lvalue ParmVar 0xa08d1c0 '__last' '_BI1')
        (DeclRefExpr 0xa08d4a8 <col:24> '_BI1' lvalue ParmVar 0xa08d180 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa08d6c8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa08d688 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa08d658 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa08d430 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0xa08d670 <col:39> 'int' 0))
    (UnaryOperator 0xa08d708 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa08d6ec <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa08d430 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0xa08d7b0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0xa08d750 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0xa08d738 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa08d71c <col:9> '_BI2' lvalue ParmVar 0xa08d200 '__result' '_BI2')))
      (UnaryOperator 0xa08d798 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0xa08d780 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa08d764 <col:23> '_BI1' lvalue ParmVar 0xa08d1c0 '__last' '_BI1')))))
  (ReturnStmt 0xa08d808 <line:532:4, col:11>
    (DeclRefExpr 0xa08d7ec <col:11> '_BI2' lvalue ParmVar 0xa08d200 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0xa08e228 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0xa08dfc8 <line:559:4, col:43>
    0xa08df00 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0xa08dfa0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa08df68 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa08df34 <col:27> 'const _Tp *' lvalue ParmVar 0xa08dd40 '__last' 'const _Tp *')
        (DeclRefExpr 0xa08df4c <col:36> 'const _Tp *' lvalue ParmVar 0xa08dcf0 '__first' 'const _Tp *'))")
  (IfStmt 0xa08e168 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0xa08e000 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa08dff0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0xa08dfd8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0xa08df00 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0xa08e140 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0xa08e00c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa086460 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0xa08e090 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0xa08e058 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa08e024 <col:24> '_Tp *' lvalue ParmVar 0xa08ddb0 '__result' '_Tp *')
        (DeclRefExpr 0xa08e03c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0xa08df00 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0xa08e0b4 <col:41> 'const _Tp *' lvalue ParmVar 0xa08dcf0 '__first' 'const _Tp *')
      (BinaryOperator 0xa08e128 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa08e0d8 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0xa08e118 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa08e108 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0xa08e0f0 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0xa08df00 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa08e218 <line:562:4, col:22>
    (CXXOperatorCallExpr 0xa08e1f0 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa08e1b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0xa08e184 <col:11> '_Tp *' lvalue ParmVar 0xa08ddb0 '__result' '_Tp *')
      (DeclRefExpr 0xa08e19c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0xa08df00 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa08fb08 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0xa08e610 <line:570:7, col:69>
    0xa08e5e0 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0xa08e740 <line:571:7, col:69>
    0xa08e710 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0xa08e870 <line:572:7, col:74>
    0xa08e840 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0xa08ec50 <line:573:7, line:576:58>
    0xa08e890 "const bool __simple =
      (ParenExpr 0xa08ec38 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0xa08ec20 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0xa08eac8 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0xa08e9d8 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0xa08e8e8 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0xa08e9b0 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0xa08eaa0 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa08ebf8 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa08faf8 <line:578:7, line:581:18>
    (CallExpr 0xa08fad0 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa08fa60 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0xa08fa84 <col:59> '_BI1' lvalue ParmVar 0xa08e350 '__first' '_BI1')
      (DeclRefExpr 0xa08fa9c <line:580:10> '_BI1' lvalue ParmVar 0xa08e390 '__last' '_BI1')
      (DeclRefExpr 0xa08fab4 <line:581:10> '_BI2' lvalue ParmVar 0xa08e3d0 '__result' '_BI2'))))

;
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa090088 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0xa090078 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0xa090058 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0xa090030 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa08fe30 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0xa08e4c0)
        (CallExpr 0xa08ff00 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0xa08feb0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
          (DeclRefExpr 0xa08fee4 <col:24> '_BI1' lvalue ParmVar 0xa08fc40 '__first' '_BI1'))
        (CallExpr 0xa08ff88 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0xa08ff38 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
          (DeclRefExpr 0xa08ff6c <col:52> '_BI1' lvalue ParmVar 0xa08fc80 '__last' '_BI1'))
        (CallExpr 0xa090010 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa08ffc0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
          (DeclRefExpr 0xa08fff4 <col:24> '_BI2' lvalue ParmVar 0xa08fcc0 '__result' '_BI2'))))))

;
    template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa090608 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0xa090308 <line:621:54>)
  (ReturnStmt 0xa0905f8 <line:623:7, line:625:18>
    (ParenExpr 0xa0905e0 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0xa0905b8 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0xa090428 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0xa08fdb0)
        (CallExpr 0xa0904f8 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa0904a8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0847f0)
          (DeclRefExpr 0xa0904dc <col:27> '_BI1' lvalue ParmVar 0xa090160 '__first' '_BI1'))
        (CallExpr 0xa090580 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0xa090530 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0847f0)
          (DeclRefExpr 0xa090564 <col:55> '_BI1' lvalue ParmVar 0xa0901a0 '__last' '_BI1'))
        (DeclRefExpr 0xa0905a0 <line:625:9> '_BI2' lvalue ParmVar 0xa0901e0 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0xa090d18 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0xa090cf0 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa090c38 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa090bf8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa090bc4 <col:14> '_ForwardIterator' lvalue ParmVar 0xa0909b0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa090bdc <col:25> '_ForwardIterator' lvalue ParmVar 0xa0909f0 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa090c78 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa090c5c <col:35> '_ForwardIterator' lvalue ParmVar 0xa0909b0 '__first' '_ForwardIterator'))
    (BinaryOperator 0xa090cd8 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa090ca8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa090c8c <col:3> '_ForwardIterator' lvalue ParmVar 0xa0909b0 '__first' '_ForwardIterator'))
      (DeclRefExpr 0xa090cbc <col:13> 'const _Tp' lvalue ParmVar 0xa090a60 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa4a7328 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa4a7150 <line:685:7, col:32>
    0xa4a70f0 "const int __tmp =
      (ImplicitCastExpr 0xa4a7140 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa4a7124 <col:25> 'const int':'const int' lvalue ParmVar 0xa4a6d30 '__value' 'const int &'))")
  (ForStmt 0xa4a7300 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa4a71f0 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0xa4a71d0 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa4a719c <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa4a6c80 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0xa4a71e0 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa4a71b4 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa4a6cc0 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0xa4a7220 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0xa4a7208 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa4a6c80 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0xa4a72b0 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0xa4a7260 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa4a7250 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0xa4a7234 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa4a6c80 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0xa4a72a0 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0xa4a7290 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa4a7274 <col:13> 'const int':'const int' lvalue Var 0xa4a70f0 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0xa091440 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa0912e0 <line:685:7, col:32>
    0xa091290 "const _Tp __tmp =
      (DeclRefExpr 0xa0912c4 <col:25> 'const _Tp' lvalue ParmVar 0xa091120 '__value' 'const _Tp &')")
  (ForStmt 0xa091418 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa091360 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa091320 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa0912f0 <col:14> '_ForwardIterator' lvalue ParmVar 0xa091070 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa091308 <col:25> '_ForwardIterator' lvalue ParmVar 0xa0910b0 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa0913a0 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa091384 <col:35> '_ForwardIterator' lvalue ParmVar 0xa091070 '__first' '_ForwardIterator'))
    (BinaryOperator 0xa091400 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa0913d0 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa0913b4 <col:3> '_ForwardIterator' lvalue ParmVar 0xa091070 '__first' '_ForwardIterator'))
      (DeclRefExpr 0xa0913e4 <col:13> 'const _Tp' lvalue Var 0xa091290 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0xa092600 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0xa092360 <line:696:7, col:28>
    0xa092310 "const _Tp __tmp =
      (DeclRefExpr 0xa092344 <col:25> 'const _Tp' lvalue ParmVar 0xa091830 '__c' 'const _Tp &')")
  (CallExpr 0xa0925d8 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0xa0924d4 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0xa092370 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0xa0924ec <col:24> '_Tp *' lvalue ParmVar 0xa091770 '__first' '_Tp *')
    (CXXStaticCastExpr 0xa092530 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0xa092504 <col:60> 'const _Tp' lvalue Var 0xa092310 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0xa0925b0 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa092578 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0xa092548 <col:10> '_Tp *' lvalue ParmVar 0xa0917c0 '__last' '_Tp *')
      (DeclRefExpr 0xa092560 <col:19> '_Tp *' lvalue ParmVar 0xa091770 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa4a6f40 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0xa0928e8 <line:720:54>)
  (CallExpr 0xa4a6f18 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0xa4a6f08 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa4a6ec4 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa4a6dc0 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0xa091250 '__fill_a')))
    (CallExpr 0xa4a19c8 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa4a19b8 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4a1958 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa4a18b0 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0xa082ef0 '__niter_base')))
      (ImplicitCastExpr 0xa4a19e8 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa4a0ddc <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa448ff0 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0xa4a1ab0 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa4a1aa0 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4a1a78 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa4a18b0 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0xa082ef0 '__niter_base')))
      (ImplicitCastExpr 0xa4a1ad0 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa4a1a2c <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa449030 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0xa4a1adc <line:723:7> 'const int':'const int' lvalue ParmVar 0xa4490c0 '__value' 'const int &')))

template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0xa092aa8 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0xa0928e8 <line:720:54>)
  (CallExpr 0xa092a80 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0xa092918 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa090b90 0xa091250 0xa0922d0)
    (CallExpr 0xa0929c0 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa092970 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
      (DeclRefExpr 0xa0929a4 <col:39> '_ForwardIterator' lvalue ParmVar 0xa0926e0 '__first' '_ForwardIterator'))
    (CallExpr 0xa092a48 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0xa0929f8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
      (DeclRefExpr 0xa092a2c <col:67> '_ForwardIterator' lvalue ParmVar 0xa092720 '__last' '_ForwardIterator'))
    (DeclRefExpr 0xa092a68 <line:723:7> 'const _Tp' lvalue ParmVar 0xa092790 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0xa0933c0 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0xa093370 <line:731:7, line:733:13>
    (DeclStmt 0xa0931f0 <line:731:12, col:45>
      0xa0931a0 "decltype(__n + 0) __niter =
        (DeclRefExpr 0xa0931d4 <col:42> '_Size' lvalue ParmVar 0xa092ee0 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa093270 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0xa093230 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa093200 <col:5> 'decltype(__n + 0)' lvalue Var 0xa0931a0 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0xa093218 <col:15> 'int' 0))
    (BinaryOperator 0xa0932f8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0xa0932b0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa093294 <col:20> 'decltype(__n + 0)' lvalue Var 0xa0931a0 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0xa0932e0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0932c4 <col:31> '_OutputIterator' lvalue ParmVar 0xa092ea0 '__first' '_OutputIterator')))
    (BinaryOperator 0xa093358 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa093328 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa093310 <col:3> '_OutputIterator' lvalue ParmVar 0xa092ea0 '__first' '_OutputIterator'))
      (DeclRefExpr 0xa09333c <col:13> 'const _Tp' lvalue ParmVar 0xa092f70 '__value' 'const _Tp &')))
  (ReturnStmt 0xa0933b0 <line:734:7, col:14>
    (DeclRefExpr 0xa093394 <col:14> '_OutputIterator' lvalue ParmVar 0xa092ea0 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0xa093cc0 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0xa0939e0 <line:742:7, col:32>
    0xa093990 "const _Tp __tmp =
      (DeclRefExpr 0xa0939c4 <col:25> 'const _Tp' lvalue ParmVar 0xa093820 '__value' 'const _Tp &')")
  (ForStmt 0xa093c70 <line:743:7, line:745:13>
    (DeclStmt 0xa093af0 <line:743:12, col:45>
      0xa093aa0 "decltype(__n + 0) __niter =
        (DeclRefExpr 0xa093ad4 <col:42> '_Size' lvalue ParmVar 0xa0937b0 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa093b70 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0xa093b30 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa093b00 <col:5> 'decltype(__n + 0)' lvalue Var 0xa093aa0 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0xa093b18 <col:15> 'int' 0))
    (BinaryOperator 0xa093bf8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0xa093bb0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa093b94 <col:20> 'decltype(__n + 0)' lvalue Var 0xa093aa0 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0xa093be0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa093bc4 <col:31> '_OutputIterator' lvalue ParmVar 0xa093770 '__first' '_OutputIterator')))
    (BinaryOperator 0xa093c58 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa093c28 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa093c10 <col:3> '_OutputIterator' lvalue ParmVar 0xa093770 '__first' '_OutputIterator'))
      (DeclRefExpr 0xa093c3c <col:13> 'const _Tp' lvalue Var 0xa093990 '__tmp' 'const _Tp')))
  (ReturnStmt 0xa093cb0 <line:746:7, col:14>
    (DeclRefExpr 0xa093c94 <col:14> '_OutputIterator' lvalue ParmVar 0xa093770 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0xa0950c0 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0xa094ff8 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0xa094ef8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa090b90 0xa091250 0xa0922d0)
    (DeclRefExpr 0xa094f34 <col:21> '_Tp *' lvalue ParmVar 0xa094080 '__first' '_Tp *')
    (CXXOperatorCallExpr 0xa094fb8 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa094f80 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
      (DeclRefExpr 0xa094f4c <col:30> '_Tp *' lvalue ParmVar 0xa094080 '__first' '_Tp *')
      (DeclRefExpr 0xa094f64 <col:40> '_Size' lvalue ParmVar 0xa0940c0 '__n' '_Size'))
    (DeclRefExpr 0xa094fdc <col:45> 'const _Tp' lvalue ParmVar 0xa094130 '__c' 'const _Tp &'))
  (ReturnStmt 0xa0950b0 <line:755:7, col:24>
    (CXXOperatorCallExpr 0xa095088 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa095050 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
      (DeclRefExpr 0xa095020 <col:14> '_Tp *' lvalue ParmVar 0xa094080 '__first' '_Tp *')
      (DeclRefExpr 0xa095038 <col:24> '_Size' lvalue ParmVar 0xa0940c0 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0xa095568 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0xa095558 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0xa095538 <col:14, col:75> '_OI'
      (CallExpr 0xa095510 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0xa095418 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0930a0 0xa093950 0xa094ea0)
        (CallExpr 0xa0954c0 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0xa095470 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
          (DeclRefExpr 0xa0954a4 <col:52> '_OI' lvalue ParmVar 0xa0951f0 '__first' '_OI'))
        (DeclRefExpr 0xa0954e0 <col:62> '_Size' lvalue ParmVar 0xa095230 '__n' '_Size')
        (DeclRefExpr 0xa0954f8 <col:67> 'const _Tp' lvalue ParmVar 0xa0952a0 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0xa0964d0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0xa0964c0 <line:804:4, line:805:30>
    (UnaryOperator 0xa0964a8 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0xa096480 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0xa096354 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa09636c <col:29> 'const _Tp *' lvalue ParmVar 0xa095fe0 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa096384 <col:39> 'const _Tp *' lvalue ParmVar 0xa096080 '__first2' 'const _Tp *')
        (BinaryOperator 0xa096468 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0xa0963a8 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0xa096450 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0xa096428 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa0963f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (DeclRefExpr 0xa0963c0 <col:11> 'const _Tp *' lvalue ParmVar 0xa096030 '__last1' 'const _Tp *')
              (DeclRefExpr 0xa0963d8 <col:21> 'const _Tp *' lvalue ParmVar 0xa095fe0 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0xa095d30 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0xa095ce8 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa095b10 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa095ad0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa095aa0 <col:11> '_II1' lvalue ParmVar 0xa0958b0 '__first1' '_II1')
      (DeclRefExpr 0xa095ab8 <col:23> '_II1' lvalue ParmVar 0xa0958f0 '__last1' '_II1'))
    (BinaryOperator 0xa095b98 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0xa095b50 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa095b34 <col:34> '_II1' lvalue ParmVar 0xa0958b0 '__first1' '_II1'))
      (UnaryOperator 0xa095b80 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa095b64 <col:46> '_II2' lvalue ParmVar 0xa095930 '__first2' '_II2')))
    (IfStmt 0xa095cc8 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0xa095c90 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0xa095c78 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0xa095c50 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0xa095c10 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0)
            (UnaryOperator 0xa095bc8 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa095bb0 <col:13> '_II1' lvalue ParmVar 0xa0958b0 '__first1' '_II1'))
            (UnaryOperator 0xa095bf8 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa095bdc <col:26> '_II2' lvalue ParmVar 0xa095930 '__first2' '_II2')))))
      (ReturnStmt 0xa095cb8 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0xa095ca8 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0xa095d20 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0xa095d10 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0xa0964d0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0xa0964c0 <line:804:4, line:805:30>
    (UnaryOperator 0xa0964a8 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0xa096480 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0xa096354 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa09636c <col:29> 'const _Tp *' lvalue ParmVar 0xa095fe0 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa096384 <col:39> 'const _Tp *' lvalue ParmVar 0xa096080 '__first2' 'const _Tp *')
        (BinaryOperator 0xa096468 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0xa0963a8 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0xa096450 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0xa096428 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa0963f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (DeclRefExpr 0xa0963c0 <col:11> 'const _Tp *' lvalue ParmVar 0xa096030 '__last1' 'const _Tp *')
              (DeclRefExpr 0xa0963d8 <col:21> 'const _Tp *' lvalue ParmVar 0xa095fe0 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0xa099578 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0xa0968a0 <line:813:7, col:69>
    0xa096870 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0xa0969d0 <line:814:7, col:69>
    0xa0969a0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0xa0993b8 <line:815:7, line:818:58>
    0xa0969f0 "const bool __simple =
      (ParenExpr 0xa0993a0 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0xa099388 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0xa096d18 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0xa096c28 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0xa096b30 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0xa096c00 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0xa096cf0 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa099360 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa099568 <line:820:7, col:71>
    (CallExpr 0xa099540 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0994d0 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0xa0994f4 <col:44> '_II1' lvalue ParmVar 0xa0965b0 '__first1' '_II1')
      (DeclRefExpr 0xa09950c <col:54> '_II1' lvalue ParmVar 0xa0965f0 '__last1' '_II1')
      (DeclRefExpr 0xa099524 <col:63> '_II2' lvalue ParmVar 0xa096630 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0xa09aa58 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0xa09a6f8 <line:846:4, line:847:34>
    0xa09a630 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0xa09a6d0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a698 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09a664 <col:16> '_RAI1' lvalue ParmVar 0xa09a180 '__last1' '_RAI1')
        (DeclRefExpr 0xa09a67c <col:26> '_RAI1' lvalue ParmVar 0xa09a140 '__first1' '_RAI1'))")
  (DeclStmt 0xa09a8d8 <line:848:4, line:849:34>
    0xa09a810 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0xa09a8b0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a878 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09a844 <col:16> '_RAI2' lvalue ParmVar 0xa09a200 '__last2' '_RAI2')
        (DeclRefExpr 0xa09a85c <col:26> '_RAI2' lvalue ParmVar 0xa09a1c0 '__first2' '_RAI2'))")
  (ReturnStmt 0xa09aa48 <line:850:4, col:52>
    (ConditionalOperator 0xa09aa28 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0xa09a958 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a918 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
        (DeclRefExpr 0xa09a8e8 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa09a810 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0xa09a900 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0xa09a630 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0xa09a9e8 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a9b0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (DeclRefExpr 0xa09a97c <col:31> '_RAI1' lvalue ParmVar 0xa09a140 '__first1' '_RAI1')
        (DeclRefExpr 0xa09a994 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa09a810 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0xa09aa0c <col:52> '_RAI1' lvalue ParmVar 0xa09a180 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0xa09aa98 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0xa09aa88 <col:11, col:18>
    (CXXBoolLiteralExpr 0xa09aa78 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0xa099d68 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0xa099d58 <col:11, col:18>
    (DeclRefExpr 0xa099d40 <col:18> '_II1' lvalue ParmVar 0xa099980 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0xa099e28 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0xa099e18 <col:11, col:29>
    (CXXOperatorCallExpr 0xa099df0 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa099db0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa099d7c <col:18> '_II' lvalue ParmVar 0xa099bc0 '__first' '_II')
      (DeclRefExpr 0xa099d94 <col:29> '_II' lvalue ParmVar 0xa099c00 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0xa09aa58 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0xa09a6f8 <line:846:4, line:847:34>
    0xa09a630 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0xa09a6d0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a698 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09a664 <col:16> '_RAI1' lvalue ParmVar 0xa09a180 '__last1' '_RAI1')
        (DeclRefExpr 0xa09a67c <col:26> '_RAI1' lvalue ParmVar 0xa09a140 '__first1' '_RAI1'))")
  (DeclStmt 0xa09a8d8 <line:848:4, line:849:34>
    0xa09a810 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0xa09a8b0 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a878 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09a844 <col:16> '_RAI2' lvalue ParmVar 0xa09a200 '__last2' '_RAI2')
        (DeclRefExpr 0xa09a85c <col:26> '_RAI2' lvalue ParmVar 0xa09a1c0 '__first2' '_RAI2'))")
  (ReturnStmt 0xa09aa48 <line:850:4, col:52>
    (ConditionalOperator 0xa09aa28 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0xa09a958 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a918 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
        (DeclRefExpr 0xa09a8e8 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa09a810 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0xa09a900 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0xa09a630 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0xa09a9e8 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa09a9b0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (DeclRefExpr 0xa09a97c <col:31> '_RAI1' lvalue ParmVar 0xa09a140 '__first1' '_RAI1')
        (DeclRefExpr 0xa09a994 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa09a810 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0xa09aa0c <col:52> '_RAI1' lvalue ParmVar 0xa09a180 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0xa09aa98 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0xa09aa88 <col:11, col:18>
    (CXXBoolLiteralExpr 0xa09aa78 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0xa09dd10 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0xa09d698 <line:897:4, col:44>
    0xa09d5d0 "const size_t __len1 =
      (CXXOperatorCallExpr 0xa09d670 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa09d638 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09d604 <col:26> 'const _Tp *' lvalue ParmVar 0xa09d390 '__last1' 'const _Tp *')
        (DeclRefExpr 0xa09d61c <col:36> 'const _Tp *' lvalue ParmVar 0xa09d340 '__first1' 'const _Tp *'))")
  (DeclStmt 0xa09d778 <line:898:4, col:44>
    0xa09d6b0 "const size_t __len2 =
      (CXXOperatorCallExpr 0xa09d750 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa09d718 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09d6e4 <col:26> 'const _Up *' lvalue ParmVar 0xa09d450 '__last2' 'const _Up *')
        (DeclRefExpr 0xa09d6fc <col:36> 'const _Up *' lvalue ParmVar 0xa09d400 '__first2' 'const _Up *'))")
  (DeclStmt 0xa09dbb8 <line:899:4, line:900:32>
    0xa09d7a0 "const int __result =
      (CallExpr 0xa09db90 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0xa09d7d4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa09d7ec <col:42> 'const _Tp *' lvalue ParmVar 0xa09d340 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa09d804 <col:52> 'const _Up *' lvalue ParmVar 0xa09d400 '__first2' 'const _Up *')
        (CallExpr 0xa09db68 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0xa09db58 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa09daf8 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0xa09da50 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0xa081c30 'min')))
          (DeclRefExpr 0xa09d870 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa09d5d0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0xa09d888 <col:24> 'const size_t':'const unsigned int' lvalue Var 0xa09d6b0 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0xa09dd00 <line:901:4, col:51>
    (ConditionalOperator 0xa09dce0 <col:11, col:51> '_Bool'
      (BinaryOperator 0xa09dc08 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa09dbf8 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0xa09dbc8 <col:11> 'const int' lvalue Var 0xa09d7a0 '__result' 'const int'))
        (IntegerLiteral 0xa09dbe0 <col:23> 'int' 0))
      (BinaryOperator 0xa09dc60 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0xa09dc50 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0xa09dc20 <col:27> 'const int' lvalue Var 0xa09d7a0 '__result' 'const int'))
        (IntegerLiteral 0xa09dc38 <col:38> 'int' 0))
      (BinaryOperator 0xa09dcc8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0xa09dca8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa09dc78 <col:42> 'const size_t':'const unsigned int' lvalue Var 0xa09d5d0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa09dcb8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa09dc90 <col:51> 'const size_t':'const unsigned int' lvalue Var 0xa09d6b0 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0xa09d038 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0xa09c5e0 <line:872:2, col:70>
    0xa09c5b0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0xa09c770 <line:873:2, col:70>
    0xa09c740 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0xa09c990 <line:874:2, col:59>
    0xa09c960 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0xa09cab0 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0xa09c9a0 <line:876:2> '_II1' lvalue ParmVar 0xa09b2c0 '__last1' '_II1')
    (CallExpr 0xa09ca80 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa09c9f8 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0xa09ca1c <col:35> '_II1' lvalue ParmVar 0xa09b280 '__first1' '_II1')
      (DeclRefExpr 0xa09ca34 <col:45> '_II1' lvalue ParmVar 0xa09b2c0 '__last1' '_II1')
      (DeclRefExpr 0xa09ca4c <line:877:7> '_II2' lvalue ParmVar 0xa09b300 '__first2' '_II2')
      (DeclRefExpr 0xa09ca64 <col:17> '_II2' lvalue ParmVar 0xa09c310 '__last2' '_II2')))
  (ForStmt 0xa09ceb8 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa09cc00 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa09cb38 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa09caf8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
        (DeclRefExpr 0xa09cac8 <col:9> '_II1' lvalue ParmVar 0xa09b280 '__first1' '_II1')
        (DeclRefExpr 0xa09cae0 <col:21> '_II1' lvalue ParmVar 0xa09b2c0 '__last1' '_II1'))
      (CallExpr 0xa09cbd8 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa09cb80 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0xa09cba4 <col:51> '_II2' lvalue ParmVar 0xa09b300 '__first2' '_II2')
        (DeclRefExpr 0xa09cbbc <col:61> '_II2' lvalue ParmVar 0xa09c310 '__last2' '_II2')))
    (BinaryOperator 0xa09cc78 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0xa09cc30 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa09cc18 <col:9> '_II1' lvalue ParmVar 0xa09b280 '__first1' '_II1'))
      (UnaryOperator 0xa09cc60 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa09cc44 <col:21> '_II2' lvalue ParmVar 0xa09b300 '__first2' '_II2')))
    (CompoundStmt 0xa09cea0 <line:880:4, line:885:4>
      (IfStmt 0xa09cd78 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa09cd30 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa09ccf0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
          (UnaryOperator 0xa09cca8 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa09cc90 <col:11> '_II1' lvalue ParmVar 0xa09b280 '__first1' '_II1'))
          (UnaryOperator 0xa09ccd8 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa09ccbc <col:23> '_II2' lvalue ParmVar 0xa09b300 '__first2' '_II2')))
        (ReturnStmt 0xa09cd68 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0xa09cd58 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0xa09ce80 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa09ce38 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa09cdf8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
          (UnaryOperator 0xa09cdb0 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa09cd94 <col:11> '_II2' lvalue ParmVar 0xa09b300 '__first2' '_II2'))
          (UnaryOperator 0xa09cde0 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa09cdc4 <col:23> '_II1' lvalue ParmVar 0xa09b280 '__first1' '_II1')))
        (ReturnStmt 0xa09ce70 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0xa09ce60 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0xa09d028 <line:886:2, col:44>
    (BinaryOperator 0xa09d010 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa09cf50 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa09cf10 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0)
        (DeclRefExpr 0xa09cedc <col:9> '_II1' lvalue ParmVar 0xa09b280 '__first1' '_II1')
        (DeclRefExpr 0xa09cef4 <col:21> '_II1' lvalue ParmVar 0xa09b2c0 '__last1' '_II1'))
      (CXXOperatorCallExpr 0xa09cfe8 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa09cfa8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
        (DeclRefExpr 0xa09cf74 <col:32> '_II2' lvalue ParmVar 0xa09b300 '__first2' '_II2')
        (DeclRefExpr 0xa09cf8c <col:44> '_II2' lvalue ParmVar 0xa09c310 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0xa09dd10 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0xa09d698 <line:897:4, col:44>
    0xa09d5d0 "const size_t __len1 =
      (CXXOperatorCallExpr 0xa09d670 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa09d638 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09d604 <col:26> 'const _Tp *' lvalue ParmVar 0xa09d390 '__last1' 'const _Tp *')
        (DeclRefExpr 0xa09d61c <col:36> 'const _Tp *' lvalue ParmVar 0xa09d340 '__first1' 'const _Tp *'))")
  (DeclStmt 0xa09d778 <line:898:4, col:44>
    0xa09d6b0 "const size_t __len2 =
      (CXXOperatorCallExpr 0xa09d750 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa09d718 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa09d6e4 <col:26> 'const _Up *' lvalue ParmVar 0xa09d450 '__last2' 'const _Up *')
        (DeclRefExpr 0xa09d6fc <col:36> 'const _Up *' lvalue ParmVar 0xa09d400 '__first2' 'const _Up *'))")
  (DeclStmt 0xa09dbb8 <line:899:4, line:900:32>
    0xa09d7a0 "const int __result =
      (CallExpr 0xa09db90 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0xa09d7d4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa09d7ec <col:42> 'const _Tp *' lvalue ParmVar 0xa09d340 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa09d804 <col:52> 'const _Up *' lvalue ParmVar 0xa09d400 '__first2' 'const _Up *')
        (CallExpr 0xa09db68 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0xa09db58 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa09daf8 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0xa09da50 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0xa081c30 'min')))
          (DeclRefExpr 0xa09d870 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa09d5d0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0xa09d888 <col:24> 'const size_t':'const unsigned int' lvalue Var 0xa09d6b0 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0xa09dd00 <line:901:4, col:51>
    (ConditionalOperator 0xa09dce0 <col:11, col:51> '_Bool'
      (BinaryOperator 0xa09dc08 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa09dbf8 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0xa09dbc8 <col:11> 'const int' lvalue Var 0xa09d7a0 '__result' 'const int'))
        (IntegerLiteral 0xa09dbe0 <col:23> 'int' 0))
      (BinaryOperator 0xa09dc60 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0xa09dc50 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0xa09dc20 <col:27> 'const int' lvalue Var 0xa09d7a0 '__result' 'const int'))
        (IntegerLiteral 0xa09dc38 <col:38> 'int' 0))
      (BinaryOperator 0xa09dcc8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0xa09dca8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa09dc78 <col:42> 'const size_t':'const unsigned int' lvalue Var 0xa09d5d0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa09dcb8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa09dc90 <col:51> 'const size_t':'const unsigned int' lvalue Var 0xa09d6b0 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0xa09f8b8 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0xa09e120 <line:910:7, col:69>
    0xa09e0f0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0xa09e250 <line:911:7, col:69>
    0xa09e220 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0xa09f6d8 <line:912:7, line:917:34>
    0xa09e270 "const bool __simple =
      (ParenExpr 0xa09f6c0 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0xa09f6a8 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0xa09f5b8 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0xa09f4d0 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0xa09f390 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0xa09f238 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0xa09f0f0 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0xa09f210 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0xa09f378 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0xa09f350 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0xa09f4b8 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0xa09f490 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0xa09f590 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa09f680 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa09f8a8 <line:919:7, line:920:29>
    (CallExpr 0xa09f878 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa09f7f0 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0xa09f814 <col:61> '_II1' lvalue ParmVar 0xa09ddf0 '__first1' '_II1')
      (DeclRefExpr 0xa09f82c <col:71> '_II1' lvalue ParmVar 0xa09de30 '__last1' '_II1')
      (DeclRefExpr 0xa09f844 <line:920:12> '_II2' lvalue ParmVar 0xa09de70 '__first2' '_II2')
      (DeclRefExpr 0xa09f85c <col:22> '_II2' lvalue ParmVar 0xa09deb0 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0xa0a04c0 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0xa09fcc0 <line:939:7, line:940:12>
    0xa09fc90 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0xa09fdf0 <line:941:7, line:942:15>
    0xa09fdc0 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0xa09fe00 <line:947:67>)
  (DeclStmt 0xa09ff10 <line:949:7, col:59>
    0xa09fe30 "_DistanceType __len =
      (CallExpr 0xa09fee8 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa09fe80 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
        (DeclRefExpr 0xa09feb4 <col:43> '_ForwardIterator' lvalue ParmVar 0xa09f9a0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa09fecc <col:52> '_ForwardIterator' lvalue ParmVar 0xa09f9e0 '__last' '_ForwardIterator'))")
  (WhileStmt 0xa0a0480 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa09ff90 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa09ff50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa09ff20 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09fe30 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0xa09ff38 <col:22> 'int' 0))
    (CompoundStmt 0xa0a0460 <line:952:2, line:964:2>
      (DeclStmt 0xa0a0040 <line:953:4, col:37>
        0xa09ffc0 "_DistanceType __half =
          (BinaryOperator 0xa0a0028 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0xa09fff4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09fe30 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0xa0a0010 <col:36> 'int' 1))")
      (DeclStmt 0xa0a00b0 <line:954:4, col:39>
        0xa0a0060 "_ForwardIterator __middle =
          (DeclRefExpr 0xa0a0094 <col:32> '_ForwardIterator' lvalue ParmVar 0xa09f9a0 '__first' '_ForwardIterator')")
      (CallExpr 0xa0a0150 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a00e8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05ce60)
        (DeclRefExpr 0xa0a011c <col:17> '_ForwardIterator' lvalue Var 0xa0a0060 '__middle' '_ForwardIterator')
        (DeclRefExpr 0xa0a0134 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09ffc0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0xa0a0440 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa0a0200 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa0a01c0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
          (UnaryOperator 0xa0a0190 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0a0174 <col:9> '_ForwardIterator' lvalue Var 0xa0a0060 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0xa0a01a4 <col:20> 'const _Tp' lvalue ParmVar 0xa09fa50 '__val' 'const _Tp &'))
        (CompoundStmt 0xa0a03d8 <line:957:6, line:961:6>
          (BinaryOperator 0xa0a0258 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0xa0a0224 <col:8> '_ForwardIterator' lvalue ParmVar 0xa09f9a0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa0a023c <col:18> '_ForwardIterator' lvalue Var 0xa0a0060 '__middle' '_ForwardIterator'))
          (UnaryOperator 0xa0a0288 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa0a0270 <col:10> '_ForwardIterator' lvalue ParmVar 0xa09f9a0 '__first' '_ForwardIterator'))
          (BinaryOperator 0xa0a03c0 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0xa0a029c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09fe30 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0xa0a0398 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0xa0a0360 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (CXXOperatorCallExpr 0xa0a0320 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0xa0a02e8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                (DeclRefExpr 0xa0a02b4 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09fe30 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0xa0a02cc <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09ffc0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0xa0a0348 <col:33> 'int' 1))))
        (BinaryOperator 0xa0a0428 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0xa0a03f4 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09fe30 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0xa0a040c <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa09ffc0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0xa0a04b0 <line:965:7, col:14>
    (DeclRefExpr 0xa0a0494 <col:14> '_ForwardIterator' lvalue ParmVar 0xa09f9a0 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0xa0a08e0 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0xa0a06a8 <line:974:7, col:16>
    0xa0a0670 "_Size __k")
  (ForStmt 0xa0a0818 <line:975:7, line:976:4>
    (BinaryOperator 0xa0a06e8 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0xa0a06b8 <col:12> '_Size' lvalue Var 0xa0a0670 '__k' '_Size')
      (IntegerLiteral 0xa0a06d0 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0a0770 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa0a0730 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa0a0700 <col:21> '_Size' lvalue ParmVar 0xa0a0550 '__n' '_Size')
      (IntegerLiteral 0xa0a0718 <col:28> 'int' 0))
    (CompoundAssignOperator 0xa0a07c8 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa0a0794 <col:31> '_Size' lvalue ParmVar 0xa0a0550 '__n' '_Size')
      (IntegerLiteral 0xa0a07b0 <col:39> 'int' 1))
    (UnaryOperator 0xa0a0800 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa0a07e8 <col:4> '_Size' lvalue Var 0xa0a0670 '__k' '_Size')))
  (ReturnStmt 0xa0a08d0 <line:977:7, col:20>
    (CXXOperatorCallExpr 0xa0a08a8 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa0a0870 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0xa0a083c <col:14> '_Size' lvalue Var 0xa0a0670 '__k' '_Size')
      (IntegerLiteral 0xa0a0858 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0xa0a0c50 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0xa0a0c40 <col:5, col:63>
    (ImplicitCastExpr 0xa0a0c30 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0xa0a0c18 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0xa0a0a68 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0xa0a0a28 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa0a09e8 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0xa0a0a18 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0a0a00 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa0a0a58 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0a0a40 <col:42> 'int' 1)))
        (ImplicitCastExpr 0xa0a0c08 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0xa0a0bc8 <col:46, col:63> 'int'
            (ImplicitCastExpr 0xa0a0bb8 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0a0b70 <col:46> 'int (unsigned int)' lvalue Function 0xa0a0a80 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0xa0a0bf8 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa0a0be8 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0xa0a0b88 <col:60> 'int' lvalue ParmVar 0xa0a0910 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0xa0a0fe0 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0xa0a0fd0 <col:5, col:64>
    (ImplicitCastExpr 0xa0a0fc0 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0xa0a0fa8 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0xa0a0dd8 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0xa0a0d98 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa0a0d58 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0xa0a0d88 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0a0d70 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa0a0dc8 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0a0db0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0xa0a0f98 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0xa0a0f58 <col:46, col:64> 'int'
            (ImplicitCastExpr 0xa0a0f48 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0a0f00 <col:46> 'int (unsigned long)' lvalue Function 0xa0a0e10 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0xa0a0f88 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0xa0a0f78 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0xa0a0f18 <col:61> 'long' lvalue ParmVar 0xa0a0c80 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0xa0a1bc0 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0xa0a1bb0 <col:5, col:70>
    (ImplicitCastExpr 0xa0a1ba0 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0xa0a1b88 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0xa0a19b8 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0xa0a1978 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa0a1938 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0xa0a1968 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa0a1950 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa0a19a8 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa0a1990 <col:47> 'int' 1)))
        (ImplicitCastExpr 0xa0a1b78 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0xa0a1b38 <col:51, col:70> 'int'
            (ImplicitCastExpr 0xa0a1b28 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0a1ae0 <col:51> 'int (unsigned long long)' lvalue Function 0xa0a19f0 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0xa0a1b68 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0xa0a1b58 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0xa0a1af8 <col:67> 'long long' lvalue ParmVar 0xa0a1860 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0xa0a2078 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0xa0a1e48 <line:1018:56>)
  (ReturnStmt 0xa0a2068 <line:1020:7, line:1022:37>
    (CallExpr 0xa0a2040 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa0a1e70 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa096750)
      (CallExpr 0xa0a1f10 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a1ec0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
        (DeclRefExpr 0xa0a1ef4 <col:49> '_II1' lvalue ParmVar 0xa0a1ca0 '__first1' '_II1'))
      (CallExpr 0xa0a1f98 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a1f48 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
        (DeclRefExpr 0xa0a1f7c <col:28> '_II1' lvalue ParmVar 0xa0a1ce0 '__last1' '_II1'))
      (CallExpr 0xa0a2020 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a1fd0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
        (DeclRefExpr 0xa0a2004 <col:28> '_II2' lvalue ParmVar 0xa0a1d20 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0xa0a2640 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0xa0a23b8 <line:1048:56>)
  (ForStmt 0xa0a25f8 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0a2438 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa0a23f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
      (DeclRefExpr 0xa0a23c4 <col:14> '_IIter1' lvalue ParmVar 0xa0a21a0 '__first1' '_IIter1')
      (DeclRefExpr 0xa0a23dc <col:26> '_IIter1' lvalue ParmVar 0xa0a21e0 '__last1' '_IIter1'))
    (BinaryOperator 0xa0a24c0 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0xa0a2478 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a245c <col:37> '_IIter1' lvalue ParmVar 0xa0a21a0 '__first1' '_IIter1'))
      (UnaryOperator 0xa0a24a8 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a248c <col:49> '_IIter2' lvalue ParmVar 0xa0a2220 '__first2' '_IIter2')))
    (IfStmt 0xa0a25d8 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0xa0a25a0 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0xa0a2580 <col:7, col:47> '_Bool'
          (CallExpr 0xa0a2558 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0xa0a24e0 <col:12> '_BinaryPredicate' lvalue ParmVar 0xa0a2260 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0xa0a2510 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa0a24f8 <col:27> '_IIter1' lvalue ParmVar 0xa0a21a0 '__first1' '_IIter1'))
            (UnaryOperator 0xa0a2540 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa0a2524 <col:38> '_IIter2' lvalue ParmVar 0xa0a2220 '__first2' '_IIter2')))))
      (ReturnStmt 0xa0a25c8 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0xa0a25b8 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0xa0a2630 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0xa0a2620 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0xa0a2e30 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0xa0a2a20 <line:1077:7, col:69>
    0xa0a29f0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0xa0a2b50 <line:1078:7, col:69>
    0xa0a2b20 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0xa0a2b60 <line:1083:56>)
  (NullStmt 0xa0a2b70 <line:1084:56>)
  (ReturnStmt 0xa0a2e20 <line:1086:7, line:1089:33>
    (CallExpr 0xa0a2df0 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0a2b98 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa09dfd0)
      (CallExpr 0xa0a2c38 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a2be8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
        (DeclRefExpr 0xa0a2c1c <col:67> '_II1' lvalue ParmVar 0xa0a2720 '__first1' '_II1'))
      (CallExpr 0xa0a2cc0 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a2c70 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
        (DeclRefExpr 0xa0a2ca4 <col:25> '_II1' lvalue ParmVar 0xa0a2760 '__last1' '_II1'))
      (CallExpr 0xa0a2d48 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a2cf8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
        (DeclRefExpr 0xa0a2d2c <col:25> '_II2' lvalue ParmVar 0xa0a27a0 '__first2' '_II2'))
      (CallExpr 0xa0a2dd0 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a2d80 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa082ef0)
        (DeclRefExpr 0xa0a2db4 <col:25> '_II2' lvalue ParmVar 0xa0a27e0 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0xa0a4900 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0xa0a3300 <line:1110:7, col:75>
    0xa0a32d0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0xa0a3430 <line:1111:7, col:75>
    0xa0a3400 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0xa0a3640 <line:1112:7, col:64>
    0xa0a3610 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0xa0a3650 <line:1117:56>)
  (NullStmt 0xa0a3660 <line:1118:56>)
  (BinaryOperator 0xa0a3780 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0xa0a366c <col:7> '_II1' lvalue ParmVar 0xa0a2fb0 '__last1' '_II1')
    (CallExpr 0xa0a3750 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa0a36c8 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0xa0a36ec <col:40> '_II1' lvalue ParmVar 0xa0a2f70 '__first1' '_II1')
      (DeclRefExpr 0xa0a3704 <col:50> '_II1' lvalue ParmVar 0xa0a2fb0 '__last1' '_II1')
      (DeclRefExpr 0xa0a371c <col:59> '_II2' lvalue ParmVar 0xa0a2ff0 '__first2' '_II2')
      (DeclRefExpr 0xa0a3734 <col:69> '_II2' lvalue ParmVar 0xa0a3030 '__last2' '_II2')))
  (ForStmt 0xa0a4780 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa0a4518 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0a3808 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a37c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
        (DeclRefExpr 0xa0a3798 <col:14> '_II1' lvalue ParmVar 0xa0a2f70 '__first1' '_II1')
        (DeclRefExpr 0xa0a37b0 <col:26> '_II1' lvalue ParmVar 0xa0a2fb0 '__last1' '_II1'))
      (CallExpr 0xa0a44f0 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa0a4498 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0xa0a44bc <col:56> '_II2' lvalue ParmVar 0xa0a2ff0 '__first2' '_II2')
        (DeclRefExpr 0xa0a44d4 <col:66> '_II2' lvalue ParmVar 0xa0a3030 '__last2' '_II2')))
    (BinaryOperator 0xa0a4590 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0xa0a4548 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a4530 <col:7> '_II1' lvalue ParmVar 0xa0a2f70 '__first1' '_II1'))
      (UnaryOperator 0xa0a4578 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a455c <col:19> '_II2' lvalue ParmVar 0xa0a2ff0 '__first2' '_II2')))
    (CompoundStmt 0xa0a4768 <line:1123:2, line:1128:2>
      (IfStmt 0xa0a4668 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0xa0a4620 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0xa0a45a8 <col:8> '_Compare' lvalue ParmVar 0xa0a3070 '__comp' '_Compare')
          (UnaryOperator 0xa0a45d8 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0a45c0 <col:16> '_II1' lvalue ParmVar 0xa0a2f70 '__first1' '_II1'))
          (UnaryOperator 0xa0a4608 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0a45ec <col:27> '_II2' lvalue ParmVar 0xa0a2ff0 '__first2' '_II2')))
        (ReturnStmt 0xa0a4658 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0xa0a4648 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0xa0a4748 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0xa0a4700 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0xa0a4684 <col:8> '_Compare' lvalue ParmVar 0xa0a3070 '__comp' '_Compare')
          (UnaryOperator 0xa0a46b8 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0a469c <col:16> '_II2' lvalue ParmVar 0xa0a2ff0 '__first2' '_II2'))
          (UnaryOperator 0xa0a46e8 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0a46cc <col:27> '_II1' lvalue ParmVar 0xa0a2f70 '__first1' '_II1')))
        (ReturnStmt 0xa0a4738 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0xa0a4728 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0xa0a48f0 <line:1129:7, col:49>
    (BinaryOperator 0xa0a48d8 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0a4818 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a47d8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0)
        (DeclRefExpr 0xa0a47a4 <col:14> '_II1' lvalue ParmVar 0xa0a2f70 '__first1' '_II1')
        (DeclRefExpr 0xa0a47bc <col:26> '_II1' lvalue ParmVar 0xa0a2fb0 '__last1' '_II1'))
      (CXXOperatorCallExpr 0xa0a48b0 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a4870 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
        (DeclRefExpr 0xa0a483c <col:37> '_II2' lvalue ParmVar 0xa0a2ff0 '__first2' '_II2')
        (DeclRefExpr 0xa0a4854 <col:49> '_II2' lvalue ParmVar 0xa0a3030 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0xa0a5038 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0xa0a4cb8 <line:1156:56>)
  (WhileStmt 0xa0a4eb8 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0xa0a4e28 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0a4d38 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a4cf8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
        (DeclRefExpr 0xa0a4cc4 <col:14> '_InputIterator1' lvalue ParmVar 0xa0a4ac0 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa0a4cdc <col:26> '_InputIterator1' lvalue ParmVar 0xa0a4b00 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0xa0a4e00 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a4dc0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0)
        (UnaryOperator 0xa0a4d78 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa0a4d5c <col:38> '_InputIterator1' lvalue ParmVar 0xa0a4ac0 '__first1' '_InputIterator1'))
        (UnaryOperator 0xa0a4da8 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa0a4d8c <col:51> '_InputIterator2' lvalue ParmVar 0xa0a4b40 '__first2' '_InputIterator2'))))
    (CompoundStmt 0xa0a4ea0 <line:1159:9, line:1162:9>
      (UnaryOperator 0xa0a4e58 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a4e40 <col:6> '_InputIterator1' lvalue ParmVar 0xa0a4ac0 '__first1' '_InputIterator1'))
      (UnaryOperator 0xa0a4e88 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a4e6c <col:6> '_InputIterator2' lvalue ParmVar 0xa0a4b40 '__first2' '_InputIterator2'))))
  (ReturnStmt 0xa0a5028 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0xa0a5008 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0xa0a4fd8 <col:53> '_InputIterator1' lvalue ParmVar 0xa0a4ac0 '__first1' '_InputIterator1')
      (DeclRefExpr 0xa0a4ff0 <col:63> '_InputIterator2' lvalue ParmVar 0xa0a4b40 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0xa0a5808 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0xa0a5488 <line:1191:56>)
  (WhileStmt 0xa0a5688 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0xa0a55f8 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa0a5508 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa0a54c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0)
        (DeclRefExpr 0xa0a5494 <col:14> '_InputIterator1' lvalue ParmVar 0xa0a5240 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa0a54ac <col:26> '_InputIterator1' lvalue ParmVar 0xa0a5280 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0xa0a55d8 <col:37, col:77> '_Bool'
        (CallExpr 0xa0a55b0 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0xa0a5538 <col:42> '_BinaryPredicate' lvalue ParmVar 0xa0a5300 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0xa0a5568 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0a5550 <col:57> '_InputIterator1' lvalue ParmVar 0xa0a5240 '__first1' '_InputIterator1'))
          (UnaryOperator 0xa0a5598 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa0a557c <col:68> '_InputIterator2' lvalue ParmVar 0xa0a52c0 '__first2' '_InputIterator2')))))
    (CompoundStmt 0xa0a5670 <line:1194:9, line:1197:9>
      (UnaryOperator 0xa0a5628 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a5610 <col:6> '_InputIterator1' lvalue ParmVar 0xa0a5240 '__first1' '_InputIterator1'))
      (UnaryOperator 0xa0a5658 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa0a563c <col:6> '_InputIterator2' lvalue ParmVar 0xa0a52c0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0xa0a57f8 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0xa0a57d8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0xa0a57a8 <col:53> '_InputIterator1' lvalue ParmVar 0xa0a5240 '__first1' '_InputIterator1')
      (DeclRefExpr 0xa0a57c0 <col:63> '_InputIterator2' lvalue ParmVar 0xa0a52c0 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0xa0ab730 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0xa0ab720 <col:5, col:55>
    (CallExpr 0xa0ab6e8 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0xa0ab6d8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0ab678 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9ee8f90 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0xa0ab2b0 'wcschr')))
      (CXXConstCastExpr 0xa0ab648 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa0ab638 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa0ab610 <col:46> 'wchar_t *' lvalue ParmVar 0xa0ab4b0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0xa0ab710 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0ab660 <col:52> 'wchar_t' lvalue ParmVar 0xa0ab4f0 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0xa0ab9d0 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0xa0ab9c0 <col:5, col:58>
    (CallExpr 0xa0ab988 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0xa0ab978 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0ab918 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9ee9740 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0xa0ab320 'wcspbrk')))
      (CXXConstCastExpr 0xa0ab8e8 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa0ab8d8 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa0ab8b0 <col:47> 'wchar_t *' lvalue ParmVar 0xa0ab760 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0xa0ab9b0 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa0ab900 <col:54> 'const wchar_t *' lvalue ParmVar 0xa0ab7b0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0xa0abc20 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0xa0abc10 <col:5, col:56>
    (CallExpr 0xa0abbd8 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0xa0abbc8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0abba8 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9ee90f0 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0xa0ab390 'wcsrchr')))
      (CXXConstCastExpr 0xa0abb78 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa0abb68 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa0abb40 <col:47> 'wchar_t *' lvalue ParmVar 0xa0aba00 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0xa0abc00 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0abb90 <col:53> 'wchar_t' lvalue ParmVar 0xa0aba40 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0xa0abe80 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0xa0abe70 <col:5, col:57>
    (CallExpr 0xa0abe38 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0xa0abe28 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0abe08 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9ee98b0 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0xa0ab400 'wcsstr')))
      (CXXConstCastExpr 0xa0abdd8 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa0abdc8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa0abda0 <col:46> 'wchar_t *' lvalue ParmVar 0xa0abc50 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0xa0abe60 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa0abdf0 <col:53> 'const wchar_t *' lvalue ParmVar 0xa0abca0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0xa0ac1b0 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0xa0ac1a0 <col:5, col:61>
    (CallExpr 0xa0ac158 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0xa0ac148 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0ac0e8 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea120 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab470 'wmemchr')))
      (CXXConstCastExpr 0xa0ac0a0 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa0ac090 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa0ac068 <col:47> 'wchar_t *' lvalue ParmVar 0xa0abeb0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0xa0ac180 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0ac0b8 <col:53> 'wchar_t' lvalue ParmVar 0xa0abef0 '__c' 'wchar_t'))
      (ImplicitCastExpr 0xa0ac190 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0ac0d0 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0xa0abf30 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0xa0ae498 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0xa0ae530 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0xa0ae540 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0xa0adc10 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0xa0ae5e0 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0xa0ae668 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0xa0ae658 <col:36, col:43>
    (MemberExpr 0xa0ae634 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0xa0adac0
      (CXXThisExpr 0xa0ae608 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0xa0ae6e0 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0xa0ae6c8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0xa0ae690 <col:9> '_StateT' lvalue ->_M_state 0xa0adb00
      (CXXThisExpr 0xa0ae680 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0xa0ae6b0 <col:20> '_StateT' lvalue ParmVar 0xa0ade00 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0xa0ae738 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0xa0ae728 <col:9, col:16>
    (MemberExpr 0xa0ae708 <col:16> 'const _StateT' lvalue ->_M_state 0xa0adb00
      (CXXThisExpr 0xa0ae6f8 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0xa0ae7f0 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0xa0ae798 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0ae760 <col:2> 'streamoff':'long long' lvalue ->_M_off 0xa0adac0
      (CXXThisExpr 0xa0ae750 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0xa0ae780 <col:12> 'streamoff':'long long' lvalue ParmVar 0xa0adf90 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa0ae7e0 <line:158:2, col:10>
    (UnaryOperator 0xa0ae7c8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0ae7b8 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0xa0ae8a8 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0xa0ae850 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0ae818 <col:2> 'streamoff':'long long' lvalue ->_M_off 0xa0adac0
      (CXXThisExpr 0xa0ae808 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0xa0ae838 <col:12> 'streamoff':'long long' lvalue ParmVar 0xa0ae0c0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa0ae898 <line:169:2, col:10>
    (UnaryOperator 0xa0ae880 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0ae870 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0xa0ae9d8 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0xa0ae950 <line:181:2, col:19>
    0xa0ae8d0 "fpos<_StateT> __pos =
      (ParenListExpr 0xa0ae930 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0xa0ae918 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0ae908 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0xa0ae990 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa0ae960 <col:2> 'fpos<_StateT>' lvalue Var 0xa0ae8d0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0xa0ae978 <col:11> 'streamoff':'long long' lvalue ParmVar 0xa0ae190 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa0ae9c8 <line:183:2, col:9>
    (DeclRefExpr 0xa0ae9b0 <col:9> 'fpos<_StateT>' lvalue Var 0xa0ae8d0 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0xa0aeb08 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0xa0aea80 <line:195:2, col:19>
    0xa0aea00 "fpos<_StateT> __pos =
      (ParenListExpr 0xa0aea60 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0xa0aea48 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa0aea38 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0xa0aeac0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa0aea90 <col:2> 'fpos<_StateT>' lvalue Var 0xa0aea00 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0xa0aeaa8 <col:11> 'streamoff':'long long' lvalue ParmVar 0xa0ae2a0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa0aeaf8 <line:197:2, col:9>
    (DeclRefExpr 0xa0aeae0 <col:9> 'fpos<_StateT>' lvalue Var 0xa0aea00 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0xa0aec18 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0xa0aec08 <col:9, col:33>
    (CXXOperatorCallExpr 0xa0aebe0 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0aeba8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (MemberExpr 0xa0aeb38 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0xa0adac0
        (CXXThisExpr 0xa0aeb28 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0xa0aeb70 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa0aeb58 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0xa0ae390 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0xa0af048 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0xa0af038 <col:7, col:49>
    (BinaryOperator 0xa0af020 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0xa0aefc0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0xa0aefa8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0xa0aed70 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0xa0af000 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0xa0aefe8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0xa0aee70 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0xa0af438 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0xa0af428 <col:7, col:49>
    (BinaryOperator 0xa0af410 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0xa0af3b0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0xa0af398 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0xa0af180 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0xa0af3f0 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0xa0af3d8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0xa0af280 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0b4ec8 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0xa0b4eb0 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0xa0b4e80 <col:9> 'char_type':'_CharT' lvalue ParmVar 0xa0b30c0 '__c1' 'char_type &')
    (DeclRefExpr 0xa0b4e98 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0xa0b3130 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0b4f80 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0xa0b4f70 <col:9, col:24>
    (CXXOperatorCallExpr 0xa0b4f48 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa0b4f10 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa074780 0xa074d90)
      (DeclRefExpr 0xa0b4edc <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0xa0b3250 '__c1' 'const char_type &')
      (DeclRefExpr 0xa0b4ef4 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0xa0b32a0 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0b5038 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0xa0b5028 <col:9, col:23>
    (CXXOperatorCallExpr 0xa0b5000 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa0b4fc8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa075fa0 0xa077580)
      (DeclRefExpr 0xa0b4f94 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0xa0b33c0 '__c1' 'const char_type &')
      (DeclRefExpr 0xa0b4fac <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0xa0b3410 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0b5098 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0xa0b5088 <col:9, col:42>
    (CXXStaticCastExpr 0xa0b5070 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0xa0b504c <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0b4020 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0b50f8 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0xa0b50e8 <col:9, col:41>
    (CXXStaticCastExpr 0xa0b50d0 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0xa0b50ac <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0xa0b4140 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0b51b0 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0xa0b51a0 <col:9, col:24>
    (CXXOperatorCallExpr 0xa0b5178 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa0b5140 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa074780 0xa074d90)
      (DeclRefExpr 0xa0b510c <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0b4260 '__c1' 'const int_type &')
      (DeclRefExpr 0xa0b5124 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0b42b0 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0xa0b5228 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0xa0b5218 <col:9, col:56>
    (CXXStaticCastExpr 0xa0b5200 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0xa0b51e0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa0b51c8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0b5388 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0xa0b5378 <col:9, col:72>
    (ConditionalOperator 0xa0b5358 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0xa0b52d0 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0xa0b52a8 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0xa0b523c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa0b4350 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0xa0b5254 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0b4480 '__c' 'const int_type &')
          (CallExpr 0xa0b5288 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0xa0b526c <col:34> 'int_type (void)' lvalue CXXMethod 0xa0b4410 'eof' 'int_type (void)'))))
      (DeclRefExpr 0xa0b52e4 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0b4480 '__c' 'const int_type &')
      (CallExpr 0xa0b5338 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0xa0b52fc <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0xa0b41e0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0xa0b5320 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0xa0b5ad0 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0xa0b5a80 <line:148:7, line:152:11>
    (DeclStmt 0xa0b5790 <line:148:12, col:31>
      0xa0b5730 "std::size_t __i =
        (ImplicitCastExpr 0xa0b5780 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0b5768 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa0b57f0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0xa0b57d0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0b57a0 <col:33> 'std::size_t':'unsigned int' lvalue Var 0xa0b5730 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0xa0b57e0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0b57b8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0xa0b5600 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0xa0b5820 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa0b5808 <col:46> 'std::size_t':'unsigned int' lvalue Var 0xa0b5730 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0xa0b5a60 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0xa0b58e0 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0xa0b5834 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0b3470 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0xa0b5880 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa0b584c <col:9> 'const char_type *' lvalue ParmVar 0xa0b5550 '__s1' 'const char_type *')
          (DeclRefExpr 0xa0b5864 <col:14> 'std::size_t':'unsigned int' lvalue Var 0xa0b5730 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0xa0b58c8 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0xa0b5894 <col:20> 'const char_type *' lvalue ParmVar 0xa0b55a0 '__s2' 'const char_type *')
          (DeclRefExpr 0xa0b58ac <col:25> 'std::size_t':'unsigned int' lvalue Var 0xa0b5730 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0xa0b5938 <line:150:4, col:12>
        (UnaryOperator 0xa0b5920 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0xa0b5908 <col:12> 'int' 1)))
      (IfStmt 0xa0b5a40 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0xa0b59f0 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0xa0b5948 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0b3470 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0xa0b5990 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa0b5960 <col:14> 'const char_type *' lvalue ParmVar 0xa0b55a0 '__s2' 'const char_type *')
            (DeclRefExpr 0xa0b5978 <col:19> 'std::size_t':'unsigned int' lvalue Var 0xa0b5730 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0xa0b59d8 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0xa0b59a4 <col:25> 'const char_type *' lvalue ParmVar 0xa0b5550 '__s1' 'const char_type *')
            (DeclRefExpr 0xa0b59bc <col:30> 'std::size_t':'unsigned int' lvalue Var 0xa0b5730 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0xa0b5a30 <line:152:4, col:11>
          (IntegerLiteral 0xa0b5a18 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0xa0b5ac0 <line:153:7, col:14>
    (IntegerLiteral 0xa0b5aa8 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0xa0b5f90 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0xa0b5e40 <line:161:7, col:26>
    0xa0b5de0 "std::size_t __i =
      (ImplicitCastExpr 0xa0b5e30 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0b5e18 <col:25> 'int' 0))")
  (WhileStmt 0xa0b5f40 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0xa0b5ef8 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0xa0b5ed0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0xa0b5e50 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0b3340 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0xa0b5e98 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa0b5e68 <col:18> 'const char_type *' lvalue ParmVar 0xa0b5cc0 '__p' 'const char_type *')
          (DeclRefExpr 0xa0b5e80 <col:22> 'std::size_t':'unsigned int' lvalue Var 0xa0b5de0 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0xa0b5eb8 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0xa0b5f28 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa0b5f0c <col:11> 'std::size_t':'unsigned int' lvalue Var 0xa0b5de0 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0xa0b5f80 <line:164:7, col:14>
    (ImplicitCastExpr 0xa0b5f70 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa0b5f54 <col:14> 'std::size_t':'unsigned int' lvalue Var 0xa0b5de0 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0xa0b6828 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0xa0b67d8 <line:172:7, line:174:24>
    (DeclStmt 0xa0b65d0 <line:172:12, col:31>
      0xa0b6570 "std::size_t __i =
        (ImplicitCastExpr 0xa0b65c0 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0b65a8 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa0b6630 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0xa0b6610 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0b65e0 <col:33> 'std::size_t':'unsigned int' lvalue Var 0xa0b6570 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0xa0b6620 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0b65f8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0xa0b62c0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0xa0b6660 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa0b6648 <col:46> 'std::size_t':'unsigned int' lvalue Var 0xa0b6570 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0xa0b67b8 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0xa0b66f0 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0xa0b6674 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0b3340 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0xa0b66c0 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0xa0b668c <col:16> 'const char_type *' lvalue ParmVar 0xa0b6260 '__s' 'const char_type *')
          (DeclRefExpr 0xa0b66a4 <col:20> 'std::size_t':'unsigned int' lvalue Var 0xa0b6570 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0xa0b66d4 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0xa0b6310 '__a' 'const char_type &'))
      (ReturnStmt 0xa0b67a8 <line:174:11, col:24>
        (CXXOperatorCallExpr 0xa0b6780 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa0b6748 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa07bf80)
          (DeclRefExpr 0xa0b6714 <col:18> 'const char_type *' lvalue ParmVar 0xa0b6260 '__s' 'const char_type *')
          (DeclRefExpr 0xa0b672c <col:24> 'std::size_t':'unsigned int' lvalue Var 0xa0b6570 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0xa0b6818 <line:175:7, col:14>
    (IntegerLiteral 0xa0b6800 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0xa0b7c50 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0xa0b7c40 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0xa0b7c28 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0xa0b7bd0 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0xa0b6d9c <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa086460 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0xa0b6db4 <col:53> 'char_type *' lvalue ParmVar 0xa0b6ac0 '__s1' 'char_type *')
        (DeclRefExpr 0xa0b6dcc <col:59> 'const char_type *' lvalue ParmVar 0xa0b6b10 '__s2' 'const char_type *')
        (BinaryOperator 0xa0b7bb8 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0xa0b7ba8 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0b7b70 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0xa0b6b70 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0xa0b7b90 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0xa0b8338 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0xa0b82e8 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0xa0b81f0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540)
    (DeclRefExpr 0xa0b8224 <col:17> 'const char_type *' lvalue ParmVar 0xa0b7f40 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0xa0b82a8 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa0b8270 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa07bf80)
      (DeclRefExpr 0xa0b823c <col:23> 'const char_type *' lvalue ParmVar 0xa0b7f40 '__s2' 'const char_type *')
      (DeclRefExpr 0xa0b8254 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0xa0b7fa0 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0xa0b82cc <col:35> 'char_type *' lvalue ParmVar 0xa0b7ef0 '__s1' 'char_type *'))
  (ReturnStmt 0xa0b8328 <line:194:7, col:14>
    (DeclRefExpr 0xa0b8310 <col:14> 'char_type *' lvalue ParmVar 0xa0b7ef0 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0xa0b8990 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0xa0b8940 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa0b88c0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0953c0)
    (DeclRefExpr 0xa0b88f4 <col:19> 'char_type *' lvalue ParmVar 0xa0b85d0 '__s' 'char_type *')
    (DeclRefExpr 0xa0b890c <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0xa0b8630 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0xa0b8924 <col:29> 'char_type':'_CharT' lvalue ParmVar 0xa0b8670 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0xa0b8980 <line:204:7, col:14>
    (DeclRefExpr 0xa0b8968 <col:14> 'char_type *' lvalue ParmVar 0xa0b85d0 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb338 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa0bb320 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa0bb2e0 <col:9> 'char_type':'char' lvalue ParmVar 0xa0b9080 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bb310 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa0bb2f8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb3e8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa0bb3d8 <col:9, col:24>
    (BinaryOperator 0xa0bb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bb390 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb380 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb34c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9230 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb3b0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb3a0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb364 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa0b9280 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb498 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa0bb488 <col:9, col:23>
    (BinaryOperator 0xa0bb470 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bb440 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb430 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb3fc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b93a0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb460 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb450 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb414 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa0b93f0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bb5c0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa0bb5b0 <col:9, col:48>
    (CallExpr 0xa0bb538 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa0bb528 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb4ac <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa0bb570 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb560 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4c4 <col:33> 'const char_type *' lvalue ParmVar 0xa0b94f0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb590 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb580 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4dc <col:39> 'const char_type *' lvalue ParmVar 0xa0b9540 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb5a0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bb4f4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bb758 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa0bb748 <col:9, col:36>
    (CallExpr 0xa0bb718 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa0bb708 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb6b4 <col:16> 'unsigned int (const char *)' lvalue Function 0xa0bb5e0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa0bb738 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bb6cc <col:33> 'const char_type *' lvalue ParmVar 0xa0b9690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bba18 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa0bba08 <col:9, col:77>
    (CXXStaticCastExpr 0xa0bb9f0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa0bb968 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa0bb958 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bb8d4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa0bb770 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bb9a0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bb990 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bb8ec <col:63> 'const char_type *' lvalue ParmVar 0xa0b9790 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa0bb9c0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bb9b0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bb904 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa0b9820 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa0bb9d0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bb91c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa0b97d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbb68 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa0bbb58 <col:9, col:74>
    (CXXStaticCastExpr 0xa0bbb40 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbab8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa0bbaa8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bba2c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa086460 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbaf0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbae0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba44 <col:58> 'char_type *' lvalue ParmVar 0xa0b9980 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbb10 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbb00 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba5c <col:64> 'const char_type *' lvalue ParmVar 0xa0b99d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbb20 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bba74 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9a10 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbe08 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa0bbdf8 <col:9, col:73>
    (CXXStaticCastExpr 0xa0bbde0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbd58 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa0bbd48 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbce4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbd90 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbd80 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbcfc <col:57> 'char_type *' lvalue ParmVar 0xa0b9b20 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbdb0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbda0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbd14 <col:63> 'const char_type *' lvalue ParmVar 0xa0baa50 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbdc0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbd2c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa0baa90 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0bbf58 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa0bbf48 <col:9, col:71>
    (CXXStaticCastExpr 0xa0bbf30 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbea8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa0bbe98 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbe1c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa092370 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bbee0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbed0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbe34 <col:57> 'char_type *' lvalue ParmVar 0xa0bab70 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa0bbf00 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bbef0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bbe4c <col:62> 'char_type':'char' lvalue ParmVar 0xa0babf0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa0bbf10 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbe64 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa0babb0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0bbfd8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa0bbfc8 <col:9, col:42>
    (CXXStaticCastExpr 0xa0bbfb0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa0bbfa0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa0bbf90 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa0bbf6c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa0bad80 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0bc090 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa0bc080 <col:9, col:69>
    (CXXStaticCastExpr 0xa0bc068 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa0bc058 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa0bc038 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa0bc028 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa0bc018 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa0bbfec <col:65> 'const char_type':'const char' lvalue ParmVar 0xa0baea0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0bc120 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa0bc110 <col:9, col:24>
    (BinaryOperator 0xa0bc0f8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bc0d8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0a4 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa0bafc0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0bc0e8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0bc <col:24> 'const int_type':'const int' lvalue ParmVar 0xa0bb010 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0bc198 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa0bc188 <col:9, col:56>
    (CXXStaticCastExpr 0xa0bc170 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa0bc150 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa0bc138 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0bc2f8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa0bc2e8 <col:9, col:37>
    (ConditionalOperator 0xa0bc2c8 <col:16, col:37> 'int'
      (ParenExpr 0xa0bc270 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa0bc258 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa0bc248 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0bc1ac <col:17> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &'))
          (CallExpr 0xa0bc228 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa0bc218 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0bc1c4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa0bb150 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0bc288 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0bc2b8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc2a0 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf968 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa0bf950 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa0bf910 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0bc6b0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bf940 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa0bf928 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc740 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf9f8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa0bf9e8 <col:9, col:24>
    (BinaryOperator 0xa0bf9d0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bf9b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf97c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc860 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bf9c0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf994 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc8b0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bfa88 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0bfa78 <col:9, col:23>
    (BinaryOperator 0xa0bfa60 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bfa40 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa0c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc9d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bfa50 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa24 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0be920 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bfbf0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa0bfbe0 <col:9, col:39>
    (CallExpr 0xa0bfb88 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0bfb78 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfb1c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea2d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab010 'wmemcmp')))
      (ImplicitCastExpr 0xa0bfbb0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfad4 <col:24> 'const char_type *' lvalue ParmVar 0xa0bea20 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbc0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfaec <col:30> 'const char_type *' lvalue ParmVar 0xa0bea70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbd0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfb04 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0beab0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bfcf8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa0bfce8 <col:9, col:26>
    (CallExpr 0xa0bfcb8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa0bfca8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfc54 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9ee9c10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa0aaa60 'wcslen')))
      (ImplicitCastExpr 0xa0bfcd8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfc3c <col:23> 'const char_type *' lvalue ParmVar 0xa0bebc0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bfe38 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa0bfe28 <col:9, col:37>
    (ImplicitCastExpr 0xa0bfe18 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa0bfdc0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa0bfdb0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bfd90 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea120 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab470 'wmemchr')))
        (ImplicitCastExpr 0xa0bfde8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bfd48 <col:24> 'const char_type *' lvalue ParmVar 0xa0becc0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa0bfdf8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0bfd60 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bed50 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa0bfe08 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bfd78 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bed00 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bffa0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa0bff90 <col:9, col:40>
    (CallExpr 0xa0bff38 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa0bff28 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfecc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea620 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab0f0 'wmemmove')))
      (ImplicitCastExpr 0xa0bff60 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe84 <col:25> 'char_type *' lvalue ParmVar 0xa0beeb0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0bff70 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe9c <col:31> 'const char_type *' lvalue ParmVar 0xa0bef00 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bff80 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfeb4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa0bef40 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0c00e0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa0c00d0 <col:9, col:39>
    (CallExpr 0xa0c0078 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa0c0068 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0034 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9eea480 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa0ab080 'wmemcpy')))
      (ImplicitCastExpr 0xa0c00a0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bffec <col:24> 'char_type *' lvalue ParmVar 0xa0bf050 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0c00b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c0004 <col:30> 'const char_type *' lvalue ParmVar 0xa0bf0a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0c00c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c001c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf0e0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0c0240 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa0c0230 <col:9, col:37>
    (CallExpr 0xa0c01d8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa0c01c8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0174 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea820 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab160 'wmemset')))
      (ImplicitCastExpr 0xa0c0200 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c012c <col:24> 'char_type *' lvalue ParmVar 0xa0bf1c0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa0c0210 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0c0144 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa0bf240 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa0c0220 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c015c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf200 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0c02c0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0c02b0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0c0298 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0c0288 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0c0278 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0c0260 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf3b0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0c0340 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa0c0330 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa0c0318 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa0c0308 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa0c02f8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0c02e0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bf4d0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0c03d0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0c03c0 <col:9, col:24>
    (BinaryOperator 0xa0c03a8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0c0388 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c0354 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf5f0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0c0398 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c036c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf640 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0c0448 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa0c0438 <col:9, col:42>
    (CXXStaticCastExpr 0xa0c0420 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa0c0400 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa0c03e8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0c0620 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa0c0610 <col:9, col:46>
    (ConditionalOperator 0xa0c05f0 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa0c0568 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa0c0558 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c045c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa0bf6e0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0c0474 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0c0590 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa0c04f8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa0c04e8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0c048c <col:33> 'int_type (void)' lvalue CXXMethod 0xa0bf780 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa0c05e0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0c05a0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa0c05d0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c05b8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb338 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa0bb320 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa0bb2e0 <col:9> 'char_type':'char' lvalue ParmVar 0xa0b9080 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bb310 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa0bb2f8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb3e8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa0bb3d8 <col:9, col:24>
    (BinaryOperator 0xa0bb3c0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bb390 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb380 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb34c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b9230 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb3b0 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb3a0 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb364 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa0b9280 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bb498 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa0bb488 <col:9, col:23>
    (BinaryOperator 0xa0bb470 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bb440 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb430 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb3fc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa0b93a0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa0bb460 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa0bb450 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa0bb414 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa0b93f0 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bb5c0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa0bb5b0 <col:9, col:48>
    (CallExpr 0xa0bb538 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa0bb528 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb4ac <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa0961f0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa0bb570 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb560 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4c4 <col:33> 'const char_type *' lvalue ParmVar 0xa0b94f0 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb590 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa0bb580 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bb4dc <col:39> 'const char_type *' lvalue ParmVar 0xa0b9540 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa0bb5a0 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bb4f4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bb758 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa0bb748 <col:9, col:36>
    (CallExpr 0xa0bb718 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa0bb708 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bb6b4 <col:16> 'unsigned int (const char *)' lvalue Function 0xa0bb5e0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa0bb738 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bb6cc <col:33> 'const char_type *' lvalue ParmVar 0xa0b9690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bba18 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa0bba08 <col:9, col:77>
    (CXXStaticCastExpr 0xa0bb9f0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa0bb968 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa0bb958 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bb8d4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa0bb770 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bb9a0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bb990 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bb8ec <col:63> 'const char_type *' lvalue ParmVar 0xa0b9790 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa0bb9c0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bb9b0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bb904 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa0b9820 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa0bb9d0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bb91c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa0b97d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbb68 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa0bbb58 <col:9, col:74>
    (CXXStaticCastExpr 0xa0bbb40 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbab8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa0bbaa8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bba2c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa086460 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbaf0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbae0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba44 <col:58> 'char_type *' lvalue ParmVar 0xa0b9980 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbb10 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbb00 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bba5c <col:64> 'const char_type *' lvalue ParmVar 0xa0b99d0 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbb20 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bba74 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa0b9a10 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bbe08 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa0bbdf8 <col:9, col:73>
    (CXXStaticCastExpr 0xa0bbde0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbd58 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa0bbd48 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbce4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa0bbd90 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbd80 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbcfc <col:57> 'char_type *' lvalue ParmVar 0xa0b9b20 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa0bbdb0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa0bbda0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbd14 <col:63> 'const char_type *' lvalue ParmVar 0xa0baa50 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa0bbdc0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbd2c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa0baa90 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0bbf58 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa0bbf48 <col:9, col:71>
    (CXXStaticCastExpr 0xa0bbf30 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa0bbea8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa0bbe98 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bbe1c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa092370 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa0bbee0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa0bbed0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa0bbe34 <col:57> 'char_type *' lvalue ParmVar 0xa0bab70 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa0bbf00 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa0bbef0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa0bbe4c <col:62> 'char_type':'char' lvalue ParmVar 0xa0babf0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa0bbf10 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bbe64 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa0babb0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0bbfd8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa0bbfc8 <col:9, col:42>
    (CXXStaticCastExpr 0xa0bbfb0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa0bbfa0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa0bbf90 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa0bbf6c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa0bad80 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0bc090 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa0bc080 <col:9, col:69>
    (CXXStaticCastExpr 0xa0bc068 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa0bc058 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa0bc038 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa0bc028 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa0bc018 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa0bbfec <col:65> 'const char_type':'const char' lvalue ParmVar 0xa0baea0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0bc120 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa0bc110 <col:9, col:24>
    (BinaryOperator 0xa0bc0f8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bc0d8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0a4 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa0bafc0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0bc0e8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc0bc <col:24> 'const int_type':'const int' lvalue ParmVar 0xa0bb010 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0bc198 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa0bc188 <col:9, col:56>
    (CXXStaticCastExpr 0xa0bc170 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa0bc150 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa0bc138 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0bc2f8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa0bc2e8 <col:9, col:37>
    (ConditionalOperator 0xa0bc2c8 <col:16, col:37> 'int'
      (ParenExpr 0xa0bc270 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa0bc258 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa0bc248 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa0bc1ac <col:17> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &'))
          (CallExpr 0xa0bc228 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa0bc218 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0bc1c4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa0bb150 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa0bc288 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa0bc2b8 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa0bc2a0 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa0bb1c0 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf968 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa0bf950 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa0bf910 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa0bc6b0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa0bf940 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa0bf928 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc740 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bf9f8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa0bf9e8 <col:9, col:24>
    (BinaryOperator 0xa0bf9d0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0bf9b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf97c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc860 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bf9c0 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bf994 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc8b0 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0bfa88 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa0bfa78 <col:9, col:23>
    (BinaryOperator 0xa0bfa60 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa0bfa40 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa0c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bc9d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa0bfa50 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0bfa24 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0be920 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bfbf0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa0bfbe0 <col:9, col:39>
    (CallExpr 0xa0bfb88 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa0bfb78 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfb1c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea2d0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab010 'wmemcmp')))
      (ImplicitCastExpr 0xa0bfbb0 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfad4 <col:24> 'const char_type *' lvalue ParmVar 0xa0bea20 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbc0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfaec <col:30> 'const char_type *' lvalue ParmVar 0xa0bea70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bfbd0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfb04 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0beab0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa0bfcf8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa0bfce8 <col:9, col:26>
    (CallExpr 0xa0bfcb8 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa0bfca8 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfc54 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9ee9c10 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa0aaa60 'wcslen')))
      (ImplicitCastExpr 0xa0bfcd8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfc3c <col:23> 'const char_type *' lvalue ParmVar 0xa0bebc0 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa0bfe38 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa0bfe28 <col:9, col:37>
    (ImplicitCastExpr 0xa0bfe18 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa0bfdc0 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa0bfdb0 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0bfd90 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea120 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab470 'wmemchr')))
        (ImplicitCastExpr 0xa0bfde8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa0bfd48 <col:24> 'const char_type *' lvalue ParmVar 0xa0becc0 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa0bfdf8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0bfd60 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bed50 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa0bfe08 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0bfd78 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bed00 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0bffa0 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa0bff90 <col:9, col:40>
    (CallExpr 0xa0bff38 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa0bff28 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0bfecc <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9eea620 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa0ab0f0 'wmemmove')))
      (ImplicitCastExpr 0xa0bff60 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe84 <col:25> 'char_type *' lvalue ParmVar 0xa0beeb0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0bff70 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bfe9c <col:31> 'const char_type *' lvalue ParmVar 0xa0bef00 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0bff80 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0bfeb4 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa0bef40 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa0c00e0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa0c00d0 <col:9, col:39>
    (CallExpr 0xa0c0078 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa0c0068 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0034 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9eea480 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa0ab080 'wmemcpy')))
      (ImplicitCastExpr 0xa0c00a0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0bffec <col:24> 'char_type *' lvalue ParmVar 0xa0bf050 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa0c00b0 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c0004 <col:30> 'const char_type *' lvalue ParmVar 0xa0bf0a0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa0c00c0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c001c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf0e0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa0c0240 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa0c0230 <col:9, col:37>
    (CallExpr 0xa0c01d8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa0c01c8 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0c0174 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9eea820 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa0ab160 'wmemset')))
      (ImplicitCastExpr 0xa0c0200 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa0c012c <col:24> 'char_type *' lvalue ParmVar 0xa0bf1c0 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa0c0210 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa0c0144 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa0bf240 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa0c0220 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c015c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa0bf200 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0c02c0 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa0c02b0 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa0c0298 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa0c0288 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa0c0278 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa0c0260 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf3b0 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0c0340 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa0c0330 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa0c0318 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa0c0308 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa0c02f8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa0c02e0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa0bf4d0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0c03d0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa0c03c0 <col:9, col:24>
    (BinaryOperator 0xa0c03a8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa0c0388 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c0354 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf5f0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa0c0398 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c036c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf640 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa0c0448 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa0c0438 <col:9, col:42>
    (CXXStaticCastExpr 0xa0c0420 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa0c0400 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa0c03e8 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0c0620 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa0c0610 <col:9, col:46>
    (ConditionalOperator 0xa0c05f0 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa0c0568 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa0c0558 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0c045c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa0bf6e0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa0c0474 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa0c0590 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa0c04f8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa0c04e8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa0c048c <col:33> 'int_type (void)' lvalue CXXMethod 0xa0bf780 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa0c05e0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa0c05a0 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa0c05d0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0c05b8 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa0bf7f0 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0xa0c84e0 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0xa0c8ac0 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0xa0c95d0 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0xa0cae58 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0xa0cae48 <col:61, col:68>
    (ImplicitCastExpr 0xa0cae38 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0xa0cae1c <col:68> 'void *' lvalue ParmVar 0xa0cacd0 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0xa0cb038 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0xa0cb028 <col:63, col:70>
    (ImplicitCastExpr 0xa0cb018 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0xa0caffc <col:70> 'void *' lvalue ParmVar 0xa0caef0 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0xa0cb200 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0xa0cb380 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0xa0ce000 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0xa0ce010 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0xa0ce030 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0xa0ce000 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0xa0ce010 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0xa0ce020 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0xa0ce030 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0xa0ce0d8 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0xa0ce0c8 <col:38, col:65>
    (CallExpr 0xa0ce0a8 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0xa0ce058 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
      (DeclRefExpr 0xa0ce08c <col:62> '_Tp' lvalue ParmVar 0xa0cc2a0 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0xa0ce188 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0xa0ce178 <col:44, col:71>
    (CallExpr 0xa0ce158 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0xa0ce108 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
      (DeclRefExpr 0xa0ce13c <col:68> 'const _Tp' lvalue ParmVar 0xa0cc3e0 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0xa0cdff0 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0xa0cdfd8 <col:45> 'int' 0))
) (CompoundStmt 0xa0ce4e0 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0xa0ce328 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0ce278 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa0ce240 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa077ba0 0xa078170)
      (DeclRefExpr 0xa0ce19c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa0cc510 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa0ce220 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0ce1e8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0ce1d8 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0xa0ce308 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0xa0ce2f8 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0ce2c0 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0xa016d90 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa0ce4d0 <line:92:2, col:60>
    (CXXStaticCastExpr 0xa0ce4b8 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0xa0ce488 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0xa0ce478 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0ce420 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0xa0c9a90 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0xa0ce408 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0xa0ce3f8 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa0ce3bc <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa0cc510 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0xa0ce3e0 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0xa0ce588 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0xa0ce568 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa0ce510 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0c9d00 0xa0caa10 0xa0cb150)
    (DeclRefExpr 0xa0ce54c <col:27> 'pointer':'_Tp *' lvalue ParmVar 0xa0cc670 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0xa0ce648 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0xa0ce638 <col:9, col:39>
    (BinaryOperator 0xa0ce620 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0xa0ce5e8 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0xa0ce5d8 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0xa0ce5c0 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0xa0ce5a8 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0xa0ce608 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0xa0ce700 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0xa0ce6c0 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0xa0ce688 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0xa0ce65c <col:23> 'pointer':'_Tp *' lvalue ParmVar 0xa0cc880 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0xa0ce6a0 <col:32> 'const _Tp' lvalue ParmVar 0xa0cddc0 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0xa0ce788 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0xa0ce768 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0xa0ce738 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0xa0ce714 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0xa0cded0 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0xa0ceb30 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0xa0ceb20 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0ceb10 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0xa0ceea0 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0xa0cee90 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0cee80 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa0d10e8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa4a8cd0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4a8a24 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa0d7fc0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa0d1200 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa0d1220 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa0d10e8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa4a8cd0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4a8a24 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa0d7fc0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa0d1200 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa0d1220 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0xa0d10e8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0xa0d11a8 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0xa0d0cc0 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0xa0d1200 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0xa0d1210 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0xa0d1220 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0xa0d1670 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0xa0d1660 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0d1650 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0xa0d1a00 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0xa0d19f0 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0d19e0 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0xa0d1dd0 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0xa0d1dc0 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0d1db0 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0xa0d2140 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0xa0d2130 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa0d2120 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa0d10e8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa4a8cd0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4a8a24 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa0d7fc0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa0d1200 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa0d1220 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0xa0d85e0 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0xa0d8a30 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0xa0d90a0 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0xa0d9080 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0d8fc8 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d8f80 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0d20f0 0xa0d1d80 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360)
      (DeclRefExpr 0xa0d8f50 <col:6> '_Alloc' lvalue ParmVar 0xa0d8e00 '__one' '_Alloc &')
      (DeclRefExpr 0xa0d8f68 <col:15> '_Alloc' lvalue ParmVar 0xa0d8e50 '__two' '_Alloc &'))
    (CallExpr 0xa0d9058 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d8ff0 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0xa0450d0 0xa045610)
      (DeclRefExpr 0xa0d9028 <col:9> '_Alloc' lvalue ParmVar 0xa0d8e00 '__one' '_Alloc &')
      (DeclRefExpr 0xa0d9040 <col:16> '_Alloc' lvalue ParmVar 0xa0d8e50 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0xa0d9110 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0xa0d9580 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0xa0d9570 <col:9, col:16>
    (CXXBoolLiteralExpr 0xa0d9560 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0xa0d9b60 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0xa0d9b50 <col:9, col:25>
    (CXXOperatorCallExpr 0xa0d9b28 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa0d9ae0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0d20f0 0xa0d1d80 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360)
      (DeclRefExpr 0xa0d9ab0 <col:16> 'const _Alloc' lvalue ParmVar 0xa0d9960 '__one' 'const _Alloc &')
      (DeclRefExpr 0xa0d9ac8 <col:25> 'const _Alloc' lvalue ParmVar 0xa0d99b0 '__two' 'const _Alloc &'))))


    };
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0xa0e12e8 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9be0 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0xa0e12f8 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9c38 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0xa0e1308 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9c88 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0xa0e1318 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9cd8 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0xa0e1328 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9d28 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0xa0e1338 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9d78 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0xa0e1348 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9dc8 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0xa0e1358 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9e18 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0xa0e1368 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9e68 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0xa0e1378 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9eb8 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0xa0e1388 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9f08 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0xa0e1398 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0d9f58 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0xa0e13a8 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0e1298 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0xa0e5a60 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0xa0e2b58 <line:75:5, col:54>
    0xa0e2a50 "__c_locale __old =
      (CallExpr 0xa0e2b28 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0xa0e2b18 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0e2aa8 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0xa0e25a0 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0xa0e2b48 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0xa0e2ac8 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0xa0e27a0 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0xa0e2ba8 <line:88:5, col:29>
    0xa0e2b70 "__builtin_va_list __args")
  (CallExpr 0xa0e2da8 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0xa0e2d98 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0e2d14 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0xa0e2c40 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0xa0e2d2c <col:24> '__builtin_va_list':'char *' lvalue Var 0xa0e2b70 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0xa0e2d44 <col:32> 'const char *' lvalue ParmVar 0xa0e2910 '__fmt' 'const char *'))
  (DeclStmt 0xa0e3138 <line:92:5, col:72>
    0xa0e2de0 "const int __ret =
      (CallExpr 0xa0e30b8 <col:23, col:71> 'int'
        (ImplicitCastExpr 0xa0e30a8 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0e2ff0 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0xa0e2e20 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0xa0e30e8 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0xa0e3008 <col:43> 'char *' lvalue ParmVar 0xa0e2830 '__out' 'char *'))
        (ImplicitCastExpr 0xa0e3108 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa0e30f8 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0xa0e3020 <col:50> 'const int' lvalue ParmVar 0xa0e2880 '__size' 'const int')))
        (ImplicitCastExpr 0xa0e3118 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa0e3038 <col:58> 'const char *' lvalue ParmVar 0xa0e2910 '__fmt' 'const char *'))
        (ImplicitCastExpr 0xa0e3128 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0xa0e3050 <col:65> '__builtin_va_list':'char *' lvalue Var 0xa0e2b70 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0xa0e5968 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0xa0e5958 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0e58e4 <col:5> 'void (__builtin_va_list &)' lvalue Function 0xa0e3190 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0xa0e58fc <col:22> '__builtin_va_list':'char *' lvalue Var 0xa0e2b70 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0xa0e59f8 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0xa0e59e8 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0e59ac <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0xa0e25a0 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0xa0e5a18 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0xa0e59cc <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0xa0e2a50 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0xa0e5a50 <line:108:5, col:12>
    (ImplicitCastExpr 0xa0e5a40 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0xa0e5a24 <col:12> 'const int' lvalue Var 0xa0e2de0 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa2daa90 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa2daa78 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa2da9e8 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa2daa68 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa2daa50 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa2daa40 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa2daa18 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa2daa00 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa2dcf18 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa2dcf00 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa2dcf28 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa2dcf50 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2dcf38 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa2dcf78 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa2dcf60 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa2dcf88 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa2dcfb0 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2dcf98 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa2dd0a0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa2dd090 <col:9, col:36>
    (CXXMemberCallExpr 0xa2dd060 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa2dd040 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa2dc2d0
        (CXXThisExpr 0xa2dcfd8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd080 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd028 <col:33> 'char_type':'char' lvalue ParmVar 0xa2db540 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2dd1b0 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa2dd1a0 <col:9, col:43>
    (CXXMemberCallExpr 0xa2dd158 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa2dd138 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa2dc400
        (CXXThisExpr 0xa2dd0b8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd180 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd108 <col:33> 'char_type *' lvalue ParmVar 0xa2db680 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa2dd190 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd120 <col:39> 'const char_type *' lvalue ParmVar 0xa2db6f0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa2dd290 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa2dd280 <col:9, col:36>
    (CXXMemberCallExpr 0xa2dd250 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa2dd230 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa2dc4c0
        (CXXThisExpr 0xa2dd1c8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd270 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd218 <col:33> 'char_type':'char' lvalue ParmVar 0xa2db800 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2dd3a0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa2dd390 <col:9, col:43>
    (CXXMemberCallExpr 0xa2dd348 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa2dd328 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa2dc5f0
        (CXXThisExpr 0xa2dd2a8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd370 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd2f8 <col:33> 'char_type *' lvalue ParmVar 0xa2db8d0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa2dd380 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd310 <col:39> 'const char_type *' lvalue ParmVar 0xa2db920 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa2dd638 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa2dd500 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2dd418 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2dd408 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa2dd3e4 <col:6> 'char' lvalue ->_M_widen_ok 0xa2da6b0
          (CXXThisExpr 0xa2dd3b8 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa2dd4f0 <line:868:4, col:51>
      (ImplicitCastExpr 0xa2dd4e0 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2dd4c8 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa2dd4b8 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2dd438 <col:11> 'char [256]' lvalue ->_M_widen 0xa2da7a0
              (CXXThisExpr 0xa2dd428 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2dd4a0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2dd490 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2dd480 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa2dd458 <col:47> 'char' lvalue ParmVar 0xa2db9f0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa2dd550 <line:869:2, col:22> 'void'
    (MemberExpr 0xa2dd530 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa2dcc60
      (CXXThisExpr 0xa2dd520 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa2dd628 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa2dd5f8 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa2dd5d8 <col:9, col:15> '<bound member function type>' ->do_widen 0xa2dc6b0
        (CXXThisExpr 0xa2dd570 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd618 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd5c0 <col:24> 'char' lvalue ParmVar 0xa2db9f0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa2dda78 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa2dd860 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa2dd6c0 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa2dd6b0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2dd6a0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa2dd668 <col:6> 'char' lvalue ->_M_widen_ok 0xa2da6b0
            (CXXThisExpr 0xa2dd658 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa2dd688 <col:21> 'int' 1))
    (CompoundStmt 0xa2dd848 <line:895:4, line:898:4>
      (CallExpr 0xa2dd798 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa2dd788 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2dd6d8 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa2dd7d0 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa2dd7c0 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa2dd6f0 <col:23> 'char_type *' lvalue ParmVar 0xa2dbb90 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa2dd7f0 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa2dd7e0 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa2dd708 <col:29> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa2dd800 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa2dd770 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa2dd750 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa2dd720 <col:35> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa2dd760 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa2dd738 <col:42> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *')))))
      (ReturnStmt 0xa2dd838 <line:897:6, col:13>
        (ImplicitCastExpr 0xa2dd828 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2dd80c <col:13> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa2dd938 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa2dd8d0 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2dd8c0 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2dd8b0 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa2dd890 <col:7> 'char' lvalue ->_M_widen_ok 0xa2da6b0
            (CXXThisExpr 0xa2dd880 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa2dd918 <line:900:4, col:18> 'void'
      (MemberExpr 0xa2dd8f8 <col:4> '<bound member function type>' ->_M_widen_init 0xa2dcc60
        (CXXThisExpr 0xa2dd8e8 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa2dda68 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa2dda10 <col:9, col:40> 'const char *'
      (MemberExpr 0xa2dd9f0 <col:9, col:15> '<bound member function type>' ->do_widen 0xa2dc830
        (CXXThisExpr 0xa2dd958 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dda38 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9a8 <col:24> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa2dda48 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9c0 <col:30> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa2dda58 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9d8 <col:36> 'char_type *' lvalue ParmVar 0xa2dbb90 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa2ddfc0 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa2ddc48 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2ddb60 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2ddb50 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2ddb38 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa2ddb28 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2ddaa8 <col:6> 'char [256]' lvalue ->_M_narrow 0xa2da890
              (CXXThisExpr 0xa2dda98 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2ddb10 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2ddb00 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2ddaf0 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa2ddac8 <col:43> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa2ddc38 <line:926:4, col:52>
      (ImplicitCastExpr 0xa2ddc28 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2ddc10 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa2ddc00 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2ddb80 <col:11> 'char [256]' lvalue ->_M_narrow 0xa2da890
              (CXXThisExpr 0xa2ddb70 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2ddbe8 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2ddbd8 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2ddbc8 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa2ddba0 <col:48> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa2ddda0 <line:927:2, col:43>
    0xa2ddc70 "const char __t =
      (CXXMemberCallExpr 0xa2ddd58 <col:19, col:42> 'char'
        (MemberExpr 0xa2ddd38 <col:19> '<bound member function type>' ->do_narrow 0xa2dc950
          (CXXThisExpr 0xa2ddd28 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa2ddd80 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa2ddcf8 <col:29> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa2ddd90 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2ddd10 <col:34> 'char' lvalue ParmVar 0xa2dbd10 '__dfault' 'char')))")
  (IfStmt 0xa2ddf68 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa2dde20 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa2dddf0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2ddde0 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2dddb0 <col:6> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char')))
      (ImplicitCastExpr 0xa2dde10 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2dde00 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2dddc8 <col:13> 'char' lvalue ParmVar 0xa2dbd10 '__dfault' 'char'))))
    (BinaryOperator 0xa2ddf50 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa2ddf10 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa2ddf00 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa2dde80 <col:4> 'char [256]' lvalue ->_M_narrow 0xa2da890
            (CXXThisExpr 0xa2dde70 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa2ddee8 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa2dded8 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa2ddec8 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa2ddea0 <col:41> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa2ddf40 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2ddf24 <col:49> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa2ddfb0 <line:930:2, col:9>
    (ImplicitCastExpr 0xa2ddfa0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa2ddf84 <col:9> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa2e0178 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa2de278 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2de0e0 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa2de098 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa2de088 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2ddfe0 <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa2de0c0 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa2de060 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa2de050 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa2de040 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa2de008 <col:23> 'char' lvalue ->_M_narrow_ok 0xa2da8d0
                  (CXXThisExpr 0xa2ddff8 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa2de028 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa2de0d0 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa2de078 <col:42> '_Bool' true))))
    (CompoundStmt 0xa2de260 <line:960:4, line:963:4>
      (CallExpr 0xa2de1b0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa2de1a0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2de0ec <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa2de1e8 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa2de1d8 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa2de104 <col:23> 'char *' lvalue ParmVar 0xa2dbf10 '__to' 'char *')))
        (ImplicitCastExpr 0xa2de208 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa2de1f8 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa2de11c <col:29> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa2de218 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa2de188 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa2de168 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa2de134 <col:35> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa2de178 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa2de14c <col:42> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa2de250 <line:962:6, col:13>
        (ImplicitCastExpr 0xa2de240 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2de224 <col:13> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa2de350 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa2de2e8 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2de2d8 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2de2c8 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa2de2a8 <col:7> 'char' lvalue ->_M_narrow_ok 0xa2da8d0
            (CXXThisExpr 0xa2de298 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa2de330 <line:965:4, col:19> 'void'
      (MemberExpr 0xa2de310 <col:4> '<bound member function type>' ->_M_narrow_init 0xa2dcbe0
        (CXXThisExpr 0xa2de300 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa2e0168 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa2de440 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa2de420 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa2dcb10
        (CXXThisExpr 0xa2de370 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2e0128 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2de3c0 <col:25> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa2e0138 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2de3d8 <col:31> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa2e0148 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2de3f0 <col:37> 'char' lvalue ParmVar 0xa2dbec0 '__dfault' 'char'))
      (ImplicitCastExpr 0xa2e0158 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa2de408 <col:47> 'char *' lvalue ParmVar 0xa2dbf10 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa2e01e8 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa2e01d8 <col:9, col:16>
    (ImplicitCastExpr 0xa2e01c8 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa2e01a8 <col:16> 'const mask *const' lvalue ->_M_table 0xa2da670
        (CXXThisExpr 0xa2e0198 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa2e0238 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa2e0228 <col:9, col:16>
    (ImplicitCastExpr 0xa2e0218 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa2e01fc <col:16> 'char' lvalue ParmVar 0xa2dc660 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa2e03c0 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa2e0310 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa2e0300 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e024c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa2e0348 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa2e0338 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2e0264 <col:19> 'char_type *' lvalue ParmVar 0xa2dc7d0 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa2e0368 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa2e0358 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2e027c <col:27> 'const char *' lvalue ParmVar 0xa2dc730 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa2e0378 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa2e02e8 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa2e02c8 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e0294 <col:33> 'const char *' lvalue ParmVar 0xa2dc780 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa2e02d8 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e02ac <col:40> 'const char *' lvalue ParmVar 0xa2dc730 '__lo' 'const char *')))))
  (ReturnStmt 0xa2e03b0 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa2e03a0 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa2e0384 <col:9> 'const char *' lvalue ParmVar 0xa2dc780 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa2e0410 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa2e0400 <col:9, col:16>
    (ImplicitCastExpr 0xa2e03f0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa2e03d8 <col:16> 'char_type':'char' lvalue ParmVar 0xa2dc8b0 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa2e0598 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa2e04e8 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa2e04d8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e0424 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa2e0520 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa2e0510 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa2e043c <col:19> 'char *' lvalue ParmVar 0xa2dcab0 '__dest' 'char *')))
    (ImplicitCastExpr 0xa2e0540 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa2e0530 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2e0454 <col:27> 'const char_type *' lvalue ParmVar 0xa2dc9d0 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa2e0550 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa2e04c0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa2e04a0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2e046c <col:33> 'const char_type *' lvalue ParmVar 0xa2dca20 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa2e04b0 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2e0484 <col:40> 'const char_type *' lvalue ParmVar 0xa2dc9d0 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa2e0588 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa2e0578 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa2e055c <col:9> 'const char_type *' lvalue ParmVar 0xa2dca20 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa2e64b8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e64a0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa2e64e0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e64c8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0xa0fdc98 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0xa0fdee8 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0xa102470 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0xa1020c0 <line:46:7, col:66>
    0xa102090 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa1021b0 <line:47:7, col:62>
    0xa102180 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa102308 <line:49:7, col:62>
    0xa1021d0 "const streamsize __put =
      (CallExpr 0xa1022e0 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa102278 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0xa102258 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa102220 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa102204 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa101d50 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0xa1022ac <col:53> 'const _CharT *' lvalue ParmVar 0xa101dc0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1022c4 <col:58> 'streamsize':'int' lvalue ParmVar 0xa101e20 '__n' 'streamsize':'int'))")
  (IfStmt 0xa102450 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0xa102368 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0xa102348 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa102318 <col:11> 'const streamsize':'const int' lvalue Var 0xa1021d0 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0xa102358 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa102330 <col:20> 'streamsize':'int' lvalue ParmVar 0xa101e20 '__n' 'streamsize':'int')))
    (CallExpr 0xa102430 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa102398 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa102380 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa101d50 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0xa102408 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0xa102f40 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0xa102920 <line:58:7, col:66>
    0xa1028f0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa1029e0 <line:59:7, col:62>
    0xa1029b0 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa102aa8 <line:61:7, col:38>
    0xa102a00 "const _CharT __c =
      (CallExpr 0xa102a88 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa102a50 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0xa102a34 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa102670 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0xa102f18 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa102af8 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0xa102ae8 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa102ab8 <col:14> 'streamsize':'int' lvalue ParmVar 0xa1026b0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa102ad0 <col:20> 'int' 0))
    (UnaryOperator 0xa102b28 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0xa102b10 <col:25> 'streamsize':'int' lvalue ParmVar 0xa1026b0 '__n' 'streamsize':'int'))
    (CompoundStmt 0xa102f00 <line:63:2, line:70:2>
      (DeclStmt 0xa102ce8 <line:64:4, col:70>
        0xa102bd0 "const typename _Traits::int_type __put =
          (CallExpr 0xa102cc8 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa102c78 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0xa102c58 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa102c20 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0xa102c04 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa102670 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0xa102cac <col:66> 'const _CharT' lvalue Var 0xa102a00 '__c' 'const _CharT'))")
      (IfStmt 0xa102ee0 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0xa102dc8 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa102d20 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0xa102d44 <col:29> 'const typename _Traits::int_type' lvalue Var 0xa102bd0 '__put' 'const typename _Traits::int_type')
          (CallExpr 0xa102da8 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa102d80 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0xa102ec8 <line:66:6, line:69:6>
          (CallExpr 0xa102ea0 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa102e08 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa102dec <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa102670 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa102e78 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0xa102ec0 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0xa104a10 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0xa1035c0 <line:78:7, col:66>
    0xa103590 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa103680 <line:79:7, col:62>
    0xa103650 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa103780 <line:81:7, col:52>
    0xa103710 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0xa103760 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0xa103744 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0xa1049c8 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0xa103790 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0xa103710 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0xa1049a8 <line:83:2, line:110:2>
      (IfStmt 0xa104778 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1037a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa104758 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0xa103f30 <line:86:8, col:44>
            0xa1037c0 "const streamsize __w =
              (CallExpr 0xa103f10 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa103810 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1037f4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0xa1046b0 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0xa103f90 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa103f70 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa103f40 <col:12> 'const streamsize':'const int' lvalue Var 0xa1037c0 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0xa103f80 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa103f58 <col:18> 'streamsize':'int' lvalue ParmVar 0xa1032d0 '__n' 'streamsize':'int')))
            (CompoundStmt 0xa1045e8 <line:88:3, line:98:3>
              (DeclStmt 0xa1041c0 <line:89:5, line:91:32>
                0xa103fb0 "const bool __left =
                  (ParenExpr 0xa1041a8 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0xa104180 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0xa104138 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
                      (ParenExpr 0xa1040d8 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0xa1040c0 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0xa104038 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0xa104000 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0xa103fe4 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0xa104098 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0xa104110 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0xa1042f0 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0xa1041f8 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa1041e8 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa1041d0 <col:10> 'const _Bool' lvalue Var 0xa103fb0 '__left' 'const _Bool')))
                (CallExpr 0xa1042c8 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa104210 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa1027b0)
                  (DeclRefExpr 0xa104244 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0xa1042b0 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0xa104290 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa10425c <col:29> 'const streamsize':'const int' lvalue Var 0xa1037c0 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0xa1042a0 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa104274 <col:35> 'streamsize':'int' lvalue ParmVar 0xa1032d0 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0xa104428 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0xa104360 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa104328 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0xa10430c <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0xa104400 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa104380 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa101f40)
                  (DeclRefExpr 0xa1043b4 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0xa1043cc <col:30> 'const _CharT *' lvalue ParmVar 0xa103290 '__s' 'const _CharT *')
                  (DeclRefExpr 0xa1043e4 <col:35> 'streamsize':'int' lvalue ParmVar 0xa1032d0 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0xa1045c8 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0xa1044d0 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0xa104444 <col:9> 'const _Bool' lvalue Var 0xa103fb0 '__left' 'const _Bool')
                  (CallExpr 0xa1044b0 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa104478 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0xa10445c <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0xa1045a0 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1044e8 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa1027b0)
                  (DeclRefExpr 0xa10451c <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0xa104588 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0xa104568 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa104534 <col:29> 'const streamsize':'const int' lvalue Var 0xa1037c0 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0xa104578 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa10454c <col:35> 'streamsize':'int' lvalue ParmVar 0xa1032d0 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0xa104688 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0xa104608 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0xa101f40)
              (DeclRefExpr 0xa10463c <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0xa104654 <col:26> 'const _CharT *' lvalue ParmVar 0xa103290 '__s' 'const _CharT *')
              (DeclRefExpr 0xa10466c <col:31> 'streamsize':'int' lvalue ParmVar 0xa1032d0 '__n' 'streamsize':'int')))
          (CallExpr 0xa104738 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1046e8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1046cc <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa104720 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa104888 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa104798 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa104870 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0xa104840 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1047c0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1047a8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa104818 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0xa104860 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0xa104988 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1048a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa104970 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0xa104950 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1048d0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1048b8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa104928 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa104a00 <line:111:7, col:14>
    (DeclRefExpr 0xa1049e4 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa103220 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e2e720 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0x9e2e710 <col:9, col:22>
    (CXXOperatorCallExpr 0x9e2e6e8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e2e6b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
      (DeclRefExpr 0x9e2e680 <col:16> 'const _Tp' lvalue ParmVar 0x9e2e510 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e2e698 <col:22> 'const _Tp' lvalue ParmVar 0x9e2e560 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e2ed00 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0x9e2ecf0 <col:9, col:22>
    (CXXOperatorCallExpr 0x9e2ecc8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e2ec90 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0x9e2ec60 <col:16> 'const _Tp' lvalue ParmVar 0x9e2eb10 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e2ec78 <col:22> 'const _Tp' lvalue ParmVar 0x9e2eb60 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e2f298 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0x9e2f288 <col:9, col:22>
    (BinaryOperator 0x9e2f270 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0x9e2f240 <col:16> 'const _Tp' lvalue ParmVar 0x9e2f0f0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e2f258 <col:22> 'const _Tp' lvalue ParmVar 0x9e2f140 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e2f828 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0x9e2f818 <col:9, col:22>
    (BinaryOperator 0x9e2f800 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0x9e2f7d0 <col:16> 'const _Tp' lvalue ParmVar 0x9e2f680 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e2f7e8 <col:22> 'const _Tp' lvalue ParmVar 0x9e2f6d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e2fdb8 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0x9e2fda8 <col:9, col:22>
    (BinaryOperator 0x9e2fd90 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0x9e2fd60 <col:16> 'const _Tp' lvalue ParmVar 0x9e2fc10 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e2fd78 <col:22> 'const _Tp' lvalue ParmVar 0x9e2fc60 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0x9e32730 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0x9e32720 <col:9, col:17>
    (CXXOperatorCallExpr 0x9e32700 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9e326c8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0x9e326b0 <col:17> 'const _Tp' lvalue ParmVar 0x9e32590 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e32da0 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0x9e32d90 <col:9, col:23>
    (CXXOperatorCallExpr 0x9e32d68 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9e32d20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (DeclRefExpr 0x9e32cf0 <col:16> 'const _Tp' lvalue ParmVar 0x9e32b80 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e32d08 <col:23> 'const _Tp' lvalue ParmVar 0x9e32bd0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e33390 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0x9e33380 <col:9, col:23>
    (CXXOperatorCallExpr 0x9e33358 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9e33310 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0)
      (DeclRefExpr 0x9e332e0 <col:16> 'const _Tp' lvalue ParmVar 0x9e33190 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e332f8 <col:23> 'const _Tp' lvalue ParmVar 0x9e331e0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e33978 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0x9e33968 <col:9, col:22>
    (CXXOperatorCallExpr 0x9e33940 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e33900 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0x9e338d0 <col:16> 'const _Tp' lvalue ParmVar 0x9e33780 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e338e8 <col:22> 'const _Tp' lvalue ParmVar 0x9e337d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e33f58 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0x9e33f48 <col:9, col:22>
    (CXXOperatorCallExpr 0x9e33f20 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e33ee0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
      (DeclRefExpr 0x9e33eb0 <col:16> 'const _Tp' lvalue ParmVar 0x9e33d60 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e33ec8 <col:22> 'const _Tp' lvalue ParmVar 0x9e33db0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e34538 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0x9e34528 <col:9, col:23>
    (CXXOperatorCallExpr 0x9e34500 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9e344c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0)
      (DeclRefExpr 0x9e34490 <col:16> 'const _Tp' lvalue ParmVar 0x9e34340 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e344a8 <col:23> 'const _Tp' lvalue ParmVar 0x9e34390 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e36d48 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0x9e36d38 <col:9, col:23>
    (CXXOperatorCallExpr 0x9e36d10 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9e36cd0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70)
      (DeclRefExpr 0x9e36ca0 <col:16> 'const _Tp' lvalue ParmVar 0x9e36b50 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e36cb8 <col:23> 'const _Tp' lvalue ParmVar 0x9e36ba0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e372d8 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0x9e372c8 <col:9, col:23>
    (BinaryOperator 0x9e372b0 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0x9e37280 <col:16> 'const _Tp' lvalue ParmVar 0x9e37130 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e37298 <col:23> 'const _Tp' lvalue ParmVar 0x9e37180 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e37868 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0x9e37858 <col:9, col:23>
    (BinaryOperator 0x9e37840 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0x9e37810 <col:16> 'const _Tp' lvalue ParmVar 0x9e376c0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e37828 <col:23> 'const _Tp' lvalue ParmVar 0x9e37710 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0x9e37dc0 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0x9e37db0 <col:9, col:17>
    (UnaryOperator 0x9e37d98 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9e37d80 <col:17> 'const _Tp' lvalue ParmVar 0x9e37c60 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e38358 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0x9e38348 <col:9, col:22>
    (BinaryOperator 0x9e38330 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0x9e38300 <col:16> 'const _Tp' lvalue ParmVar 0x9e381b0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e38318 <col:22> 'const _Tp' lvalue ParmVar 0x9e38200 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e3adc8 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0x9e3adb8 <col:9, col:22>
    (BinaryOperator 0x9e3ada0 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0x9e3ad70 <col:16> 'const _Tp' lvalue ParmVar 0x9e38740 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e3ad88 <col:22> 'const _Tp' lvalue ParmVar 0x9e3ac70 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e3b358 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0x9e3b348 <col:9, col:22>
    (BinaryOperator 0x9e3b330 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0x9e3b300 <col:16> 'const _Tp' lvalue ParmVar 0x9e3b1b0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e3b318 <col:22> 'const _Tp' lvalue ParmVar 0x9e3b200 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9e3bb14 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0x9e3b890 '__x' 'const _Predicate &')
) (CompoundStmt 0x9e3bb70 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0x9e3bc48 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0x9e3bc38 <col:9, col:28>
    (UnaryOperator 0x9e3bc20 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9e3bc00 <col:17, col:28> '<dependent type>'
        (MemberExpr 0x9e3bbc4 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9e3b7f0
          (CXXThisExpr 0x9e3bb98 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9e3bbe4 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0x9e3ba10 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0x9e3bfa8 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0x9e3bf98 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9e3bf78 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0x9e3bf60 <col:39> 'const _Predicate' lvalue ParmVar 0x9e3bd70 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9e3c8d8 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0x9e3c5a0 '__x' 'const _Predicate &')
) (CompoundStmt 0x9e3c930 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0x9e3ca28 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0x9e3ca18 <col:9, col:33>
    (UnaryOperator 0x9e3ca00 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0x9e3c9d8 <col:17, col:33> '<dependent type>'
        (MemberExpr 0x9e3c984 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9e3c500
          (CXXThisExpr 0x9e3c958 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9e3c9a4 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0x9e3c720 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0x9e3c9bc <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0x9e3c7d0 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0xa127218 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0xa127208 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0xa1271e8 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0xa1271d0 <col:40> 'const _Predicate' lvalue ParmVar 0x9e3cb50 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0xa127b08 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0xa127b18 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0xa1278e0 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0xa127b70 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0xa127c30 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0xa127c20 <col:9, col:26>
    (CallExpr 0xa127c00 <col:16, col:26> '<dependent type>'
      (MemberExpr 0xa127bc4 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0xa127770
        (CXXThisExpr 0xa127b98 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0xa127be4 <col:23> '_Arg' lvalue ParmVar 0xa127a00 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0xa128140 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0xa128130 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0xa128110 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0xa1280f8 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0xa127ea0 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0xa128ba8 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0xa128bb8 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0xa128940 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0xa128c10 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0xa128cf0 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0xa128ce0 <col:9, col:31>
    (CallExpr 0xa128cb8 <col:16, col:31> '<dependent type>'
      (MemberExpr 0xa128c64 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0xa128790
        (CXXThisExpr 0xa128c38 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0xa128c84 <col:23> '_Arg1' lvalue ParmVar 0xa128a60 '__x' '_Arg1')
      (DeclRefExpr 0xa128c9c <col:28> '_Arg2' lvalue ParmVar 0xa128aa0 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0xa129eb8 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0xa129ea8 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0xa129e88 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0xa129e70 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0xa129040 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0xa12a4e8 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0xa12a4d8 <col:9, col:16>
    (DeclRefExpr 0xa12a4c0 <col:16> '_Tp' lvalue ParmVar 0xa12a260 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0xa12a528 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0xa12a518 <col:9, col:16>
    (DeclRefExpr 0xa12a4fc <col:16> 'const _Tp' lvalue ParmVar 0xa12a3a0 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0xa12ad50 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0xa12ad40 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa12ad08 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa12acf0 <col:16> '_Pair' lvalue ParmVar 0xa12a9d0 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0xa12adc8 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0xa12adb8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa12ad80 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa12ad64 <col:16> 'const _Pair' lvalue ParmVar 0xa12ab80 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0xa12b5f0 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0xa12b5e0 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa12b5a8 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa12b590 <col:16> '_Pair' lvalue ParmVar 0xa12b270 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0xa12b668 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0xa12b658 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa12b620 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa12b604 <col:16> 'const _Pair' lvalue ParmVar 0xa12b420 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0xa12d5a0 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa12d2b0 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0xa12d600 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0xa12d6f8 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0xa12d6e8 <col:9, col:29>
    (CallExpr 0xa12d6c8 <col:16, col:29> '<dependent type>'
      (ParenExpr 0xa12d6b0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa12d698 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa12d610 <col:17> '_Tp *' lvalue ParmVar 0xa12d3e0 '__p' '_Tp *')
          (MemberExpr 0xa12d674 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0xa12d570
            (CXXThisExpr 0xa12d648 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0xa12df70 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa12dc80 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0xa12dfd0 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0xa12e0c8 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0xa12e0b8 <col:9, col:29>
    (CallExpr 0xa12e098 <col:16, col:29> '<dependent type>'
      (ParenExpr 0xa12e080 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa12e068 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa12dfe0 <col:17> 'const _Tp *' lvalue ParmVar 0xa12ddb0 '__p' 'const _Tp *')
          (MemberExpr 0xa12e044 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0xa12df40
            (CXXThisExpr 0xa12e018 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0xa12e900 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa12e610 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0xa12e960 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0xa12ea58 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0xa12ea48 <col:9, col:28>
    (CallExpr 0xa12ea28 <col:16, col:28> '<dependent type>'
      (ParenExpr 0xa12ea10 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa12e9f8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa12e970 <col:17> '_Tp' lvalue ParmVar 0xa12e740 '__r' '_Tp &')
          (MemberExpr 0xa12e9d4 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0xa12e8d0
            (CXXThisExpr 0xa12e9a8 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0xa12f240 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa12ef50 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0xa130528 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0xa130618 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0xa130608 <col:9, col:28>
    (CallExpr 0xa1305e8 <col:16, col:28> '<dependent type>'
      (ParenExpr 0xa1305d0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa1305b8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa130538 <col:17> 'const _Tp' lvalue ParmVar 0xa12f080 '__r' 'const _Tp &')
          (MemberExpr 0xa130594 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0xa12f210
            (CXXThisExpr 0xa130568 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0xa131040 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa130cd0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0xa1310a0 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0xa1311b0 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0xa1311a0 <col:9, col:32>
    (CallExpr 0xa131180 <col:16, col:32> '<dependent type>'
      (ParenExpr 0xa131150 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa131138 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa1310b0 <col:17> '_Tp *' lvalue ParmVar 0xa130e00 '__p' '_Tp *')
          (MemberExpr 0xa131114 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0xa131010
            (CXXThisExpr 0xa1310e8 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa131164 <col:29> '_Arg' lvalue ParmVar 0xa130e40 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0xa131be0 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa131870 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0xa131c40 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0xa131d50 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0xa131d40 <col:9, col:32>
    (CallExpr 0xa131d20 <col:16, col:32> '<dependent type>'
      (ParenExpr 0xa131cf0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa131cd8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa131c50 <col:17> 'const _Tp *' lvalue ParmVar 0xa1319a0 '__p' 'const _Tp *')
          (MemberExpr 0xa131cb4 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0xa131bb0
            (CXXThisExpr 0xa131c88 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa131d04 <col:29> '_Arg' lvalue ParmVar 0xa1319e0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0xa133750 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa1323b0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0xa1337b0 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0xa1338c0 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0xa1338b0 <col:9, col:31>
    (CallExpr 0xa133890 <col:16, col:31> '<dependent type>'
      (ParenExpr 0xa133860 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa133848 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa1337c0 <col:17> '_Tp' lvalue ParmVar 0xa1324e0 '__r' '_Tp &')
          (MemberExpr 0xa133824 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0xa133720
            (CXXThisExpr 0xa1337f8 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa133874 <col:28> '_Arg' lvalue ParmVar 0xa133550 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0xa134230 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa133ec0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0xa134290 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0xa1343a0 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0xa134390 <col:9, col:31>
    (CallExpr 0xa134370 <col:16, col:31> '<dependent type>'
      (ParenExpr 0xa134340 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa134328 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa1342a0 <col:17> 'const _Tp' lvalue ParmVar 0xa133ff0 '__r' 'const _Tp &')
          (MemberExpr 0xa134304 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0xa134200
            (CXXThisExpr 0xa1342d8 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa134354 <col:28> '_Arg' lvalue ParmVar 0xa134030 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0xa1348a0 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0xa134890 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0xa134870 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0xa134858 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa134600 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0xa134da0 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0xa134d90 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0xa134d70 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0xa134d58 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa134b00 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0xa1352a0 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0xa135290 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0xa135270 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0xa135258 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa135000 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0xa1361e0 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0xa1361d0 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0xa1361b0 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0xa136198 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa135500 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0xa136828 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0xa136818 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0xa1367f8 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa1367e0 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa136520 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0xa136e68 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0xa136e58 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0xa136e38 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa136e20 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa136b60 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0xa1374a8 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0xa137498 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0xa137478 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa137460 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa1371a0 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0xa137ae8 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0xa137ad8 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0xa137ab8 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa137aa0 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa1377e0 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0xa13c634 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0xa13c130 '__x' 'const _Operation &')
), value((DeclRefExpr 0xa13c688 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0xa13c1c0 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0xa13c6e0 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0xa13c7d8 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0xa13c7c8 <col:9, col:29>
    (CallExpr 0xa13c7a0 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa13c734 <col:16> 'const _Operation' lvalue ->op 0xa13c000
        (CXXThisExpr 0xa13c708 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0xa13c768 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0xa13c090
        (CXXThisExpr 0xa13c758 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0xa13c788 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0xa13c360 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0xa13c8a0 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0xa13c890 <col:9, col:29>
    (CallExpr 0xa13c868 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa13c800 <col:16> 'const _Operation' lvalue ->op 0xa13c000
        (CXXThisExpr 0xa13c7f0 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0xa13c830 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0xa13c090
        (CXXThisExpr 0xa13c820 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0xa13c850 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0xa13c520 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0xa13cdf0 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0xa13cc90 <line:129:7, col:66>
    0xa13cc60 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0xa13cde0 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0xa13cdc0 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0xa13cd50 <col:36> 'const _Operation' lvalue ParmVar 0xa13ca30 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0xa13cda0 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0xa13cd88 <col:53> 'const _Tp' lvalue ParmVar 0xa13caa0 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0xa13d904 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0xa13d400 '__x' 'const _Operation &')
), value((DeclRefExpr 0xa13d958 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0xa13d490 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0xa13d9b0 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0xa13daa8 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0xa13da98 <col:9, col:29>
    (CallExpr 0xa13da70 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa13da04 <col:16> 'const _Operation' lvalue ->op 0xa13d2d0
        (CXXThisExpr 0xa13d9d8 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0xa13da24 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0xa13d630 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0xa13da50 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0xa13d360
        (CXXThisExpr 0xa13da40 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0xa13db70 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0xa13db60 <col:9, col:29>
    (CallExpr 0xa13db38 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa13dad0 <col:16> 'const _Operation' lvalue ->op 0xa13d2d0
        (CXXThisExpr 0xa13dac0 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0xa13daf0 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0xa13d7f0 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0xa13db18 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0xa13d360
        (CXXThisExpr 0xa13db08 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0xa140160 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0xa140000 <line:164:7, col:67>
    0xa13ffd0 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0xa140150 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0xa140130 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0xa1400c0 <col:36> 'const _Operation' lvalue ParmVar 0xa13dd00 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0xa140110 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0xa1400f8 <col:53> 'const _Tp' lvalue ParmVar 0xa13dd70 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0xa155090 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0xa1550f0 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0xa155150 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0xa1551b0 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0xa155210 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0xa155270 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0xa1552d0 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0xa155330 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0xa155390 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0xa1553f0 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0xa155450 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0xa15f1a8 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f014 <col:26> 'int' EnumConstant 0xa15ef20 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0xa15f1b8 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f064 <col:29> 'int' EnumConstant 0xa15ef60 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0xa15f1c8 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f0b4 <col:30> 'int' EnumConstant 0xa15efa0 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0xa15f1d8 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f104 <col:27> 'int' EnumConstant 0xa15f030 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0xa15f1e8 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f154 <col:29> 'int' EnumConstant 0xa15ef20 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0xa15f378 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f294 <col:30> 'int' EnumConstant 0xa15f260 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0xa15f388 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f324 <col:29> 'int' EnumConstant 0xa15f2f0 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0xa15f628 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa15f5d4 <col:31> 'int' EnumConstant 0xa15f520 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0xa177538 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0xa1774a0 <line:242:3, line:251:13>
    0xa1773e0 "static void *const __gthread_active_ptr =
      (UnaryOperator 0xa177488 <line:243:7, <scratch space>:148:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0xa177470 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:148:1> 'void *' <BitCast>
          (UnaryOperator 0xa177448 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:148:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0xa177414 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0xa175240 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0xa177528 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0xa177518 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0xa177500 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0xa1774e0 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa1774b0 <col:10> 'void *const' lvalue Var 0xa1773e0 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0xa1774f0 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0xa1774c8 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0xa178fe8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0xa178fd8 <line:663:3, col:68>
    (CallExpr 0xa178f68 <<scratch space>:149:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0xa178f58 <<scratch space>:149:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa178f00 <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0xa174920 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0xa178f98 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0xa1777f4 <col:36> '__gthread_t *' lvalue ParmVar 0xa177590 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0xa178fa8 </usr/include/linux/stddef.h:8:14> 'const pthread_attr_t *' <NullToPointer>
        (IntegerLiteral 0xa177810 <col:14> 'int' 0))
      (ImplicitCastExpr 0xa178fb8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0xa177828 <col:54> 'void *(*)(void *)' lvalue ParmVar 0xa177640 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0xa178fc8 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0xa178ee8 <col:62> 'void *' lvalue ParmVar 0xa177690 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0xa179270 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0xa179260 <line:669:3, col:57>
    (CallExpr 0xa179218 <<scratch space>:150:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0xa179208 <<scratch space>:150:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1791ac <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0xa174bc0 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0xa179240 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa17917c <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0xa179010 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0xa179250 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0xa179194 <col:46> 'void **' lvalue ParmVar 0xa179060 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0xa179448 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0xa179438 <line:675:3, col:46>
    (CallExpr 0xa179408 <<scratch space>:151:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0xa1793f8 <<scratch space>:151:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1793c4 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0xa1750b0 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0xa179428 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa1793ac <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0xa179290 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0xa1796c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0xa1796b0 <line:681:3, col:45>
    (CallExpr 0xa179668 <<scratch space>:152:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0xa179658 <<scratch space>:152:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1795fc <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0xa174da0 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0xa179690 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa1795cc <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0xa179470 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0xa1796a0 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa1795e4 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0xa1794b0 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0xa179878 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0xa179868 <line:687:3, col:34>
    (CallExpr 0xa179848 <<scratch space>:153:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0xa179838 <<scratch space>:153:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1797e4 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0xa174f70 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0xa1799f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0xa1799e8 <line:693:3, col:33>
    (CallExpr 0xa1799c8 <<scratch space>:154:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0xa1799b8 <<scratch space>:154:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa179984 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0xa175410 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0xa179df0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0xa179dd0 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0xa179c58 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa179c38 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa179c28 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa179c0c <col:7> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa179d80 <line:700:5, col:50>
      (CallExpr 0xa179d38 <<scratch space>:155:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0xa179d28 <<scratch space>:155:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa179ccc <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0xa174380 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0xa179d60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0xa179c9c <col:36> '__gthread_once_t *' lvalue ParmVar 0xa179a50 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0xa179d70 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0xa179cb4 <col:44> 'void (*)(void)' lvalue ParmVar 0xa179af0 '__func' 'void (*)(void)'))))
    (ReturnStmt 0xa179dc0 <line:702:5, col:13>
      (UnaryOperator 0xa179da8 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0xa179d90 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0xa17a110 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0xa17a100 <line:708:3, col:53>
    (CallExpr 0xa17a0b8 <<scratch space>:156:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0xa17a0a8 <<scratch space>:156:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17a04c <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0xa176a60 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0xa17a0e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0xa17a01c <col:40> '__gthread_key_t *' lvalue ParmVar 0xa179e50 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0xa17a0f0 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0xa17a034 <col:47> 'void (*)(void *)' lvalue ParmVar 0xa179f00 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0xa17a2e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0xa17a2d8 <line:714:3, col:45>
    (CallExpr 0xa17a2a8 <<scratch space>:157:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0xa17a298 <<scratch space>:157:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17a264 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0xa176c60 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0xa17a2c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa17a24c <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa17a130 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0xa17a4c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0xa17a4b8 <line:720:3, col:46>
    (CallExpr 0xa17a488 <<scratch space>:158:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0xa17a478 <<scratch space>:158:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17a444 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0xa174590 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0xa17a4a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa17a42c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa17a310 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0xa17a750 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0xa17a740 <line:726:3, col:53>
    (CallExpr 0xa17a6f8 <<scratch space>:159:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0xa17a6e8 <<scratch space>:159:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17a68c <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0xa174730 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0xa17a720 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa17a65c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa17a4f0 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0xa17a730 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0xa17a674 <col:48> 'const void *' lvalue ParmVar 0xa17a540 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0xa17aa60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0xa17aa40 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa17a918 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa17a8f8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa17a8e8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17a8cc <col:7> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa17aa08 <line:733:5, col:52>
      (CallExpr 0xa17a9d8 <<scratch space>:160:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0xa17a9c8 <<scratch space>:160:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17a974 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa175f10 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa17a9f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa17a95c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0xa17a7b0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa17aa30 <line:735:5, col:12>
      (IntegerLiteral 0xa17aa18 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa17ad00 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0xa17ace0 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa17abd8 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa17abb8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa17aba8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17ab8c <col:7> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa17aca8 <line:742:5, col:49>
      (CallExpr 0xa17ac78 <<scratch space>:161:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0xa17ac68 <<scratch space>:161:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17ac34 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa175590 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa17ac98 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa17ac1c <col:42> '__gthread_mutex_t *' lvalue ParmVar 0xa17aa90 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa17acd0 <line:744:5, col:12>
      (IntegerLiteral 0xa17acb8 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa17afa0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0xa17af80 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa17ae78 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa17ae58 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa17ae48 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17ae2c <col:7> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa17af48 <line:751:5, col:52>
      (CallExpr 0xa17af18 <<scratch space>:162:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0xa17af08 <<scratch space>:162:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17aed4 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa175780 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa17af38 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa17aebc <col:45> '__gthread_mutex_t *' lvalue ParmVar 0xa17ad30 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa17af70 <line:753:5, col:12>
      (IntegerLiteral 0xa17af58 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa17b338 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0xa17b318 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa17b1b8 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa17b198 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa17b188 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17b16c <col:7> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa17b2e0 <line:763:5, col:69>
      (CallExpr 0xa17b298 <<scratch space>:163:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0xa17b288 <<scratch space>:163:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17b22c <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0xa175950 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0xa17b2c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa17b1fc <col:47> '__gthread_mutex_t *' lvalue ParmVar 0xa17afd0 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0xa17b2d0 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0xa17b214 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0xa17b050 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0xa17b308 <line:765:5, col:12>
      (IntegerLiteral 0xa17b2f0 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa17b5d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0xa17b5b0 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa17b4a8 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa17b488 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa17b478 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17b45c <col:7> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa17b578 <line:774:5, col:51>
      (CallExpr 0xa17b548 <<scratch space>:164:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0xa17b538 <<scratch space>:164:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa17b504 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa175b80 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa17b568 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa17b4ec <col:44> '__gthread_mutex_t *' lvalue ParmVar 0xa17b360 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa17b5a0 <line:776:5, col:12>
      (IntegerLiteral 0xa17b588 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa17b7e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0xa17b7d8 <line:805:3, col:39>
    (CallExpr 0xa17b7a8 <col:10, col:39> 'int'
      (ImplicitCastExpr 0xa17b798 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17b764 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa17aaf0 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa17b7c8 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17b74c <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa17b630 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa17b990 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0xa17b980 <line:811:3, col:42>
    (CallExpr 0xa17b950 <col:10, col:42> 'int'
      (ImplicitCastExpr 0xa17b940 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17b924 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa17ad90 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa17b970 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17b90c <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa17b810 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa17bc00 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0xa17bbf0 <line:820:3, col:59>
    (CallExpr 0xa17bba8 <col:10, col:59> 'int'
      (ImplicitCastExpr 0xa17bb98 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17bb5c <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0xa17b0d0 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0xa17bbd0 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17bb2c <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa17b9c0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0xa17bbe0 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa17bb44 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0xa17ba10 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa17bdb0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0xa17bda0 <line:828:3, col:41>
    (CallExpr 0xa17bd70 <col:10, col:41> 'int'
      (ImplicitCastExpr 0xa17bd60 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17bd44 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa17b3c0 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa17bd90 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17bd2c <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa17bc30 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0xa17bfe8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0xa17bfd8 <line:834:3, col:50>
    (CallExpr 0xa17bfa8 <<scratch space>:165:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0xa17bf98 <<scratch space>:165:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17bf44 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0xa176100 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa17bfc8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa17bf2c <col:44> '__gthread_cond_t *' lvalue ParmVar 0xa17be10 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0xa17c1a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0xa17c198 <line:840:3, col:47>
    (CallExpr 0xa17c168 <<scratch space>:166:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0xa17c158 <<scratch space>:166:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17c124 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0xa1762a0 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa17c188 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c10c <col:41> '__gthread_cond_t *' lvalue ParmVar 0xa17c010 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0xa17c430 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0xa17c420 <line:846:3, col:54>
    (CallExpr 0xa17c3d8 <<scratch space>:167:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0xa17c3c8 <<scratch space>:167:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17c36c <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0xa176480 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0xa17c400 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c33c <col:39> '__gthread_cond_t *' lvalue ParmVar 0xa17c1d0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa17c410 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c354 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0xa17c220 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa17c750 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0xa17c740 <line:853:3, col:74>
    (CallExpr 0xa17c6e8 <<scratch space>:168:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0xa17c6d8 <<scratch space>:168:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17c67c <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0xa176670 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0xa17c710 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c634 <col:44> '__gthread_cond_t *' lvalue ParmVar 0xa17c460 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa17c720 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c64c <col:52> '__gthread_mutex_t *' lvalue ParmVar 0xa17c4b0 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0xa17c730 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c664 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0xa17c500 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa17c9c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0xa17c9b0 <line:860:3, col:46>
    (CallExpr 0xa17c968 <col:10, col:46> 'int'
      (ImplicitCastExpr 0xa17c958 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17c91c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0xa17c2a0 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa17c990 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c8ec <col:31> '__gthread_cond_t *' lvalue ParmVar 0xa17c780 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa17c9a0 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17c904 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa17c7d0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa17ccc0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0xa17ccb0 <line:868:3, col:66>
    (CallExpr 0xa17cc58 <col:10, col:66> 'int'
      (ImplicitCastExpr 0xa17cc48 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17cc0c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0xa17c590 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0xa17cc80 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa17cbc4 <col:36> '__gthread_cond_t *' lvalue ParmVar 0xa17c9f0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa17cc90 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa17cbdc <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa17ca40 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0xa17cca0 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa17cbf4 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0xa17ca90 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0xa17ce88 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0xa17ce78 <line:874:3, col:48>
    (CallExpr 0xa17ce48 <<scratch space>:169:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0xa17ce38 <<scratch space>:169:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa17ce04 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0xa1768c0 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa17ce68 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa17cdec <col:42> '__gthread_cond_t *' lvalue ParmVar 0xa17ccf0 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0xa180df8 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0xa180de8 <col:5, col:45>
    (CallExpr 0xa180c18 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0xa180dd8 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa180da4 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0xa180c80 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0xa180c40 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa180bb4 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0xa1809e0 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0xa180d98 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0xa180bcc <col:40> 'int' lvalue ParmVar 0xa180a30 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0xa181170 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0xa180fd0 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0xa181160 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa181144 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0xa181020 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0xa180ff8 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0xa180f90 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0xa180e20 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0xa181138 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0xa180fa8 <col:33> 'int' lvalue ParmVar 0xa180e70 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0xa181458 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0xa181388 <line:66:5, col:35>
    0xa181300 "_Atomic_word __result =
      (ImplicitCastExpr 0xa181378 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0xa181360 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0xa181350 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0xa181334 <col:30> '_Atomic_word *' lvalue ParmVar 0xa1811c0 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0xa181400 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0xa1813c0 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0xa1813b0 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa181398 <col:6> '_Atomic_word *' lvalue ParmVar 0xa1811c0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0xa1813f0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1813d4 <col:15> 'int' lvalue ParmVar 0xa181210 '__val' 'int')))
  (ReturnStmt 0xa181448 <line:68:5, col:12>
    (ImplicitCastExpr 0xa181438 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0xa181420 <col:12> '_Atomic_word':'int' lvalue Var 0xa181300 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0xa181670 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0xa181650 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0xa181610 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0xa181600 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa1815e8 <col:6> '_Atomic_word *' lvalue ParmVar 0xa181490 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0xa181640 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa181624 <col:15> 'int' lvalue ParmVar 0xa1814e0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0xa181b00 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0xa181ae0 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa181878 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa181858 <col:9, col:28> 'int'
        (ImplicitCastExpr 0xa181848 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa18182c <col:9> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1819b0 <line:81:7, col:45>
      (CallExpr 0xa181958 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa181948 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1818ec <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0xa180ab0 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0xa181990 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0xa181980 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0xa1818bc <col:33> '_Atomic_word *' lvalue ParmVar 0xa1816a0 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0xa1819a0 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1818d4 <col:40> 'int' lvalue ParmVar 0xa1816f0 '__val' 'int'))))
    (ReturnStmt 0xa181ad0 <line:83:7, col:52>
      (CallExpr 0xa181a88 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa181a78 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa181a24 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181290 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0xa181ab0 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0xa1819f4 <col:40> '_Atomic_word *' lvalue ParmVar 0xa1816a0 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0xa181ac0 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0xa181a0c <col:47> 'int' lvalue ParmVar 0xa1816f0 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0xa181f70 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0xa181f50 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0xa181d08 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa181ce8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0xa181cd8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa181cbc <col:9> 'int (void)' lvalue Function 0xa177370 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0xa181de8 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0xa181dd8 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa181d7c <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0xa180f10 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0xa181e20 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0xa181e10 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0xa181d4c <col:20> '_Atomic_word *' lvalue ParmVar 0xa181b30 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0xa181e30 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0xa181d64 <col:27> 'int' lvalue ParmVar 0xa181b80 '__val' 'int')))
    (CallExpr 0xa181f08 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0xa181ef8 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa181ea4 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0xa181580 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0xa181f30 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa181e74 <col:27> '_Atomic_word *' lvalue ParmVar 0xa181b30 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0xa181f40 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0xa181e8c <col:34> 'int' lvalue ParmVar 0xa181b80 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa4a8838 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa4a8698 <line:180:4, col:62>
    0xa4a84c0 "void *__p =
      (CXXReinterpretCastExpr 0xa4a8680 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa4a8668 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa4a8610 <col:41> 'size_type []' lvalue Var 0xa244d70 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa4a8828 <line:181:4, col:39>
    (UnaryOperator 0xa4a8810 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa4a87f8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa4a87e8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa4a87cc <col:36> 'void *' lvalue Var 0xa4a84c0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa4a84a8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa4a8488 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4a81b0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa4a8168 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa4a8158 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1a80dc <col:8> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa4a8190 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa4a8140 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa4a7fa0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa4a8128 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa4a8108 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa4a80f8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa4a80c0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa244ef0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa4a81a0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa1a81c8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa4a8470 <line:236:6, line:245:6>
      (NullStmt 0xa1a8200 <line:238:67>)
      (IfStmt 0xa4a8450 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa4a82a8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa4a8280 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa4a8270 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1a8230 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181750 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa4a8258 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa4a8238 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa244540
                (ImplicitCastExpr 0xa4a8228 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa4a8200 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa1a82c8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa1a82b0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa1a8308 <col:16> 'int' 0))
        (CompoundStmt 0xa4a8438 <line:241:3, line:244:3>
          (NullStmt 0xa1a8388 <line:242:63>)
          (CXXMemberCallExpr 0xa4a8418 <line:243:5, col:19> 'void'
            (MemberExpr 0xa4a83e0 <col:5> '<bound member function type>' ->_M_destroy 0xa245ba0
              (CXXThisExpr 0xa4a82c0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa4a8400 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa245a80 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa4a7700 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa223f18 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa223f08 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa1846f0 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa1846d8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa4a7f40 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4a7f30 <col:9, col:29>
    (ImplicitCastExpr 0xa4a7f20 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa4a7f00 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa2244a0
        (MemberExpr 0xa4a7ee0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa2244d0
          (CXXThisExpr 0xa4a7dc0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa4a7da8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa4a7d98 <col:9, col:59>
    (UnaryOperator 0xa4a7d80 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa4a7d68 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4a7d50 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa4a7d38 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4a7d20 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa4a7d00 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa4a7ce0 <col:44> '<bound member function type>' ->_M_data 0xa224550
                  (CXXThisExpr 0xa4a7cd0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa1a8a48 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa1a8a30 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa4a7650 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa4a7630 <col:9, col:51> 'void'
    (CXXTemporary 0xa4a75b0)
    (CXXMemberCallExpr 0xa4a75c8 <col:9, col:51> 'void'
      (MemberExpr 0xa4a752c <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa245ad0
        (CXXMemberCallExpr 0xa4a7500 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa4a74e0 <col:9> '<bound member function type>' ->_M_rep 0xa224840
            (ImplicitCastExpr 0xa4a7520 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa4a73c0 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa4a7620 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa4a7610 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa4a75b8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa4a75b0)
            (CXXMemberCallExpr 0xa4a7580 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa4a7560 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa23c310
                (ImplicitCastExpr 0xa4a75a0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa4a7550 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa4aa180 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa4aa170 <col:9, col:26>
    (ImplicitCastExpr 0xa4aa160 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa4aa140 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa2443c0
        (ImplicitCastExpr 0xa4aa130 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa4aa110 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa4aa0f0 <col:16> '<bound member function type>' ->_M_rep 0xa224840
              (CXXThisExpr 0xa4a9fd0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa4a9fb8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa4a9fa8 <col:9, col:32>
    (BinaryOperator 0xa4a9f90 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa4a9f60 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa4a9f40 <col:16, col:22> '<bound member function type>' ->size 0xa22b760
          (CXXThisExpr 0xa4a9f30 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa4a9f80 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1afdf8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa4aa820 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4aa2a8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa4aa250 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa4aa240 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa4aa1d4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa22ccc0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa4aa220 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa4aa200 <col:13, col:19> '<bound member function type>' ->size 0xa22b760
          (CXXThisExpr 0xa4aa1f0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa4aa278 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4aa268 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b0264 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4aa298 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b0250 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b0220 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa4aa810 <line:859:2, col:22>
    (ImplicitCastExpr 0xa4aa800 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa4aa7e8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa4aa7a0 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa4aa780 <col:9> '<bound member function type>' ->_M_data 0xa224550
            (CXXThisExpr 0xa4aa770 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa4aa7d8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa4aa7bc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa22ccc0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa4aad50 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa4aad40 <col:9, col:24>
    (ImplicitCastExpr 0xa4aad30 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa4aad10 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa4aacf0 <col:16> '<bound member function type>' ->_M_data 0xa224550
          (CXXThisExpr 0xa4aace0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa4a8a10 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa4a8a00 <col:9, col:16>
    (CXXConstructExpr 0xa4a89d8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa4a89c8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa4a89b8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa4a8970 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa2244d0
            (CXXThisExpr 0xa4a8850 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa1fc9e8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa1fc9d8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa1846f0 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa1846d8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa4a9830 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4a9820 <col:9, col:29>
    (ImplicitCastExpr 0xa4a9810 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa4a97f0 <col:17, col:29> 'char *' lvalue ._M_p 0xa1fcf70
        (MemberExpr 0xa4a97d0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa1fcfa0
          (CXXThisExpr 0xa4a96b0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa4a9698 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa4a9688 <col:9, col:59>
    (UnaryOperator 0xa4a9670 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa4a9658 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4a9640 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa4a9628 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4a9610 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa4a95f0 <col:44, col:52> 'char *'
                (MemberExpr 0xa4a95d0 <col:44> '<bound member function type>' ->_M_data 0xa1fd020
                  (CXXThisExpr 0xa4a95c0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa1a8a48 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa1a8a30 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa4a8fe8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa4a8fd8 <col:9, col:26>
    (ImplicitCastExpr 0xa4a8fc8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa4a8fa8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa21eea0
        (ImplicitCastExpr 0xa4a8f98 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa4a8f60 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa4a8f40 <col:16> '<bound member function type>' ->_M_rep 0xa1fd2f0
              (CXXThisExpr 0xa4a8e18 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa4a8e00 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa4a8df0 <col:9, col:32>
    (BinaryOperator 0xa4a8dd8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa4a8da8 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa4a8d88 <col:16, col:22> '<bound member function type>' ->size 0xa206280
          (CXXThisExpr 0xa4a8d78 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa4a8dc8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1afdf8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa4a9ed0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4a9958 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa4a9900 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa4a98f0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa4a9884 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa2077e0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa4a98d0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa4a98b0 <col:13, col:19> '<bound member function type>' ->size 0xa206280
          (CXXThisExpr 0xa4a98a0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa4a9928 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4a9918 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b0264 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4a9948 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b0250 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b0220 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa4a9ec0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa4a9eb0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa4a9e98 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa4a9e50 <col:9, col:17> 'char *'
          (MemberExpr 0xa4a9e30 <col:9> '<bound member function type>' ->_M_data 0xa1fd020
            (CXXThisExpr 0xa4a9e20 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa4a9e88 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa4a9e6c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa2077e0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0xa1a7588 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa1a7510 <line:180:4, col:62>
    0xa1a7480 "void *__p =
      (CXXReinterpretCastExpr 0xa1a74f8 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0xa1a74d0 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0xa1a74b4 <col:41> 'size_type []' lvalue Var 0xa1836e0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa1a7578 <line:181:4, col:39>
    (UnaryOperator 0xa1a7560 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0xa1a7548 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0xa1a7520 <col:36> 'void *' lvalue Var 0xa1a7480 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0xa1a7690 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0xa1a7680 <col:11, col:38>
    (CXXOperatorCallExpr 0xa1a7658 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a7618 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
      (CXXDependentScopeMemberExpr 0xa1a75c8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa1a75b8 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0xa1a7600 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0xa1a7780 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0xa1a7770 <col:11, col:38>
    (CXXOperatorCallExpr 0xa1a7748 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a7708 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (CXXDependentScopeMemberExpr 0xa1a76b8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa1a76a8 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0xa1a76f0 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0xa1a7828 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0xa1a7810 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa1a77a8 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa1a7798 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0xa1a77f8 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0xa1a77e0 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0xa1a78b8 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0xa1a78a0 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa1a7850 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa1a7840 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0xa1a7888 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0xa1a7db8 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0xa1a7d98 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0xa1a7b18 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa1a7a20 <col:8> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa1a7ae0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a7a98 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0)
        (CXXThisExpr 0xa1a7a38 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa1a7a80 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa1a7a60 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa1a7a48 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa183770 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa1a7b08 <col:50> '_Bool' false))
    (CompoundStmt 0xa1a7d78 <line:206:6, line:212:6>
      (CallExpr 0xa1a7b88 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a7b50 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0xa1a7b40 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0xa1a7c08 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa1a7bb8 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0xa1a7ba8 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa1a7bec <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1839f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa1a7d50 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a7c68 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0xa1a7d20 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0xa1a7ce8 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1a7cb0 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0xa1a7ca0 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0xa1a7d04 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1839f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1a7d34 <col:53> 'const _CharT' lvalue Var 0xa183650 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0xa1a7e90 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa1a7e80 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa1a7e68 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0xa1a7e30 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a7df8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CXXThisExpr 0xa1a7dd0 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0xa1a7de0 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0xa1a80c8 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0xa1a80b8 <line:222:4, line:223:46>
    (ConditionalOperator 0xa1a8098 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0xa1a7fc8 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0xa1a7fb0 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0xa1a7ef8 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0xa1a7ed8 <col:13, col:26> '<dependent type>'
              (MemberExpr 0xa1a7eb8 <col:13> '<bound member function type>' ->_M_is_leaked 0xa183800
                (CXXThisExpr 0xa1a7ea8 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0xa1a7f88 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0xa1a7f40 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
            (DeclRefExpr 0xa1a7f0c <col:31> 'const _Alloc' lvalue ParmVar 0xa183c00 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0xa1a7f24 <col:43> 'const _Alloc' lvalue ParmVar 0xa183c50 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0xa1a8010 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0xa1a7ff0 <col:14> '<bound member function type>' ->_M_refcopy 0xa184170
          (CXXThisExpr 0xa1a7fe0 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0xa1a8078 <col:29, col:46> '<dependent type>'
        (MemberExpr 0xa1a8040 <col:29> '<bound member function type>' ->_M_clone 0xa1842c0
          (CXXThisExpr 0xa1a8030 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa1a8060 <col:38> 'const _Alloc' lvalue ParmVar 0xa183c00 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0xa1a8470 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa1a8450 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0xa1a81d8 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa1a80dc <col:8> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa1a81a0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a8158 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0)
        (CXXThisExpr 0xa1a80f8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa1a8140 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa1a8120 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa1a8108 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa183770 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa1a81c8 <col:50> '_Bool' false))
    (CompoundStmt 0xa1a8438 <line:236:6, line:245:6>
      (NullStmt 0xa1a8200 <line:238:67>)
      (IfStmt 0xa1a8418 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1a8360 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0xa1a8320 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70)
          (CallExpr 0xa1a82e0 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0xa1a8230 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181750 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0xa1a8298 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0xa1a8260 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0xa1a8250 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0xa1a82c8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa1a82b0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa1a8308 <col:16> 'int' 0))
        (CompoundStmt 0xa1a8400 <line:241:3, line:244:3>
          (NullStmt 0xa1a8388 <line:242:63>)
          (CallExpr 0xa1a83e0 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0xa1a83a8 <col:5> '<bound member function type>' ->_M_destroy 0xa1840f0
              (CXXThisExpr 0xa1a8398 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0xa1a83c8 <col:16> 'const _Alloc' lvalue ParmVar 0xa183f50 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0xa1a8708 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0xa1a8688 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0xa1a8580 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa1a8484 <col:8> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa1a8548 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a8500 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0)
        (CXXThisExpr 0xa1a84a0 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa1a84e8 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa1a84c8 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa1a84b0 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa183770 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa1a8570 <col:50> '_Bool' false))
    (CallExpr 0xa1a8660 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0xa1a85c8 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0xa181be0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0xa1a8630 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0xa1a85f8 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa1a85e8 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0xa1a8648 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0xa1a86f8 <line:258:4, col:22>
    (CallExpr 0xa1a86d8 <col:11, col:22> '<dependent type>'
      (MemberExpr 0xa1a86b8 <col:11> '<bound member function type>' ->_M_refdata 0xa183b70
        (CXXThisExpr 0xa1a86a8 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0xa1a7170 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0xa1a8720 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0xa1844f0 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0xa1a8778 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0xa1844a0 '__dat' '_CharT *')
) (CompoundStmt 0xa1a87d0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa184710 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0xa1846f0 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0xa1846d8 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0xa1a8890 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa1a8880 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0xa1a8848 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0xa1a8824 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa184780
        (CXXThisExpr 0xa1a87f8 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0xa1a8968 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0xa1a8958 <col:9, col:39>
    (ParenExpr 0xa1a8940 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0xa1a8928 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa1a88d8 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0xa1a88b8 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa184780
            (CXXThisExpr 0xa1a88a8 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa1a890c <col:36> '_CharT *' lvalue ParmVar 0xa184870 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0xa1a8ab8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa1a8aa8 <col:9, col:59>
    (UnaryOperator 0xa1a8a90 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0xa1a8a78 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0xa1a8a60 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0xa1a8a18 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0xa1a8a00 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0xa1a89d0 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0xa1a8990 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0xa1a8a48 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa1a8a30 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0xa1a8b78 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0xa1a8b68 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0xa1a8b48 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa1a8b28 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa1a8ae8 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0xa1a8d00 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0xa1a8cf0 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0xa1a8cd0 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa1a8ca8 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a8c70 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1a8be8 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0xa1a8ba8 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0xa1a8c50 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1a8c18 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa1a8c08 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0xa1a8e48 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0xa1a8e28 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0xa1a8dc0 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0xa1a8da0 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a8d68 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0xa1a8d48 <col:7, col:14> '<dependent type>'
            (MemberExpr 0xa1a8d28 <col:7> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1a8d18 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0xa1a8e08 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0xa1a8de8 <col:4> '<bound member function type>' ->_M_leak_hard 0xa18b270
        (CXXThisExpr 0xa1a8dd8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0xa1a9070 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0xa1a9028 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1a8f20 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a8ee0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa1a8e5c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1a8ec0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a8e88 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0xa1a8e78 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa1a8ff8 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0xa1a8fe8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1a8fac <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa1a9018 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa1a8f98 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa1a8f7c </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0xa189b40 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0xa1a9060 <line:319:2, col:9>
    (DeclRefExpr 0xa1a9044 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189af0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0xa1a93a8 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0xa1a9388 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1a92a0 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a9260 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
      (CXXOperatorCallExpr 0xa1a9220 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a91e8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CallExpr 0xa1a90d0 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1a9098 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa1a9088 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0xa1a91d0 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0xa1a91a8 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0xa1a9170 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (CallExpr 0xa1a9138 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1a9100 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa1a90f0 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa1a9154 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189c50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0xa1a9244 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189c90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa1a9358 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0xa1a9348 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1a932c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017270 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa1a9378 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa1a9318 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa1a92fc </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0xa189ce0 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0xa1a96c8 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0xa1a9568 <line:333:2, col:54>
    0xa1a93d0 "const bool __testoff =
      (CXXOperatorCallExpr 0xa1a9540 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a9500 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
        (DeclRefExpr 0xa1a9404 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189e60 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa1a94d8 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa1a94a0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (CallExpr 0xa1a9468 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1a9430 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa1a9420 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0xa1a9484 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189e20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0xa1a96b8 <line:334:2, col:44>
    (ConditionalOperator 0xa1a9698 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0xa1a9688 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa1a9578 <col:9> 'const _Bool' lvalue Var 0xa1a93d0 '__testoff' 'const _Bool'))
      (DeclRefExpr 0xa1a9590 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189e60 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa1a9660 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a9628 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CallExpr 0xa1a95f0 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1a95b8 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0xa1a95a8 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa1a960c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa189e20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0xa1a9b10 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0xa1a9b00 <line:341:2, line:342:58>
    (ParenExpr 0xa1a9ae8 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0xa1a9ad0 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0xa1a9860 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0xa1a97c0 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0xa1a97d8 <col:32> 'const _CharT *' lvalue ParmVar 0xa189fa0 '__s' 'const _CharT *')
          (CallExpr 0xa1a9840 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0xa1a9800 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0xa1a9aa8 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0xa1a9940 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0xa1a9a68 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa1a9a30 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
            (CallExpr 0xa1a99a8 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0xa1a9968 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0xa1a9a10 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1a99d8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa1a99c8 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0xa1a9a8c <col:54> 'const _CharT *' lvalue ParmVar 0xa189fa0 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0xa1a9d80 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0xa1a9d60 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1a9ba0 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a9b58 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (DeclRefExpr 0xa1a9b24 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18a150 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa1a9b40 <col:13> 'int' 1))
    (CallExpr 0xa1a9c78 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1a9bf0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa1a9c30 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1a9c14 <col:25> '_CharT *' lvalue ParmVar 0xa18a0c0 '__d' '_CharT *'))
      (UnaryOperator 0xa1a9c60 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1a9c44 <col:31> 'const _CharT *' lvalue ParmVar 0xa18a110 '__s' 'const _CharT *')))
    (CallExpr 0xa1a9d38 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1a9cc8 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1a9cec <col:22> '_CharT *' lvalue ParmVar 0xa18a0c0 '__d' '_CharT *')
      (DeclRefExpr 0xa1a9d04 <col:27> 'const _CharT *' lvalue ParmVar 0xa18a110 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1a9d1c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18a150 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0xa1a9ff0 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0xa1a9fd0 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1a9e10 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a9dc8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (DeclRefExpr 0xa1a9d94 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18a320 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa1a9db0 <col:13> 'int' 1))
    (CallExpr 0xa1a9ee8 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1a9e60 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa1a9ea0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1a9e84 <col:25> '_CharT *' lvalue ParmVar 0xa18a290 '__d' '_CharT *'))
      (UnaryOperator 0xa1a9ed0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1a9eb4 <col:31> 'const _CharT *' lvalue ParmVar 0xa18a2e0 '__s' 'const _CharT *')))
    (CallExpr 0xa1a9fa8 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1a9f38 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1a9f5c <col:22> '_CharT *' lvalue ParmVar 0xa18a290 '__d' '_CharT *')
      (DeclRefExpr 0xa1a9f74 <col:27> 'const _CharT *' lvalue ParmVar 0xa18a2e0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1a9f8c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18a320 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0xa1aa248 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0xa1aa228 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1aa080 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa1aa038 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (DeclRefExpr 0xa1aa004 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18a440 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa1aa020 <col:13> 'int' 1))
    (CallExpr 0xa1aa140 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1aa0d0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa1aa110 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1aa0f4 <col:25> '_CharT *' lvalue ParmVar 0xa18a400 '__d' '_CharT *'))
      (DeclRefExpr 0xa1aa124 <col:30> '_CharT' lvalue ParmVar 0xa18a480 '__c' '_CharT'))
    (CallExpr 0xa1aa200 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1aa190 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1aa1b4 <col:24> '_CharT *' lvalue ParmVar 0xa18a400 '__d' '_CharT *')
      (DeclRefExpr 0xa1aa1cc <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18a440 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1aa1e4 <col:34> '_CharT' lvalue ParmVar 0xa18a480 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0xa1aa478 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0xa1aa450 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1aa2d8 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa1aa290 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0)
      (DeclRefExpr 0xa1aa25c <col:11> '_Iterator' lvalue ParmVar 0xa18a660 '__k1' '_Iterator')
      (DeclRefExpr 0xa1aa274 <col:19> '_Iterator' lvalue ParmVar 0xa18a6a0 '__k2' '_Iterator'))
    (BinaryOperator 0xa1aa360 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0xa1aa318 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1aa2fc <col:27> '_Iterator' lvalue ParmVar 0xa18a660 '__k1' '_Iterator'))
      (UnaryOperator 0xa1aa348 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1aa32c <col:35> '_CharT *' lvalue ParmVar 0xa18a620 '__p' '_CharT *')))
    (CallExpr 0xa1aa428 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1aa3a0 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0xa1aa3e0 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1aa3c4 <col:27> '_CharT *' lvalue ParmVar 0xa18a620 '__p' '_CharT *'))
      (UnaryOperator 0xa1aa410 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1aa3f4 <col:33> '_Iterator' lvalue ParmVar 0xa18a660 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0xa1aa5f8 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0xa1aa5d0 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0xa1aa490 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0xa18aed0 0xa18acf0 0xa18ab10 0xa18a950 0xa18a7c0)
    (DeclRefExpr 0xa1aa4d4 <col:23> '_CharT *' lvalue ParmVar 0xa18a810 '__p' '_CharT *')
    (CallExpr 0xa1aa540 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1aa508 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa1aa4ec <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa18a850 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0xa1aa5b0 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1aa578 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa1aa55c <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa18a890 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0xa1aa778 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0xa1aa750 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0xa1aa610 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0xa18aed0 0xa18acf0 0xa18ab10 0xa18a950 0xa18a7c0)
    (DeclRefExpr 0xa1aa654 <col:23> '_CharT *' lvalue ParmVar 0xa18a9d0 '__p' '_CharT *')
    (CallExpr 0xa1aa6c0 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1aa688 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa1aa66c <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa18aa10 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0xa1aa730 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1aa6f8 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa1aa6dc <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa18aa50 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0xa1aa890 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0xa1aa868 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0xa1aa78c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0xa1aa7a4 <col:17> '_CharT *' lvalue ParmVar 0xa18ab90 '__p' '_CharT *')
    (DeclRefExpr 0xa1aa7bc <col:22> '_CharT *' lvalue ParmVar 0xa18abe0 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0xa1aa840 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa1aa808 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0xa1aa7d4 <col:28> '_CharT *' lvalue ParmVar 0xa18ac30 '__k2' '_CharT *')
      (DeclRefExpr 0xa1aa7ec <col:35> '_CharT *' lvalue ParmVar 0xa18abe0 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0xa1aa9a8 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0xa1aa980 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0xa1aa8a4 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0xa1aa8bc <col:17> '_CharT *' lvalue ParmVar 0xa18ad70 '__p' '_CharT *')
    (DeclRefExpr 0xa1aa8d4 <col:22> 'const _CharT *' lvalue ParmVar 0xa18adc0 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0xa1aa958 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa1aa920 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0xa1aa8ec <col:28> 'const _CharT *' lvalue ParmVar 0xa18ae10 '__k2' 'const _CharT *')
      (DeclRefExpr 0xa1aa904 <col:35> 'const _CharT *' lvalue ParmVar 0xa18adc0 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0xa1aec08 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0xa1aaad0 <line:403:2, col:58>
    0xa1aa9e0 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0xa1aaab0 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0xa1aaa88 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa1aaa50 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (DeclRefExpr 0xa1aaa20 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18af50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1aaa38 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18af90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0xa1aebe8 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1ae868 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa1ae828 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (DeclRefExpr 0xa1aaae0 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa1aa9e0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0xa1ae808 <col:12, col:46> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))
    (ReturnStmt 0xa1ae950 <line:406:4, col:45>
      (ImplicitCastExpr 0xa1ae940 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa1ae920 <col:11, col:45> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int')))
    (IfStmt 0xa1aebc8 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa1aea70 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa1aea30 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0)
        (DeclRefExpr 0xa1ae960 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa1aa9e0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0xa1aea10 <col:17, col:51> 'const int':'const int' lvalue Var 0xa1ae080 '__min' 'const int':'const int'))
      (ReturnStmt 0xa1aeb60 <line:408:4, col:45>
        (ImplicitCastExpr 0xa1aeb50 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa1aeb30 <col:11, col:45> 'const int':'const int' lvalue Var 0xa1ae080 '__min' 'const int':'const int')))
      (ReturnStmt 0xa1aebb8 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0xa1aeb98 <col:11, col:18> 'int'
          (DeclRefExpr 0xa1aeb7c <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa1aa9e0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0xa1aeca0 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0xa1aec90 <col:9, col:35>
    (CallExpr 0xa1aec70 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1aec48 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0xa1aed28 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa1aecf0 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0xa1aecd0 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0xa1aecb4 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa18b2f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0xa1aed50 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0xa1aedb0 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0xa1a7188 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a71a8 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a71c8 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a71e8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a7208 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa1aeed0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0xa1aeeb0 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1aee10 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0xa1aedf0 <col:9, col:16> '<dependent type>'
        (MemberExpr 0xa1aedd0 <col:9> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1aedc0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa1aee90 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1aee58 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0xa1aee48 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1aef78 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa1aef68 <col:9, col:34>
    (CallExpr 0xa1aef48 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1aeef8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1aeee8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1aef2c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa18c250 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0xa1af020 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0xa1af010 <col:9, col:32>
    (CallExpr 0xa1aeff0 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1aefa0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1aef90 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1aefd4 <col:29> 'const _CharT *' lvalue ParmVar 0xa18c370 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0xa1af110 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0xa1af0b0 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1af048 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa1af038 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa1af080 <col:15> 'int' 1)
    (DeclRefExpr 0xa1af098 <col:18> '_CharT' lvalue ParmVar 0xa18c480 '__c' '_CharT'))
  (ReturnStmt 0xa1af100 <line:562:2, col:10>
    (UnaryOperator 0xa1af0e8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1af0d8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0xa1af220 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0xa1af158 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0xa1af138 <col:2> '<bound member function type>' ->_M_leak 0xa189a80
      (CXXThisExpr 0xa1af128 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa1af210 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0xa1af1f0 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa1af1d0 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa1af190 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0xa1af2e0 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0xa1af2d0 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa1af2b0 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa1af290 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa1af250 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0xa1af4b8 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0xa1af328 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0xa1af308 <col:2> '<bound member function type>' ->_M_leak 0xa189a80
      (CXXThisExpr 0xa1af2f8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa1af4a8 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0xa1af488 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa1af460 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa1af428 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1af3a0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa1af360 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0xa1af408 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1af3d0 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa1af3c0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0xa1af640 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0xa1af630 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0xa1af610 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa1af5e8 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa1af5b0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1af528 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa1af4e8 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0xa1af590 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1af558 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa1af548 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0xa1af6f8 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0xa1af6e8 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa1af6c8 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa1af6a8 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1af670 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa1af660 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa1af7b0 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0xa1af7a0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0xa1af780 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa1af760 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1af728 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0xa1af718 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0xa1af868 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0xa1af858 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa1af838 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa1af818 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1af7e0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa1af7d0 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa1af920 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0xa1af910 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa1af8f0 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa1af8d0 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1af898 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0xa1af888 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0xa1af9d0 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa1af9c0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa1af988 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa1af968 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa1af948 <col:16> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1af938 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0xa1afa80 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0xa1afa70 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa1afa38 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa1afa18 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa1af9f8 <col:16> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1af9e8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0xa1afb00 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0xa1afaf0 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0xa1afab8 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0xa1afbc0 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0xa1afb98 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1afb28 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1afb18 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1afb5c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18cdc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa1afb80 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0xa1afc70 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0xa1afc60 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa1afc28 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa1afc08 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa1afbe8 <col:16> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1afbd8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0xa1a7220 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0xa1afd78 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0xa1afd50 <col:9, col:37> '<dependent type>'
    (MemberExpr 0xa1afc98 <col:9> '<bound member function type>' ->_M_mutate 0xa18b1e0
      (CXXThisExpr 0xa1afc88 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa1afcb8 <col:19> 'int' 0)
    (CallExpr 0xa1afd18 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1afce0 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0xa1afcd0 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0xa1afd38 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0xa1afe90 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa1afe80 <col:9, col:32>
    (CXXOperatorCallExpr 0xa1afe58 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa1afe10 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (CallExpr 0xa1afdd8 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1afda0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa1afd90 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0xa1afdf8 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0xa1aff68 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0xa1afea8 <line:819:40>)
  (ReturnStmt 0xa1aff58 <line:820:2, col:24>
    (ArraySubscriptExpr 0xa1aff40 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0xa1aff08 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa1afec8 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa1aff24 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18d0d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0xa1b00a0 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0xa1aff80 <line:837:40>)
  (NullStmt 0xa1aff90 <line:839:42>)
  (CallExpr 0xa1affd0 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0xa1affb0 <col:2> '<bound member function type>' ->_M_leak 0xa189a80
      (CXXThisExpr 0xa1affa0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa1b0090 <line:841:2, col:24>
    (ArraySubscriptExpr 0xa1b0078 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0xa1b0040 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa1b0000 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa1b005c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18d200 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa1b0390 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa1b02c0 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b0180 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b0140 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0)
      (DeclRefExpr 0xa1b00c0 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18d310 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1b0120 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b00e8 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa1b00d8 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa1b0290 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa1b0280 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b0264 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa1b02b0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b0250 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b0220 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa1b0380 <line:859:2, col:22>
    (ArraySubscriptExpr 0xa1b0368 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0xa1b0330 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa1b02f0 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa1b034c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18d310 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0xa1b0668 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0xa1b0548 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b0450 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b0410 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0)
      (DeclRefExpr 0xa1b03a8 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18d3d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1b03f0 <col:13, col:18> '<dependent type>'
        (MemberExpr 0xa1b03d0 <col:13> '<bound member function type>' ->size 0xa18cb00
          (CXXThisExpr 0xa1b03c0 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa1b0518 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0xa1b0508 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b04ec <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa1b0538 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b04d8 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b04ac </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0xa1b0598 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0xa1b0578 <col:2> '<bound member function type>' ->_M_leak 0xa189a80
      (CXXThisExpr 0xa1b0568 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa1b0658 <line:913:2, col:22>
    (ArraySubscriptExpr 0xa1b0640 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0xa1b0608 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa1b05c8 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa1b0624 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa18d3d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1b0718 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0xa1b0708 <col:9, col:34>
    (CallExpr 0xa1b06e8 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b0698 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b0688 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b06cc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa18d4a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0xa1b07c0 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0xa1b07b0 <col:9, col:32>
    (CallExpr 0xa1b0790 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b0740 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b0730 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b0774 <col:29> 'const _CharT *' lvalue ParmVar 0xa18d580 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0xa1b0890 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0xa1b0838 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1b07e8 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa1b07d8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1b081c <col:18> '_CharT' lvalue ParmVar 0xa18d650 '__c' '_CharT'))
  (ReturnStmt 0xa1b0880 <line:944:2, col:10>
    (UnaryOperator 0xa1b0868 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1b0858 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0xa1b09e0 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0xa1b08a8 <line:998:32>)
  (ReturnStmt 0xa1b09d0 <line:999:2, col:51>
    (CallExpr 0xa1b09a8 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b08c8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b08b8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b08fc <col:22> 'const _CharT *' lvalue ParmVar 0xa194680 '__s' 'const _CharT *')
      (CallExpr 0xa1b0988 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b0938 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1b096c <col:47> 'const _CharT *' lvalue ParmVar 0xa194680 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa1b0b50 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0xa1b0b40 <col:11, col:69>
    (CallExpr 0xa1b0b10 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b0a08 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b09f8 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1b0a70 <col:32, col:40> '<dependent type>'
        (MemberExpr 0xa1b0a50 <col:32> '<bound member function type>' ->_M_iend 0xa189a00
          (CXXThisExpr 0xa1b0a40 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa1b0ac0 <col:43, col:51> '<dependent type>'
        (MemberExpr 0xa1b0aa0 <col:43> '<bound member function type>' ->_M_iend 0xa189a00
          (CXXThisExpr 0xa1b0a90 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa1b0adc <col:54> '_InputIterator' lvalue ParmVar 0xa194900 '__first' '_InputIterator')
      (DeclRefExpr 0xa1b0af4 <col:63> '_InputIterator' lvalue ParmVar 0xa194940 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0xa1b1130 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0xa1b0c88 <line:1044:2, col:42>
    0xa1b0b70 "const size_type __len =
      (CXXOperatorCallExpr 0xa1b0c60 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b0c28 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (IntegerLiteral 0xa1b0ba8 <col:26> 'int' 1)
        (CallExpr 0xa1b0c08 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b0bd0 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa1b0bc0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa1b0ec0 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0xa1b0e28 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa1b0d58 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b0d18 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
        (DeclRefExpr 0xa1b0c98 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1b0b70 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa1b0cf8 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b0cc0 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0xa1b0cb0 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa1b0e08 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b0dd0 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0xa1b0db0 <col:34, col:41> '<dependent type>'
            (MemberExpr 0xa1b0d90 <col:34> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1b0d80 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0xa1b0ea0 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b0e50 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b0e40 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b0e84 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1b0b70 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0xa1b1048 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1b0f08 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0xa1b1018 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0xa1b0f90 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa1b0f50 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0xa1b0ff8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b0fc0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1b0fb0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa1b102c <col:47> '_CharT' lvalue ParmVar 0xa194a80 '__c' '_CharT'))
  (CallExpr 0xa1b1110 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1b10c0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa1b10a0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa1b1080 <col:2> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1b1070 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa1b10f4 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1b0b70 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0xa1b1408 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0xa1b13f8 <line:1090:9, line:1092:34>
    (CallExpr 0xa1b13d0 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b1160 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b1150 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b1300 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b12c8 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1b11e8 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b11b0 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa1b1194 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa194c60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa1b12a0 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b1220 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa1b1204 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa194c60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa1b1254 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa194ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa1b126c <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0xa1b13a8 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b1340 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b1324 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa194c60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1b1374 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa194ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1b138c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa194ce0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0xa1b1558 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0xa1b1420 <line:1119:32>)
  (ReturnStmt 0xa1b1548 <line:1120:2, col:51>
    (CallExpr 0xa1b1520 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b1440 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b1430 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b1474 <col:22> 'const _CharT *' lvalue ParmVar 0xa194ee0 '__s' 'const _CharT *')
      (CallExpr 0xa1b1500 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b14b0 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1b14e4 <col:47> 'const _CharT *' lvalue ParmVar 0xa194ee0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0xa1b16b8 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0xa1b16a8 <col:9, col:67>
    (CallExpr 0xa1b1678 <col:16, col:67> '<dependent type>'
      (MemberExpr 0xa1b1580 <col:16> '<bound member function type>' ->_M_replace_aux 0xa19e420
        (CXXThisExpr 0xa1b1570 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0xa1b15c0 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa1b15a8 <col:41> 'int' 0))
      (CallExpr 0xa1b1628 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b15f0 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0xa1b15e0 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa1b1644 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa194fb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b165c <col:64> '_CharT' lvalue ParmVar 0xa194ff0 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa1b1828 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0xa1b1818 <col:11, col:71>
    (CallExpr 0xa1b17e8 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b16e0 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b16d0 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1b1748 <col:32, col:42> '<dependent type>'
        (MemberExpr 0xa1b1728 <col:32> '<bound member function type>' ->_M_ibegin 0xa189980
          (CXXThisExpr 0xa1b1718 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa1b1798 <col:45, col:53> '<dependent type>'
        (MemberExpr 0xa1b1778 <col:45> '<bound member function type>' ->_M_iend 0xa189a00
          (CXXThisExpr 0xa1b1768 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa1b17b4 <col:56> '_InputIterator' lvalue ParmVar 0xa195120 '__first' '_InputIterator')
      (DeclRefExpr 0xa1b17cc <col:65> '_InputIterator' lvalue ParmVar 0xa195160 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0xa1b1918 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0xa1b18e8 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1b1850 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1b1840 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1b1884 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa195280 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa1b189c <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa195280 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa1b18b4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1952c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1b18cc <col:38> '_CharT' lvalue ParmVar 0xa195300 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0xa1b1a08 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0xa1b19d8 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1b1940 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa1b1930 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1b1974 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa195490 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa1b198c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa195490 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa1b19a4 <col:35> '_InputIterator' lvalue ParmVar 0xa1954d0 '__beg' '_InputIterator')
    (DeclRefExpr 0xa1b19bc <col:42> '_InputIterator' lvalue ParmVar 0xa195510 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1b4230 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0xa1b4220 <col:9, col:70>
    (CallExpr 0xa1b41f0 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b40d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b1a20 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b410c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa195670 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b4124 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1956c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0xa1b4160 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa1b4148 <col:54> 'int' 0))
      (CallExpr 0xa1b41d0 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b4198 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b417c <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1956c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0xa1b4518 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0xa1b4508 <line:1243:9, line:1245:35>
    (CallExpr 0xa1b44e0 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b4258 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b4248 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b428c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1957d0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa1b4410 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b43d8 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1b42f8 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b42c0 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0xa1b42a4 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa195820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa1b43b0 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b4330 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa1b4314 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa195820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa1b4364 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa195860 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa1b437c <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0xa1b44b8 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b4450 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b4434 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa195820 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1b4484 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa195860 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1b449c <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1958a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0xa1b4680 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0xa1b4530 <line:1284:32>)
  (ReturnStmt 0xa1b4670 <line:1285:2, col:58>
    (CallExpr 0xa1b4648 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b4550 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b4540 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b4584 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa195bb0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b459c <col:29> 'const _CharT *' lvalue ParmVar 0xa195c00 '__s' 'const _CharT *')
      (CallExpr 0xa1b4628 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b45d8 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1b460c <col:54> 'const _CharT *' lvalue ParmVar 0xa195c00 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0xa1b4818 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0xa1b4808 <line:1306:9, line:1307:32>
    (CallExpr 0xa1b47d8 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0xa1b46a8 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0xa19e420
        (CXXThisExpr 0xa1b4698 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1b4740 <col:31, col:69> '<dependent type>'
        (MemberExpr 0xa1b46d8 <col:31> '<bound member function type>' ->_M_check 0xa189be0
          (CXXThisExpr 0xa1b46c8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1b46f8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa195d10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa1b4710 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0xa1b4788 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa1b4770 <col:20> 'int' 0))
      (DeclRefExpr 0xa1b47a4 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa195d50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b47bc <col:29> '_CharT' lvalue ParmVar 0xa195d90 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0xa1b4c38 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0xa1b4830 <line:1324:66>)
  (DeclStmt 0xa1b4950 <line:1325:2, col:43>
    0xa1b4850 "const size_type __pos =
      (CXXOperatorCallExpr 0xa1b4928 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b48f0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b4884 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa195ed0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b48d0 <col:32, col:42> '<dependent type>'
          (MemberExpr 0xa1b48b0 <col:32> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b48a0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0xa1b4a40 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0xa1b4970 <col:2> '<bound member function type>' ->_M_replace_aux 0xa19e420
      (CXXThisExpr 0xa1b4960 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1b4990 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1b4850 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa1b49c8 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa1b49b0 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0xa1b4a08 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa1b49f0 <col:48> 'int' 1))
    (DeclRefExpr 0xa1b4a24 <col:52> '_CharT' lvalue ParmVar 0xa195f10 '__c' '_CharT'))
  (CallExpr 0xa1b4af8 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1b4ac0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa1b4aa0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa1b4a80 <col:2> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1b4a70 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0xa1b4c28 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0xa1b4c08 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa1b4be0 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b4ba8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1b4b70 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa1b4b30 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1b4b8c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1b4850 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0xa1a7238 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0xa1a7250 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0xa1b4e58 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0xa1b4df8 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0xa1b4c70 <line:1348:2> '<bound member function type>' ->_M_mutate 0xa18b1e0
      (CXXThisExpr 0xa1b4c60 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0xa1b4d08 <col:12, col:49> '<dependent type>'
      (MemberExpr 0xa1b4ca0 <col:12> '<bound member function type>' ->_M_check 0xa189be0
        (CXXThisExpr 0xa1b4c90 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b4cc0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196020 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa1b4cd8 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0xa1b4d90 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0xa1b4d40 <col:5> '<bound member function type>' ->_M_limit 0xa189f00
        (CXXThisExpr 0xa1b4d30 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b4d60 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196020 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b4d78 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196060 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0xa1b4dd8 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa1b4dc0 <col:37> 'int' 0)))
  (ReturnStmt 0xa1b4e48 <line:1350:2, col:10>
    (UnaryOperator 0xa1b4e30 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1b4e20 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0xa1b5258 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0xa1b4e70 <line:1365:32>)
  (DeclStmt 0xa1b4f90 <line:1366:2, col:50>
    0xa1b4e90 "const size_type __pos =
      (CXXOperatorCallExpr 0xa1b4f68 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b4f30 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b4ec4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa196170 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b4f10 <col:39, col:49> '<dependent type>'
          (MemberExpr 0xa1b4ef0 <col:39> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b4ee0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0xa1b5068 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0xa1b4fb0 <col:2> '<bound member function type>' ->_M_mutate 0xa18b1e0
      (CXXThisExpr 0xa1b4fa0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1b4fd0 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1b4e90 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa1b5008 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa1b4ff0 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0xa1b5048 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa1b5030 <col:43> 'int' 0)))
  (CallExpr 0xa1b5118 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1b50e0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa1b50c0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa1b50a0 <col:2> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1b5090 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0xa1b5248 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0xa1b5228 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa1b5200 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b51c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1b5190 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa1b5150 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1b51ac <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1b4e90 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1b5418 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0xa1b5408 <col:9, col:71>
    (CallExpr 0xa1b53d8 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b5290 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b5280 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b52c4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1963d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b52dc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196410 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1b5348 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b5310 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b52f4 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa196460 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa1b53b8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b5380 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b5364 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa196460 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0xa1b5720 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0xa1b5710 <line:1425:9, line:1427:37>
    (CallExpr 0xa1b56e0 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b5440 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b5430 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b5474 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1965a0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b548c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1965e0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa1b5610 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b55d8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0)
        (CallExpr 0xa1b54f8 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b54c0 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0xa1b54a4 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa196630 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa1b55b0 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1b5530 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0xa1b5514 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa196630 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa1b5564 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196670 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa1b557c <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0xa1b56b8 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b5650 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b5634 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa196630 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1b5684 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196670 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1b569c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1966b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0xa1b58a8 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0xa1b5738 <line:1468:32>)
  (ReturnStmt 0xa1b5898 <line:1469:2, col:65>
    (CallExpr 0xa1b5868 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b5758 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b5748 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b578c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196a10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b57a4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196a50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b57bc <col:36> 'const _CharT *' lvalue ParmVar 0xa196aa0 '__s' 'const _CharT *')
      (CallExpr 0xa1b5848 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b57f8 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1b582c <col:61> 'const _CharT *' lvalue ParmVar 0xa196aa0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0xa1b5a90 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0xa1b5a80 <line:1490:9, line:1491:42>
    (CallExpr 0xa1b5a50 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0xa1b58d0 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0xa19e420
        (CXXThisExpr 0xa1b58c0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1b5970 <col:31, col:70> '<dependent type>'
        (MemberExpr 0xa1b5900 <col:31> '<bound member function type>' ->_M_check 0xa189be0
          (CXXThisExpr 0xa1b58f0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1b5920 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196be0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa1b5938 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0xa1b59f8 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0xa1b59a8 <col:10> '<bound member function type>' ->_M_limit 0xa189f00
          (CXXThisExpr 0xa1b5998 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1b59c8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196be0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1b59e0 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196c20 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa1b5a1c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa196c60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b5a34 <col:39> '_CharT' lvalue ParmVar 0xa196ca0 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1b5c40 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0xa1b5c30 <col:9, col:71>
    (CallExpr 0xa1b5c00 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b5ab8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b5aa8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b5aec <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa196de0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa1b5b04 <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa196e20 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0xa1b5b70 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b5b38 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b5b1c <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa196e70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa1b5be0 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b5ba8 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b5b8c <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa196e70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0xa1b5e78 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0xa1b5c58 <line:1528:27>)
  (ReturnStmt 0xa1b5e68 <line:1529:2, col:64>
    (CallExpr 0xa1b5e38 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b5c78 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b5c68 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b5d50 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b5d18 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b5cac <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa196fb0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b5cf8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa1b5cd8 <col:30> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b5cc8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1b5de0 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b5da8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b5d74 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa196ff0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b5d8c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa196fb0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa1b5e04 <col:56> 'const _CharT *' lvalue ParmVar 0xa197040 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1b5e1c <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa197080 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0xa1b6000 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0xa1b5e90 <line:1548:32>)
  (ReturnStmt 0xa1b5ff0 <line:1549:2, col:64>
    (CallExpr 0xa1b5fc0 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b5eb0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b5ea0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b5ee4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1971c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa1b5efc <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197200 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa1b5f14 <col:35> 'const _CharT *' lvalue ParmVar 0xa197250 '__s' 'const _CharT *')
      (CallExpr 0xa1b5fa0 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b5f50 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1b5f84 <col:60> 'const _CharT *' lvalue ParmVar 0xa197250 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0xa1b6220 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0xa1b6018 <line:1570:27>)
  (ReturnStmt 0xa1b6210 <line:1571:2, col:65>
    (CallExpr 0xa1b61e0 <col:9, col:65> '<dependent type>'
      (MemberExpr 0xa1b6038 <col:9> '<bound member function type>' ->_M_replace_aux 0xa19e420
        (CXXThisExpr 0xa1b6028 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b60f8 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b60c0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6058 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197390 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b60a0 <col:31, col:41> '<dependent type>'
          (MemberExpr 0xa1b6080 <col:31> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b6070 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1b6188 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6150 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b611c <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1973d0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b6134 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197390 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa1b61ac <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa197410 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b61c4 <col:62> '_CharT' lvalue ParmVar 0xa197450 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0xa1b6520 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0xa1b6238 <line:1594:29>)
  (NullStmt 0xa1b6248 <line:1595:46>)
  (DeclStmt 0xa1b63f0 <line:1596:4, col:72>
    0xa1b63c0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0xa1b6510 <line:1597:4, col:66>
    (CallExpr 0xa1b64e0 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa1b6410 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1b6450 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1975e0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa1b6468 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197620 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa1b6480 <col:43> '_InputIterator' lvalue ParmVar 0xa197660 '__k1' '_InputIterator')
      (DeclRefExpr 0xa1b6498 <col:49> '_InputIterator' lvalue ParmVar 0xa1976a0 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0xa1b64c8 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0xa1b67e8 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0xa1b6540 <line:1606:27>)
  (NullStmt 0xa1b6550 <line:1607:44>)
  (ReturnStmt 0xa1b67d8 <line:1608:2, line:1609:26>
    (CallExpr 0xa1b67a8 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b6570 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b6560 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b6648 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6610 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b65a4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197800 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b65f0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa1b65d0 <col:30> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b65c0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1b66d8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b66a0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b666c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197840 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b6684 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197800 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa1b66fc <line:1609:9> '_CharT *' lvalue ParmVar 0xa197890 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0xa1b6780 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6748 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6714 <col:15> '_CharT *' lvalue ParmVar 0xa1978e0 '__k2' '_CharT *')
        (DeclRefExpr 0xa1b672c <col:22> '_CharT *' lvalue ParmVar 0xa197890 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0xa1b6ab0 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0xa1b6808 <line:1617:27>)
  (NullStmt 0xa1b6818 <line:1618:44>)
  (ReturnStmt 0xa1b6aa0 <line:1619:2, line:1620:26>
    (CallExpr 0xa1b6a70 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b6838 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b6828 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b6910 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b68d8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b686c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197a20 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b68b8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa1b6898 <col:30> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b6888 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1b69a0 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6968 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6934 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197a60 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b694c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197a20 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa1b69c4 <line:1620:9> 'const _CharT *' lvalue ParmVar 0xa197ab0 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0xa1b6a48 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6a10 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b69dc <col:15> 'const _CharT *' lvalue ParmVar 0xa197b00 '__k2' 'const _CharT *')
        (DeclRefExpr 0xa1b69f4 <col:22> 'const _CharT *' lvalue ParmVar 0xa197ab0 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0xa1b6dd0 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0xa1b6ad0 <line:1627:27>)
  (NullStmt 0xa1b6ae0 <line:1628:44>)
  (ReturnStmt 0xa1b6dc0 <line:1629:2, line:1630:33>
    (CallExpr 0xa1b6d90 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b6b00 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b6af0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b6bd8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6ba0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6b34 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197c40 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b6b80 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa1b6b60 <col:30> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b6b50 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1b6c68 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6c30 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6bfc <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197c80 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b6c14 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197c40 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0xa1b6ce0 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b6ca8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b6c8c <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197cc0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0xa1b6d68 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6d30 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6cfc <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197d00 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b6d14 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197cc0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0xa1b70f0 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0xa1b6df0 <line:1638:27>)
  (NullStmt 0xa1b6e00 <line:1639:44>)
  (ReturnStmt 0xa1b70e0 <line:1640:2, line:1641:33>
    (CallExpr 0xa1b70b0 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b6e20 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b6e10 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b6ef8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6ec0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6e54 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197e40 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b6ea0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa1b6e80 <col:30> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b6e70 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1b6f88 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b6f50 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b6f1c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197e80 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b6f34 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197e40 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0xa1b7000 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b6fc8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b6fac <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197ec0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0xa1b7088 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b7050 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b701c <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197f00 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b7034 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa197ec0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa1b7308 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0xa1b72f8 <col:11, col:76>
    (CallExpr 0xa1b72c8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0xa1b7120 <col:18> '<bound member function type>' ->_M_replace_aux 0xa19e420
        (CXXThisExpr 0xa1b7110 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1b71e0 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b71a8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b7140 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1980d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1b7188 <col:40, col:50> '<dependent type>'
          (MemberExpr 0xa1b7168 <col:40> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1b7158 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa1b7270 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b7238 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1b7204 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa198110 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1b721c <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1980d0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa1b7294 <col:66> '_Integer' lvalue ParmVar 0xa198150 '__n' '_Integer')
      (DeclRefExpr 0xa1b72ac <col:71> '_Integer' lvalue ParmVar 0xa198190 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0xa1b7550 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0xa1b7440 <line:1690:11, col:80>
    0xa1b7410 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0xa1b7540 <line:1691:11, col:56>
    (CallExpr 0xa1b7510 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b7450 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0xa19f580 0xa19f450 0xa19f1c0 0xa19ef30)
      (DeclRefExpr 0xa1b7490 <col:31> '_InIterator' lvalue ParmVar 0xa19e6a0 '__beg' '_InIterator')
      (DeclRefExpr 0xa1b74a8 <col:38> '_InIterator' lvalue ParmVar 0xa19e6e0 '__end' '_InIterator')
      (DeclRefExpr 0xa1b74c0 <col:45> 'const _Alloc' lvalue ParmVar 0xa19e730 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0xa1b74f8 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0xa1b7620 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0xa1b7610 <line:1700:11, line:1701:19>
    (CallExpr 0xa1b75e8 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0xa1b7568 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0xa19ecb0 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0xa1b75a0 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa1b7580 <col:60> '_Integer' lvalue ParmVar 0xa19e930 '__beg' '_Integer'))
      (DeclRefExpr 0xa1b75b8 <line:1701:9> '_Integer' lvalue ParmVar 0xa19e970 '__end' '_Integer')
      (DeclRefExpr 0xa1b75d0 <col:16> 'const _Alloc' lvalue ParmVar 0xa19e9c0 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0xa1b76f8 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0xa1b76e8 <col:9, col:44>
    (CallExpr 0xa1b76c0 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b7638 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0xa19f580 0xa19f450 0xa19f1c0 0xa19ef30)
      (DeclRefExpr 0xa1b7678 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa19eb60 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1b7690 <col:36> '_CharT' lvalue ParmVar 0xa19eba0 '__c' '_CharT')
      (DeclRefExpr 0xa1b76a8 <col:41> 'const _Alloc' lvalue ParmVar 0xa19ebf0 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0xa1b7940 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0xa1b7840 <line:1711:4, col:69>
    0xa1b7810 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0xa1b7930 <line:1712:4, col:58>
    (CallExpr 0xa1b7900 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b7850 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0xa19eb20 0xa19e890)
      (DeclRefExpr 0xa1b7888 <col:28> '_InIterator' lvalue ParmVar 0xa19ed80 '__beg' '_InIterator')
      (DeclRefExpr 0xa1b78a0 <col:35> '_InIterator' lvalue ParmVar 0xa19edc0 '__end' '_InIterator')
      (DeclRefExpr 0xa1b78b8 <col:42> 'const _Alloc' lvalue ParmVar 0xa19ee10 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0xa1b78e8 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0xa1a7268 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0xa1b79d8 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa1b79c8 <col:9, col:24>
    (CallExpr 0xa1b79a8 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0xa1b7968 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0xa1b7a70 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0xa1b7a60 <col:9, col:24>
    (CallExpr 0xa1b7a40 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0xa1b7a00 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0xa1b7ac8 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa1b7ab8 <col:9, col:16>
    (MemberExpr 0xa1b7a98 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa184780
      (CXXThisExpr 0xa1b7a88 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa1a7280 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0xa1b7c58 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0xa1b7c48 <col:9, col:60>
    (CallExpr 0xa1b7c20 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b7af0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b7ae0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1b7b78 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b7b40 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b7b24 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa19fcb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1b7b94 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa19fcf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1b7c00 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b7bc8 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b7bac <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa19fcb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa1a7298 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0xa1b7dc0 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0xa1b7c70 <line:1826:32>)
  (ReturnStmt 0xa1b7db0 <line:1827:2, col:56>
    (CallExpr 0xa1b7d88 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b7c90 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b7c80 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b7cc4 <col:20> 'const _CharT *' lvalue ParmVar 0xa19fe10 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1b7cdc <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa19fe50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1b7d68 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b7d18 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1b7d4c <col:52> 'const _CharT *' lvalue ParmVar 0xa19fe10 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0xa1a72b0 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa1a72c8 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1b7f50 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0xa1b7f40 <col:9, col:61>
    (CallExpr 0xa1b7f18 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b7de8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b7dd8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1b7e70 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b7e38 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b7e1c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a00c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1b7e8c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0100 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1b7ef8 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b7ec0 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0xa1b7ea4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a00c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa1a72e0 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1b80b8 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0xa1b7f68 <line:1884:32>)
  (ReturnStmt 0xa1b80a8 <line:1885:2, col:57>
    (CallExpr 0xa1b8080 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1b7f88 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1b7f78 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1b7fbc <col:21> 'const _CharT *' lvalue ParmVar 0xa1a0340 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1b7fd4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0380 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1b8060 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1b8010 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1b8044 <col:53> 'const _CharT *' lvalue ParmVar 0xa1a0340 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0xa1a72f8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa1a7310 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0xa1bc098 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0xa1bc088 <col:9, col:69>
    (CallExpr 0xa1bc060 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bbf30 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bbf20 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1bbfb8 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bbf80 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bbf64 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a0570 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1bbfd4 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a05b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bc040 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc008 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bbfec <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a0570 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa1a7328 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0xa1bc200 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0xa1bc0b0 <line:1942:32>)
  (ReturnStmt 0xa1bc1f0 <line:1943:2, col:65>
    (CallExpr 0xa1bc1c8 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc0d0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc0c0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1bc104 <col:29> 'const _CharT *' lvalue ParmVar 0xa1a07f0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1bc11c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bc1a8 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc158 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1bc18c <col:61> 'const _CharT *' lvalue ParmVar 0xa1a07f0 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa1a7340 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0xa1bc2c8 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0xa1bc2b8 <col:9, col:37>
    (CallExpr 0xa1bc290 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc228 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc218 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1bc25c <col:27> '_CharT' lvalue ParmVar 0xa1a0900 '__c' '_CharT')
      (DeclRefExpr 0xa1bc274 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0940 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa1a7358 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1bc458 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0xa1bc448 <col:9, col:68>
    (CallExpr 0xa1bc420 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc2f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc2e0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1bc378 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc340 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bc324 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a0a20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1bc394 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0a60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bc400 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc3c8 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bc3ac <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a0a20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa1a7370 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1bc5c0 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0xa1bc470 <line:2003:32>)
  (ReturnStmt 0xa1bc5b0 <line:2004:2, col:64>
    (CallExpr 0xa1bc588 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc490 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc480 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1bc4c4 <col:28> 'const _CharT *' lvalue ParmVar 0xa1a0ca0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1bc4dc <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0ce0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bc568 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc518 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1bc54c <col:60> 'const _CharT *' lvalue ParmVar 0xa1a0ca0 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa1a7388 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1bc688 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0xa1bc678 <col:9, col:38>
    (CallExpr 0xa1bc650 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc5e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc5d8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1bc61c <col:28> '_CharT' lvalue ParmVar 0xa1a0db0 '__c' '_CharT')
      (DeclRefExpr 0xa1bc634 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0df0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa1a73a0 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0xa1bc818 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0xa1bc808 <col:9, col:73>
    (CallExpr 0xa1bc7e0 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc6b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc6a0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1bc738 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc700 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bc6e4 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a0ed0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1bc754 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a0f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bc7c0 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc788 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bc76c <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a0ed0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa1a73b8 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0xa1bc980 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0xa1bc830 <line:2065:32>)
  (ReturnStmt 0xa1bc970 <line:2066:2, col:69>
    (CallExpr 0xa1bc948 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc850 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc840 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1bc884 <col:33> 'const _CharT *' lvalue ParmVar 0xa1a1150 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1bc89c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a1190 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bc928 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc8d8 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1bc90c <col:65> 'const _CharT *' lvalue ParmVar 0xa1a1150 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa1a73d0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa1a73e8 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1bcb10 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0xa1bcb00 <col:9, col:72>
    (CallExpr 0xa1bcad8 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bc9a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bc998 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1bca30 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bc9f8 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bc9dc <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a1380 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa1bca4c <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a13c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bcab8 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bca80 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bca64 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a1380 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa1a7400 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1bcc78 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0xa1bcb28 <line:2124:32>)
  (ReturnStmt 0xa1bcc68 <line:2125:2, col:68>
    (CallExpr 0xa1bcc40 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1bcb48 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa1bcb38 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1bcb7c <col:32> 'const _CharT *' lvalue ParmVar 0xa1a1600 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1bcb94 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a1640 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1bcc20 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bcbd0 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1bcc04 <col:64> 'const _CharT *' lvalue ParmVar 0xa1a1600 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa1a7418 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0xa1a7430 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0xa1a7448 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1bcdb0 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0xa1bcda0 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0xa1bcd78 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0xa1bcca8 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa1bcc98 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa1bcd38 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0xa1bccd0 <col:8> '<bound member function type>' ->_M_check 0xa189be0
          (CXXThisExpr 0xa1bccc0 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1bccf0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a1820 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa1bcd08 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0xa1bcd5c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1a1860 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0xa1bd358 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0xa1bce70 <line:2174:2, col:39>
    0xa1bcdd0 "const size_type __size =
      (CallExpr 0xa1bce50 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bce18 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa1bce08 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa1bcf38 <line:2175:2, col:40>
    0xa1bce90 "const size_type __osize =
      (CallExpr 0xa1bcf18 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bcee0 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bcec4 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a1980 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa1bd030 <line:2176:2, col:51>
    0xa1bcf50 "const size_type __len =
      (CallExpr 0xa1bd008 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1bcfa0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
        (DeclRefExpr 0xa1bcfd8 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1bcdd0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1bcff0 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1bce90 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1bd200 <line:2178:2, col:64>
    0xa1bd050 "int __r =
      (CallExpr 0xa1bd1d8 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bd0a8 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0xa1bd130 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0xa1bd0f0 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0xa1bd1a0 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1bd168 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0xa1bd14c <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1a1980 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa1bd1bc <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1bcf50 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1bd300 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0xa1bd248 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1bd238 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa1bd228 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1bd210 <col:7> 'int' lvalue Var 0xa1bd050 '__r' 'int'))))
    (BinaryOperator 0xa1bd2e8 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0xa1bd25c <col:4> 'int' lvalue Var 0xa1bd050 '__r' 'int')
      (CallExpr 0xa1bd2c0 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0xa1bd274 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0xa18b030 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1bd28c <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1bcdd0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1bd2a4 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1bce90 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1bd348 <line:2181:2, col:9>
    (ImplicitCastExpr 0xa1bd338 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1bd31c <col:9> 'int' lvalue Var 0xa1bd050 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1bdcf0 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0xa1bdc30 <line:2308:7, col:57>
    0xa1bdbc0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0xa1bdc10 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa1bdbf4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1bd740 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa1bdca8 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1bdc58 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1bdc40 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1bdbc0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa1bdc8c <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1bd8f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa1bdce0 <line:2310:7, col:14>
    (DeclRefExpr 0xa1bdcc8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1bdbc0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1befe0 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0xa1bef20 <line:2345:7, col:57>
    0xa1beeb0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0xa1bef00 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa1beee4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1beb70 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa1bef98 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1bef48 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1bef30 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1beeb0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa1bef7c <col:20> 'const _CharT *' lvalue ParmVar 0xa1bebe0 '__rhs' 'const _CharT *'))
  (ReturnStmt 0xa1befd0 <line:2347:7, col:14>
    (DeclRefExpr 0xa1befb8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1beeb0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0xa1bf978 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0xa1bf6e0 <line:2360:7, col:66>
    0xa1bf6b0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1bf7d0 <line:2361:7, col:61>
    0xa1bf7a0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa1bf860 <line:2362:7, col:33>
    0xa1bf7f0 "__string_type __str =
      (ParenListExpr 0xa1bf840 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa1bf824 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1bf3a0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa1bf928 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1bf888 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1bf870 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1bf7f0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0xa1bf8f0 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0xa1bf8d8 <col:32> 'int' 1))
    (DeclRefExpr 0xa1bf90c <col:36> '_CharT' lvalue ParmVar 0xa1bf3e0 '__rhs' '_CharT'))
  (ReturnStmt 0xa1bf968 <line:2364:7, col:14>
    (DeclRefExpr 0xa1bf94c <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1bf7f0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c0038 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0xa1c0028 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c0000 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1bffb0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1bfed0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (CallExpr 0xa1bff78 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1bff28 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1bff00 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1bfc20 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1bff5c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1bfdd0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa1bff98 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0xa1c0d98 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0xa1c0d88 <line:2435:7, line:2437:24>
    (ParenExpr 0xa1c0d70 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0xa1c0d58 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa1c0ab0 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0xa1c0a60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c0950 0xa1bfed0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
          (CallExpr 0xa1c09d0 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1c0998 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0xa1c0980 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0xa1c05f0 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0xa1c0a40 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1c0a08 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0xa1c09ec <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0xa1c0840 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0xa1c0d40 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0xa1c0d18 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa1c0ba0 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0xa1c0c18 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1c0be0 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0xa1c0bc4 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0xa1c05f0 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0xa1c0c88 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1c0c50 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0xa1c0c34 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0xa1c0840 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0xa1c0cf8 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1c0cc0 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0xa1c0ca4 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0xa1c05f0 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c12f0 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0xa1c12e0 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c12b8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c1260 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c1190 0xa1c0950 0xa1bfed0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (CallExpr 0xa1c1228 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c11d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c11c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c1090 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c120c <col:28> 'const _CharT *' lvalue ParmVar 0xa1c0ee0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c1248 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1c1860 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0xa1c1850 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c1828 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c17d0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c1700 0xa1c1190 0xa1c0950 0xa1bfed0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
      (CallExpr 0xa1c1798 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c1748 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c1730 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c1590 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c177c <col:28> 'const _CharT *' lvalue ParmVar 0xa1c1600 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c17b8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c1eb0 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0xa1c1ea0 <col:7, col:30>
    (UnaryOperator 0xa1c1e88 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa1c1e70 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa1c1e48 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa1c1df0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c1700 0xa1c1190 0xa1c0950 0xa1bfed0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
          (DeclRefExpr 0xa1c1dc0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c1b00 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0xa1c1dd8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c1cb0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c23b0 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0xa1c23a0 <col:7, col:30>
    (UnaryOperator 0xa1c2388 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa1c2370 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa1c2348 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa1c22f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c1700 0xa1c1190 0xa1c0950 0xa1bfed0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
          (DeclRefExpr 0xa1c22c0 <col:16> 'const _CharT *' lvalue ParmVar 0xa1c2000 '__lhs' 'const _CharT *')
          (DeclRefExpr 0xa1c22d8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c21b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1c28c0 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0xa1c28b0 <col:7, col:30>
    (UnaryOperator 0xa1c2898 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa1c2880 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa1c2858 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa1c2800 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c1700 0xa1c1190 0xa1c0950 0xa1bfed0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0)
          (DeclRefExpr 0xa1c27d0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c2650 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0xa1c27e8 <col:25> 'const _CharT *' lvalue ParmVar 0xa1c26c0 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c2f38 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0xa1c2f28 <col:7, col:37>
    (CXXOperatorCallExpr 0xa1c2f00 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c2ec0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c2df0 0xa04c0e0 0xa0658d0 0xa067fa0)
      (CallExpr 0xa1c2e88 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c2e38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c2e20 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c2b60 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c2e6c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c2d10 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa1c2ea8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1c3470 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0xa1c3460 <col:7, col:37>
    (CXXOperatorCallExpr 0xa1c3438 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c33f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c3320 0xa1c2df0 0xa04c0e0 0xa0658d0 0xa067fa0)
      (CallExpr 0xa1c33b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c3368 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c3350 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c31d0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c339c <col:28> 'const _CharT *' lvalue ParmVar 0xa1c3240 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c33d8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c3998 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0xa1c3988 <col:7, col:37>
    (CXXOperatorCallExpr 0xa1c3960 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c3920 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920)
      (CallExpr 0xa1c38e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c3898 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c3880 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c3770 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c38cc <col:28> 'const _CharT *' lvalue ParmVar 0xa1c35c0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c3908 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c4030 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0xa1c4020 <col:7, col:37>
    (CXXOperatorCallExpr 0xa1c3ff8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c3fb8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c3ec0 0xa04ce30 0xa066190 0xa068920)
      (CallExpr 0xa1c3f80 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c3f30 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c3ef0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c3c30 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c3f64 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c3de0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa1c3fa0 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1c4570 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0xa1c4560 <col:7, col:37>
    (CXXOperatorCallExpr 0xa1c4538 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c44f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c4420 0xa1c3ec0 0xa04ce30 0xa066190 0xa068920)
      (CallExpr 0xa1c44b8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c4468 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c4450 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c42d0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c449c <col:28> 'const _CharT *' lvalue ParmVar 0xa1c4340 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c44d8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c4aa0 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0xa1c4a90 <col:7, col:37>
    (CXXOperatorCallExpr 0xa1c4a68 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c4a20 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c3850 0xa1c3320 0xa1c2df0 0xa04c0e0 0xa0658d0 0xa067fa0)
      (CallExpr 0xa1c49e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c4998 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c4980 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c4870 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c49cc <col:28> 'const _CharT *' lvalue ParmVar 0xa1c46c0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c4a08 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c5118 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0xa1c5108 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c50e0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c50a0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c4fd0 0xa04d350 0xa066580 0xa068d70)
      (CallExpr 0xa1c5068 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c5018 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c5000 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c4d40 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c504c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c4ef0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa1c5088 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1c5650 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0xa1c5640 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c5618 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c55d0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c5500 0xa1c4fd0 0xa04d350 0xa066580 0xa068d70)
      (CallExpr 0xa1c5598 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c5548 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c5530 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c53b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c557c <col:28> 'const _CharT *' lvalue ParmVar 0xa1c5420 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c55b8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c5b78 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0xa1c5b68 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c5b40 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c5b00 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0)
      (CallExpr 0xa1c5ac8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c5a78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c5a60 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c5950 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c5aac <col:28> 'const _CharT *' lvalue ParmVar 0xa1c57a0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c5ae8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c61e8 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0xa1c61d8 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c61b0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c6170 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c60a0 0xa0518c0 0xa0669a0 0xa0691f0)
      (CallExpr 0xa1c6138 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c60e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c60d0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c5e10 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c611c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c5fc0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa1c6158 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa1c6720 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0xa1c6710 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c66e8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c66a0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c65d0 0xa1c60a0 0xa0518c0 0xa0669a0 0xa0691f0)
      (CallExpr 0xa1c6668 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c6618 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c6600 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c6480 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c664c <col:28> 'const _CharT *' lvalue ParmVar 0xa1c64f0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c6688 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c6c50 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0xa1c6c40 <col:7, col:38>
    (CXXOperatorCallExpr 0xa1c6c18 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c6bd0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c5a30 0xa1c5500 0xa1c4fd0 0xa04d350 0xa066580 0xa068d70)
      (CallExpr 0xa1c6b98 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c6b48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c6b30 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c6a20 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1c6b7c <col:28> 'const _CharT *' lvalue ParmVar 0xa1c6870 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa1c6bb8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1c7278 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0xa1c7258 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1c7208 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1c71f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c6f10 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa1c723c <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c70c0 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1c8a78 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0xa1c8a68 <line:2697:7, col:63>
    (CallExpr 0xa1c8a40 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c8910 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa103440)
      (DeclRefExpr 0xa1c8944 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1c85e0 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0xa1c89b0 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c8978 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c895c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c8790 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa1c8a20 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c89e8 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c89cc <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c8790 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1c9888 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0xa1c9878 <col:7, col:51>
    (CallExpr 0xa1c9850 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c9760 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa1c9730 0xa1c9100)
      (DeclRefExpr 0xa1c9798 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1c9450 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0xa1c97b0 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1c9600 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0xa1c9830 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1c97e0 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0xa1c97c8 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1c9450 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0xa1c9818 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0xa1cb680 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0xa1cb650 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0xa1cb628 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa1cb5f0 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (ParenExpr 0xa1cb5c0 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0xa1cb5a8 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0xa1cb570 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa1cb548 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa1cb510 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (DeclRefExpr 0xa1cb4d8 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0xa1cb4f8 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0xa1cb590 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0xa1cb5d8 <col:72> 'int' 1)))
  (IntegerLiteral 0xa1cb668 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0xa1cbad0 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0xa1ce270 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0xa1cd2f0 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0xa1cd238 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1cd158 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cd100 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
        (DeclRefExpr 0xa1cd0cc <col:6> '_InIterator' lvalue ParmVar 0xa1cce20 '__beg' '_InIterator')
        (DeclRefExpr 0xa1cd0e4 <col:15> '_InIterator' lvalue ParmVar 0xa1cce60 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa1cd210 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cd1b8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
        (DeclRefExpr 0xa1cd17c <col:24> 'const _Alloc' lvalue ParmVar 0xa1cced0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa1cd1a0 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0xa1cd2e0 <line:84:4, col:37>
      (CallExpr 0xa1cd2c0 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1cd288 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0xa1cd268 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0xa1cd250 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa18b2f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0xa1cd3c8 <line:87:2, col:19>
    0xa1cd390 "_CharT __buf[128]")
  (DeclStmt 0xa1cd430 <line:88:2, col:21>
    0xa1cd3e0 "size_type __len =
      (IntegerLiteral 0xa1cd418 <col:20> 'int' 0)")
  (WhileStmt 0xa1cd718 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0xa1cd5f8 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1cd4c8 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cd470 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
        (DeclRefExpr 0xa1cd440 <col:9> '_InIterator' lvalue ParmVar 0xa1cce20 '__beg' '_InIterator')
        (DeclRefExpr 0xa1cd458 <col:18> '_InIterator' lvalue ParmVar 0xa1cce60 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa1cd5d0 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cd588 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (DeclRefExpr 0xa1cd4ec <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa1cd570 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0xa1cd538 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0xa1cd520 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0xa1cd504 <col:42> '_CharT [128]' lvalue Var 0xa1cd390 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0xa1cd558 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0xa1cd700 <line:90:4, line:93:4>
      (BinaryOperator 0xa1cd6b8 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0xa1cd670 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa1cd610 <col:6> '_CharT [128]' lvalue Var 0xa1cd390 '__buf' '_CharT [128]')
          (UnaryOperator 0xa1cd658 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa1cd628 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0xa1cd6a0 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1cd684 <col:24> '_InIterator' lvalue ParmVar 0xa1cce20 '__beg' '_InIterator')))
      (UnaryOperator 0xa1cd6e8 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1cd6d0 <col:8> '_InIterator' lvalue ParmVar 0xa1cce20 '__beg' '_InIterator'))))
  (DeclStmt 0xa1cd858 <line:94:2, col:55>
    0xa1cd740 "std::basic_string::_Rep *__r =
      (CallExpr 0xa1cd830 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa1cd798 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1cd7bc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa1cd7f8 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1cd7e0 <col:47> 'int' 0))
        (DeclRefExpr 0xa1cd814 <col:51> 'const _Alloc' lvalue ParmVar 0xa1cced0 '__a' 'const _Alloc &'))")
  (CallExpr 0xa1cd920 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0xa1cd868 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0xa1cd8d0 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1cd898 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa1cd880 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0xa1cd8ec <col:29> '_CharT [128]' lvalue Var 0xa1cd390 '__buf' '_CharT [128]')
    (DeclRefExpr 0xa1cd904 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa1ce068 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1cd948 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa1ce050 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0xa1ce038 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1cd9e0 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa1cd988 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
          (DeclRefExpr 0xa1cd958 <col:13> '_InIterator' lvalue ParmVar 0xa1cce20 '__beg' '_InIterator')
          (DeclRefExpr 0xa1cd970 <col:22> '_InIterator' lvalue ParmVar 0xa1cce60 '__end' '_InIterator'))
        (CompoundStmt 0xa1ce018 <line:99:8, line:110:8>
          (IfStmt 0xa1cdeb0 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa1cdac8 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa1cda70 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
              (DeclRefExpr 0xa1cda04 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0xa1cda38 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0xa1cda1c <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0xa1cde90 <line:101:5, line:107:5>
              (DeclStmt 0xa1cdc78 <line:103:7, col:63>
                0xa1cdb00 "std::basic_string::_Rep *__another =
                  (CallExpr 0xa1cdc50 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa1cdb58 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0xa1cdbf8 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0xa1cdbb0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
                      (DeclRefExpr 0xa1cdb7c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0xa1cdb98 <col:49> 'int' 1))
                    (DeclRefExpr 0xa1cdc1c <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0xa1cdc34 <col:59> 'const _Alloc' lvalue ParmVar 0xa1cced0 '__a' 'const _Alloc &'))")
              (CallExpr 0xa1cdd98 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0xa1cdc88 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0xa1cdcf0 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1cdcb8 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1cdca0 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cdb00 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0xa1cdd60 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1cdd28 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1cdd0c <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0xa1cdd7c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0xa1cde28 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1cddd8 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1cddc0 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0xa1cde0c <col:23> 'const _Alloc' lvalue ParmVar 0xa1cced0 '__a' 'const _Alloc &'))
              (BinaryOperator 0xa1cde78 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa1cde48 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0xa1cde60 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cdb00 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0xa1cdfd0 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0xa1cdf88 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0xa1cdf20 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1cdee8 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1cdecc <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0xa1cdf70 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0xa1cdf3c <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0xa1cdfb8 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa1cdf9c <col:33> '_InIterator' lvalue ParmVar 0xa1cce20 '__beg' '_InIterator')))
          (UnaryOperator 0xa1ce000 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa1cdfe8 <col:5> '_InIterator' lvalue ParmVar 0xa1cce20 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0xa1ce148 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1ce088 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa1ce130 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0xa1ce100 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1ce0b0 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa1ce098 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0xa1ce0e4 <col:22> 'const _Alloc' lvalue ParmVar 0xa1cced0 '__a' 'const _Alloc &'))
      (NullStmt 0xa1ce120 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0xa1ce1d0 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1ce180 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0xa1ce164 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa1ce1b4 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1cd3e0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa1ce260 <line:118:2, col:25>
    (CallExpr 0xa1ce240 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1ce208 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa1ce1f0 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cd740 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0xa1cf3a8 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0xa1ceb40 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0xa1cea88 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1ce9a8 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ce950 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
        (DeclRefExpr 0xa1ce91c <col:6> '_InIterator' lvalue ParmVar 0xa1ce670 '__beg' '_InIterator')
        (DeclRefExpr 0xa1ce934 <col:15> '_InIterator' lvalue ParmVar 0xa1ce6b0 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa1cea60 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cea08 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
        (DeclRefExpr 0xa1ce9cc <col:24> 'const _Alloc' lvalue ParmVar 0xa1ce720 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa1ce9f0 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0xa1ceb30 <line:130:4, col:37>
      (CallExpr 0xa1ceb10 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1cead8 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0xa1ceab8 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0xa1ceaa0 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa18b2f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0xa1cede8 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0xa1ceca0 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0xa1cebd0 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ceb80 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0xa037310 0xa037510)
        (DeclRefExpr 0xa1cebb8 <col:35> '_InIterator' lvalue ParmVar 0xa1ce670 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0xa1cec78 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cec20 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
        (DeclRefExpr 0xa1cebf0 <col:45> '_InIterator' lvalue ParmVar 0xa1ce670 '__beg' '_InIterator')
        (DeclRefExpr 0xa1cec08 <col:54> '_InIterator' lvalue ParmVar 0xa1ce6b0 '__end' '_InIterator')))
    (CallExpr 0xa1cedb8 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0xa1ceda8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1ced8c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017000 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa1cedd8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1ced78 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0xa1ced30 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0xa1cef18 <line:136:2, line:137:22>
    0xa1cee10 "const size_type __dnew =
      (CXXStaticCastExpr 0xa1cef00 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0xa1ceed0 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa1cee68 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
          (DeclRefExpr 0xa1cee9c <col:64> '_InIterator' lvalue ParmVar 0xa1ce670 '__beg' '_InIterator')
          (DeclRefExpr 0xa1ceeb4 <line:137:15> '_InIterator' lvalue ParmVar 0xa1ce6b0 '__end' '_InIterator')))")
  (DeclStmt 0xa1cf058 <line:139:2, col:56>
    0xa1cef40 "std::basic_string::_Rep *__r =
      (CallExpr 0xa1cf030 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa1cef98 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1cefbc <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cee10 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa1ceff8 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1cefe0 <col:48> 'int' 0))
        (DeclRefExpr 0xa1cf014 <col:52> 'const _Alloc' lvalue ParmVar 0xa1ce720 '__a' 'const _Alloc &'))")
  (IfStmt 0xa1cf1a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1cf068 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa1cf188 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0xa1cf160 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cf078 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0xa18a7c0 0xa18a950 0xa18ab10 0xa18acf0 0xa18aed0)
        (CallExpr 0xa1cf110 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1cf0d8 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0xa1cf0bc <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cef40 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0xa1cf12c <col:39> '_InIterator' lvalue ParmVar 0xa1ce670 '__beg' '_InIterator')
        (DeclRefExpr 0xa1cf144 <col:46> '_InIterator' lvalue ParmVar 0xa1ce6b0 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0xa1cf280 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1cf1c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa1cf268 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0xa1cf238 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1cf1e8 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa1cf1d0 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cef40 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0xa1cf21c <col:22> 'const _Alloc' lvalue ParmVar 0xa1ce720 '__a' 'const _Alloc &'))
      (NullStmt 0xa1cf258 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0xa1cf308 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1cf2b8 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0xa1cf29c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cef40 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa1cf2ec <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cee10 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa1cf398 <line:148:2, col:25>
    (CallExpr 0xa1cf378 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1cf340 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa1cf328 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cef40 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0xa1cfef8 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0xa1cfb80 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0xa1cfac8 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1cf9e8 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cf990 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
        (DeclRefExpr 0xa1cf95c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1cf750 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0xa1cf978 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0xa1cfaa0 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cfa48 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
        (DeclRefExpr 0xa1cfa0c <col:23> 'const _Alloc' lvalue ParmVar 0xa1cf800 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa1cfa30 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0xa1cfb70 <line:158:2, col:35>
      (CallExpr 0xa1cfb50 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1cfb18 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0xa1cfaf8 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0xa1cfae0 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa18b2f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0xa1cfcc8 <line:161:7, col:58>
    0xa1cfbb0 "std::basic_string::_Rep *__r =
      (CallExpr 0xa1cfca0 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa1cfc08 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1cfc2c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1cf750 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa1cfc68 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1cfc50 <col:50> 'int' 0))
        (DeclRefExpr 0xa1cfc84 <col:54> 'const _Alloc' lvalue ParmVar 0xa1cf800 '__a' 'const _Alloc &'))")
  (IfStmt 0xa1cfdd0 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0xa1cfcd8 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1cf750 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1cfda8 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0xa1cfcf0 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa18a540 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0xa1cfd58 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1cfd20 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa1cfd08 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cfbb0 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0xa1cfd74 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1cf750 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1cfd8c <col:36> '_CharT' lvalue ParmVar 0xa1cf790 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0xa1cfe58 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1cfe08 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa1cfdec <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cfbb0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa1cfe3c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1cf750 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa1cfee8 <line:166:7, col:30>
    (CallExpr 0xa1cfec8 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1cfe90 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa1cfe78 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa1cfbb0 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0xa1d06d8 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa1d0598 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0xa1d0578 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d0540 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d0524 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d0430 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0xa1d0648 <col:43, col:71> '_Alloc'
    (CallExpr 0xa1d0628 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d05f0 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d05d8 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d0430 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0xa1d06b8 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1d0680 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0xa1d0664 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d0430 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0xa1d0750 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa1d0718 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0xa1d06fc <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d0430 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0xa1d07b0 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0xa1d0e80 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0xa1d0de8 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa19ef30 0xa1cd060 0xa1ce8b0 0xa1cf8c0)
  (CXXUnresolvedConstructExpr 0xa1d0e30 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0xa1d0e50 <col:45, col:52> '_CharT')
  (DeclRefExpr 0xa1d0e68 <col:55> 'const _Alloc' lvalue ParmVar 0xa1d0cc0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa1d0ea8 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0xa1d0cc0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa1d0f00 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0xa1a7188 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0xa1d19e0 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0xa1d1580 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0xa19ef30 0xa1cd060 0xa1ce8b0 0xa1cf8c0)
  (CXXOperatorCallExpr 0xa1d1788 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0xa1d1740 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
    (CallExpr 0xa1d1610 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d15d8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d15c0 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d13f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0xa1d1718 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d1648 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d162c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d13f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa1d167c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1430 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa1d16e0 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0xa1d1998 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0xa1d1950 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
    (CXXOperatorCallExpr 0xa1d1910 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa1d18c8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
      (CallExpr 0xa1d1800 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d17c8 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa1d17ac <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d13f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa1d18a0 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d1838 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa1d181c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d13f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1d186c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1430 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1d1884 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1470 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0xa1d1934 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1430 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0xa1d19c8 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0xa1d1a10 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0xa1d1a70 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0xa1d25a0 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0xa1d2190 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0xa19ef30 0xa1cd060 0xa1ce8b0 0xa1cf8c0)
  (CXXOperatorCallExpr 0xa1d2350 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0xa1d2308 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
    (CallExpr 0xa1d2220 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d21e8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d21d0 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d1f60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0xa1d22e0 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d2258 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d223c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d1f60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa1d228c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1fa0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa1d22a4 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0xa1d2560 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0xa1d2518 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
    (CXXOperatorCallExpr 0xa1d24d8 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa1d2490 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
      (CallExpr 0xa1d23c8 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d2390 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa1d2374 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d1f60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa1d2468 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d2400 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa1d23e4 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d1f60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1d2434 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1fa0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1d244c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1fe0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0xa1d24fc <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d1fa0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0xa1d2584 <col:20> 'const _Alloc' lvalue ParmVar 0xa1d2050 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa1d25c8 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0xa1d2050 '__a' 'const _Alloc &')
) (CompoundStmt 0xa1d2620 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a71a8 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0xa1d2e30 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0xa1d2d20 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa19ef30 0xa1cd060 0xa1ce8b0 0xa1cf8c0)
  (DeclRefExpr 0xa1d2d60 <col:32> 'const _CharT *' lvalue ParmVar 0xa1d2b30 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0xa1d2df0 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0xa1d2da8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
    (DeclRefExpr 0xa1d2d78 <col:37> 'const _CharT *' lvalue ParmVar 0xa1d2b30 '__s' 'const _CharT *')
    (DeclRefExpr 0xa1d2d90 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d2b70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0xa1d2e14 <col:48> 'const _Alloc' lvalue ParmVar 0xa1d2be0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa1d2e58 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0xa1d2be0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa1d2eb0 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a71c8 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0xa1d37b8 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0xa1d3558 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0xa19ef30 0xa1cd060 0xa1ce8b0 0xa1cf8c0)
  (DeclRefExpr 0xa1d3598 <col:32> 'const _CharT *' lvalue ParmVar 0xa1d33c0 '__s' 'const _CharT *')
  (ConditionalOperator 0xa1d3780 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0xa1d35b0 <line:215:37> 'const _CharT *' lvalue ParmVar 0xa1d33c0 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0xa1d36b8 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa1d3670 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
      (DeclRefExpr 0xa1d35c8 <col:43> 'const _CharT *' lvalue ParmVar 0xa1d33c0 '__s' 'const _CharT *')
      (CallExpr 0xa1d3650 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d3600 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1d3634 <col:69> 'const _CharT *' lvalue ParmVar 0xa1d33c0 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0xa1d3758 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa1d3710 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
      (DeclRefExpr 0xa1d36dc <col:11> 'const _CharT *' lvalue ParmVar 0xa1d33c0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1d36f4 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0xa1d379c <col:23> 'const _Alloc' lvalue ParmVar 0xa1d3430 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa1d37e0 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0xa1d3430 '__a' 'const _Alloc &')
) (CompoundStmt 0xa1d3840 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a71e8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0xa1d3fa8 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0xa1d3f10 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa19ef30 0xa1cd060 0xa1ce8b0 0xa1cf8c0)
  (DeclRefExpr 0xa1d3f60 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d3d20 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0xa1d3f78 <col:37> '_CharT' lvalue ParmVar 0xa1d3d60 '__c' '_CharT')
  (DeclRefExpr 0xa1d3f90 <col:42> 'const _Alloc' lvalue ParmVar 0xa1d3dd0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa1d3fd0 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0xa1d3dd0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa1d4030 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa1a7208 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0xa1d4838 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0xa1d47b0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa19ef30 0xa1cd060 0xa1ce8b0 0xa1cf8c0)
  (DeclRefExpr 0xa1d47f0 <col:32> '_InputIterator' lvalue ParmVar 0xa1d4560 '__beg' '_InputIterator')
  (DeclRefExpr 0xa1d4808 <col:39> '_InputIterator' lvalue ParmVar 0xa1d45a0 '__end' '_InputIterator')
  (DeclRefExpr 0xa1d4820 <col:46> 'const _Alloc' lvalue ParmVar 0xa1d4610 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa1d4860 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0xa1d4610 '__a' 'const _Alloc &')
) (CompoundStmt 0xa1d48c0 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1d5580 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0xa1d5528 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1d5110 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa1d50b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
      (CallExpr 0xa1d5028 <col:11, col:18> '<dependent type>'
        (MemberExpr 0xa1d5008 <col:11> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1d4ff8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa1d5098 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d5060 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0xa1d5044 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d4d70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0xa1d5508 <line:247:2, line:253:2>
      (DeclStmt 0xa1d51e0 <line:249:4, col:52>
        0xa1d5140 "const allocator_type __a =
          (CallExpr 0xa1d51c0 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d5188 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0xa1d5178 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa1d53b0 <line:250:4, col:71>
        0xa1d5220 "_CharT *__tmp =
          (CallExpr 0xa1d5388 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d52c8 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0xa1d52a8 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1d5270 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1d5254 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d4d70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0xa1d52fc <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0xa1d5140 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0xa1d5368 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d5330 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0xa1d5314 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d4d70 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0xa1d5460 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d5410 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1d53f0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1d53d0 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1d53c0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1d5444 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa1d5140 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa1d54e8 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa1d5490 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0xa1d54d0 <col:12> '_CharT *' lvalue Var 0xa1d5220 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0xa1d5570 <line:254:7, col:15>
    (UnaryOperator 0xa1d5558 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1d5548 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0xa1d65e0 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0xa1d5d28 <line:262:46>)
  (CallExpr 0xa1d5e18 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0xa1d5d48 <col:7> '<bound member function type>' ->_M_check_length 0xa189da0
      (CXXThisExpr 0xa1d5d38 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0xa1d5db0 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d5d78 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa1d5d68 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa1d5dcc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d5aa0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1d5de4 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0xa1d65c0 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0xa1d5f50 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0xa1d5e88 <col:11, col:26> '<dependent type>'
        (MemberExpr 0xa1d5e50 <col:11> '<bound member function type>' ->_M_disjunct 0xa18a040
          (CXXThisExpr 0xa1d5e40 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1d5e70 <col:23> 'const _CharT *' lvalue ParmVar 0xa1d5a60 '__s' 'const _CharT *'))
      (CallExpr 0xa1d5f30 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d5ef8 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0xa1d5ed8 <col:31, col:38> '<dependent type>'
            (MemberExpr 0xa1d5eb8 <col:31> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1d5ea8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa1d60a0 <line:265:2, col:61>
      (CallExpr 0xa1d6070 <col:9, col:61> '<dependent type>'
        (MemberExpr 0xa1d5f78 <col:9> '<bound member function type>' ->_M_replace_safe 0xa19e5d0
          (CXXThisExpr 0xa1d5f68 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa1d5fb8 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1d5fa0 <col:35> 'int' 0))
        (CallExpr 0xa1d6020 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1d5fe8 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa1d5fd8 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa1d603c <col:53> 'const _CharT *' lvalue ParmVar 0xa1d5a60 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1d6054 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d5aa0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa1d65a0 <line:267:2, line:276:2>
      (DeclStmt 0xa1d61e0 <line:269:4, col:43>
        0xa1d60c0 "const size_type __pos =
          (CXXOperatorCallExpr 0xa1d61b8 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d6180 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa1d60f4 <col:28> 'const _CharT *' lvalue ParmVar 0xa1d5a60 '__s' 'const _CharT *')
            (CallExpr 0xa1d6160 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0xa1d6120 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0xa1d6488 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1d6268 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa1d6220 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
          (DeclRefExpr 0xa1d61f0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d60c0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1d6208 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d5aa0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa1d6348 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0xa1d628c <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0xa1d62f8 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa1d62b8 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1d6314 <col:25> 'const _CharT *' lvalue ParmVar 0xa1d5a60 '__s' 'const _CharT *')
          (DeclRefExpr 0xa1d632c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d5aa0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa1d6468 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0xa1d6370 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d60c0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0xa1d6440 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0xa1d6388 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a380 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0xa1d63f0 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0xa1d63b0 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1d640c <col:25> 'const _CharT *' lvalue ParmVar 0xa1d5a60 '__s' 'const _CharT *')
            (DeclRefExpr 0xa1d6424 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d5aa0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0xa1d6548 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d64f8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1d64d8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1d64b8 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1d64a8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1d652c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d5aa0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0xa1d6590 <line:275:4, col:12>
        (UnaryOperator 0xa1d6578 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1d6568 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0xa1d74e0 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0xa1d7488 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1d6d58 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d6a90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1d7460 <line:285:2, line:292:2>
      (CallExpr 0xa1d6e28 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0xa1d6d80 <col:4> '<bound member function type>' ->_M_check_length 0xa189da0
          (CXXThisExpr 0xa1d6d70 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa1d6dc0 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1d6da8 <col:30> 'int' 0))
        (DeclRefExpr 0xa1d6ddc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d6a90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa1d6df4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0xa1d6f88 <line:287:4, col:46>
        0xa1d6e60 "const size_type __len =
          (CXXOperatorCallExpr 0xa1d6f60 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d6f18 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (DeclRefExpr 0xa1d6e94 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d6a90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1d6ef8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d6ec0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa1d6eb0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa1d71c8 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0xa1d7130 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa1d7060 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d7018 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
            (DeclRefExpr 0xa1d6f98 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d6e60 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1d6ff8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d6fc0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa1d6fb0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa1d7110 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d70d8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa1d70b8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa1d7098 <col:36> '<bound member function type>' ->_M_rep 0xa1898d0
                  (CXXThisExpr 0xa1d7088 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa1d71a8 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1d7158 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa1d7148 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa1d718c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d6e60 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa1d7378 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0xa1d71e4 <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa18a540 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0xa1d7320 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa1d72d8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (CallExpr 0xa1d7250 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa1d7210 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa1d72b8 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d7280 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0xa1d7270 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1d7344 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d6a90 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1d735c <col:45> '_CharT' lvalue ParmVar 0xa1d6ad0 '__c' '_CharT'))
      (CallExpr 0xa1d7440 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d73f0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1d73d0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1d73b0 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1d73a0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1d7424 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d6e60 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1d74d0 <line:293:7, col:15>
    (UnaryOperator 0xa1d74b8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1d74a8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0xa1d87e8 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0xa1d7c88 <line:301:46>)
  (IfStmt 0xa1d8790 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1d7c94 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d7a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1d8768 <line:303:2, line:319:2>
      (CallExpr 0xa1d7d68 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0xa1d7cc0 <col:4> '<bound member function type>' ->_M_check_length 0xa189da0
          (CXXThisExpr 0xa1d7cb0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa1d7d00 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1d7ce8 <col:30> 'int' 0))
        (DeclRefExpr 0xa1d7d1c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d7a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa1d7d34 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0xa1d7ec8 <line:305:4, col:46>
        0xa1d7da0 "const size_type __len =
          (CXXOperatorCallExpr 0xa1d7ea0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d7e58 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (DeclRefExpr 0xa1d7dd4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d7a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1d7e38 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d7e00 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa1d7df0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa1d84d0 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0xa1d8090 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa1d7fc0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d7f78 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
            (DeclRefExpr 0xa1d7ed8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d7da0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1d7f58 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d7f00 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa1d7ef0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa1d8070 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d8038 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa1d8018 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa1d7ff8 <col:36> '<bound member function type>' ->_M_rep 0xa1898d0
                  (CXXThisExpr 0xa1d7fe8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0xa1d84b8 <line:307:6, line:316:6>
          (IfStmt 0xa1d8498 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0xa1d80f0 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0xa1d80b8 <col:12> '<bound member function type>' ->_M_disjunct 0xa18a040
                (CXXThisExpr 0xa1d80a8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0xa1d80d8 <col:24> 'const _CharT *' lvalue ParmVar 0xa1d79c0 '__s' 'const _CharT *'))
            (CallExpr 0xa1d8170 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d8120 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa1d8110 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0xa1d8154 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d7da0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0xa1d8478 <line:311:3, line:315:3>
              (DeclStmt 0xa1d82c0 <line:312:5, col:44>
                0xa1d81a0 "const size_type __off =
                  (CXXOperatorCallExpr 0xa1d8298 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0xa1d8260 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                    (DeclRefExpr 0xa1d81d4 <col:29> 'const _CharT *' lvalue ParmVar 0xa1d79c0 '__s' 'const _CharT *')
                    (CallExpr 0xa1d8240 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0xa1d8200 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0xa1d8330 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1d82e0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa1d82d0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa1d8314 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d7da0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0xa1d8460 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0xa1d8350 <col:5> 'const _CharT *' lvalue ParmVar 0xa1d79c0 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0xa1d8438 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1d83f0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
                  (CallExpr 0xa1d83b8 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0xa1d8378 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa1d83d4 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d81a0 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0xa1d8680 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0xa1d84ec <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa1d8628 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa1d85e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (CallExpr 0xa1d8558 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa1d8518 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa1d85c0 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d8588 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa1d8578 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1d864c <col:38> 'const _CharT *' lvalue ParmVar 0xa1d79c0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1d8664 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d7a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa1d8748 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d86f8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1d86d8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1d86b8 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1d86a8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1d872c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d7da0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1d87d8 <line:320:7, col:15>
    (UnaryOperator 0xa1d87c0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1d87b0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1d96f0 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0xa1d8fe8 <line:328:7, col:44>
    0xa1d8f40 "const size_type __size =
      (CallExpr 0xa1d8fc8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d8f90 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa1d8f74 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d8cb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0xa1d9698 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1d8ff8 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d8f40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1d9678 <line:330:2, line:336:2>
      (DeclStmt 0xa1d9148 <line:331:4, col:49>
        0xa1d9020 "const size_type __len =
          (CXXOperatorCallExpr 0xa1d9120 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d90d8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (DeclRefExpr 0xa1d9054 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d8f40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1d90b8 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d9080 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0xa1d9070 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa1d9388 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0xa1d92f0 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa1d9220 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa1d91d8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
            (DeclRefExpr 0xa1d9158 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d9020 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1d91b8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1d9180 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa1d9170 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa1d92d0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d9298 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa1d9278 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa1d9258 <col:36> '<bound member function type>' ->_M_rep 0xa1898d0
                  (CXXThisExpr 0xa1d9248 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa1d9368 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1d9318 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa1d9308 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa1d934c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d9020 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa1d9590 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0xa1d93a4 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa1d94e0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa1d9498 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (CallExpr 0xa1d9410 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa1d93d0 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa1d9478 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1d9440 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa1d9430 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa1d9558 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1d9520 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0xa1d9504 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d8cb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa1d9574 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d8f40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa1d9658 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1d9608 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1d95e8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1d95c8 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1d95b8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1d963c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1d9020 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1d96e0 <line:337:7, col:15>
    (UnaryOperator 0xa1d96c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1d96b8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0xa1da7e8 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0xa1d9f68 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1d9ee8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1d9ecc <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d9bb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa1d9f1c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1d9f34 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0xa1da050 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0xa1d9f8c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1da028 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1d9fc0 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d9fa4 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d9bb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa1d9ff4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1da00c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0xa1da790 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1da068 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1da770 <line:348:2, line:354:2>
      (DeclStmt 0xa1da1b8 <line:349:4, col:46>
        0xa1da090 "const size_type __len =
          (CXXOperatorCallExpr 0xa1da190 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa1da148 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (DeclRefExpr 0xa1da0c4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1da128 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1da0f0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa1da0e0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa1da3f8 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0xa1da360 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa1da290 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa1da248 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
            (DeclRefExpr 0xa1da1c8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1da090 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1da228 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1da1f0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa1da1e0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa1da340 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1da308 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa1da2e8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa1da2c8 <col:36> '<bound member function type>' ->_M_rep 0xa1898d0
                  (CXXThisExpr 0xa1da2b8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa1da3d8 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1da388 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa1da378 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa1da3bc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1da090 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa1da688 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0xa1da414 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa1da550 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa1da508 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (CallExpr 0xa1da480 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa1da440 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa1da4e8 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1da4b0 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa1da4a0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa1da648 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa1da600 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (CallExpr 0xa1da5c8 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1da590 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0xa1da574 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1d9bb0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0xa1da5e4 <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1da66c <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1d9c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa1da750 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1da700 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1da6e0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1da6c0 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1da6b0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1da734 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1da090 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1da7d8 <line:355:7, col:15>
    (UnaryOperator 0xa1da7c0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1da7b0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0xa1dc000 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0xa1daff0 <line:363:47>)
  (CallExpr 0xa1db078 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0xa1db010 <col:8> '<bound member function type>' ->_M_check 0xa189be0
      (CXXThisExpr 0xa1db000 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1db030 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1daca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1db048 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0xa1db158 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0xa1db0b0 <col:8> '<bound member function type>' ->_M_check_length 0xa189da0
      (CXXThisExpr 0xa1db0a0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0xa1db0f0 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa1db0d8 <col:34> 'int' 0))
    (DeclRefExpr 0xa1db10c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1db124 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0xa1dbfe0 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0xa1db290 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0xa1db1c8 <col:12, col:27> '<dependent type>'
        (MemberExpr 0xa1db190 <col:12> '<bound member function type>' ->_M_disjunct 0xa18a040
          (CXXThisExpr 0xa1db180 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1db1b0 <col:24> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *'))
      (CallExpr 0xa1db270 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1db238 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0xa1db218 <col:32, col:39> '<dependent type>'
            (MemberExpr 0xa1db1f8 <col:32> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1db1e8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa1db390 <line:367:10, col:62>
      (CallExpr 0xa1db360 <col:17, col:62> '<dependent type>'
        (MemberExpr 0xa1db2b8 <col:17> '<bound member function type>' ->_M_replace_safe 0xa19e5d0
          (CXXThisExpr 0xa1db2a8 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1db2d8 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1daca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa1db310 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1db2f8 <col:50> 'int' 0))
        (DeclRefExpr 0xa1db32c <col:54> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1db344 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa1dbfb8 <line:369:10, line:386:10>
      (DeclStmt 0xa1db4d0 <line:371:12, col:51>
        0xa1db3b0 "const size_type __off =
          (CXXOperatorCallExpr 0xa1db4a8 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa1db470 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa1db3e4 <col:36> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
            (CallExpr 0xa1db450 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0xa1db410 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0xa1db558 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0xa1db4f0 <col:12> '<bound member function type>' ->_M_mutate 0xa18b1e0
          (CXXThisExpr 0xa1db4e0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1db510 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1daca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0xa1db528 <col:29> 'int' 0)
        (DeclRefExpr 0xa1db540 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0xa1db690 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0xa1db580 <col:12> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0xa1db668 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa1db620 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (CallExpr 0xa1db5e8 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa1db5a8 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1db604 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1db3b0 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0xa1db810 <line:374:12, col:43>
        0xa1db6e0 "_CharT *__p =
          (CXXOperatorCallExpr 0xa1db7e8 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0xa1db7a0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CallExpr 0xa1db768 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0xa1db728 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1db784 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1daca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0xa1dbf60 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1db920 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa1db8d8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
          (CXXOperatorCallExpr 0xa1db898 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa1db850 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (DeclRefExpr 0xa1db820 <col:16> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
            (DeclRefExpr 0xa1db838 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1db8bc <col:30> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *'))
        (CallExpr 0xa1db9a8 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0xa1db944 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0xa1db95c <col:22> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *')
          (DeclRefExpr 0xa1db974 <col:27> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
          (DeclRefExpr 0xa1db98c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa1dbf20 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa1dba48 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa1dba00 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
            (DeclRefExpr 0xa1db9d0 <col:21> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
            (DeclRefExpr 0xa1db9e8 <col:28> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *'))
          (CallExpr 0xa1dbb58 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0xa1dba6c <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0xa1dba84 <col:22> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *')
            (CXXOperatorCallExpr 0xa1dbb18 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0xa1dbad0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (DeclRefExpr 0xa1dba9c <col:27> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
              (DeclRefExpr 0xa1dbab4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1dbb3c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0xa1dbf00 <line:380:14, line:384:14>
            (DeclStmt 0xa1dbc58 <line:381:9, col:44>
              0xa1dbb90 "const size_type __nleft =
                (CXXOperatorCallExpr 0xa1dbc30 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1dbbf8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                  (DeclRefExpr 0xa1dbbc4 <col:35> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *')
                  (DeclRefExpr 0xa1dbbdc <col:41> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *'))")
            (CallExpr 0xa1dbcc8 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0xa1dbc68 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0xa1dbc80 <col:24> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *')
              (DeclRefExpr 0xa1dbc98 <col:29> 'const _CharT *' lvalue ParmVar 0xa1dad10 '__s' 'const _CharT *')
              (DeclRefExpr 0xa1dbcb0 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dbb90 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0xa1dbed8 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0xa1dbcf0 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0xa1dbd80 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0xa1dbd38 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
                (DeclRefExpr 0xa1dbd08 <col:24> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *')
                (DeclRefExpr 0xa1dbd20 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dbb90 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa1dbe20 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa1dbdd8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
                (DeclRefExpr 0xa1dbda4 <col:39> '_CharT *' lvalue Var 0xa1db6e0 '__p' '_CharT *')
                (DeclRefExpr 0xa1dbdbc <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa1dbeb0 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa1dbe78 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                (DeclRefExpr 0xa1dbe44 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dad50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0xa1dbe5c <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dbb90 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0xa1dbfa8 <line:385:12, col:20>
        (UnaryOperator 0xa1dbf90 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1dbf80 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa1dcd08 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0xa1dc7d8 <line:395:28>)
  (DeclStmt 0xa1dc8b8 <line:400:8, col:49>
    0xa1dc7f0 "const size_type __size =
      (CXXOperatorCallExpr 0xa1dc890 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa1dc858 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1dc824 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1dc550 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1dc83c <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1dc510 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0xa1dcce8 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0xa1dc8c8 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dc7f0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1dcca0 <line:402:3, line:407:3>
      (DeclStmt 0xa1dc9f0 <line:403:5, col:50>
        0xa1dc8f0 "const size_type __pos =
          (CXXOperatorCallExpr 0xa1dc9c8 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0xa1dc990 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa1dc924 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1dc510 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0xa1dc970 <col:39, col:49> '<dependent type>'
              (MemberExpr 0xa1dc950 <col:39> '<bound member function type>' ->_M_ibegin 0xa189980
                (CXXThisExpr 0xa1dc940 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0xa1dcaa0 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0xa1dca10 <col:5> '<bound member function type>' ->_M_mutate 0xa18b1e0
          (CXXThisExpr 0xa1dca00 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1dca30 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dc8f0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1dca48 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dc7f0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa1dca80 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa1dca68 <col:40> 'int' 0)))
      (CallExpr 0xa1dcb50 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1dcb18 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0xa1dcaf8 <col:5, col:12> '<dependent type>'
            (MemberExpr 0xa1dcad8 <col:5> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1dcac8 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0xa1dcc90 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0xa1dcc70 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0xa1dcc48 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0xa1dcc00 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CallExpr 0xa1dcbc8 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0xa1dcb88 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1dcbe4 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dc8f0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0xa1dccd8 <line:409:3, col:10>
      (DeclRefExpr 0xa1dccc0 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1dc510 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0xa1de628 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0xa1dd550 <line:418:48>)
  (CallExpr 0xa1dd5e0 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0xa1dd570 <col:8> '<bound member function type>' ->_M_check 0xa189be0
      (CXXThisExpr 0xa1dd560 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1dd590 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1dd5a8 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0xa1dd6a8 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0xa1dd604 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1dd680 <col:15, col:35> '<dependent type>'
      (MemberExpr 0xa1dd630 <col:15> '<bound member function type>' ->_M_limit 0xa189f00
        (CXXThisExpr 0xa1dd620 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1dd650 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1dd668 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0xa1dd758 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0xa1dd6d0 <col:8> '<bound member function type>' ->_M_check_length 0xa189da0
      (CXXThisExpr 0xa1dd6c0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1dd6f0 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1dd708 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1dd720 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0xa1dd7c8 <line:422:8, col:19>
    0xa1dd790 "bool __left")
  (IfStmt 0xa1de608 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0xa1dd8e8 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0xa1dd820 <col:12, col:27> '<dependent type>'
        (MemberExpr 0xa1dd7e8 <col:12> '<bound member function type>' ->_M_disjunct 0xa18a040
          (CXXThisExpr 0xa1dd7d8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1dd808 <col:24> 'const _CharT *' lvalue ParmVar 0xa1dd270 '__s' 'const _CharT *'))
      (CallExpr 0xa1dd8c8 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1dd890 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0xa1dd870 <col:32, col:39> '<dependent type>'
            (MemberExpr 0xa1dd850 <col:32> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1dd840 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa1dd9c0 <line:424:10, col:55>
      (CallExpr 0xa1dd990 <col:17, col:55> '<dependent type>'
        (MemberExpr 0xa1dd910 <col:17> '<bound member function type>' ->_M_replace_safe 0xa19e5d0
          (CXXThisExpr 0xa1dd900 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1dd930 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1dd948 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1dd960 <col:46> 'const _CharT *' lvalue ParmVar 0xa1dd270 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1dd978 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0xa1de5e8 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0xa1dde28 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0xa1ddc08 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0xa1ddbf0 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0xa1dd9d0 <col:18> '_Bool' lvalue Var 0xa1dd790 '__left' '_Bool')
            (CXXOperatorCallExpr 0xa1ddbc8 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa1ddb80 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
              (CXXOperatorCallExpr 0xa1dda60 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa1dda18 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
                (DeclRefExpr 0xa1dd9e8 <col:27> 'const _CharT *' lvalue ParmVar 0xa1dd270 '__s' 'const _CharT *')
                (DeclRefExpr 0xa1dda00 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa1ddb58 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0xa1ddb10 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
                (CallExpr 0xa1ddad8 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0xa1dda98 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa1ddaf4 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0xa1dde00 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa1dddb8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
          (CXXOperatorCallExpr 0xa1ddd78 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0xa1ddd30 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CXXOperatorCallExpr 0xa1ddcf0 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0xa1ddca8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (CallExpr 0xa1ddc70 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0xa1ddc30 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa1ddc8c <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1ddd14 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1ddd9c <col:34> 'const _CharT *' lvalue ParmVar 0xa1dd270 '__s' 'const _CharT *')))
      (CompoundStmt 0xa1de3e0 <line:427:3, line:434:3>
        (DeclStmt 0xa1ddf70 <line:429:5, col:38>
          0xa1dde50 "size_type __off =
            (CXXOperatorCallExpr 0xa1ddf48 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0xa1ddf10 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (DeclRefExpr 0xa1dde84 <col:23> 'const _CharT *' lvalue ParmVar 0xa1dd270 '__s' 'const _CharT *')
              (CallExpr 0xa1ddef0 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa1ddeb0 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0xa1de0a0 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0xa1de090 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa1ddf80 <col:5> '_Bool' lvalue Var 0xa1dd790 '__left' '_Bool'))
          (DeclRefExpr 0xa1ddf98 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1dde50 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0xa1de078 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0xa1de058 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa1ddfb0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1dde50 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0xa1de030 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa1ddff8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                (DeclRefExpr 0xa1ddfc8 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0xa1ddfe0 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0xa1de138 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0xa1de0d0 <col:5> '<bound member function type>' ->_M_mutate 0xa18b1e0
            (CXXThisExpr 0xa1de0c0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa1de0f0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1de108 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1de120 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa1de380 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0xa1de160 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa1de248 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0xa1de200 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CallExpr 0xa1de1c8 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0xa1de188 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1de1e4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa1de340 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa1de2f8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CallExpr 0xa1de2c0 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0xa1de280 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1de2dc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1dde50 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1de364 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0xa1de3d0 <line:433:5, col:13>
          (UnaryOperator 0xa1de3b8 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0xa1de3a8 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0xa1de5d0 <line:436:3, line:440:3>
        (DeclStmt 0xa1de498 <line:438:5, col:40>
          0xa1de410 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0xa1de478 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0xa1de444 <col:30> 'const _CharT *' lvalue ParmVar 0xa1dd270 '__s' 'const _CharT *')
              (DeclRefExpr 0xa1de45c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0xa1de5c0 <line:439:5, col:62>
          (CallExpr 0xa1de590 <col:12, col:62> '<dependent type>'
            (MemberExpr 0xa1de4b8 <col:12> '<bound member function type>' ->_M_replace_safe 0xa19e5d0
              (CXXThisExpr 0xa1de4a8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0xa1de4d8 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd1c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa1de4f0 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd200 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1de558 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1de520 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0xa1de508 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1de410 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0xa1de574 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1dd2b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0xa1dee50 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0xa1ded38 <line:448:7, line:449:65>
    0xa1deb50 "const size_type __size =
      (CXXOperatorCallExpr 0xa1ded10 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa1decc8 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
        (UnaryExprOrTypeTraitExpr 0xa1deb90 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0xa1decb0 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0xa1dec78 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0xa1dec50 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa1dec08 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (CXXDependentScopeMemberExpr 0xa1debb8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa1deba8 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0xa1debf0 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0xa1dec98 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0xa1dee28 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1deda0 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0xa1ded80 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0xa1ded68 <col:24> 'const _Alloc' lvalue ParmVar 0xa1dea30 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0xa1dedf8 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0xa1dedd8 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0xa1dee10 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1deb50 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0xa1df5e0 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0xa1df3b0 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1df378 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1df320 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
      (CallExpr 0xa1df2b0 <col:11, col:18> '<dependent type>'
        (MemberExpr 0xa1df290 <col:11> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1df280 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0xa1df308 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0xa1df2e8 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0xa1df2cc <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa18b2f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0xa1df3a0 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0xa1df518 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0xa1df458 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1df420 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0xa1df400 <col:11, col:18> '<dependent type>'
          (MemberExpr 0xa1df3e0 <col:11> '<bound member function type>' ->_M_rep 0xa1898d0
            (CXXThisExpr 0xa1df3d0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0xa1df4f0 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0xa1df488 <col:2> '<bound member function type>' ->_M_mutate 0xa18b1e0
        (CXXThisExpr 0xa1df478 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0xa1df4a8 <col:12> 'int' 0)
      (IntegerLiteral 0xa1df4c0 <col:15> 'int' 0)
      (IntegerLiteral 0xa1df4d8 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0xa1df5c0 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1df588 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0xa1df568 <col:7, col:14> '<dependent type>'
        (MemberExpr 0xa1df548 <col:7> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1df538 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0xa1e0e88 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0xa1dfba0 <line:472:7, col:48>
    0xa1dfb00 "const size_type __old_size =
      (CallExpr 0xa1dfb80 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1dfb48 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa1dfb38 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa1dfd10 <line:473:7, col:64>
    0xa1dfbc0 "const size_type __new_size =
      (CXXOperatorCallExpr 0xa1dfce8 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa1dfcb0 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CXXOperatorCallExpr 0xa1dfc70 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa1dfc28 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa1dfbf4 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfb00 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1dfc0c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9f0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1dfc94 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9b0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1dfe70 <line:474:7, col:63>
    0xa1dfd30 "const size_type __how_much =
      (CXXOperatorCallExpr 0xa1dfe48 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa1dfe10 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CXXOperatorCallExpr 0xa1dfdd0 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa1dfd98 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (DeclRefExpr 0xa1dfd64 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfb00 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1dfd7c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1dfdf4 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9b0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1e0da8 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0xa1e0038 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa1dff68 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa1dff00 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
        (DeclRefExpr 0xa1dfe80 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfbc0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa1dfee0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1dfea8 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0xa1dfe98 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa1e0018 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1dffe0 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0xa1dffc0 <col:44, col:51> '<dependent type>'
            (MemberExpr 0xa1dffa0 <col:44> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1dff90 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0xa1e0910 <line:477:2, line:490:2>
      (DeclStmt 0xa1e00e8 <line:479:4, col:46>
        0xa1e0060 "const allocator_type __a =
          (CallExpr 0xa1e00c8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0xa1e00a8 <col:31> '<bound member function type>' ->get_allocator 0xa19fa80
              (CXXThisExpr 0xa1e0098 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa1e0260 <line:480:4, col:66>
        0xa1e0110 "std::basic_string::_Rep *__r =
          (CallExpr 0xa1e0238 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1e0168 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0xa1e019c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfbc0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa1e0200 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1e01c8 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0xa1e01b8 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa1e021c <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0xa1e0060 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0xa1e03c0 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0xa1e0270 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa1e0398 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0xa1e0288 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0xa1e02f0 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1e02b8 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa1e02a0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e0110 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0xa1e0360 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0xa1e0320 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1e037c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0xa1e0750 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0xa1e03dc <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfd30 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa1e0728 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0xa1e03f4 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa1e0568 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa1e0520 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CXXOperatorCallExpr 0xa1e04e0 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0xa1e0498 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (CallExpr 0xa1e0460 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1e0428 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1e040c <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e0110 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0xa1e047c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1e0504 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9f0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa1e06e8 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0xa1e06a0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CXXOperatorCallExpr 0xa1e0660 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0xa1e0618 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (CallExpr 0xa1e05e0 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0xa1e05a0 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa1e05fc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1e0684 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9b0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1e070c <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfd30 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa1e0810 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e07c0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1e07a0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1e0780 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1e0770 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1e07f4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa1e0060 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa1e08f0 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa1e0840 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa1e08d0 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1e0898 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0xa1e0880 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e0110 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0xa1e0d88 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0xa1e0a00 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0xa1e0938 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfd30 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa1e09d8 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0xa1e0980 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
          (DeclRefExpr 0xa1e0950 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9b0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1e0968 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9f0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0xa1e0d70 <line:492:2, line:496:2>
        (CallExpr 0xa1e0d48 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0xa1e0a18 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a380 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa1e0b88 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa1e0b40 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CXXOperatorCallExpr 0xa1e0b00 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa1e0ab8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (CallExpr 0xa1e0a80 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0xa1e0a40 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa1e0a9c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1e0b24 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9f0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa1e0d08 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0xa1e0cc0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
            (CXXOperatorCallExpr 0xa1e0c80 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0xa1e0c38 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (CallExpr 0xa1e0c00 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0xa1e0bc0 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa1e0c1c <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1e0ca4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1df9b0 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1e0d2c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfd30 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0xa1e0e68 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e0e18 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0xa1e0df8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0xa1e0dd8 <col:7> '<bound member function type>' ->_M_rep 0xa1898d0
          (CXXThisExpr 0xa1e0dc8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa1e0e4c <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1dfbc0 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0xa1a7220 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0xa1e1ad0 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0xa1e1ab0 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0xa1e14b0 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa1e13e0 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e1388 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
        (DeclRefExpr 0xa1e1304 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e1220 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa1e1368 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1e1330 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa1e1320 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa1e1490 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e1458 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0xa1e1438 <col:40, col:47> '<dependent type>'
            (MemberExpr 0xa1e1418 <col:40> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1e1408 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0xa1e1a88 <line:506:9, line:514:9>
      (IfStmt 0xa1e1650 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1e1590 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa1e1548 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
          (DeclRefExpr 0xa1e14c8 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e1220 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0xa1e1528 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1e14f0 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0xa1e14e0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa1e1638 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0xa1e15b4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e1220 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0xa1e1618 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1e15e0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa1e15d0 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0xa1e1708 <line:510:4, col:46>
        0xa1e1680 "const allocator_type __a =
          (CallExpr 0xa1e16e8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0xa1e16c8 <col:31> '<bound member function type>' ->get_allocator 0xa19fa80
              (CXXThisExpr 0xa1e16b8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa1e1930 <line:511:4, col:65>
        0xa1e1750 "_CharT *__tmp =
          (CallExpr 0xa1e1908 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1e17d8 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0xa1e17b8 <col:20, col:27> '<dependent type>'
                (MemberExpr 0xa1e1798 <col:20> '<bound member function type>' ->_M_rep 0xa1898d0
                  (CXXThisExpr 0xa1e1788 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0xa1e180c <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0xa1e1680 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0xa1e18e0 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0xa1e18a8 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (DeclRefExpr 0xa1e1824 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e1220 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0xa1e1888 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1e1850 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0xa1e1840 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0xa1e19e0 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e1990 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa1e1970 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa1e1950 <col:4> '<bound member function type>' ->_M_rep 0xa1898d0
              (CXXThisExpr 0xa1e1940 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa1e19c4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa1e1680 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa1e1a68 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa1e1a10 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0xa1e1a50 <col:12> '_CharT *' lvalue Var 0xa1e1750 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0xa1e2a78 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0xa1e20a8 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0xa1e1fe0 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e1fa8 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0xa1e1f88 <col:11, col:18> '<dependent type>'
          (MemberExpr 0xa1e1f68 <col:11> '<bound member function type>' ->_M_rep 0xa1898d0
            (CXXThisExpr 0xa1e1f58 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0xa1e2088 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e2050 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0xa1e2030 <col:2, col:9> '<dependent type>'
          (MemberExpr 0xa1e2010 <col:2> '<bound member function type>' ->_M_rep 0xa1898d0
            (CXXThisExpr 0xa1e2000 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0xa1e2258 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0xa1e2170 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e2138 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0xa1e2118 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1e20e0 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0xa1e20c4 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0xa1e2238 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e2200 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0xa1e21e0 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1e21a8 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0xa1e218c <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0xa1e2a58 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1e23a8 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa1e2350 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
      (CallExpr 0xa1e22c0 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e2288 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e2278 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa1e2330 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e22f8 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e22dc <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0xa1e2620 <line:527:2, line:531:2>
      (DeclStmt 0xa1e24a8 <line:528:4, col:29>
        0xa1e2400 "_CharT *__tmp =
          (CallExpr 0xa1e2488 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0xa1e2448 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0xa1e2578 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa1e24c8 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa1e2558 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1e2520 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa1e2508 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0xa1e2600 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e25b0 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e2598 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa1e25e4 <col:16> '_CharT *' lvalue Var 0xa1e2400 '__tmp' '_CharT *')))
    (CompoundStmt 0xa1e2a38 <line:534:2, line:541:2>
      (DeclStmt 0xa1e27c0 <line:535:4, line:536:29>
        0xa1e2650 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0xa1e2798 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0xa1e26b8 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0xa1e2698 <col:30> '<bound member function type>' ->_M_ibegin 0xa189980
                (CXXThisExpr 0xa1e2688 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa1e2708 <col:43, col:51> '<dependent type>'
              (MemberExpr 0xa1e26e8 <col:43> '<bound member function type>' ->_M_iend 0xa189a00
                (CXXThisExpr 0xa1e26d8 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa1e2778 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1e2740 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0xa1e2724 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0xa1e2988 <line:537:4, line:538:31>
        0xa1e27e0 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0xa1e2960 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0xa1e2868 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1e2830 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0xa1e2814 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa1e28d8 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1e28a0 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0xa1e2884 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa1e2940 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1e2908 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0xa1e28f8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0xa1e29d8 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0xa1e29a8 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1e2998 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1e29bc <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e27e0 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0xa1e2a20 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa1e29f0 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e1e70 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0xa1e2a08 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e2650 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0xa1e43d0 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0xa1e34a8 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1e33a8 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa1e3360 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
      (DeclRefExpr 0xa1e332c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1e3344 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cb470 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa1e3478 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0xa1e3468 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e344c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017270 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa1e3498 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1e3438 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0xa1e3404 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0xa1e3520 <line:578:7, col:40>
    0xa1e34d0 "const size_type __pagesize =
      (IntegerLiteral 0xa1e3508 <col:36> 'int' 4096)")
  (DeclStmt 0xa1e35e0 <line:579:7, col:63>
    0xa1e3540 "const size_type __malloc_header_size =
      (BinaryOperator 0xa1e35c8 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0xa1e35b8 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa1e3578 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0xa1e35a0 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0xa1e37f0 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0xa1e3760 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1e3668 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e3620 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
        (DeclRefExpr 0xa1e35f0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1e3608 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e3000 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0xa1e3738 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e36f0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (DeclRefExpr 0xa1e368c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa1e36d8 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0xa1e36a8 <col:55> 'int' 2)
          (DeclRefExpr 0xa1e36c0 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e3000 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0xa1e37d8 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0xa1e3778 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0xa1e37c0 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0xa1e3790 <col:15> 'int' 2)
        (DeclRefExpr 0xa1e37a8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e3000 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0xa1e39d8 <line:593:7, col:74>
    0xa1e3820 "size_type __size =
      (CXXOperatorCallExpr 0xa1e39b0 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e3968 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
        (BinaryOperator 0xa1e3930 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0xa1e38f8 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0xa1e38d0 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa1e3888 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
              (DeclRefExpr 0xa1e3854 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0xa1e3870 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0xa1e3918 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0xa1e3950 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0xa1e3ac8 <line:595:7, col:65>
    0xa1e39f0 "const size_type __adj_size =
      (CXXOperatorCallExpr 0xa1e3aa0 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e3a58 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
        (DeclRefExpr 0xa1e3a24 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1e3820 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1e3a3c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e3540 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1e40c8 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0xa1e3c18 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1e3b50 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e3b08 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
        (DeclRefExpr 0xa1e3ad8 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e39f0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1e3af0 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e34d0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0xa1e3bf0 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e3ba8 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
        (DeclRefExpr 0xa1e3b74 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1e3b8c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e3000 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa1e40a8 <line:597:2, line:604:2>
      (DeclStmt 0xa1e3d38 <line:598:4, col:66>
        0xa1e3c40 "const size_type __extra =
          (CXXOperatorCallExpr 0xa1e3d10 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa1e3cd8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa1e3c74 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e34d0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0xa1e3cc0 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0xa1e3c8c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e39f0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0xa1e3ca4 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e34d0 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0xa1e3db0 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa1e3d48 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa1e3d98 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0xa1e3d60 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e3c40 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0xa1e3d80 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0xa1e3eb8 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1e3e48 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa1e3e00 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (DeclRefExpr 0xa1e3dd0 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1e3de8 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cb470 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa1e3ea0 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0xa1e3e6c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1e3e84 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cb470 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0xa1e4090 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0xa1e3ed4 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1e3820 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa1e4068 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa1e4020 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
          (BinaryOperator 0xa1e3fe8 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0xa1e3fb0 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0xa1e3f88 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0xa1e3f20 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
                (DeclRefExpr 0xa1e3eec <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0xa1e3f08 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0xa1e3fd0 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0xa1e4008 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0xa1e41e8 <line:608:7, col:65>
    0xa1e4100 "void *__place =
      (CallExpr 0xa1e41c8 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e4178 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0xa1e4158 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0xa1e4140 <col:40> 'const _Alloc' lvalue ParmVar 0xa1e3070 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0xa1e41ac <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1e3820 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1e42a8 <line:609:7, col:37>
    0xa1e4210 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0xa1e4268 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0xa1e4244 <col:24> 'void *' lvalue Var 0xa1e4100 '__place' 'void *'))")
  (BinaryOperator 0xa1e4320 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa1e42d0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e42b8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e4210 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa1e4304 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e2fc0 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0xa1e4388 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e4350 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e4338 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e4210 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0xa1e43c0 <line:619:7, col:14>
    (DeclRefExpr 0xa1e43a4 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e4210 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0xa1a7170 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0xa1e4eb0 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0xa1e4a78 <line:628:7, col:64>
    0xa1e4970 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0xa1e4a50 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e4a08 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
        (CXXDependentScopeMemberExpr 0xa1e49b8 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e49a8 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa1e49ec <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e4820 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1e4bb8 <line:629:7, line:630:15>
    0xa1e4aa0 "std::basic_string::_Rep *__r =
      (CallExpr 0xa1e4b90 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0xa1e4af4 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0xa1e3290 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0xa1e4b14 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e4970 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0xa1e4b40 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e4b30 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa1e4b74 <line:630:7> 'const _Alloc' lvalue ParmVar 0xa1e47e0 '__alloc' 'const _Alloc &'))")
  (IfStmt 0xa1e4d58 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa1e4bd8 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa1e4bc8 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0xa1e4d30 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0xa1e4c0c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0xa1e4c78 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e4c40 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e4c24 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e4aa0 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0xa1e4cc8 <col:29, col:40> '<dependent type>'
        (MemberExpr 0xa1e4ca8 <col:29> '<bound member function type>' ->_M_refdata 0xa183b70
          (CXXThisExpr 0xa1e4c98 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0xa1e4cf8 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0xa1e4ce8 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0xa1e4e10 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e4d90 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e4d74 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e4aa0 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0xa1e4dd8 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0xa1e4dc8 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0xa1e4ea0 <line:635:7, col:30>
    (CallExpr 0xa1e4e80 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e4e48 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa1e4e30 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa1e4aa0 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0xa1e5830 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0xa1e5450 <line:643:7, col:44>
    0xa1e53b0 "const size_type __size =
      (CallExpr 0xa1e5430 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e53f8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e53e8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0xa1e54f0 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0xa1e5470 <col:7> '<bound member function type>' ->_M_check_length 0xa189da0
      (CXXThisExpr 0xa1e5460 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1e5490 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e53b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1e54a8 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e5250 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1e54c0 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0xa1e5810 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1e5590 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa1e5548 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (DeclRefExpr 0xa1e5518 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e53b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1e5530 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e5250 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa1e56a8 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e55c8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa1e55b8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1e5668 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e5630 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1e55fc <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e5250 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1e5614 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e53b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa1e568c <col:29> '_CharT' lvalue ParmVar 0xa1e5290 '__c' '_CharT'))
    (IfStmt 0xa1e57f0 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa1e5748 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e5700 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (DeclRefExpr 0xa1e56cc <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e5250 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1e56e4 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e53b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa1e57d0 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e5780 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e5770 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa1e57b4 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e5250 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0xa1e6668 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0xa1e61e8 <line:659:2, col:36>
    0xa1e6160 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0xa1e61c8 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa1e6194 <col:25> '_InputIterator' lvalue ParmVar 0xa1e5db0 '__k1' '_InputIterator')
        (DeclRefExpr 0xa1e61ac <col:31> '_InputIterator' lvalue ParmVar 0xa1e5df0 '__k2' '_InputIterator'))")
  (DeclStmt 0xa1e62c8 <line:660:2, col:36>
    0xa1e6200 "const size_type __n1 =
      (CXXOperatorCallExpr 0xa1e62a0 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e6268 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1e6234 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1e5d70 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa1e624c <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1e5d30 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0xa1e6410 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0xa1e62e8 <col:2> '<bound member function type>' ->_M_check_length 0xa189da0
      (CXXThisExpr 0xa1e62d8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1e6308 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e6200 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1e6370 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e6338 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0xa1e6320 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e6160 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0xa1e63d0 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0xa1e6658 <line:662:2, line:663:21>
    (CallExpr 0xa1e6628 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0xa1e6448 <line:662:9> '<bound member function type>' ->_M_replace_safe 0xa19e5d0
        (CXXThisExpr 0xa1e6438 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa1e6508 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e64d0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa1e6468 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa1e5d30 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa1e64b0 <col:32, col:42> '<dependent type>'
          (MemberExpr 0xa1e6490 <col:32> '<bound member function type>' ->_M_ibegin 0xa189980
            (CXXThisExpr 0xa1e6480 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa1e652c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1e6200 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1e6598 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e6560 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e6544 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e6160 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0xa1e6608 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e65d0 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e65b4 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e6160 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0xa1e71f8 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0xa1e6f58 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0xa1e6e90 <col:7> '<bound member function type>' ->_M_check_length 0xa189da0
      (CXXThisExpr 0xa1e6e80 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1e6eb0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6b60 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1e6ec8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6ba0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1e6f20 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0xa1e6ff8 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0xa1e6f90 <col:7> '<bound member function type>' ->_M_mutate 0xa1dfa50
      (CXXThisExpr 0xa1e6f80 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1e6fb0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6b20 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1e6fc8 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6b60 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1e6fe0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6ba0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa1e71a0 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0xa1e7020 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6ba0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1e7178 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0xa1e7038 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa18a540 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0xa1e7120 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e70d8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
        (CallExpr 0xa1e70a0 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0xa1e7060 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1e70bc <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6b20 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa1e7144 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e6ba0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1e715c <col:38> '_CharT' lvalue ParmVar 0xa1e6be0 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0xa1e71e8 <line:676:7, col:15>
    (UnaryOperator 0xa1e71d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1e71c0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0xa1e7cb8 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0xa1e7ab8 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0xa1e7a50 <col:7> '<bound member function type>' ->_M_mutate 0xa1dfa50
      (CXXThisExpr 0xa1e7a40 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1e7a70 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e76b0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1e7a88 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e76f0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa1e7aa0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e77a0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa1e7c60 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0xa1e7ae0 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e77a0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1e7c38 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0xa1e7af8 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0xa1e7be0 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e7b98 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1be250 0xa1be7a0 0xa1bed20 0xa1bf520)
        (CallExpr 0xa1e7b60 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa1e7b20 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1e7b7c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e76b0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa1e7c04 <col:30> 'const _CharT *' lvalue ParmVar 0xa1e7760 '__s' 'const _CharT *')
      (DeclRefExpr 0xa1e7c1c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e77a0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0xa1e7ca8 <line:688:7, col:15>
    (UnaryOperator 0xa1e7c90 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1e7c80 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1e88d8 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0xa1e8260 <line:696:39>)
  (DeclStmt 0xa1e8400 <line:697:7, col:66>
    0xa1e83d0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1e84c0 <line:698:7, col:62>
    0xa1e8490 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa1e85b0 <line:699:7, col:55>
    0xa1e84f0 "const __size_type __len =
      (CallExpr 0xa1e8590 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa1e8550 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1e8574 <col:49> 'const _CharT *' lvalue ParmVar 0xa1e7f30 '__lhs' 'const _CharT *'))")
  (DeclStmt 0xa1e8608 <line:700:7, col:26>
    0xa1e85d0 "__string_type __str")
  (CallExpr 0xa1e8760 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e8630 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e8618 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e85d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0xa1e8738 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa1e86f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1be7a0 0xa1bed20)
      (DeclRefExpr 0xa1e8664 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1e84f0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0xa1e86d0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e8698 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e867c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e80f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0xa1e8800 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e8798 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e8780 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e85d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa1e87cc <col:20> 'const _CharT *' lvalue ParmVar 0xa1e7f30 '__lhs' 'const _CharT *')
    (DeclRefExpr 0xa1e87e4 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1e84f0 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0xa1e8890 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e8840 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e8824 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e85d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa1e8874 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e80f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa1e88c8 <line:704:7, col:14>
    (DeclRefExpr 0xa1e88b0 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e85d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa1e9488 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0xa1e8ff0 <line:711:7, col:66>
    0xa1e8fc0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1e90b0 <line:712:7, col:62>
    0xa1e9080 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa1e9108 <line:713:7, col:26>
    0xa1e90d0 "__string_type __str")
  (DeclStmt 0xa1e91e8 <line:714:7, col:45>
    0xa1e9140 "const __size_type __len =
      (CallExpr 0xa1e91c8 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e9190 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e9174 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e8cf0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0xa1e92e8 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e9210 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e91f8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e90d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0xa1e92c0 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa1e9278 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
      (DeclRefExpr 0xa1e9244 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1e9140 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0xa1e9260 <col:29> 'int' 1)))
  (CallExpr 0xa1e93b0 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e9320 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e9308 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e90d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0xa1e9378 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0xa1e9360 <col:32> 'int' 1))
    (DeclRefExpr 0xa1e9394 <col:36> '_CharT' lvalue ParmVar 0xa1e8b40 '__lhs' '_CharT'))
  (CallExpr 0xa1e9440 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e93f0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1e93d4 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e90d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa1e9424 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1e8cf0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa1e9478 <line:718:7, col:14>
    (DeclRefExpr 0xa1e9460 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa1e90d0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0xa1a7268 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0xa1ea000 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0xa1e9d48 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0xa1e9ce0 <col:7> '<bound member function type>' ->_M_check 0xa189be0
      (CXXThisExpr 0xa1e9cd0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1e9d00 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1e9d18 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0xa1e9e10 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0xa1e9d6c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1e9de8 <col:13, col:32> '<dependent type>'
      (MemberExpr 0xa1e9d98 <col:13> '<bound member function type>' ->_M_limit 0xa189f00
        (CXXThisExpr 0xa1e9d88 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1e9db8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1e9dd0 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0xa1e9e28 <line:728:46>)
  (IfStmt 0xa1e9fb8 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0xa1e9e34 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1e9f90 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0xa1e9e4c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa18a210 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0xa1e9e64 <col:10> '_CharT *' lvalue ParmVar 0xa1e99c0 '__s' '_CharT *')
      (CXXOperatorCallExpr 0xa1e9f50 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa1e9f08 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
        (CallExpr 0xa1e9ed0 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0xa1e9e90 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1e9eec <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa1e9f74 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0xa1e9ff0 <line:732:7, col:14>
    (DeclRefExpr 0xa1e9fd4 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1e9a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa1eb300 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0xa1ea840 <line:740:46>)
  (DeclStmt 0xa1ea900 <line:741:7, col:44>
    0xa1ea860 "const size_type __size =
      (CallExpr 0xa1ea8e0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1ea8a8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1ea898 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa1ea9c8 <line:742:7, col:39>
    0xa1ea920 "const _CharT *__data =
      (CallExpr 0xa1ea9a8 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0xa1ea968 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0xa1eab88 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1eaa60 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa1eaa08 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
      (DeclRefExpr 0xa1ea9d8 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea5b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa1ea9f0 <col:18> 'int' 0))
    (ReturnStmt 0xa1eab78 <line:745:2, col:35>
      (ConditionalOperator 0xa1eab58 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0xa1eab00 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0xa1eaab8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
          (DeclRefExpr 0xa1eaa84 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1eaa9c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ea860 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1eab24 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1eab3c <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0xa1eb2b8 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1eac20 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa1eabd8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
      (DeclRefExpr 0xa1eaba4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea5b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1eabbc <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ea860 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa1eb2a0 <line:748:2, line:754:2>
      (ForStmt 0xa1eb278 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1ead38 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa1eacf0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
          (DeclRefExpr 0xa1eac44 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0xa1eacc8 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa1eac90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa1eac5c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ea860 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa1eac74 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea5b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0xa1ead78 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa1ead5c <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa1eb258 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0xa1eb218 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0xa1eae80 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1eadb8 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0xa1eae20 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0xa1eadec <col:26> 'const _CharT *' lvalue Var 0xa1ea920 '__data' 'const _CharT *')
                (DeclRefExpr 0xa1eae04 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0xa1eae68 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0xa1eae34 <col:41> 'const _CharT *' lvalue ParmVar 0xa1ea530 '__s' 'const _CharT *')
                (IntegerLiteral 0xa1eae50 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0xa1eb1f0 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa1eb198 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
              (CallExpr 0xa1eb158 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1eaec8 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0xa1eb000 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1eafb8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
                  (CXXOperatorCallExpr 0xa1eaf78 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0xa1eaf30 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
                    (DeclRefExpr 0xa1eaefc <col:27> 'const _CharT *' lvalue Var 0xa1ea920 '__data' 'const _CharT *')
                    (DeclRefExpr 0xa1eaf14 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0xa1eafa0 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0xa1eb0a0 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1eb058 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
                  (DeclRefExpr 0xa1eb024 <col:6> 'const _CharT *' lvalue ParmVar 0xa1ea530 '__s' 'const _CharT *')
                  (IntegerLiteral 0xa1eb040 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0xa1eb130 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1eb0f8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                  (DeclRefExpr 0xa1eb0c4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea5b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0xa1eb0e0 <col:21> 'int' 1)))
              (IntegerLiteral 0xa1eb180 <col:27> 'int' 0)))
          (ReturnStmt 0xa1eb248 <line:753:8, col:15>
            (DeclRefExpr 0xa1eb230 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ea570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0xa1eb2f0 <line:755:7, col:14>
    (DeclRefExpr 0xa1eb2d4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0xa1a72b0 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0xa1ec188 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0xa1ebb20 <line:763:7, col:29>
    0xa1ebad0 "size_type __ret =
      (DeclRefExpr 0xa1ebb04 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0xa1ebbe0 <line:764:7, col:44>
    0xa1ebb40 "const size_type __size =
      (CallExpr 0xa1ebbc0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1ebb88 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1ebb78 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa1ec140 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1ebc68 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa1ebc20 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (DeclRefExpr 0xa1ebbf0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1eb840 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1ebc08 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ebb40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa1ec120 <line:766:2, line:772:2>
      (DeclStmt 0xa1ebd68 <line:767:4, col:36>
        0xa1ebcc0 "const _CharT *__data =
          (CallExpr 0xa1ebd48 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa1ebd08 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0xa1ebe48 <line:768:4, col:40>
        0xa1ebd80 "const size_type __n =
          (CXXOperatorCallExpr 0xa1ebe20 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0xa1ebde8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa1ebdb4 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ebb40 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa1ebdcc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1eb840 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0xa1ec018 <line:769:4, col:67>
        0xa1ebe70 "const _CharT *__p =
          (CallExpr 0xa1ebff0 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1ebec8 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0xa1ebf98 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa1ebf30 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
              (DeclRefExpr 0xa1ebefc <col:42> 'const _CharT *' lvalue Var 0xa1ebcc0 '__data' 'const _CharT *')
              (DeclRefExpr 0xa1ebf14 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1eb840 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1ebfbc <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ebd80 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa1ebfd4 <col:63> '_CharT' lvalue ParmVar 0xa1eb800 '__c' '_CharT'))")
      (IfStmt 0xa1ec100 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0xa1ec028 <line:770:8> 'const _CharT *' lvalue Var 0xa1ebe70 '__p' 'const _CharT *')
        (BinaryOperator 0xa1ec0e8 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0xa1ec040 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ebad0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0xa1ec0c0 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa1ec088 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa1ec058 <col:14> 'const _CharT *' lvalue Var 0xa1ebe70 '__p' 'const _CharT *')
            (DeclRefExpr 0xa1ec070 <col:20> 'const _CharT *' lvalue Var 0xa1ebcc0 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa1ec178 <line:773:7, col:14>
    (DeclRefExpr 0xa1ec15c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ebad0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa1ed118 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0xa1ec9c0 <line:781:46>)
  (DeclStmt 0xa1eca80 <line:782:7, col:44>
    0xa1ec9e0 "const size_type __size =
      (CallExpr 0xa1eca60 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1eca28 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1eca18 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa1ed0d0 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1ecb08 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa1ecac0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
      (DeclRefExpr 0xa1eca90 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec730 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1ecaa8 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ec9e0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa1ed0b0 <line:784:2, line:793:2>
      (BinaryOperator 0xa1ecc90 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa1ecb2c <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec6f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa1ecc68 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0xa1ecb60 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
          (CXXUnresolvedConstructExpr 0xa1ecc30 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0xa1ecc08 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa1ecbd0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (DeclRefExpr 0xa1ecba0 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1ec9e0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0xa1ecbb8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec730 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0xa1ecc4c <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec6f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0xa1ecd68 <line:786:4, col:36>
        0xa1eccc0 "const _CharT *__data =
          (CallExpr 0xa1ecd48 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa1ecd08 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0xa1ed098 <line:787:4, line:792:22>
        (CompoundStmt 0xa1ecfb0 <line:788:6, line:791:6>
          (IfStmt 0xa1ecf90 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa1ecf40 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0xa1ecee8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
              (CallExpr 0xa1ecea8 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1ecda0 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0xa1ece50 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1ece08 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
                  (DeclRefExpr 0xa1ecdd4 <col:33> 'const _CharT *' lvalue Var 0xa1eccc0 '__data' 'const _CharT *')
                  (DeclRefExpr 0xa1ecdec <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec6f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa1ece74 <col:49> 'const _CharT *' lvalue ParmVar 0xa1ec6b0 '__s' 'const _CharT *')
                (DeclRefExpr 0xa1ece8c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec730 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0xa1eced0 <col:62> 'int' 0))
            (ReturnStmt 0xa1ecf80 <line:790:3, col:10>
              (DeclRefExpr 0xa1ecf64 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec6f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa1ed070 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa1ed028 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (UnaryOperator 0xa1ecff8 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa1ecfc4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ec6f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa1ed010 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa1ed108 <line:794:7, col:14>
    (DeclRefExpr 0xa1ed0ec <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0xa1a72f8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1eddd8 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0xa1ed980 <line:802:7, col:38>
    0xa1ed8e0 "size_type __size =
      (CallExpr 0xa1ed960 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1ed928 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa1ed918 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa1edd90 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1ed990 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ed8e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1edd78 <line:804:2, line:810:2>
      (IfStmt 0xa1edaa8 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1eda38 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa1ed9f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (UnaryOperator 0xa1ed9c0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa1ed9a8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ed8e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1ed9d4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ed650 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa1eda90 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa1eda5c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ed8e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1eda74 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ed650 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0xa1edd50 <line:807:4, line:809:15>
        (UnaryOperator 0xa1edae0 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa1edac4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ed8e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1edba0 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa1edb58 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (UnaryOperator 0xa1edb28 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa1edaf4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ed8e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa1edb40 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0xa1edd30 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0xa1edce0 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1edbf0 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0xa1edcb0 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0xa1edc78 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0xa1edc38 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa1edc94 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ed8e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa1edcc4 <col:45> '_CharT' lvalue ParmVar 0xa1ed610 '__c' '_CharT'))
          (ReturnStmt 0xa1edd20 <line:809:8, col:15>
            (DeclRefExpr 0xa1edd04 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ed8e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0xa1eddc8 <line:811:7, col:14>
    (DeclRefExpr 0xa1eddac <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa1ee9e0 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0xa1ee610 <line:819:46>)
  (ForStmt 0xa1ee990 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa1ee728 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0xa1ee61c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ee380 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa1ee700 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ee6b8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (DeclRefExpr 0xa1ee634 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ee340 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa1ee698 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1ee660 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0xa1ee650 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0xa1ee758 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa1ee740 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ee340 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa1ee978 <line:821:2, line:825:2>
      (DeclStmt 0xa1ee908 <line:822:4, col:69>
        0xa1ee780 "const _CharT *__p =
          (CallExpr 0xa1ee8e0 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1ee7d8 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0xa1ee80c <col:42> 'const _CharT *' lvalue ParmVar 0xa1ee300 '__s' 'const _CharT *')
            (DeclRefExpr 0xa1ee824 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ee380 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0xa1ee8c8 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0xa1ee890 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0xa1ee850 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa1ee8ac <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ee340 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0xa1ee958 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0xa1ee918 <line:823:8> 'const _CharT *' lvalue Var 0xa1ee780 '__p' 'const _CharT *')
        (ReturnStmt 0xa1ee948 <line:824:6, col:13>
          (DeclRefExpr 0xa1ee930 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1ee340 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0xa1ee9d0 <line:826:7, col:14>
    (DeclRefExpr 0xa1ee9b4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa1ef758 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0xa1ef210 <line:834:46>)
  (DeclStmt 0xa1ef2d0 <line:835:7, col:38>
    0xa1ef230 "size_type __size =
      (CallExpr 0xa1ef2b0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1ef278 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa1ef268 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa1ef710 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0xa1ef310 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa1ef2e0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ef230 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1ef2f8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1eef80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa1ef6f8 <line:837:2, line:846:2>
      (IfStmt 0xa1ef428 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1ef3b8 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa1ef370 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (UnaryOperator 0xa1ef340 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa1ef328 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ef230 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1ef354 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1eef40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa1ef410 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa1ef3dc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ef230 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1ef3f4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1eef40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa1ef6e0 <line:840:4, line:845:24>
        (CompoundStmt 0xa1ef5e8 <line:841:6, line:844:6>
          (IfStmt 0xa1ef5c8 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0xa1ef578 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1ef470 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa1ef4a4 <col:30> 'const _CharT *' lvalue ParmVar 0xa1eef00 '__s' 'const _CharT *')
              (DeclRefExpr 0xa1ef4bc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1eef80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0xa1ef560 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0xa1ef528 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0xa1ef4e8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa1ef544 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ef230 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0xa1ef5b8 <line:843:3, col:10>
              (DeclRefExpr 0xa1ef5a0 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ef230 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa1ef6b8 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa1ef660 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
          (UnaryOperator 0xa1ef630 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa1ef5fc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1ef230 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa1ef648 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa1ef748 <line:847:7, col:14>
    (DeclRefExpr 0xa1ef72c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa1f02d0 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0xa1effa0 <line:855:46>)
  (ForStmt 0xa1f0280 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1f0078 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa1f0030 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (DeclRefExpr 0xa1effac <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1efcc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1f0010 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1effd8 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa1effc8 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa1f00b8 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa1f009c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1efcc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa1f0260 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0xa1f0220 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0xa1f01f8 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1f00f0 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0xa1f0124 <col:25> 'const _CharT *' lvalue ParmVar 0xa1efc80 '__s' 'const _CharT *')
          (DeclRefExpr 0xa1f013c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1efd00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0xa1f01e0 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0xa1f01a8 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa1f0168 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1f01c4 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1efcc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0xa1f0250 <line:858:4, col:11>
        (DeclRefExpr 0xa1f0234 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1efcc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa1f02c0 <line:859:7, col:14>
    (DeclRefExpr 0xa1f02a4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa1a73d0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0xa1f0d90 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0xa1f0d40 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1f0b50 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa1f0b08 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (DeclRefExpr 0xa1f0a88 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f0800 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa1f0ae8 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f0ab0 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa1f0aa0 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa1f0b90 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa1f0b74 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f0800 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa1f0d20 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0xa1f0ce0 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0xa1f0cb8 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1f0bc8 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0xa1f0c88 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0xa1f0c50 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0xa1f0c10 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa1f0c6c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f0800 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1f0c9c <col:41> '_CharT' lvalue ParmVar 0xa1f07c0 '__c' '_CharT')))
      (ReturnStmt 0xa1f0d10 <line:869:4, col:11>
        (DeclRefExpr 0xa1f0cf4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f0800 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa1f0d80 <line:870:7, col:14>
    (DeclRefExpr 0xa1f0d64 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa1f1a50 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0xa1f15c0 <line:878:46>)
  (DeclStmt 0xa1f1680 <line:879:7, col:38>
    0xa1f15e0 "size_type __size =
      (CallExpr 0xa1f1660 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f1628 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa1f1618 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa1f1a08 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1f1690 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f15e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1f19f0 <line:881:2, line:890:2>
      (IfStmt 0xa1f17a8 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1f1738 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa1f16f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (UnaryOperator 0xa1f16c0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa1f16a8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f15e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1f16d4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f12f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa1f1790 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa1f175c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f15e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1f1774 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f12f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa1f19d8 <line:884:4, line:889:19>
        (CompoundStmt 0xa1f1978 <line:885:6, line:888:6>
          (IfStmt 0xa1f1958 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0xa1f1918 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0xa1f18f0 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f17e8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa1f181c <col:31> 'const _CharT *' lvalue ParmVar 0xa1f12b0 '__s' 'const _CharT *')
                (DeclRefExpr 0xa1f1834 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f1330 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0xa1f18d8 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0xa1f18a0 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0xa1f1860 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa1f18bc <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f15e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0xa1f1948 <line:887:3, col:10>
              (DeclRefExpr 0xa1f192c <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f15e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa1f19c0 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa1f198c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f15e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa1f1a40 <line:891:7, col:14>
    (DeclRefExpr 0xa1f1a24 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa1a7418 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1846a0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa1f2668 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0xa1f22b0 <line:899:7, col:38>
    0xa1f2210 "size_type __size =
      (CallExpr 0xa1f2290 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f2258 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa1f2248 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa1f2620 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1f22c0 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2210 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa1f2608 <line:901:2, line:910:2>
      (IfStmt 0xa1f23d8 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1f2368 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa1f2320 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (UnaryOperator 0xa1f22f0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa1f22d8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2210 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa1f2304 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f1f80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa1f23c0 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa1f238c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2210 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa1f23a4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f1f80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa1f25f0 <line:904:4, line:909:19>
        (CompoundStmt 0xa1f2590 <line:905:6, line:908:6>
          (IfStmt 0xa1f2570 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0xa1f2530 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0xa1f2508 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f2418 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0xa1f24d8 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa1f24a0 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0xa1f2460 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa1f24bc <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2210 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa1f24ec <col:48> '_CharT' lvalue ParmVar 0xa1f1f40 '__c' '_CharT')))
            (ReturnStmt 0xa1f2560 <line:907:3, col:10>
              (DeclRefExpr 0xa1f2544 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2210 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa1f25d8 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa1f25a4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2210 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa1f2658 <line:911:7, col:14>
    (DeclRefExpr 0xa1f263c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1cc170 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0xa1f3250 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0xa1f2c10 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0xa1f2ba0 <col:7> '<bound member function type>' ->_M_check 0xa189be0
      (CXXThisExpr 0xa1f2b90 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1f2bc0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f2a00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1f2bd8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa1f2cd8 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0xa1f2c34 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f2a40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1f2cb0 <col:13, col:32> '<dependent type>'
      (MemberExpr 0xa1f2c60 <col:13> '<bound member function type>' ->_M_limit 0xa189f00
        (CXXThisExpr 0xa1f2c50 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1f2c80 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f2a00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1f2c98 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f2a40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa1f2da8 <line:921:7, col:45>
    0xa1f2d00 "const size_type __osize =
      (CallExpr 0xa1f2d88 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f2d50 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0xa1f2d34 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f2a90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa1f2ea0 <line:922:7, col:53>
    0xa1f2dc0 "const size_type __len =
      (CallExpr 0xa1f2e78 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f2e10 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
        (DeclRefExpr 0xa1f2e48 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f2a40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f2e60 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2d00 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1f30f8 <line:923:7, col:77>
    0xa1f2ec0 "int __r =
      (CallExpr 0xa1f30d0 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f2f18 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa1f3020 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa1f2fd8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
          (CallExpr 0xa1f2fa0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa1f2f60 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1f2fbc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f2a00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa1f3098 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1f3060 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa1f3044 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f2a90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa1f30b4 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2dc0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1f31f8 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0xa1f3140 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1f3130 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa1f3120 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1f3108 <col:12> 'int' lvalue Var 0xa1f2ec0 '__r' 'int'))))
    (BinaryOperator 0xa1f31e0 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0xa1f3154 <col:2> 'int' lvalue Var 0xa1f2ec0 '__r' 'int')
      (CallExpr 0xa1f31b8 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0xa1f316c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa18b030 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1f3184 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f2a40 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f319c <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f2d00 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1f3240 <line:926:7, col:14>
    (ImplicitCastExpr 0xa1f3230 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1f3214 <col:14> 'int' lvalue Var 0xa1f2ec0 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0xa1f4058 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0xa1f3898 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0xa1f3828 <col:7> '<bound member function type>' ->_M_check 0xa189be0
      (CXXThisExpr 0xa1f3818 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1f3848 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f35f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1f3860 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0xa1f3958 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1f38d8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa1f38bc <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f3680 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa1f390c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f36c0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1f3924 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa1f3a20 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0xa1f397c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3630 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1f39f8 <col:14, col:35> '<dependent type>'
      (MemberExpr 0xa1f39a8 <col:14> '<bound member function type>' ->_M_limit 0xa189f00
        (CXXThisExpr 0xa1f3998 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1f39c8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f35f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1f39e0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3630 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0xa1f3af8 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0xa1f3a38 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3700 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1f3ad0 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1f3a68 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0xa1f3a50 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f3680 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa1f3a9c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f36c0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1f3ab4 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3700 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa1f3c00 <line:939:7, col:51>
    0xa1f3b20 "const size_type __len =
      (CallExpr 0xa1f3bd8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f3b70 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
        (DeclRefExpr 0xa1f3ba8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3630 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f3bc0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3700 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1f3ee0 <line:940:7, line:941:39>
    0xa1f3c20 "int __r =
      (CallExpr 0xa1f3eb8 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f3c78 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa1f3d80 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa1f3d38 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
          (CallExpr 0xa1f3d00 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa1f3cc0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1f3d1c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f35f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0xa1f3e78 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa1f3e30 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
          (CallExpr 0xa1f3df8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f3dc0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f3da4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f3680 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0xa1f3e14 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f36c0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1f3e9c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f3b20 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1f4000 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0xa1f3f28 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1f3f18 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa1f3f08 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1f3ef0 <col:12> 'int' lvalue Var 0xa1f3c20 '__r' 'int'))))
    (BinaryOperator 0xa1f3fe8 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa1f3f3c <col:2> 'int' lvalue Var 0xa1f3c20 '__r' 'int')
      (CallExpr 0xa1f3fc0 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa1f3f54 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa18b030 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1f3f90 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3630 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f3fa8 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f3700 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1f4048 <line:944:7, col:14>
    (ImplicitCastExpr 0xa1f4038 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1f401c <col:14> 'int' lvalue Var 0xa1f3c20 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0xa1f4ab0 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0xa1f4548 <line:952:37>)
  (DeclStmt 0xa1f4600 <line:953:7, col:44>
    0xa1f4560 "const size_type __size =
      (CallExpr 0xa1f45e0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f45a8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1f4598 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa1f46e8 <line:954:7, col:57>
    0xa1f4620 "const size_type __osize =
      (CallExpr 0xa1f46c8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f4678 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1f46ac <col:53> 'const _CharT *' lvalue ParmVar 0xa1f4430 '__s' 'const _CharT *'))")
  (DeclStmt 0xa1f47e0 <line:955:7, col:56>
    0xa1f4700 "const size_type __len =
      (CallExpr 0xa1f47b8 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f4750 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
        (DeclRefExpr 0xa1f4788 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f4560 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f47a0 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f4620 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1f4958 <line:956:7, col:60>
    0xa1f4800 "int __r =
      (CallExpr 0xa1f4930 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f4858 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0xa1f48e0 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0xa1f48a0 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa1f48fc <col:49> 'const _CharT *' lvalue ParmVar 0xa1f4430 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1f4914 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f4700 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1f4a58 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0xa1f49a0 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1f4990 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa1f4980 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1f4968 <col:12> 'int' lvalue Var 0xa1f4800 '__r' 'int'))))
    (BinaryOperator 0xa1f4a40 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0xa1f49b4 <col:2> 'int' lvalue Var 0xa1f4800 '__r' 'int')
      (CallExpr 0xa1f4a18 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0xa1f49cc <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa18b030 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1f49e4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f4560 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f49fc <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f4620 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1f4aa0 <line:959:7, col:14>
    (ImplicitCastExpr 0xa1f4a90 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1f4a74 <col:14> 'int' lvalue Var 0xa1f4800 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0xa1f56c8 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0xa1f5030 <line:967:37>)
  (CallExpr 0xa1f50c0 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0xa1f5050 <col:7> '<bound member function type>' ->_M_check 0xa189be0
      (CXXThisExpr 0xa1f5040 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1f5070 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f4e50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1f5088 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa1f5188 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa1f50e4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f4e90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1f5160 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa1f5110 <col:14> '<bound member function type>' ->_M_limit 0xa189f00
        (CXXThisExpr 0xa1f5100 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1f5130 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f4e50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1f5148 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f4e90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa1f5278 <line:970:7, col:57>
    0xa1f51b0 "const size_type __osize =
      (CallExpr 0xa1f5258 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f5208 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1f523c <col:53> 'const _CharT *' lvalue ParmVar 0xa1f4f00 '__s' 'const _CharT *'))")
  (DeclStmt 0xa1f5370 <line:971:7, col:54>
    0xa1f5290 "const size_type __len =
      (CallExpr 0xa1f5348 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f52e0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
        (DeclRefExpr 0xa1f5318 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f4e90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f5330 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f51b0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1f5570 <line:972:7, col:68>
    0xa1f5390 "int __r =
      (CallExpr 0xa1f5548 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f53e8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa1f54f0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa1f54a8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
          (CallExpr 0xa1f5470 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa1f5430 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1f548c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f4e50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1f5514 <col:57> 'const _CharT *' lvalue ParmVar 0xa1f4f00 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1f552c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f5290 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1f5670 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0xa1f55b8 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1f55a8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa1f5598 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1f5580 <col:12> 'int' lvalue Var 0xa1f5390 '__r' 'int'))))
    (BinaryOperator 0xa1f5658 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0xa1f55cc <col:2> 'int' lvalue Var 0xa1f5390 '__r' 'int')
      (CallExpr 0xa1f5630 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0xa1f55e4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa18b030 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1f55fc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f4e90 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f5614 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f51b0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1f56b8 <line:975:7, col:14>
    (ImplicitCastExpr 0xa1f56a8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1f568c <col:14> 'int' lvalue Var 0xa1f5390 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0xa1f6248 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0xa1f5c90 <line:984:47>)
  (CallExpr 0xa1f5d20 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0xa1f5cb0 <col:7> '<bound member function type>' ->_M_check 0xa189be0
      (CXXThisExpr 0xa1f5ca0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa1f5cd0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5a70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa1f5ce8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa1f5de8 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa1f5d44 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5ab0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa1f5dc0 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa1f5d70 <col:14> '<bound member function type>' ->_M_limit 0xa189f00
        (CXXThisExpr 0xa1f5d60 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa1f5d90 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5a70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa1f5da8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5ab0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa1f5ef0 <line:987:7, col:51>
    0xa1f5e10 "const size_type __len =
      (CallExpr 0xa1f5ec8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f5e60 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
        (DeclRefExpr 0xa1f5e98 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5ab0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f5eb0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5b60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa1f60f0 <line:988:7, col:68>
    0xa1f5f10 "int __r =
      (CallExpr 0xa1f60c8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f5f68 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa1f6070 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa1f6028 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1e8e10 0xa1e8210 0xa0674c0 0xa1bda30 0xa1bf520 0xa1bed20)
          (CallExpr 0xa1f5ff0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa1f5fb0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa1f600c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5a70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa1f6094 <col:57> 'const _CharT *' lvalue ParmVar 0xa1f5b20 '__s' 'const _CharT *')
        (DeclRefExpr 0xa1f60ac <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa1f5e10 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa1f61f0 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0xa1f6138 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1f6128 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa1f6118 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1f6100 <col:12> 'int' lvalue Var 0xa1f5f10 '__r' 'int'))))
    (BinaryOperator 0xa1f61d8 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa1f614c <col:2> 'int' lvalue Var 0xa1f5f10 '__r' 'int')
      (CallExpr 0xa1f61b0 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa1f6164 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa18b030 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa1f617c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5ab0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa1f6194 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa1f5b60 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa1f6238 <line:991:7, col:14>
    (ImplicitCastExpr 0xa1f6228 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1f620c <col:14> 'int' lvalue Var 0xa1f5f10 '__r' 'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa1f8920 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0xa1f69e0 <line:1000:7, col:61>
    0xa1f69b0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa1f6b80 <line:1001:7, col:66>
    0xa1f6b50 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1f6c70 <line:1002:7, col:67>
    0xa1f6c40 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa1f6d30 <line:1003:7, col:60>
    0xa1f6d00 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa1f6df0 <line:1004:7, col:61>
    0xa1f6dc0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa1f6ee0 <line:1005:7, col:44>
    0xa1f6eb0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa1f6fd0 <line:1006:7, col:69>
    0xa1f6fa0 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0xa1f7050 <line:1008:7, col:34>
    0xa1f7000 "__size_type __extracted =
      (IntegerLiteral 0xa1f7038 <col:33> 'int' 0)")
  (DeclStmt 0xa1f7190 <line:1009:7, col:63>
    0xa1f7110 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa1f7168 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa1f72a0 <line:1010:7, col:58>
    0xa1f7220 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa1f7280 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa1f7254 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa1f7270 <col:52> '_Bool' false))")
  (IfStmt 0xa1f8748 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1f72b0 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0xa1f7220 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa1f8728 <line:1012:2, line:1058:2>
      (IfStmt 0xa1f84f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f72c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1f84b8 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0xa1f7328 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f72f0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f72d8 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f6740 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa1f73d8 <line:1017:8, col:25>
            0xa1f73a0 "_CharT __buf[128]")
          (DeclStmt 0xa1f7440 <line:1018:8, col:29>
            0xa1f73f0 "__size_type __len =
              (IntegerLiteral 0xa1f7428 <col:28> 'int' 0)")
          (DeclStmt 0xa1f7508 <line:1019:8, col:43>
            0xa1f7460 "const streamsize __w =
              (CallExpr 0xa1f74e8 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f74b0 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f7494 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa1f7678 <line:1020:8, line:1021:51>
            0xa1f7520 "const __size_type __n =
              (ConditionalOperator 0xa1f7658 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0xa1f7598 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0xa1f7588 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa1f7554 <col:32> 'const streamsize':'const int' lvalue Var 0xa1f7460 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0xa1f7570 <col:38> 'int' 0))
                (CXXStaticCastExpr 0xa1f75d0 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0xa1f75b0 <col:67> 'const streamsize':'const int' lvalue Var 0xa1f7460 '__w' 'const streamsize':'const int'))
                (CallExpr 0xa1f7638 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1f7600 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1f75e8 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f6740 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0xa1f7818 <line:1022:8, col:73>
            0xa1f76e0 "const __ctype_type &__ct =
              (CallExpr 0xa1f77f8 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa1f7720 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa0f6850)
                (CallExpr 0xa1f77d8 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1f77a0 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1f7788 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa1f78f8 <line:1023:8, col:47>
            0xa1f7850 "const __int_type __eof =
              (CallExpr 0xa1f78d8 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa1f78b0 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa1f7a10 <line:1024:8, col:46>
            0xa1f7910 "__int_type __c =
              (CallExpr 0xa1f79f0 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f79b8 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa1f7998 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa1f7960 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa1f7944 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa1f8228 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0xa1f7d00 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0xa1f7b78 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa1f7a98 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1f7a50 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
                  (DeclRefExpr 0xa1f7a20 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f7000 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa1f7a38 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1f7520 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa1f7b60 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa1f7b38 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa1f7ae0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa1f7b04 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f7910 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa1f7b1c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa1f7850 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa1f7ce8 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0xa1f7cc0 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1f7ba8 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1f7b90 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa1f76e0 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0xa1f7c18 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0xa1f7ca0 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa1f7c60 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa1f7c84 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f7910 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0xa1f8208 <line:1030:3, line:1039:3>
              (IfStmt 0xa1f7fb0 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa1f7e08 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1f7db0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
                  (DeclRefExpr 0xa1f7d18 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f73f0 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0xa1f7d98 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0xa1f7d60 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0xa1f7d48 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0xa1f7d30 <col:25> '_CharT [128]' lvalue Var 0xa1f73a0 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0xa1f7d80 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0xa1f7f98 <line:1032:7, line:1035:7>
                  (CallExpr 0xa1f7f18 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa1f7e48 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa1f7e2c <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f6740 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0xa1f7e7c <col:22> '_CharT [128]' lvalue Var 0xa1f73a0 '__buf' '_CharT [128]')
                    (BinaryOperator 0xa1f7f00 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0xa1f7ec8 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0xa1f7eb0 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0xa1f7e94 <col:36> '_CharT [128]' lvalue Var 0xa1f73a0 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0xa1f7ee8 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0xa1f7f70 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0xa1f7f3c <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f73f0 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0xa1f7f58 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0xa1f80c8 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0xa1f8030 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f7fcc <col:5> '_CharT [128]' lvalue Var 0xa1f73a0 '__buf' '_CharT [128]')
                  (UnaryOperator 0xa1f8018 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa1f7fe4 <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f73f0 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0xa1f80a8 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa1f8068 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa1f808c <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f7910 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa1f80f8 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa1f80e0 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f7000 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa1f81f0 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa1f810c <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f7910 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa1f81d0 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1f8198 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa1f8178 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa1f8140 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa1f8124 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0xa1f82c0 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f8258 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f823c <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f6740 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0xa1f828c <col:21> '_CharT [128]' lvalue Var 0xa1f73a0 '__buf' '_CharT [128]')
            (DeclRefExpr 0xa1f82a4 <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f73f0 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0xa1f8410 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0xa1f8368 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa1f8310 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa1f8334 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f7910 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa1f834c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa1f7850 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa1f83f0 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa1f838c <col:3> 'typename __ios_base::iostate' lvalue Var 0xa1f7110 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa1f83c8 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0xa1f8498 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f8448 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f842c <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa1f8480 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa1f8608 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f8518 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1f85f0 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0xa1f85c0 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f8540 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f8528 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa1f8598 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa1f85e0 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0xa1f8708 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f8628 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1f86f0 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0xa1f86d0 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f8650 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f8638 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa1f86a8 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa1f8818 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0xa1f8780 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa1f8764 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f7000 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa1f87f8 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa1f8794 <col:2> 'typename __ios_base::iostate' lvalue Var 0xa1f7110 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa1f87d0 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa1f88d8 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0xa1f8834 <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0xa1f7110 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa1f88b8 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1f8868 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa1f884c <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa1f889c <col:16> 'typename __ios_base::iostate' lvalue Var 0xa1f7110 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa1f8910 <line:1064:7, col:14>
    (DeclRefExpr 0xa1f88f4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6590 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0xa1fa808 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0xa1f9130 <line:1072:7, col:61>
    0xa1f9100 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa1f92d0 <line:1073:7, col:66>
    0xa1f92a0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa1f9390 <line:1074:7, col:67>
    0xa1f9360 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa1f9430 <line:1075:7, col:60>
    0xa1f9400 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa1f94f0 <line:1076:7, col:61>
    0xa1f94c0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa1f9570 <line:1078:7, col:34>
    0xa1f9520 "__size_type __extracted =
      (IntegerLiteral 0xa1f9558 <col:33> 'int' 0)")
  (DeclStmt 0xa1f9638 <line:1079:7, col:47>
    0xa1f9590 "const __size_type __n =
      (CallExpr 0xa1f9618 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f95e0 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa1f95c4 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f8e30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa1f9750 <line:1080:7, col:63>
    0xa1f96d0 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa1f9728 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa1f9840 <line:1081:7, col:57>
    0xa1f97c0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa1f9820 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa1f97f4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa1f9810 <col:52> '_Bool' true))")
  (IfStmt 0xa1fa630 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1f9850 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0xa1f97c0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa1fa610 <line:1083:2, line:1122:2>
      (IfStmt 0xa1fa3e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f9868 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1fa3b8 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0xa1f98c8 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f9890 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f9878 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f8e30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa1f99d0 <line:1087:8, col:65>
            0xa1f9910 "const __int_type __idelim =
              (CallExpr 0xa1f99b0 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa1f9970 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0xa1f9994 <col:57> '_CharT' lvalue ParmVar 0xa1f8e70 '__delim' '_CharT'))")
          (DeclStmt 0xa1f9a90 <line:1088:8, col:47>
            0xa1f99f0 "const __int_type __eof =
              (CallExpr 0xa1f9a70 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa1f9a48 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa1f9bb0 <line:1089:8, col:46>
            0xa1f9ab0 "__int_type __c =
              (CallExpr 0xa1f9b90 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f9b58 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa1f9b38 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa1f9b00 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa1f9ae4 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa1fa000 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0xa1f9de8 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0xa1f9d18 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa1f9c38 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1f9bf0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
                  (DeclRefExpr 0xa1f9bc0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f9520 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa1f9bd8 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa1f9590 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa1f9d00 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa1f9cd8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa1f9c80 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa1f9ca4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f9ab0 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa1f9cbc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa1f99f0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa1f9dd0 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0xa1f9da8 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa1f9d50 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa1f9d74 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f9ab0 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0xa1f9d8c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa1f9910 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0xa1f9fe0 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0xa1f9e98 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa1f9e00 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa1f8e30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0xa1f9e78 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa1f9e38 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa1f9e5c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f9ab0 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa1f9ed0 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa1f9eb8 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f9520 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa1f9fc8 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa1f9ee4 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f9ab0 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa1f9fa8 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1f9f70 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa1f9f50 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa1f9f18 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa1f9efc <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0xa1fa398 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0xa1fa098 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa1fa040 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa1fa064 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f9ab0 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa1fa07c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa1f99f0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa1fa120 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa1fa0bc <col:3> 'typename __ios_base::iostate' lvalue Var 0xa1f96d0 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa1fa0f8 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0xa1fa378 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0xa1fa1c0 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa1fa168 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa1fa18c <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa1f9ab0 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0xa1fa1a4 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa1f9910 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0xa1fa2e0 <line:1103:3, line:1106:3>
                (UnaryOperator 0xa1fa200 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa1fa1e4 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f9520 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0xa1fa2c0 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1fa288 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0xa1fa268 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa1fa230 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0xa1fa214 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0xa1fa358 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa1fa2f8 <col:3> 'typename __ios_base::iostate' lvalue Var 0xa1f96d0 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0xa1fa330 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa1fa4f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fa400 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1fa4d8 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0xa1fa4a8 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fa428 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa1fa410 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa1fa480 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa1fa4c8 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0xa1fa5f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fa510 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1fa5d8 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0xa1fa5b8 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fa538 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa1fa520 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa1fa590 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa1fa700 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0xa1fa668 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa1fa64c <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa1f9520 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa1fa6e0 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa1fa67c <col:2> 'typename __ios_base::iostate' lvalue Var 0xa1f96d0 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa1fa6b8 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa1fa7c0 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0xa1fa71c <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0xa1f96d0 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa1fa7a0 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1fa750 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa1fa734 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa1fa784 <col:16> 'typename __ios_base::iostate' lvalue Var 0xa1f96d0 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa1fa7f8 <line:1127:7, col:14>
    (DeclRefExpr 0xa1fa7dc <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f8c80 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa1fc9e8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa1fc9d8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa1846f0 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa1846d8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa4a9830 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4a9820 <col:9, col:29>
    (ImplicitCastExpr 0xa4a9810 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa4a97f0 <col:17, col:29> 'char *' lvalue ._M_p 0xa1fcf70
        (MemberExpr 0xa4a97d0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa1fcfa0
          (CXXThisExpr 0xa4a96b0 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa4a9698 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa4a9688 <col:9, col:59>
    (UnaryOperator 0xa4a9670 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa4a9658 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4a9640 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa4a9628 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4a9610 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa4a95f0 <col:44, col:52> 'char *'
                (MemberExpr 0xa4a95d0 <col:44> '<bound member function type>' ->_M_data 0xa1fd020
                  (CXXThisExpr 0xa4a95c0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa1a8a48 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa1a8a30 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa4a8fe8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa4a8fd8 <col:9, col:26>
    (ImplicitCastExpr 0xa4a8fc8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa4a8fa8 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa21eea0
        (ImplicitCastExpr 0xa4a8f98 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa4a8f60 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa4a8f40 <col:16> '<bound member function type>' ->_M_rep 0xa1fd2f0
              (CXXThisExpr 0xa4a8e18 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa4a8e00 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa4a8df0 <col:9, col:32>
    (BinaryOperator 0xa4a8dd8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa4a8da8 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa4a8d88 <col:16, col:22> '<bound member function type>' ->size 0xa206280
          (CXXThisExpr 0xa4a8d78 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa4a8dc8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1afdf8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa4a9ed0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4a9958 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa4a9900 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa4a98f0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa4a9884 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa2077e0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa4a98d0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa4a98b0 <col:13, col:19> '<bound member function type>' ->size 0xa206280
          (CXXThisExpr 0xa4a98a0 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa4a9928 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4a9918 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b0264 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4a9948 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b0250 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b0220 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa4a9ec0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa4a9eb0 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa4a9e98 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa4a9e50 <col:9, col:17> 'char *'
          (MemberExpr 0xa4a9e30 <col:9> '<bound member function type>' ->_M_data 0xa1fd020
            (CXXThisExpr 0xa4a9e20 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa4a9e88 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa4a9e6c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa2077e0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa4a8838 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa4a8698 <line:180:4, col:62>
    0xa4a84c0 "void *__p =
      (CXXReinterpretCastExpr 0xa4a8680 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa4a8668 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa4a8610 <col:41> 'size_type []' lvalue Var 0xa244d70 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa4a8828 <line:181:4, col:39>
    (UnaryOperator 0xa4a8810 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa4a87f8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa4a87e8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa4a87cc <col:36> 'void *' lvalue Var 0xa4a84c0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa4a84a8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa4a8488 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4a81b0 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa4a8168 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa4a8158 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1a80dc <col:8> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa4a8190 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa4a8140 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa4a7fa0 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa4a8128 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa4a8108 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa4a80f8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa4a80c0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa244ef0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa4a81a0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa1a81c8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa4a8470 <line:236:6, line:245:6>
      (NullStmt 0xa1a8200 <line:238:67>)
      (IfStmt 0xa4a8450 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa4a82a8 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa4a8280 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa4a8270 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1a8230 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181750 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa4a8258 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa4a8238 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa244540
                (ImplicitCastExpr 0xa4a8228 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa4a8200 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa1a82c8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa1a82b0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa1a8308 <col:16> 'int' 0))
        (CompoundStmt 0xa4a8438 <line:241:3, line:244:3>
          (NullStmt 0xa1a8388 <line:242:63>)
          (CXXMemberCallExpr 0xa4a8418 <line:243:5, col:19> 'void'
            (MemberExpr 0xa4a83e0 <col:5> '<bound member function type>' ->_M_destroy 0xa245ba0
              (CXXThisExpr 0xa4a82c0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa4a8400 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa245a80 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa4a7700 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa223f18 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa223f08 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa1846f0 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa1846d8 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa4a7f40 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa4a7f30 <col:9, col:29>
    (ImplicitCastExpr 0xa4a7f20 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa4a7f00 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa2244a0
        (MemberExpr 0xa4a7ee0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa2244d0
          (CXXThisExpr 0xa4a7dc0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa4a7da8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa4a7d98 <col:9, col:59>
    (UnaryOperator 0xa4a7d80 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa4a7d68 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa4a7d50 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa4a7d38 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa4a7d20 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa4a7d00 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa4a7ce0 <col:44> '<bound member function type>' ->_M_data 0xa224550
                  (CXXThisExpr 0xa4a7cd0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa1a8a48 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa1a8a30 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa4a7650 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa4a7630 <col:9, col:51> 'void'
    (CXXTemporary 0xa4a75b0)
    (CXXMemberCallExpr 0xa4a75c8 <col:9, col:51> 'void'
      (MemberExpr 0xa4a752c <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa245ad0
        (CXXMemberCallExpr 0xa4a7500 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa4a74e0 <col:9> '<bound member function type>' ->_M_rep 0xa224840
            (ImplicitCastExpr 0xa4a7520 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa4a73c0 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa4a7620 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa4a7610 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa4a75b8 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa4a75b0)
            (CXXMemberCallExpr 0xa4a7580 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa4a7560 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa23c310
                (ImplicitCastExpr 0xa4a75a0 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa4a7550 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa4aa180 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa4aa170 <col:9, col:26>
    (ImplicitCastExpr 0xa4aa160 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa4aa140 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa2443c0
        (ImplicitCastExpr 0xa4aa130 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa4aa110 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa4aa0f0 <col:16> '<bound member function type>' ->_M_rep 0xa224840
              (CXXThisExpr 0xa4a9fd0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa4a9fb8 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa4a9fa8 <col:9, col:32>
    (BinaryOperator 0xa4a9f90 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa4a9f60 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa4a9f40 <col:16, col:22> '<bound member function type>' ->size 0xa22b760
          (CXXThisExpr 0xa4a9f30 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa4a9f80 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1afdf8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa4aa820 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa4aa2a8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa4aa250 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa4aa240 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa4aa1d4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa22ccc0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa4aa220 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa4aa200 <col:13, col:19> '<bound member function type>' ->size 0xa22b760
          (CXXThisExpr 0xa4aa1f0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa4aa278 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa4aa268 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1b0264 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4aa298 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa1b0250 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1b0220 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa4aa810 <line:859:2, col:22>
    (ImplicitCastExpr 0xa4aa800 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa4aa7e8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa4aa7a0 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa4aa780 <col:9> '<bound member function type>' ->_M_data 0xa224550
            (CXXThisExpr 0xa4aa770 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa4aa7d8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa4aa7bc <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa22ccc0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa4aad50 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa4aad40 <col:9, col:24>
    (ImplicitCastExpr 0xa4aad30 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa4aad10 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa4aacf0 <col:16> '<bound member function type>' ->_M_data 0xa224550
          (CXXThisExpr 0xa4aace0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa4a8a10 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa4a8a00 <col:9, col:16>
    (CXXConstructExpr 0xa4a89d8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa4a89c8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa4a89b8 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa4a8970 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa2244d0
            (CXXThisExpr 0xa4a8850 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0xa0eeec8 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0xa0eef70 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa0eef58 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0xa0eef28 <col:36> 'long' 1)
    (IntegerLiteral 0xa0eef40 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0xa0ef010 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa0eeff8 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0xa0eefc8 <col:37> 'long' 1)
    (IntegerLiteral 0xa0eefe0 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0xa0ef0b0 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa0ef098 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0xa0ef068 <col:37> 'long' 1)
    (IntegerLiteral 0xa0ef080 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0xa0ef150 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa0ef138 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0xa0ef108 <col:35> 'long' 1)
    (IntegerLiteral 0xa0ef120 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0xa0ef1f0 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa0ef1d8 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0xa0ef1a8 <col:38> 'long' 1)
    (IntegerLiteral 0xa0ef1c0 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0xa0ef290 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa0ef278 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0xa0ef248 <col:38> 'long' 1)
    (IntegerLiteral 0xa0ef260 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0xa0ef450 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0xa0ef438 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0xa0ef3f8 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0xa0ef3b8 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0xa0ef378 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0xa0ef338 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0xa0ef318 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0xa0ef2e4 <col:35> 'const category':'const int' lvalue Var 0xa0eeef0 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0xa0ef328 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0xa0ef2fc <col:43> 'const category':'const int' lvalue Var 0xa0eef90 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0xa0ef368 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0xa0ef350 <col:53> 'const category':'const int' lvalue Var 0xa0ef030 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0xa0ef3a8 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0xa0ef390 <col:9> 'const category':'const int' lvalue Var 0xa0ef0d0 'time' 'const category':'const int')))
      (ImplicitCastExpr 0xa0ef3e8 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0xa0ef3d0 <col:17> 'const category':'const int' lvalue Var 0xa0ef170 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0xa0ef428 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0xa0ef410 <col:28> 'const category':'const int' lvalue Var 0xa0ef210 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0xa258790 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0xa258780 <col:7, col:41>
    (UnaryOperator 0xa258768 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0xa258750 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0xa258730 <col:16, col:40> '_Bool'
          (MemberExpr 0xa2586f8 <col:16, col:30> '<bound member function type>' ->operator== 0xa0f02a0
            (CXXThisExpr 0xa2586e8 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0xa258718 <col:33> 'const class std::locale' lvalue ParmVar 0xa0f0320 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0xa2581e8 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa258190 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0xa258160 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0xa258178 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0xa259900 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2598e8 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0xa2599a0 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0xa259990 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0xa259980 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa259934 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0xa258c50 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0xa259950 <col:61> 'int' 1)
  (IntegerLiteral 0xa259968 <col:65> 'int' 0))
) (CompoundStmt 0xa2599e0 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0xa259928 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0xa259910 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0xa259b10 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0xa259ae8 <col:7, col:55> 'void'
    (ImplicitCastExpr 0xa259ad8 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa259a14 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0xa181be0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa259aa8 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa259a84 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0xa258a20
        (CXXThisExpr 0xa259a58 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0xa259ac0 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0xa259d68 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0xa259b28 <line:407:60>)
  (IfStmt 0xa259d48 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0xa259c40 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0xa259c00 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa259bf0 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa259b58 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181750 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa259ba8 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa259b88 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0xa258a20
            (CXXThisExpr 0xa259b78 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0xa259bd8 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0xa259bc0 <col:65> 'int' 1)))
      (IntegerLiteral 0xa259c28 <col:71> 'int' 1))
    (CompoundStmt 0xa259d28 <line:409:2, line:415:2>
      (NullStmt 0xa259c58 <line:410:63>)
      (IfStmt 0xa259cc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa259c68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa259cb0 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0xa259c98 <col:8, col:15> 'void'
            (ImplicitCastExpr 0xa259c88 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0xa259c78 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0xa259d08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa259ce8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa259cf8 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0xa25a730 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0xa25c638 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0xa25c610 <col:7, col:55> 'void'
    (ImplicitCastExpr 0xa25c600 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa25c57c <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0xa181be0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa25c5d0 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa25c5b0 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0xa25ae90
        (CXXThisExpr 0xa25c5a0 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0xa25c5e8 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0xa25c890 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0xa25c650 <line:516:60>)
  (IfStmt 0xa25c870 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0xa25c768 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0xa25c728 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa25c718 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa25c680 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181750 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa25c6d0 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa25c6b0 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0xa25ae90
            (CXXThisExpr 0xa25c6a0 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0xa25c700 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0xa25c6e8 <col:65> 'int' 1)))
      (IntegerLiteral 0xa25c750 <col:71> 'int' 1))
    (CompoundStmt 0xa25c850 <line:518:2, line:524:2>
      (NullStmt 0xa25c780 <line:519:63>)
      (IfStmt 0xa25c7f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa25c790 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa25c7d8 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0xa25c7c0 <col:8, col:15> 'void'
            (ImplicitCastExpr 0xa25c7b0 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0xa25c7a0 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0xa25c830 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa25c810 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa25c820 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0xa25cf08 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0xa25c8f8 <line:541:7, col:24>
    0xa25c8b0 "bool __ret =
      (CXXBoolLiteralExpr 0xa25c8e8 <col:20> '_Bool' true)")
  (IfStmt 0xa25ceb0 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0xa25c988 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa25c978 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0xa25c960 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0xa25c950 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0xa25c918 <col:11> 'char **' lvalue ->_M_names 0xa25afb0
              (CXXThisExpr 0xa25c908 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0xa25c938 <col:20> 'int' 1))))
    (ForStmt 0xa25ce88 <line:544:2, line:545:66>
      (DeclStmt 0xa25ca00 <line:544:7, col:21>
        0xa25c9a0 "size_t __i =
          (ImplicitCastExpr 0xa25c9f0 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa25c9d8 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0xa25cae0 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0xa25cad0 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa25ca10 <col:23> '_Bool' lvalue Var 0xa25c8b0 '__ret' '_Bool'))
        (BinaryOperator 0xa25cab8 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0xa25ca98 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa25ca28 <col:32> 'size_t':'unsigned int' lvalue Var 0xa25c9a0 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0xa25caa8 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0xa25ca80 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0xa25ca70 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0xa25ca40 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0xa2581b0 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0xa25ca58 <col:59> 'int' 1)))))
      (UnaryOperator 0xa25cb10 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0xa25caf8 <col:64> 'size_t':'unsigned int' lvalue Var 0xa25c9a0 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0xa25ce70 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0xa25cb24 <col:4> '_Bool' lvalue Var 0xa25c8b0 '__ret' '_Bool')
        (BinaryOperator 0xa25ce58 <col:12, col:66> '_Bool' '=='
          (CallExpr 0xa25cdd8 <col:12, col:61> 'int'
            (ImplicitCastExpr 0xa25cdc8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa25cc54 <col:12> 'int (const char *, const char *)' lvalue Function 0xa25cb40 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0xa25ce10 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0xa25ce00 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0xa25ccd8 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0xa25ccb8 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0xa25cc80 <col:29> 'char **' lvalue ->_M_names 0xa25afb0
                      (CXXThisExpr 0xa25cc70 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0xa25ccc8 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa25cca0 <col:38> 'size_t':'unsigned int' lvalue Var 0xa25c9a0 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0xa25ce30 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0xa25ce20 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0xa25cd98 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0xa25cd88 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0xa25cd00 <col:44> 'char **' lvalue ->_M_names 0xa25afb0
                      (CXXThisExpr 0xa25ccf0 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0xa25cd70 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa25cd50 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa25cd20 <col:53> 'size_t':'unsigned int' lvalue Var 0xa25c9a0 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0xa25cd60 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa25cd38 <col:59> 'int' 1)))))))
          (IntegerLiteral 0xa25ce40 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa25cef8 <line:546:7, col:14>
    (ImplicitCastExpr 0xa25cee8 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa25cecc <col:14> '_Bool' lvalue Var 0xa25c8b0 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0xa25d000 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0xa25cfd8 <col:9, col:46> '<dependent type>'
    (MemberExpr 0xa25cf38 <col:9> '<bound member function type>' ->_M_install_facet 0xa25c1f0
      (CXXThisExpr 0xa25cf28 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0xa25cfa8 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0xa25cf80 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0xa25cfbc <col:39> '_Facet *' lvalue ParmVar 0xa25c2f0 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0xa25e920 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa25e908 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa25e954 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0xa25d900 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa25ea48 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa25ea38 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa25e9e8 <col:44> '__c_locale (void)' lvalue CXXMethod 0xa2593f0 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0xa25eab0 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa25e948 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa25e930 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa25eac0 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0xa25da50 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa25ebd8 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa25ebc8 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0xa25eb58 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0xa2590b0 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0xa25eb70 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa25da10 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0xa25ec40 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa25ed50 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0xa25ed40 <col:9, col:59>
    (CallExpr 0xa25ed10 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25ec78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25ec68 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa25ecac <col:33> 'const _CharT *' lvalue ParmVar 0xa25db90 '__lo1' 'const _CharT *')
      (DeclRefExpr 0xa25ecc4 <col:40> 'const _CharT *' lvalue ParmVar 0xa25dbe0 '__hi1' 'const _CharT *')
      (DeclRefExpr 0xa25ecdc <col:47> 'const _CharT *' lvalue ParmVar 0xa25dc30 '__lo2' 'const _CharT *')
      (DeclRefExpr 0xa25ecf4 <col:54> 'const _CharT *' lvalue ParmVar 0xa25dc80 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa25ee18 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0xa25ee08 <col:9, col:45>
    (CallExpr 0xa25ede0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25ed78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25ed68 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa25edac <col:35> 'const _CharT *' lvalue ParmVar 0xa25ddd0 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa25edc4 <col:41> 'const _CharT *' lvalue ParmVar 0xa25de20 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa25eee0 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0xa25eed0 <col:9, col:40>
    (CallExpr 0xa25eea8 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa25ee40 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa25ee30 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa25ee74 <col:30> 'const _CharT *' lvalue ParmVar 0xa25df40 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa25ee8c <col:36> 'const _CharT *' lvalue ParmVar 0xa25df90 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0xa25ef78 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0xa25ef58 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0xa25eef4 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0xa2591d0 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0xa25ef38 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0xa25d820
      (CXXThisExpr 0xa25ef28 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0xa25f1c8 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa263a40 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa263a28 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0xa263ae0 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0xa263870 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa263f30 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0xa263f10 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0xa263d40 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0xa263c00 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0xa263ba0 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa263b90 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa263b3c <col:6> 'int (const char *, const char *)' lvalue Function 0xa25cb40 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa263bc8 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa263b54 <col:23> 'const char *' lvalue ParmVar 0xa263830 '__s' 'const char *'))
          (ImplicitCastExpr 0xa263bd8 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa263b6c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa263be8 <col:36> 'int' 0))
      (BinaryOperator 0xa263d28 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0xa263cc8 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa263cb8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa263c18 <col:9> 'int (const char *, const char *)' lvalue Function 0xa25cb40 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa263cf0 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa263c30 <col:26> 'const char *' lvalue ParmVar 0xa263830 '__s' 'const char *'))
          (ImplicitCastExpr 0xa263d00 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa263c90 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa263d10 <col:43> 'int' 0)))
    (CompoundStmt 0xa263ef8 <line:808:4, line:811:4>
      (CallExpr 0xa263e08 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa263d88 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa263d78 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa263dd0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa263dc0 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0xa263ed0 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa263e38 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa263e28 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa263e80 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa263e70 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0xa263eb4 <col:58> 'const char *' lvalue ParmVar 0xa263830 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0xa263f48 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0xa268428 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0xa264400 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0xa2642d8 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa0f0b40
      (CXXThisExpr 0xa2642c8 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0xa2643c0 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0xa264378 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0xa264340 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0xa264330 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa264310 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
              (DeclRefExpr 0xa2642f8 <col:28> 'const class std::locale' lvalue ParmVar 0xa2640c0 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0xa264388 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa264358 <col:45> 'int' 1))))
  (IfStmt 0xa264548 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa264418 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa264530 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0xa264508 <col:4, col:46> '<dependent type>'
        (MemberExpr 0xa264464 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0xa25c1f0
          (ImplicitCastExpr 0xa264458 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa264438 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa0f0b40
              (CXXThisExpr 0xa264428 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0xa2644d8 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa2644b0 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0xa2644ec <col:43> '_Facet *' lvalue ParmVar 0xa264130 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0xa264620 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa264568 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa264608 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0xa2645d8 <line:52:4, col:33> 'void'
        (MemberExpr 0xa2645b4 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0xa25b510
          (ImplicitCastExpr 0xa2645a8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa264588 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa0f0b40
              (CXXThisExpr 0xa264578 <col:4> 'class std::locale *' this)))))
      (NullStmt 0xa2645f8 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa2646f0 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0xa2646e0 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0xa2646c8 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0xa2646b8 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0xa26467c <col:17, col:26> 'char **' lvalue ->_M_names 0xa25afb0
            (ImplicitCastExpr 0xa264670 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa264650 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa0f0b40
                (CXXThisExpr 0xa264640 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0xa2646a0 <col:35> 'int' 0))))
  (BinaryOperator 0xa268410 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0xa264790 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0xa264780 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0xa264744 <col:7, col:16> 'char **' lvalue ->_M_names 0xa25afb0
          (ImplicitCastExpr 0xa264738 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa264718 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa0f0b40
              (CXXThisExpr 0xa264708 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0xa264768 <col:25> 'int' 0))
    (ImplicitCastExpr 0xa268400 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0xa2683e8 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0xa268a88 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0xa268758 <line:64:7, col:44>
    0xa268620 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0xa268718 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0xa2686d0 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0xa268698 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0xa268688 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa268668 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0xa0f0b40
                (CXXThisExpr 0xa268658 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0xa2686e0 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa2686b0 <col:42> 'int' 1)))")
  (IfStmt 0xa2688a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa268768 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa268888 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0xa268860 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0xa26879c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0xa25c060
          (ImplicitCastExpr 0xa268790 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa268778 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa268620 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0xa2687d4 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
          (DeclRefExpr 0xa2687bc <col:28> 'const class std::locale' lvalue ParmVar 0xa2684d0 '__other' 'const class std::locale &'))
        (UnaryOperator 0xa268848 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa268820 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0xa268960 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2688c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa268948 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0xa268918 <line:71:4, col:31> 'void'
        (MemberExpr 0xa2688f4 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0xa25b510
          (ImplicitCastExpr 0xa2688e8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa2688d0 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa268620 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0xa268938 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0xa268a78 <line:74:7, col:26>
    (ExprWithCleanups 0xa268a58 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0xa2689e0)
      (CXXConstructExpr 0xa268a30 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0xa268a20 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0xa268a10 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0xa2689f8 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa2689e8 <col:14, col:21> 'class std::locale' (CXXTemporary 0xa2689e0)
                (CXXConstructExpr 0xa2689b0 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0xa2689a0 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0xa268988 <col:21> 'class std::locale::_Impl *' lvalue Var 0xa268620 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0xa2697b0 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0xa269190 <line:83:7, col:50>
    0xa269160 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0xa2692f0 <line:84:7, col:73>
    0xa269200 "const __collate_type &__collate =
      (CallExpr 0xa2692d0 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa269240 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0xa25d2e0)
        (UnaryOperator 0xa2692b8 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0xa2692a8 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0xa2697a0 <line:85:7, line:86:50>
    (ParenExpr 0xa269788 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0xa269760 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa269718 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (CallExpr 0xa2696d0 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa269318 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0xa269300 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0xa269200 '__collate' 'const __collate_type &'))
          (CallExpr 0xa2693a0 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa269368 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa26934c <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa268d40 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa2694e8 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0xa2694a0 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
            (CallExpr 0xa269410 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2693d8 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0xa2693bc <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa268d40 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa269480 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa269448 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0xa26942c <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa268d40 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0xa269560 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa269528 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa26950c <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa268ef0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa2696a8 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa269660 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
            (CallExpr 0xa2695d0 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa269598 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0xa26957c <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa268ef0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa269640 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa269608 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0xa2695ec <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa268ef0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0xa269700 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0xa269cf0 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0xa269a10 <line:94:7, col:44>
    0xa269930 "const size_t __i =
      (CallExpr 0xa2699f0 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2699b8 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa269990 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa269b40 <line:95:7, col:64>
    0xa269a90 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa269b30 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa269b0c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0xa25aef0
          (ImplicitCastExpr 0xa269b00 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa269adc <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
              (DeclRefExpr 0xa269ac4 <col:40> 'const class std::locale' lvalue ParmVar 0xa269840 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0xa269ce0 <line:96:7, line:98:53>
    (ParenExpr 0xa269cc8 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0xa269cb0 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0xa269bf0 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0xa269bd0 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa269b50 <col:15> 'const size_t':'const unsigned int' lvalue Var 0xa269930 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0xa269be0 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0xa269bac <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0xa25af30
              (ImplicitCastExpr 0xa269ba0 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0xa269b80 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
                  (DeclRefExpr 0xa269b68 <col:21> 'const class std::locale' lvalue ParmVar 0xa269840 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0xa269c98 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0xa269c58 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa269c38 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa269c08 <col:39> 'const class locale::facet **' lvalue Var 0xa269a90 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa269c48 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa269c20 <col:48> 'const size_t':'const unsigned int' lvalue Var 0xa269930 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0xa26a388 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0xa269fa0 <line:108:7, col:44>
    0xa269ec0 "const size_t __i =
      (CallExpr 0xa269f80 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa269f48 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa269f20 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa26a0a0 <line:109:7, col:64>
    0xa269ff0 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa26a090 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa26a06c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0xa25aef0
          (ImplicitCastExpr 0xa26a060 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa26a03c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
              (DeclRefExpr 0xa26a024 <col:40> 'const class std::locale' lvalue ParmVar 0xa269d80 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa26a2a0 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0xa26a208 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0xa26a150 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0xa26a130 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa26a0b0 <col:11> 'const size_t':'const unsigned int' lvalue Var 0xa269ec0 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa26a140 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0xa26a10c <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0xa25af30
            (ImplicitCastExpr 0xa26a100 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa26a0e0 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
                (DeclRefExpr 0xa26a0c8 <col:18> 'const class std::locale' lvalue ParmVar 0xa269d80 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0xa26a1f0 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa26a1e0 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa26a1d0 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0xa26a1b8 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0xa26a198 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0xa26a168 <col:52> 'const class locale::facet **' lvalue Var 0xa269ff0 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0xa26a1a8 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa26a180 <col:61> 'const size_t':'const unsigned int' lvalue Var 0xa269ec0 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0xa26a280 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0xa26a270 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa26a254 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0xa016e50 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa26a378 <line:113:7, col:56>
    (CXXDynamicCastExpr 0xa26a360 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0xa26a338 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0xa26a328 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa26a310 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa26a2f0 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa26a2bc <col:43> 'const class locale::facet **' lvalue Var 0xa269ff0 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa26a300 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa26a2d4 <col:52> 'const size_t':'const unsigned int' lvalue Var 0xa269ec0 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0xa26a710 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0xa26a700 <col:7, col:14>
    (IntegerLiteral 0xa26a6e8 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0xa26ab18 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0xa26ab08 <col:7, col:14>
    (ImplicitCastExpr 0xa26aaf8 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa26aae0 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa26be30 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0xa26afb8 <line:140:7, col:44>
    0xa26af30 "const string_type __one =
      (ParenListExpr 0xa26af98 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa26af64 <col:31> 'const _CharT *' lvalue ParmVar 0xa26ad00 '__lo1' 'const _CharT *')
        (DeclRefExpr 0xa26af7c <col:38> 'const _CharT *' lvalue ParmVar 0xa26ad50 '__hi1' 'const _CharT *'))")
  (DeclStmt 0xa26b058 <line:141:7, col:44>
    0xa26afd0 "const string_type __two =
      (ParenListExpr 0xa26b038 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa26b004 <col:31> 'const _CharT *' lvalue ParmVar 0xa26ada0 '__lo2' 'const _CharT *')
        (DeclRefExpr 0xa26b01c <col:38> 'const _CharT *' lvalue ParmVar 0xa26adf0 '__hi2' 'const _CharT *'))")
  (DeclStmt 0xa26b128 <line:143:7, col:40>
    0xa26b080 "const _CharT *__p =
      (CallExpr 0xa26b108 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa26b0d0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa26b0b4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26af30 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa26b2d8 <line:144:7, col:59>
    0xa26b150 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa26b2b0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa26b268 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (CallExpr 0xa26b1d8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26b1a0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa26b184 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26af30 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa26b248 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26b210 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa26b1f4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26af30 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa26b3a8 <line:145:7, col:40>
    0xa26b300 "const _CharT *__q =
      (CallExpr 0xa26b388 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa26b350 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa26b334 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26afd0 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa26b558 <line:146:7, col:59>
    0xa26b3d0 "const _CharT *__qend =
      (CXXOperatorCallExpr 0xa26b530 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa26b4e8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (CallExpr 0xa26b458 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26b420 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa26b404 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26afd0 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa26b4c8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26b490 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa26b474 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26afd0 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0xa26be08 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0xa26bdd8 <line:152:2, line:168:2>
      (DeclStmt 0xa26b640 <line:153:4, col:42>
        0xa26b580 "const int __res =
          (CallExpr 0xa26b618 <col:22, col:41> '<dependent type>'
            (MemberExpr 0xa26b5c8 <col:22> '<bound member function type>' ->_M_compare 0xa26a650
              (CXXThisExpr 0xa26b5b8 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0xa26b5e8 <col:33> 'const _CharT *' lvalue Var 0xa26b080 '__p' 'const _CharT *')
            (DeclRefExpr 0xa26b600 <col:38> 'const _CharT *' lvalue Var 0xa26b300 '__q' 'const _CharT *'))")
      (IfStmt 0xa26b6c0 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0xa26b678 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa26b668 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0xa26b650 <col:8> 'const int' lvalue Var 0xa26b580 '__res' 'const int')))
        (ReturnStmt 0xa26b6b0 <line:155:6, col:13>
          (ImplicitCastExpr 0xa26b6a0 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0xa26b684 <col:13> 'const int' lvalue Var 0xa26b580 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0xa26b810 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa26b6dc <col:4> 'const _CharT *' lvalue Var 0xa26b080 '__p' 'const _CharT *')
        (CallExpr 0xa26b7f0 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26b7a0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa26b7d4 <col:39> 'const _CharT *' lvalue Var 0xa26b080 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0xa26b960 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa26b830 <col:4> 'const _CharT *' lvalue Var 0xa26b300 '__q' 'const _CharT *')
        (CallExpr 0xa26b940 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26b8f0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa26b924 <col:39> 'const _CharT *' lvalue Var 0xa26b300 '__q' 'const _CharT *')))
      (IfStmt 0xa26bd28 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0xa26bae0 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa26ba08 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0xa26b9b0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
            (DeclRefExpr 0xa26b980 <col:8> 'const _CharT *' lvalue Var 0xa26b080 '__p' 'const _CharT *')
            (DeclRefExpr 0xa26b998 <col:15> 'const _CharT *' lvalue Var 0xa26b150 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0xa26bab8 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa26ba60 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
            (DeclRefExpr 0xa26ba2c <col:25> 'const _CharT *' lvalue Var 0xa26b300 '__q' 'const _CharT *')
            (DeclRefExpr 0xa26ba44 <col:32> 'const _CharT *' lvalue Var 0xa26b3d0 '__qend' 'const _CharT *')))
        (ReturnStmt 0xa26bb10 <line:160:6, col:13>
          (IntegerLiteral 0xa26baf8 <col:13> 'int' 0))
        (IfStmt 0xa26bd08 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa26bba8 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa26bb50 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
            (DeclRefExpr 0xa26bb20 <col:13> 'const _CharT *' lvalue Var 0xa26b080 '__p' 'const _CharT *')
            (DeclRefExpr 0xa26bb38 <col:20> 'const _CharT *' lvalue Var 0xa26b150 '__pend' 'const _CharT *'))
          (ReturnStmt 0xa26bc00 <line:162:6, col:14>
            (UnaryOperator 0xa26bbe8 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0xa26bbd0 <col:14> 'int' 1)))
          (IfStmt 0xa26bce8 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa26bc98 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa26bc40 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
              (DeclRefExpr 0xa26bc10 <col:13> 'const _CharT *' lvalue Var 0xa26b300 '__q' 'const _CharT *')
              (DeclRefExpr 0xa26bc28 <col:20> 'const _CharT *' lvalue Var 0xa26b3d0 '__qend' 'const _CharT *'))
            (ReturnStmt 0xa26bcd8 <line:164:6, col:13>
              (IntegerLiteral 0xa26bcc0 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0xa26bd78 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa26bd44 <col:4> 'const _CharT *' lvalue Var 0xa26b080 '__p' 'const _CharT *'))
      (UnaryOperator 0xa26bdc0 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa26bd8c <col:4> 'const _CharT *' lvalue Var 0xa26b300 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa26dc60 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0xa26c3b8 <line:176:7, col:24>
    0xa26c380 "string_type __ret")
  (DeclStmt 0xa26ce88 <line:179:7, col:42>
    0xa26ce00 "const string_type __str =
      (ParenListExpr 0xa26ce68 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa26ce34 <col:31> 'const _CharT *' lvalue ParmVar 0xa26c130 '__lo' 'const _CharT *')
        (DeclRefExpr 0xa26ce4c <col:37> 'const _CharT *' lvalue ParmVar 0xa26c180 '__hi' 'const _CharT *'))")
  (DeclStmt 0xa26cf58 <line:181:7, col:40>
    0xa26ceb0 "const _CharT *__p =
      (CallExpr 0xa26cf38 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa26cf00 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa26cee4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26ce00 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa26d108 <line:182:7, col:59>
    0xa26cf80 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa26d0e0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa26d098 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (CallExpr 0xa26d008 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26cfd0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa26cfb4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26ce00 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa26d078 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa26d040 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa26d024 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa26ce00 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa26d230 <line:184:7, col:39>
    0xa26d120 "size_t __len =
      (BinaryOperator 0xa26d218 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0xa26d1e8 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0xa26d1c0 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa26d188 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa26d154 <col:23> 'const _CharT *' lvalue ParmVar 0xa26c180 '__hi' 'const _CharT *')
            (DeclRefExpr 0xa26d16c <col:30> 'const _CharT *' lvalue ParmVar 0xa26c130 '__lo' 'const _CharT *')))
        (IntegerLiteral 0xa26d200 <col:38> 'int' 2))")
  (DeclStmt 0xa26d308 <line:186:7, col:38>
    0xa26d270 "_CharT *__c =
      (CXXNewExpr 0xa26d2c8 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0xa26d2a4 <col:32> 'size_t':'unsigned int' lvalue Var 0xa26d120 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0xa26db60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa26d318 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa26db48 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0xa26db20 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0xa26daf0 <line:194:6, line:214:6>
          (DeclStmt 0xa26d408 <line:196:8, col:52>
            0xa26d330 "size_t __res =
              (CallExpr 0xa26d3e0 <col:23, col:51> '<dependent type>'
                (MemberExpr 0xa26d378 <col:23> '<bound member function type>' ->_M_transform 0xa26aa40
                  (CXXThisExpr 0xa26d368 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0xa26d398 <col:36> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *')
                (DeclRefExpr 0xa26d3b0 <col:41> 'const _CharT *' lvalue Var 0xa26ceb0 '__p' 'const _CharT *')
                (DeclRefExpr 0xa26d3c8 <col:46> 'size_t':'unsigned int' lvalue Var 0xa26d120 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0xa26d728 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0xa26d468 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0xa26d448 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa26d418 <col:12> 'size_t':'unsigned int' lvalue Var 0xa26d330 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa26d458 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa26d430 <col:21> 'size_t':'unsigned int' lvalue Var 0xa26d120 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0xa26d708 <line:200:3, line:205:3>
              (BinaryOperator 0xa26d500 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0xa26d480 <col:5> 'size_t':'unsigned int' lvalue Var 0xa26d120 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0xa26d4e8 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa26d4c8 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa26d498 <col:13> 'size_t':'unsigned int' lvalue Var 0xa26d330 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0xa26d4d8 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa26d4b0 <col:21> 'int' 1))))
              (BinaryOperator 0xa26d590 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0xa26d530 <col:5, col:15> 'void'
                  (DeclRefExpr 0xa26d518 <col:15> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *'))
                (BinaryOperator 0xa26d578 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0xa26d548 <col:20> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *')
                  (IntegerLiteral 0xa26d560 <col:26> 'int' 0)))
              (BinaryOperator 0xa26d620 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0xa26d5a8 <col:5> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *')
                (CXXNewExpr 0xa26d5e0 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0xa26d5c0 <col:22> 'size_t':'unsigned int' lvalue Var 0xa26d120 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0xa26d6f0 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa26d638 <col:5> 'size_t':'unsigned int' lvalue Var 0xa26d330 '__res' 'size_t':'unsigned int')
                (CallExpr 0xa26d6c8 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0xa26d660 <col:13> '<bound member function type>' ->_M_transform 0xa26aa40
                    (CXXThisExpr 0xa26d650 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0xa26d680 <col:26> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *')
                  (DeclRefExpr 0xa26d698 <col:31> 'const _CharT *' lvalue Var 0xa26ceb0 '__p' 'const _CharT *')
                  (DeclRefExpr 0xa26d6b0 <col:36> 'size_t':'unsigned int' lvalue Var 0xa26d120 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0xa26d7c8 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa26d760 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa26d744 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa26c380 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0xa26d794 <col:21> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *')
            (DeclRefExpr 0xa26d7ac <col:26> 'size_t':'unsigned int' lvalue Var 0xa26d330 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0xa26d920 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa26d7ec <col:8> 'const _CharT *' lvalue Var 0xa26ceb0 '__p' 'const _CharT *')
            (CallExpr 0xa26d900 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa26d8b0 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0xa26d8e4 <col:43> 'const _CharT *' lvalue Var 0xa26ceb0 '__p' 'const _CharT *')))
          (IfStmt 0xa26d9f8 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa26d9c8 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0xa26d970 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
              (DeclRefExpr 0xa26d940 <col:12> 'const _CharT *' lvalue Var 0xa26ceb0 '__p' 'const _CharT *')
              (DeclRefExpr 0xa26d958 <col:19> 'const _CharT *' lvalue Var 0xa26cf80 '__pend' 'const _CharT *'))
            (BreakStmt 0xa26d9f0 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa26da48 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa26da14 <col:8> 'const _CharT *' lvalue Var 0xa26ceb0 '__p' 'const _CharT *'))
          (CallExpr 0xa26dad0 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa26da78 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa26da5c <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa26c380 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0xa26dab8 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0xa26dbe8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa26db80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa26dbd0 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0xa26dba8 <line:218:4, col:14> 'void'
        (DeclRefExpr 0xa26db90 <col:14> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *'))
      (NullStmt 0xa26dbc0 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa26dc20 <line:222:7, col:17> 'void'
    (DeclRefExpr 0xa26dc04 <col:17> '_CharT *' lvalue Var 0xa26d270 '__c' '_CharT *'))
  (ReturnStmt 0xa26dc50 <line:224:7, col:14>
    (DeclRefExpr 0xa26dc38 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0xa26c380 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa26f540 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0xa26e050 <line:232:7, col:30>
    0xa26dff0 "unsigned long __val =
      (ImplicitCastExpr 0xa26e040 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0xa26e028 <col:29> 'int' 0))")
  (ForStmt 0xa26f4a8 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa26e0d8 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa26e090 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (DeclRefExpr 0xa26e060 <col:14> 'const _CharT *' lvalue ParmVar 0xa26de70 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa26e078 <col:21> 'const _CharT *' lvalue ParmVar 0xa26dec0 '__hi' 'const _CharT *'))
    (UnaryOperator 0xa26e118 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa26e0fc <col:29> 'const _CharT *' lvalue ParmVar 0xa26de70 '__lo' 'const _CharT *'))
    (BinaryOperator 0xa26f490 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0xa26e12c <line:234:2> 'unsigned long' lvalue Var 0xa26dff0 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0xa26f468 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa26f420 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (UnaryOperator 0xa26e160 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa26e144 <col:5> 'const _CharT *' lvalue ParmVar 0xa26de70 '__lo' 'const _CharT *'))
        (ParenExpr 0xa26f408 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0xa26f3f0 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0xa26e1d0 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0xa26e1b8 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0xa26e1a8 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa26e174 <col:14> 'unsigned long' lvalue Var 0xa26dff0 '__val' 'unsigned long'))
                (IntegerLiteral 0xa26e190 <col:23> 'int' 7)))
            (ParenExpr 0xa26f3d8 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0xa26f3c0 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0xa26f378 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa26e1e4 <col:9> 'unsigned long' lvalue Var 0xa26dff0 '__val' 'unsigned long'))
                (ParenExpr 0xa26f360 <col:18, line:237:17> 'int'
                  (BinaryOperator 0xa26f348 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0xa26f338 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa26f2fc <line:236:19, line:237:5> 'const int' lvalue Var 0xa26f0f0 '__digits' 'const int'))
                    (IntegerLiteral 0xa26f320 <col:16> 'int' 7))))))))))
  (ReturnStmt 0xa26f530 <line:238:7, col:37>
    (CXXStaticCastExpr 0xa26f518 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0xa26f508 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0xa26f4f8 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0xa26f4cc <col:32> 'unsigned long' lvalue Var 0xa26dff0 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0xa272d18 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272360 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa272330 <col:23> 'long' 1)
    (IntegerLiteral 0xa272348 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0xa272d28 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2723e8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa2723b8 <col:18> 'long' 1)
    (IntegerLiteral 0xa2723d0 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0xa272d38 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272468 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa272438 <col:20> 'long' 1)
    (IntegerLiteral 0xa272450 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0xa272d48 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2724e8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa2724b8 <col:18> 'long' 1)
    (IntegerLiteral 0xa2724d0 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0xa272d58 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272568 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa272538 <col:22> 'long' 1)
    (IntegerLiteral 0xa272550 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0xa272d68 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2725e8 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0xa2725b8 <col:19> 'long' 1)
    (IntegerLiteral 0xa2725d0 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0xa272d78 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272668 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa272638 <col:18> 'long' 1)
    (IntegerLiteral 0xa272650 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0xa272d88 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2726e8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa2726b8 <col:20> 'long' 1)
    (IntegerLiteral 0xa2726d0 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0xa272d98 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272768 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0xa272738 <col:24> 'long' 1)
    (IntegerLiteral 0xa272750 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0xa272da8 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2727e8 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa2727b8 <col:22> 'long' 1)
    (IntegerLiteral 0xa2727d0 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0xa272db8 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272868 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa272838 <col:23> 'long' 1)
    (IntegerLiteral 0xa272850 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0xa272dc8 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2728e8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa2728b8 <col:21> 'long' 1)
    (IntegerLiteral 0xa2728d0 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0xa272dd8 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272968 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa272938 <col:20> 'long' 1)
    (IntegerLiteral 0xa272950 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0xa272de8 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2729e8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa2729b8 <col:21> 'long' 1)
    (IntegerLiteral 0xa2729d0 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0xa272df8 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272a68 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa272a38 <col:23> 'long' 1)
    (IntegerLiteral 0xa272a50 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0xa272e08 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272b18 <col:25, col:46> 'long' '|'
    (BinaryOperator 0xa272ae8 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0xa272ab4 <col:25> 'long' EnumConstant 0xa272600 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0xa272acc <col:35> 'long' EnumConstant 0xa272700 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0xa272b00 <col:46> 'long' EnumConstant 0xa272580 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0xa272e18 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272bc8 <col:23, col:41> 'long' '|'
    (BinaryOperator 0xa272b98 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0xa272b64 <col:23> 'long' EnumConstant 0xa272400 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0xa272b7c <col:32> 'long' EnumConstant 0xa272680 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0xa272bb0 <col:41> 'long' EnumConstant 0xa272500 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0xa272e28 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272c48 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0xa272c14 <col:24> 'long' EnumConstant 0xa272780 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0xa272c2c <col:40> 'long' EnumConstant 0xa272480 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0xa272e38 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa272cc8 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0xa272c98 <col:29> 'long' 1)
    (IntegerLiteral 0xa272cb0 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa273080 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0xa273070 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa273058 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa273040 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0xa272fc8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa272fb8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa272fa8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa272f80 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa272e50 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa273028 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa273018 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa273008 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa272fe0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa272e90 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa2732b0 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0xa2732a0 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa273288 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa273270 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0xa2731f8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa2731e8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa2731d8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa2731b0 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa2730a0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa273258 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa273248 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa273238 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa273210 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa2730e0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa2734e0 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0xa2734d0 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa2734b8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa2734a0 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0xa273428 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa273418 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa273408 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa2733e0 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa2732d0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa273488 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa273478 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa273468 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa273440 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273310 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0xa273690 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0xa273680 <col:5, col:48>
    (CXXFunctionalCastExpr 0xa273668 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0xa273650 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0xa273638 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa273628 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa273618 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa2735f0 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273500 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa273d90 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0xa273d80 <col:5, col:24>
    (ImplicitCastExpr 0xa273d70 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa273d58 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa273828 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa2736e0 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa2738d8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa2738c8 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa273890 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa273140 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa273870 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa273840 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa2736e0 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa273880 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa273858 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273720 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa273fb8 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0xa273fa8 <col:5, col:24>
    (ImplicitCastExpr 0xa273f98 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa273f80 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa273ec8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273dc0 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa273f58 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa273f48 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa273f30 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa273f10 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa273ee0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273dc0 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa273f20 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa273ef8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273e00 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa2741d8 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0xa2741c8 <col:5, col:24>
    (ImplicitCastExpr 0xa2741b8 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa2741a0 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa2740e8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273fe0 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa274178 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa274168 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa274150 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa273370 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa274130 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa274100 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa273fe0 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa274140 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa274118 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa274020 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0xa2745d8 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa274280 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa274250 <col:18> 'long' 1)
    (IntegerLiteral 0xa274268 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0xa2745e8 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa274308 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa2742d8 <col:18> 'long' 1)
    (IntegerLiteral 0xa2742f0 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0xa2745f8 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa274388 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa274358 <col:18> 'long' 1)
    (IntegerLiteral 0xa274370 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0xa274608 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa274408 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0xa2743d8 <col:17> 'long' 1)
    (IntegerLiteral 0xa2743f0 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0xa274618 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa274488 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa274458 <col:18> 'long' 1)
    (IntegerLiteral 0xa274470 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0xa274628 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa274508 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa2744d8 <col:20> 'long' 1)
    (IntegerLiteral 0xa2744f0 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0xa274638 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa274588 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0xa274558 <col:29> 'long' 1)
    (IntegerLiteral 0xa274570 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa274880 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0xa274870 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa274858 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa274840 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0xa2747c8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa2747b8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa2747a8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa274780 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274650 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa274828 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa274818 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa274808 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa2747e0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274690 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa274ab0 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0xa274aa0 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa274a88 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa274a70 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0xa2749f8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa2749e8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa2749d8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa2749b0 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa2748a0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa274a58 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa274a48 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa274a38 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa274a10 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa2748e0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa274ce0 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0xa274cd0 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa274cb8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa274ca0 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0xa274c28 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa274c18 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa274c08 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa274be0 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274ad0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa274c88 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa274c78 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa274c68 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa274c40 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274b10 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0xa274e90 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0xa274e80 <col:5, col:48>
    (CXXFunctionalCastExpr 0xa274e68 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0xa274e50 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0xa274e38 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa274e28 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa274e18 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa274df0 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274d00 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa275150 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0xa275140 <col:5, col:24>
    (ImplicitCastExpr 0xa275130 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa275118 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa275028 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274ee0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa2750d8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa2750c8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa275090 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa275070 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa275040 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274ee0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa275080 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa275058 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa274f20 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa275378 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0xa275368 <col:5, col:24>
    (ImplicitCastExpr 0xa275358 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa275340 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa275288 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa275180 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa275318 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa275308 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2752f0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274710 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa2752d0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa2752a0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa275180 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa2752e0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa2752b8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa2751c0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa275598 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0xa275588 <col:5, col:24>
    (ImplicitCastExpr 0xa275578 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa275560 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa2754a8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa2753a0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa275538 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa275528 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa275510 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274b70 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa2754f0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa2754c0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa2753a0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa275500 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa2754d8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa2753e0 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0xa275868 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa275610 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0xa275878 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa275698 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa275668 <col:21> 'long' 1)
    (IntegerLiteral 0xa275680 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0xa275888 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa275718 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa2756e8 <col:21> 'long' 1)
    (IntegerLiteral 0xa275700 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0xa275898 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa275798 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa275768 <col:21> 'long' 1)
    (IntegerLiteral 0xa275780 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0xa2758a8 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa275818 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0xa2757e8 <col:28> 'long' 1)
    (IntegerLiteral 0xa275800 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa275af0 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0xa275ae0 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa275ac8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa275ab0 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0xa275a38 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa275a28 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa275a18 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa2759f0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa2758c0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa275a98 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa275a88 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa275a78 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa275a50 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa275900 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa2785b8 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0xa2785a8 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa278590 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa278578 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0xa278500 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa2784f0 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa2784e0 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa275c20 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa275b10 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa278560 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa278550 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa278540 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa278518 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa275b50 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa2787f0 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0xa2787e0 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa2787c8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa2787b0 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0xa278738 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa278728 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa278718 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa2786f0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa2785e0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa278798 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa278788 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa278778 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa278750 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278620 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0xa2789a0 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0xa278990 <col:5, col:47>
    (CXXFunctionalCastExpr 0xa278978 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0xa278960 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0xa278948 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa278938 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa278928 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa278900 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278810 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa278c60 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0xa278c50 <col:5, col:24>
    (ImplicitCastExpr 0xa278c40 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa278c28 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa278b38 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa2789f0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa278be8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa278bd8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa278ba0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa275bb0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa278b80 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa278b50 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa2789f0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa278b90 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa278b68 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278a30 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa278e88 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0xa278e78 <col:5, col:24>
    (ImplicitCastExpr 0xa278e68 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa278e50 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa278d98 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278c90 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa278e28 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa278e18 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa278e00 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa275980 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa278de0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa278db0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278c90 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa278df0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa278dc8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278cd0 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa2790a8 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0xa279098 <col:5, col:24>
    (ImplicitCastExpr 0xa279088 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa279070 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa278fb8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278eb0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa279048 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa279038 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa279020 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa278680 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa279000 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa278fd0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278eb0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa279010 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa278fe8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa278ef0 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0xa279298 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa279120 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0xa2792a8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa279178 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0xa2792b8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2791c8 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0xa2792c8 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa279248 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0xa279218 <col:28> 'long' 1)
    (IntegerLiteral 0xa279230 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0xa279a24 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272380 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0xa279a84 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272400 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0xa279ae4 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272480 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0xa279b44 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272500 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0xa279ba4 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272580 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0xa279c04 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272600 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0xa279c64 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272680 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0xa279cc4 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272700 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0xa279d24 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272780 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0xa279d84 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272800 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0xa279de4 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272880 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0xa279e44 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272900 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0xa279ea4 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272980 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0xa279f04 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272a00 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0xa279f64 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272a80 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0xa279fc4 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272b30 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0xa27a024 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272be0 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0xa27a084 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa272c60 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0xa27a134 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0xa2756b0 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0xa27a194 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0xa275730 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0xa27a1f4 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0xa2757b0 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0xa27a254 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0xa275630 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0xa27a304 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0xa2742a0 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0xa27a364 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0xa274320 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0xa27a3c4 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0xa2743a0 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0xa27a424 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0xa274420 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0xa27a484 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0xa2744a0 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0xa27a4e4 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0xa274520 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0xa27a594 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa279140 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0xa27a5f4 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa279190 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0xa27a654 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa2791e0 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0xa280250 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0xa280238 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0xa27b1b0 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0xa280290 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0xa280278 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0xa27b110 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0xa2802d0 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0xa2802b8 <col:46> 'int' lvalue ParmVar 0xa27b160 '__index' 'int'))
), _M_refcount((IntegerLiteral 0xa2802f8 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0xa280338 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0xa280428 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0xa280400 <col:28, col:76> 'void'
    (ImplicitCastExpr 0xa2803f0 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa28036c <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0xa181be0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa2803c0 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa2803a0 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0xa27b0b0
        (CXXThisExpr 0xa280390 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0xa2803d8 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0xa280668 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0xa280440 <line:481:62>)
  (DeclStmt 0xa280580 <line:482:9, col:77>
    0xa280460 "int __res =
      (CallExpr 0xa280558 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa280548 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2804ac <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa181750 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa280500 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa2804e0 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0xa27b0b0
            (CXXThisExpr 0xa2804d0 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0xa280530 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0xa280518 <col:75> 'int' 1)))")
  (IfStmt 0xa280610 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0xa2805d0 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0xa2805c0 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0xa280590 <col:13> 'int' lvalue Var 0xa280460 '__res' 'int'))
      (IntegerLiteral 0xa2805a8 <col:22> 'int' 0))
    (CompoundStmt 0xa2805f8 <line:484:11, line:486:11>
      (NullStmt 0xa2805e8 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0xa280658 <line:487:9, col:16>
    (ImplicitCastExpr 0xa280648 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0xa28062c <col:16> 'int' lvalue Var 0xa280460 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0xa2806a0 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0xa280688 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0xa2806e0 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0xa2806c8 <col:40> 'int' 0))
) (CompoundStmt 0xa280710 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0xa27b928 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa27b8d0 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0xa2807a8 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0xa280798 <col:7, col:14>
    (ImplicitCastExpr 0xa280788 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0xa280764 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
        (CXXThisExpr 0xa280738 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0xa280900 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0xa280848 <line:565:7, col:32>
    0xa2807d0 "fmtflags __old =
      (ImplicitCastExpr 0xa280838 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa280818 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
          (CXXThisExpr 0xa280808 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa2808b0 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0xa280868 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
      (CXXThisExpr 0xa280858 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa2808a0 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa280888 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa27c1d0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2808f0 <line:567:7, col:14>
    (ImplicitCastExpr 0xa2808e0 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2808c8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa2807d0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0xa280ab8 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0xa2809a8 <line:581:7, col:32>
    0xa280930 "fmtflags __old =
      (ImplicitCastExpr 0xa280998 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa280978 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
          (CXXThisExpr 0xa280968 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa280a58 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa280a48 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa280a10 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa2737c0 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa2809c8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
      (CXXThisExpr 0xa2809b8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa280a00 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2809e8 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa27c2c0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa280aa8 <line:583:7, col:14>
    (ImplicitCastExpr 0xa280a98 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa280a7c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa280930 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0xa280de8 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0xa280b58 <line:598:7, col:32>
    0xa280ae0 "fmtflags __old =
      (ImplicitCastExpr 0xa280b48 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa280b28 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
          (CXXThisExpr 0xa280b18 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa280c50 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa280c40 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa280c28 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa273e60 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa280b78 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
      (CXXThisExpr 0xa280b68 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa280c08 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa280bf8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa280bc0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa273580 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa280bb0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa280b98 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa27c3c0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0xa280d88 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa280d78 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa280d60 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa2737c0 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa280c88 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
      (CXXThisExpr 0xa280c78 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0xa280d48 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0xa280d20 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa280d10 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa280cf8 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa280cd8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa280ca8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa27c380 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa280ce8 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa280cc0 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa27c3c0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0xa280dd8 <line:601:7, col:14>
    (ImplicitCastExpr 0xa280dc8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa280dac <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa280ae0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0xa280ef8 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0xa280ed0 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa280ec0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa280ea8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa273e60 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa280e18 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa27ada0
      (CXXThisExpr 0xa280e08 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa280e88 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa280e78 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa280e60 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa273580 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa280e50 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa280e38 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa27f4a0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0xa280f60 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0xa280f50 <col:7, col:14>
    (ImplicitCastExpr 0xa280f40 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa280f20 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0xa27ad20
        (CXXThisExpr 0xa280f10 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0xa2810b0 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0xa280ff8 <line:633:7, col:38>
    0xa280f80 "streamsize __old =
      (ImplicitCastExpr 0xa280fe8 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa280fc8 <col:26> 'streamsize':'int' lvalue ->_M_precision 0xa27ad20
          (CXXThisExpr 0xa280fb8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa281060 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa281018 <col:7> 'streamsize':'int' lvalue ->_M_precision 0xa27ad20
      (CXXThisExpr 0xa281008 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa281050 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa281038 <col:22> 'streamsize':'int' lvalue ParmVar 0xa27f670 '__prec' 'streamsize':'int')))
  (ReturnStmt 0xa2810a0 <line:635:7, col:14>
    (ImplicitCastExpr 0xa281090 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa281078 <col:14> 'streamsize':'int' lvalue Var 0xa280f80 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0xa281120 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0xa281110 <col:7, col:14>
    (ImplicitCastExpr 0xa281100 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa2810e0 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0xa27ad60
        (CXXThisExpr 0xa2810d0 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0xa281270 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0xa2811b8 <line:656:7, col:34>
    0xa281140 "streamsize __old =
      (ImplicitCastExpr 0xa2811a8 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa281188 <col:26> 'streamsize':'int' lvalue ->_M_width 0xa27ad60
          (CXXThisExpr 0xa281178 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa281220 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa2811d8 <col:7> 'streamsize':'int' lvalue ->_M_width 0xa27ad60
      (CXXThisExpr 0xa2811c8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa281210 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa2811f8 <col:18> 'streamsize':'int' lvalue ParmVar 0xa27f7e0 '__wide' 'streamsize':'int')))
  (ReturnStmt 0xa281260 <line:658:7, col:14>
    (ImplicitCastExpr 0xa281250 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa281238 <col:14> 'streamsize':'int' lvalue Var 0xa281140 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0xa280228 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0xa2812f8 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0xa2812e8 <col:7, col:14>
    (CXXConstructExpr 0xa2812c0 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0xa2812a0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa27bc50
        (CXXThisExpr 0xa281290 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0xa281350 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0xa281340 <col:7, col:14>
    (MemberExpr 0xa281320 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa27bc50
      (CXXThisExpr 0xa281310 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0xa2815d8 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0xa281580 <line:744:7, line:745:47>
    0xa281380 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa281560 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa281438 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0xa281420 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa281400 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa2813b4 <col:25> 'int' lvalue ParmVar 0xa27fc40 '__ix' 'int'))
            (ImplicitCastExpr 0xa281410 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa2813e0 <col:32> 'int' lvalue ->_M_word_size 0xa27ba60
                (CXXThisExpr 0xa2813d0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa2814b8 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa281498 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa281460 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa27bac0
              (CXXThisExpr 0xa281450 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa2814a8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa281480 <col:14> 'int' lvalue ParmVar 0xa27fc40 '__ix' 'int')))
        (CXXMemberCallExpr 0xa281528 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa2814e0 <col:22> '<bound member function type>' ->_M_grow_words 0xa27bbe0
            (CXXThisExpr 0xa2814d0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa281550 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa281500 <col:36> 'int' lvalue ParmVar 0xa27fc40 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa281518 <col:42> '_Bool' true)))")
  (ReturnStmt 0xa2815c8 <line:746:7, col:21>
    (MemberExpr 0xa2815a8 <col:14, col:21> 'long' lvalue ._M_iword 0xa27b770
      (DeclRefExpr 0xa281590 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa281380 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0xa281858 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0xa281800 <line:765:7, line:766:48>
    0xa281600 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa2817e0 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa2816b8 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0xa2816a0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa281680 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa281634 <col:25> 'int' lvalue ParmVar 0xa27fd40 '__ix' 'int'))
            (ImplicitCastExpr 0xa281690 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa281660 <col:32> 'int' lvalue ->_M_word_size 0xa27ba60
                (CXXThisExpr 0xa281650 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa281738 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa281718 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa2816e0 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa27bac0
              (CXXThisExpr 0xa2816d0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa281728 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa281700 <col:14> 'int' lvalue ParmVar 0xa27fd40 '__ix' 'int')))
        (CXXMemberCallExpr 0xa2817a8 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa281760 <col:22> '<bound member function type>' ->_M_grow_words 0xa27bbe0
            (CXXThisExpr 0xa281750 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa2817d0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa281780 <col:36> 'int' lvalue ParmVar 0xa27fd40 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa281798 <col:42> '_Bool' false)))")
  (ReturnStmt 0xa281848 <line:767:7, col:21>
    (MemberExpr 0xa281828 <col:14, col:21> 'void *' lvalue ._M_pword 0xa27b730
      (DeclRefExpr 0xa281810 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa281600 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0xa281a78 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0xa281a20 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa2819fc <col:5, col:12> '<bound member function type>' .setf 0xa27c310
      (DeclRefExpr 0xa281964 <col:5> 'class std::ios_base' lvalue ParmVar 0xa281880 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa281a40 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2819dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2799f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa281a68 <line:799:5, col:12>
    (DeclRefExpr 0xa281a4c <col:12> 'class std::ios_base' lvalue ParmVar 0xa281880 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0xa281c38 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0xa281be0 <line:806:5, col:38> 'void'
    (MemberExpr 0xa281b7c <col:5, col:12> '<bound member function type>' .unsetf 0xa27f540
      (DeclRefExpr 0xa281b64 <col:5> 'class std::ios_base' lvalue ParmVar 0xa281aa0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa281c00 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa281bbc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2799f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa281c28 <line:807:5, col:12>
    (DeclRefExpr 0xa281c0c <col:12> 'class std::ios_base' lvalue ParmVar 0xa281aa0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0xa281e38 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0xa281de0 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa281dbc <col:5, col:12> '<bound member function type>' .setf 0xa27c310
      (DeclRefExpr 0xa281d24 <col:5> 'class std::ios_base' lvalue ParmVar 0xa281c60 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa281e00 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa281d9c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa281e28 <line:815:5, col:12>
    (DeclRefExpr 0xa281e0c <col:12> 'class std::ios_base' lvalue ParmVar 0xa281c60 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0xa281ff8 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0xa281fa0 <line:822:5, col:37> 'void'
    (MemberExpr 0xa281f3c <col:5, col:12> '<bound member function type>' .unsetf 0xa27f540
      (DeclRefExpr 0xa281f24 <col:5> 'class std::ios_base' lvalue ParmVar 0xa281e60 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa281fc0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa281f7c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa281fe8 <line:823:5, col:12>
    (DeclRefExpr 0xa281fcc <col:12> 'class std::ios_base' lvalue ParmVar 0xa281e60 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0xa2821f8 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0xa2821a0 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28217c <col:5, col:12> '<bound member function type>' .setf 0xa27c310
      (DeclRefExpr 0xa2820e4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa282020 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa2821c0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28215c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279db0 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2821e8 <line:831:5, col:12>
    (DeclRefExpr 0xa2821cc <col:12> 'class std::ios_base' lvalue ParmVar 0xa282020 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0xa2823b8 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0xa282360 <line:838:5, col:38> 'void'
    (MemberExpr 0xa2822fc <col:5, col:12> '<bound member function type>' .unsetf 0xa27f540
      (DeclRefExpr 0xa2822e4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa282220 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa282380 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28233c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279db0 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2823a8 <line:839:5, col:12>
    (DeclRefExpr 0xa28238c <col:12> 'class std::ios_base' lvalue ParmVar 0xa282220 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0xa2825b8 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0xa282560 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28253c <col:5, col:12> '<bound member function type>' .setf 0xa27c310
      (DeclRefExpr 0xa2824a4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa2823e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa282580 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28251c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279e10 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2825a8 <line:847:5, col:12>
    (DeclRefExpr 0xa28258c <col:12> 'class std::ios_base' lvalue ParmVar 0xa2823e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0xa282778 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0xa282720 <line:854:5, col:36> 'void'
    (MemberExpr 0xa2826bc <col:5, col:12> '<bound member function type>' .unsetf 0xa27f540
      (DeclRefExpr 0xa2826a4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa2825e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa282740 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2826fc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279e10 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa282768 <line:855:5, col:12>
    (DeclRefExpr 0xa28274c <col:12> 'class std::ios_base' lvalue ParmVar 0xa2825e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0xa282978 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0xa282920 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa2828fc <col:5, col:12> '<bound member function type>' .setf 0xa27c310
      (DeclRefExpr 0xa282864 <col:5> 'class std::ios_base' lvalue ParmVar 0xa2827a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa282940 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2828dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279e70 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa282968 <line:863:5, col:12>
    (DeclRefExpr 0xa28294c <col:12> 'class std::ios_base' lvalue ParmVar 0xa2827a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0xa282b38 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0xa282ae0 <line:870:5, col:35> 'void'
    (MemberExpr 0xa282a7c <col:5, col:12> '<bound member function type>' .unsetf 0xa27f540
      (DeclRefExpr 0xa282a64 <col:5> 'class std::ios_base' lvalue ParmVar 0xa2829a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa282b00 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa282abc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279e70 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa282b28 <line:871:5, col:12>
    (DeclRefExpr 0xa282b0c <col:12> 'class std::ios_base' lvalue ParmVar 0xa2829a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0xa282d38 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0xa282ce0 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa282cbc <col:5, col:12> '<bound member function type>' .setf 0xa27c310
      (DeclRefExpr 0xa282c24 <col:5> 'class std::ios_base' lvalue ParmVar 0xa282b60 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa282d00 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa282c9c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa282d28 <line:879:5, col:12>
    (DeclRefExpr 0xa282d0c <col:12> 'class std::ios_base' lvalue ParmVar 0xa282b60 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0xa282ef8 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0xa282ea0 <line:886:5, col:38> 'void'
    (MemberExpr 0xa282e3c <col:5, col:12> '<bound member function type>' .unsetf 0xa27f540
      (DeclRefExpr 0xa282e24 <col:5> 'class std::ios_base' lvalue ParmVar 0xa282d60 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa282ec0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa282e7c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa282ee8 <line:887:5, col:12>
    (DeclRefExpr 0xa282ecc <col:12> 'class std::ios_base' lvalue ParmVar 0xa282d60 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0xa2830f8 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0xa2830a0 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28307c <col:6, col:13> '<bound member function type>' .setf 0xa27c310
      (DeclRefExpr 0xa282fe4 <col:6> 'class std::ios_base' lvalue ParmVar 0xa282f20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa2830c0 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28305c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ed0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2830e8 <line:895:6, col:13>
    (DeclRefExpr 0xa2830cc <col:13> 'class std::ios_base' lvalue ParmVar 0xa282f20 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0xa2832b8 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0xa283260 <line:902:6, col:37> 'void'
    (MemberExpr 0xa2831fc <col:6, col:13> '<bound member function type>' .unsetf 0xa27f540
      (DeclRefExpr 0xa2831e4 <col:6> 'class std::ios_base' lvalue ParmVar 0xa283120 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa283280 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28323c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ed0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2832a8 <line:903:6, col:13>
    (DeclRefExpr 0xa28328c <col:13> 'class std::ios_base' lvalue ParmVar 0xa283120 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0xa287bb8 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0xa287b48 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa287b28 <col:6, col:13> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa2833a4 <col:6> 'class std::ios_base' lvalue ParmVar 0xa2832e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa287b70 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28341c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b70 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa287b80 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28345c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa287ba8 <line:912:6, col:13>
    (DeclRefExpr 0xa287b8c <col:13> 'class std::ios_base' lvalue ParmVar 0xa2832e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0xa287e10 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0xa287da0 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa287d7c <col:5, col:12> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa287ca4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa287be0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa287dc8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa287d1c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279bd0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa287dd8 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa287d5c <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa287e00 <line:920:5, col:12>
    (DeclRefExpr 0xa287de4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa287be0 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0xa288070 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0xa288000 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa287fdc <col:5, col:12> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa287f04 <col:5> 'class std::ios_base' lvalue ParmVar 0xa287e40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa288028 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa287f7c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c90 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa288038 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa287fbc <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa288060 <line:928:5, col:12>
    (DeclRefExpr 0xa288044 <col:12> 'class std::ios_base' lvalue ParmVar 0xa287e40 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0xa2882d0 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0xa288260 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28823c <col:5, col:12> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa288164 <col:5> 'class std::ios_base' lvalue ParmVar 0xa2880a0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa288288 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2881dc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279a50 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa288298 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28821c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2882c0 <line:937:5, col:12>
    (DeclRefExpr 0xa2882a4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa2880a0 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0xa288530 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0xa2884c0 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28849c <col:5, col:12> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa2883c4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa288300 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa2884e8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28843c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa2884f8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28847c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa288520 <line:945:5, col:12>
    (DeclRefExpr 0xa288504 <col:12> 'class std::ios_base' lvalue ParmVar 0xa288300 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0xa288790 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0xa288720 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa2886fc <col:5, col:12> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa288624 <col:5> 'class std::ios_base' lvalue ParmVar 0xa288560 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa288748 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28869c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa288758 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2886dc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa288780 <line:953:5, col:12>
    (DeclRefExpr 0xa288764 <col:12> 'class std::ios_base' lvalue ParmVar 0xa288560 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0xa2889f0 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0xa288980 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa28895c <col:5, col:12> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa288884 <col:5> 'class std::ios_base' lvalue ParmVar 0xa2887c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa2889a8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa2888fc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ab0 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa2889b8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa28893c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa27a050 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa2889e0 <line:962:5, col:12>
    (DeclRefExpr 0xa2889c4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa2887c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0xa288c50 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0xa288be0 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa288bbc <col:5, col:12> '<bound member function type>' .setf 0xa27c440
      (DeclRefExpr 0xa288ae4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa288a20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa288c08 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa288b5c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279cf0 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa288c18 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa288b9c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa27a050 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa288c40 <line:970:5, col:12>
    (DeclRefExpr 0xa288c24 <col:12> 'class std::ios_base' lvalue ParmVar 0xa288a20 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0xa294008 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0xa29a2d8 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0xa2940e0 <line:208:2, col:30>
    0xa294020 "std::locale __tmp =
      (ParenListExpr 0xa2940c0 <col:14, col:29> 'class std::locale'
        (CallExpr 0xa2940a0 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa294068 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0xa294058 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0xa294150 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa294100 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa2940f0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa294134 <col:14> 'const class std::locale' lvalue ParmVar 0xa291280 '__loc' 'const class std::locale &'))
  (BinaryOperator 0xa29a260 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0xa29a228 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0xa291160
      (CXXThisExpr 0xa294170 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29a248 <col:18> 'const class std::locale' lvalue ParmVar 0xa291280 '__loc' 'const class std::locale &'))
  (ReturnStmt 0xa29a2c8 <line:211:2, col:9>
    (CXXConstructExpr 0xa29a2a0 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa29a290 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa29a278 <col:9> 'class std::locale' lvalue Var 0xa294020 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0xa29a358 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0xa29a348 <col:9, col:16>
    (MemberExpr 0xa29a328 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0xa291160
      (CXXThisExpr 0xa29a318 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa29a420 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0xa29a410 <col:9, col:37>
    (CallExpr 0xa29a3e8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29a380 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa29a370 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa29a3b4 <col:29> 'char_type *' lvalue ParmVar 0xa2913c0 '__s' 'char_type *')
      (DeclRefExpr 0xa29a3cc <col:34> 'streamsize':'int' lvalue ParmVar 0xa291400 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa293c40 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa293c30 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa293c18 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa293bf8 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293b94 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa293c08 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293bd4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa29a500 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0xa29a4f0 <col:9, col:50>
    (CallExpr 0xa29a4c8 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29a448 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa29a438 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa29a47c <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa291540 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa29a494 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa2915d0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0xa29a4ac <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa291660 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa293d30 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa293d20 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa293d08 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa293ce8 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293c84 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa293cf8 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293cc4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa29a5c8 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0xa29a5b8 <col:9, col:42>
    (CallExpr 0xa29a590 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29a528 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa29a518 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa29a55c <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa2917a0 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0xa29a574 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa291810 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0xa29a658 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0xa29a648 <col:19, col:37>
    (CallExpr 0xa29a628 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29a5f0 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0xa29a5e0 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0xa29a8e0 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0xa29a7e8 <line:265:2, col:55>
    0xa29a680 "const streamsize __ret =
      (CXXOperatorCallExpr 0xa29a7c0 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa29a788 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CallExpr 0xa29a700 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29a6c8 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0xa29a6b8 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa29a768 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29a730 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa29a720 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0xa29a8d0 <line:266:2, col:41>
    (ConditionalOperator 0xa29a8b0 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0xa29a8a0 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa29a890 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa29a7f8 <col:9> 'const streamsize':'const int' lvalue Var 0xa29a680 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0xa29a810 <col:17> 'const streamsize':'const int' lvalue Var 0xa29a680 '__ret' 'const streamsize':'const int')
      (CallExpr 0xa29a870 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29a838 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa29a828 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0xa29ac08 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0xa29a9b0 <line:279:2, col:37>
    0xa29a900 "int_type __ret =
      (CallExpr 0xa29a990 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29a958 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0xa29abc0 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0xa29ab00 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0xa29a9c0 <line:280:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0xa29aad8 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0xa29aab0 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29a9f8 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0xa29aa78 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa29aa40 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0xa29aa30 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa29aa94 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29a900 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0xa29aaf0 <col:22> '_Bool' true))
    (BinaryOperator 0xa29aba8 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa29ab24 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29a900 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa29ab88 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29ab50 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa29ab40 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0xa29abf8 <line:283:2, col:9>
    (DeclRefExpr 0xa29abdc <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29a900 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0xa29b0a8 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0xa29ac68 <line:297:2, col:16>
    0xa29ac30 "int_type __ret")
  (IfStmt 0xa29b060 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0xa29ade0 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa29ac78 <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa29ada8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa29ad60 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (CallExpr 0xa29acd8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29aca0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa29ac90 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa29ad40 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29ad08 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa29acf8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa29add0 <col:53> '_Bool' true))
    (CompoundStmt 0xa29afb0 <line:299:4, line:302:4>
      (BinaryOperator 0xa29af18 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa29ae04 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29ac30 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa29aef8 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29ae40 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa29aee0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa29aec0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa29ae88 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa29ae78 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa29af90 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29af40 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa29af30 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa29af78 <col:18> 'int' 1)))
    (BinaryOperator 0xa29b048 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa29afc8 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29ac30 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa29b028 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29aff0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa29afe0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa29b098 <line:305:2, col:9>
    (DeclRefExpr 0xa29b07c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29ac30 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0xa29b4b0 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0xa29b108 <line:319:2, col:16>
    0xa29b0d0 "int_type __ret")
  (IfStmt 0xa29b468 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0xa29b280 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa29b118 <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa29b248 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa29b200 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (CallExpr 0xa29b178 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29b140 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa29b130 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa29b1e0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29b1a8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa29b198 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa29b270 <col:53> '_Bool' true))
    (BinaryOperator 0xa29b3b8 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0xa29b2a4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29b0d0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa29b398 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29b2e0 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0xa29b380 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0xa29b360 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa29b328 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa29b318 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0xa29b450 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa29b3d0 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29b0d0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa29b430 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29b3f8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa29b3e8 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa29b4a0 <line:324:2, col:9>
    (DeclRefExpr 0xa29b484 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29b0d0 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa29b580 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0xa29b570 <col:9, col:37>
    (CallExpr 0xa29b548 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29b4e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa29b4d0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa29b514 <col:29> 'char_type *' lvalue ParmVar 0xa291bf0 '__s' 'char_type *')
      (DeclRefExpr 0xa29b52c <col:34> 'streamsize':'int' lvalue ParmVar 0xa291c30 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0xa29bcc8 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0xa29b5d8 <line:353:2, col:16>
    0xa29b5a0 "int_type __ret")
  (DeclStmt 0xa29b768 <line:354:2, col:53>
    0xa29b5f0 "const bool __testpos =
      (CXXOperatorCallExpr 0xa29b740 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa29b6f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (CallExpr 0xa29b670 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29b638 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0xa29b628 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa29b6d8 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29b6a0 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0xa29b690 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0xa29bc80 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0xa29b958 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0xa29b778 <line:355:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa29b930 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0xa29b7b8 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa29b7a8 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa29b790 <col:24> 'const _Bool' lvalue Var 0xa29b5f0 '__testpos' 'const _Bool')))
        (UnaryOperator 0xa29b918 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa29b8f0 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa29b7f0 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0xa29b824 <col:26> 'char_type':'_CharT' lvalue ParmVar 0xa291d40 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa29b8d8 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0xa29b888 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa29b850 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa29b840 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0xa29b8c0 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0xa29b8a8 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0xa29b948 <col:50> '_Bool' false))
    (BinaryOperator 0xa29ba90 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0xa29b97c <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29b5a0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa29ba70 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29b9a8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa29b998 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa29ba50 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29ba00 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0xa29ba34 <col:53> 'char_type':'_CharT' lvalue ParmVar 0xa291d40 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0xa29bc68 <line:359:4, line:362:4>
      (CallExpr 0xa29bb20 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29bab8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa29baa8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa29bb08 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa29baf0 <col:19> 'int' 1)))
      (BinaryOperator 0xa29bc50 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa29bb40 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29b5a0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa29bc30 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29bb78 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa29bc18 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa29bbf8 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa29bbc0 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa29bbb0 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0xa29bcb8 <line:363:2, col:9>
    (DeclRefExpr 0xa29bc9c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29b5a0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0xa29c180 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0xa29bd28 <line:378:2, col:16>
    0xa29bcf0 "int_type __ret")
  (IfStmt 0xa29c138 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0xa29bea0 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa29bd38 <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa29be68 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa29be20 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (CallExpr 0xa29bd98 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29bd60 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa29bd50 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa29be00 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29bdc8 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa29bdb8 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa29be90 <col:53> '_Bool' true))
    (CompoundStmt 0xa29c088 <line:380:4, line:383:4>
      (CallExpr 0xa29bf40 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29bed8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa29bec8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa29bf28 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa29bf10 <col:19> 'int' 1)))
      (BinaryOperator 0xa29c070 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa29bf60 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29bcf0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa29c050 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29bf98 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa29c038 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa29c018 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa29bfe0 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa29bfd0 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0xa29c120 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa29c0a0 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29bcf0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa29c100 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29c0c8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa29c0b8 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa29c170 <line:386:2, col:9>
    (DeclRefExpr 0xa29c154 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29bcf0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0xa29c708 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0xa29c1e8 <line:405:2, col:16>
    0xa29c1b0 "int_type __ret")
  (IfStmt 0xa29c6c0 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0xa29c360 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa29c1f8 <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa29c328 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa29c2e0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (CallExpr 0xa29c258 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29c220 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa29c210 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa29c2c0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29c288 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa29c278 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa29c350 <col:53> '_Bool' true))
    (CompoundStmt 0xa29c578 <line:407:4, line:411:4>
      (BinaryOperator 0xa29c420 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0xa29c3f0 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0xa29c3d0 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa29c398 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa29c388 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa29c404 <col:22> 'char_type':'_CharT' lvalue ParmVar 0xa291ed0 '__c' 'char_type':'_CharT'))
      (CallExpr 0xa29c498 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29c448 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa29c438 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa29c480 <col:18> 'int' 1))
      (BinaryOperator 0xa29c560 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0xa29c4b8 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29c1b0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa29c540 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29c4f0 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0xa29c524 <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa291ed0 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0xa29c6a8 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0xa29c594 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29c1b0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa29c688 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29c5c0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa29c5b0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa29c668 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29c618 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0xa29c64c <col:52> 'char_type':'_CharT' lvalue ParmVar 0xa291ed0 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0xa29c6f8 <line:414:2, col:9>
    (DeclRefExpr 0xa29c6dc <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29c1b0 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa29c7d8 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0xa29c7c8 <col:9, col:37>
    (CallExpr 0xa29c7a0 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29c738 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa29c728 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa29c76c <col:29> 'const char_type *' lvalue ParmVar 0xa291fc0 '__s' 'const char_type *')
      (DeclRefExpr 0xa29c784 <col:34> 'streamsize':'int' lvalue ParmVar 0xa292000 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0xa29c7f0 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0xa29c848 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0xa29c898 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0xa29c8e8 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0xa29c938 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0xa29c988 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0xa29ca18 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0xa29ca10)
  (CXXTemporaryObjectExpr 0xa29c9e0 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0xa29cae8 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0xa29cb38 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0xa29cb28 <col:23, col:30>
    (MemberExpr 0xa29cb08 <col:30> 'char_type *const' lvalue ->_M_in_beg 0xa290fe0
      (CXXThisExpr 0xa29caf8 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0xa29cb90 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0xa29cb80 <col:23, col:30>
    (MemberExpr 0xa29cb60 <col:30> 'char_type *const' lvalue ->_M_in_cur 0xa291020
      (CXXThisExpr 0xa29cb50 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0xa29cbe8 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0xa29cbd8 <col:23, col:30>
    (MemberExpr 0xa29cbb8 <col:30> 'char_type *const' lvalue ->_M_in_end 0xa291060
      (CXXThisExpr 0xa29cba8 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0xa29cc68 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0xa29cc48 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa29cc10 <col:24> 'char_type *' lvalue ->_M_in_cur 0xa291020
      (CXXThisExpr 0xa29cc00 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29cc30 <col:37> 'int' lvalue ParmVar 0xa292390 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0xa29cda0 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0xa29ccc8 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa29cc90 <col:2> 'char_type *' lvalue ->_M_in_beg 0xa290fe0
      (CXXThisExpr 0xa29cc80 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29ccb0 <col:14> 'char_type *' lvalue ParmVar 0xa292460 '__gbeg' 'char_type *'))
  (BinaryOperator 0xa29cd28 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa29ccf0 <col:2> 'char_type *' lvalue ->_M_in_cur 0xa291020
      (CXXThisExpr 0xa29cce0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29cd10 <col:14> 'char_type *' lvalue ParmVar 0xa2924b0 '__gnext' 'char_type *'))
  (BinaryOperator 0xa29cd88 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa29cd50 <col:2> 'char_type *' lvalue ->_M_in_end 0xa291060
      (CXXThisExpr 0xa29cd40 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29cd70 <col:14> 'char_type *' lvalue ParmVar 0xa292500 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0xa29ce00 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0xa29cdf0 <col:23, col:30>
    (MemberExpr 0xa29cdd0 <col:30> 'char_type *const' lvalue ->_M_out_beg 0xa2910a0
      (CXXThisExpr 0xa29cdc0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0xa29ce58 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0xa29ce48 <col:22, col:29>
    (MemberExpr 0xa29ce28 <col:29> 'char_type *const' lvalue ->_M_out_cur 0xa2910e0
      (CXXThisExpr 0xa29ce18 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0xa29ceb0 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0xa29cea0 <col:23, col:30>
    (MemberExpr 0xa29ce80 <col:30> 'char_type *const' lvalue ->_M_out_end 0xa291120
      (CXXThisExpr 0xa29ce70 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0xa29cf30 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0xa29cf10 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa29ced8 <col:24> 'char_type *' lvalue ->_M_out_cur 0xa2910e0
      (CXXThisExpr 0xa29cec8 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29cef8 <col:38> 'int' lvalue ParmVar 0xa292790 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0xa29d050 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0xa29cfd8 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0xa29cf58 <col:2> 'char_type *' lvalue ->_M_out_beg 0xa2910a0
      (CXXThisExpr 0xa29cf48 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0xa29cfc0 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0xa29cf88 <col:15> 'char_type *' lvalue ->_M_out_cur 0xa2910e0
        (CXXThisExpr 0xa29cf78 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa29cfa8 <col:28> 'char_type *' lvalue ParmVar 0xa292860 '__pbeg' 'char_type *')))
  (BinaryOperator 0xa29d038 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0xa29d000 <col:2> 'char_type *' lvalue ->_M_out_end 0xa291120
      (CXXThisExpr 0xa29cff0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29d020 <col:15> 'char_type *' lvalue ParmVar 0xa2928b0 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0xa29d068 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0xa29d098 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0xa29d088 <col:9, col:16>
    (CXXThisExpr 0xa29d078 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0xa293e20 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa293e10 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa293df8 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa293dd8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293d74 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa293de8 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293db4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa29d140 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0xa29d130 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa29d110 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa29d0f0 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa29d0d8 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa29d0c0 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0xa293f10 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa293f00 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa293ee8 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa293ec8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293e64 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa293ed8 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa293ea4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa29d1e8 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0xa29d1d8 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa29d1b8 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa29d198 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa29d180 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa29d168 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0xa29d228 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0xa29d218 <col:16, col:23>
    (IntegerLiteral 0xa29d200 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0xa29d268 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0xa29d258 <col:21, col:28>
    (IntegerLiteral 0xa29d240 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0xa29d308 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0xa29d2f8 <col:9, col:33>
    (CallExpr 0xa29d2d8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29d2a0 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0xa29d790 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0xa29d3e0 <line:681:2, col:37>
    0xa29d330 "int_type __ret =
      (CallExpr 0xa29d3c0 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29d388 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0xa29d538 <line:682:2, line:683:14>
    0xa29d400 "const bool __testeof =
      (CallExpr 0xa29d510 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29d458 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0xa29d4d8 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29d4a0 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0xa29d490 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa29d4f4 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29d330 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa29d748 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0xa29d570 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa29d560 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa29d548 <col:7> 'const _Bool' lvalue Var 0xa29d400 '__testeof' 'const _Bool')))
    (CompoundStmt 0xa29d730 <line:685:4, line:688:4>
      (BinaryOperator 0xa29d698 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa29d584 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29d330 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa29d678 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29d5c0 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa29d660 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa29d640 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa29d608 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa29d5f8 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa29d710 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29d6c0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa29d6b0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa29d6f8 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0xa29d780 <line:689:2, col:9>
    (DeclRefExpr 0xa29d764 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa29d330 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0xa293f80 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa293f58 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0xa29d838 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0xa29d828 <col:9, col:33>
    (CallExpr 0xa29d808 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29d7d0 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0xa293fe8 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa293fc0 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0xa29d8d8 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0xa29d8c8 <col:9, col:33>
    (CallExpr 0xa29d8a8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29d870 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0xa29db38 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0xa29db18 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa29da08 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa29d9c0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (CallExpr 0xa29d938 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29d900 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa29d8f0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0xa29d9a0 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29d968 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa29d958 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0xa29da90 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29da40 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa29da30 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa29da78 <col:16> 'int' 1))
    (CallExpr 0xa29daf8 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29dac0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa29dab0 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0xa29dbb8 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0xa29db98 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa29db60 <col:38> 'char_type *' lvalue ->_M_in_cur 0xa291020
      (CXXThisExpr 0xa29db50 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29db80 <col:51> 'streamsize':'int' lvalue ParmVar 0xa2936d0 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0xa29dc38 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0xa29dc18 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa29dbe0 <col:38> 'char_type *' lvalue ->_M_out_cur 0xa2910e0
      (CXXThisExpr 0xa29dbd0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa29dc00 <col:52> 'streamsize':'int' lvalue ParmVar 0xa2937c0 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0xa29dc68 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0xa29dc4c <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa293910 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0xa29dcf0 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0xa29dcd8 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa293910 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0xa29dd80 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0xa29dd68 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa293910 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0xa29de10 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0xa29ddf8 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa293910 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0xa29dea0 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0xa29de88 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa293910 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0xa29df30 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0xa29df18 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa293910 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0xa29dfc0 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0xa29dfa8 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa293910 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0xa29e058 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0xa29e0a0 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0xa29e090 <col:44, col:52>
    (UnaryOperator 0xa29e078 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa29e068 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa2a29c8 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0xa2a1bc0 <line:48:7, col:27>
    0xa2a1b70 "streamsize __ret =
      (IntegerLiteral 0xa2a1ba8 <col:26> 'int' 0)")
  (WhileStmt 0xa2a2978 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0xa2a1c20 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa2a1c00 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2a1bd0 <col:14> 'streamsize':'int' lvalue Var 0xa2a1b70 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa2a1c10 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2a1be8 <col:22> 'streamsize':'int' lvalue ParmVar 0xa2a1a70 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa2a2958 <line:50:2, line:73:2>
      (DeclStmt 0xa2a1da8 <line:51:4, col:61>
        0xa2a1c40 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa2a1d80 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa2a1d48 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (CallExpr 0xa2a1cc0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2a1c88 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa2a1c78 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa2a1d28 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2a1cf0 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa2a1ce0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa2a24c8 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa2a1de0 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa2a1dd0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa2a1db8 <col:8> 'const streamsize':'const int' lvalue Var 0xa2a1c40 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa2a24a0 <line:53:6, line:60:6>
          (DeclStmt 0xa2a1ea0 <line:54:8, col:50>
            0xa2a1e00 "const streamsize __remaining =
              (BinaryOperator 0xa2a1e88 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa2a1e68 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa2a1e34 <col:39> 'streamsize':'int' lvalue ParmVar 0xa2a1a70 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa2a1e78 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa2a1e4c <col:45> 'streamsize':'int' lvalue Var 0xa2a1b70 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa2a2240 <line:55:8, col:65>
            0xa2a1ec0 "const streamsize __len =
              (ImplicitCastExpr 0xa2a2230 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa2a2208 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa2a21f8 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa2a2198 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa2a20f0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0xa081c30 'min')))
                  (DeclRefExpr 0xa2a1f50 <col:42> 'const streamsize':'const int' lvalue Var 0xa2a1c40 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa2a1f68 <col:53> 'const streamsize':'const int' lvalue Var 0xa2a1e00 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa2a2348 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2a2278 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0xa2a22ac <col:26> 'char_type *' lvalue ParmVar 0xa2a1a30 '__s' 'char_type *')
            (CallExpr 0xa2a2310 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2a22d8 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa2a22c8 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa2a232c <col:45> 'const streamsize':'const int' lvalue Var 0xa2a1ec0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa2a23b0 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa2a2370 <col:8> 'streamsize':'int' lvalue Var 0xa2a1b70 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa2a23a0 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa2a2388 <col:17> 'const streamsize':'const int' lvalue Var 0xa2a1ec0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa2a2400 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa2a23d0 <col:8> 'char_type *' lvalue ParmVar 0xa2a1a30 '__s' 'char_type *')
            (DeclRefExpr 0xa2a23e8 <col:15> 'const streamsize':'const int' lvalue Var 0xa2a1ec0 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa2a2480 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2a2430 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2a2420 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2a2464 <col:27> 'const streamsize':'const int' lvalue Var 0xa2a1ec0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa2a2938 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa2a2538 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa2a2518 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa2a24e4 <col:8> 'streamsize':'int' lvalue Var 0xa2a1b70 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa2a2528 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa2a24fc <col:16> 'streamsize':'int' lvalue ParmVar 0xa2a1a70 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa2a2920 <line:63:6, line:72:6>
          (DeclStmt 0xa2a2600 <line:64:8, col:42>
            0xa2a2560 "const int_type __c =
              (CallExpr 0xa2a25e0 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2a25a8 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2a2598 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0xa2a2900 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0xa2a2720 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa2a26f8 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2a2630 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2a2664 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa2a2560 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0xa2a26d8 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2a26a0 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa2a28e0 <line:66:3, line:69:3>
              (CallExpr 0xa2a2888 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2a2760 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0xa2a27e0 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa2a27c8 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa2a2794 <col:26> 'char_type *' lvalue ParmVar 0xa2a1a30 '__s' 'char_type *')))
                (CallExpr 0xa2a2868 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2a2818 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa2a284c <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa2a2560 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0xa2a28c8 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa2a28ac <col:7> 'streamsize':'int' lvalue Var 0xa2a1b70 '__ret' 'streamsize':'int')))
            (BreakStmt 0xa2a28f8 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa2a29b8 <line:74:7, col:14>
    (ImplicitCastExpr 0xa2a29a8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa2a298c <col:14> 'streamsize':'int' lvalue Var 0xa2a1b70 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa2a3958 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0xa2a2e20 <line:82:7, col:27>
    0xa2a2dd0 "streamsize __ret =
      (IntegerLiteral 0xa2a2e08 <col:26> 'int' 0)")
  (WhileStmt 0xa2a3908 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0xa2a2e80 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa2a2e60 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2a2e30 <col:14> 'streamsize':'int' lvalue Var 0xa2a2dd0 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa2a2e70 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2a2e48 <col:22> 'streamsize':'int' lvalue ParmVar 0xa2a2cd0 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa2a38e8 <line:84:2, line:107:2>
      (DeclStmt 0xa2a3008 <line:85:4, col:61>
        0xa2a2ea0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa2a2fe0 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa2a2fa8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (CallExpr 0xa2a2f20 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2a2ee8 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa2a2ed8 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa2a2f88 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2a2f50 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa2a2f40 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa2a3500 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa2a3040 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa2a3030 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa2a3018 <col:8> 'const streamsize':'const int' lvalue Var 0xa2a2ea0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa2a34d8 <line:87:6, line:94:6>
          (DeclStmt 0xa2a3100 <line:88:8, col:50>
            0xa2a3060 "const streamsize __remaining =
              (BinaryOperator 0xa2a30e8 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa2a30c8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa2a3094 <col:39> 'streamsize':'int' lvalue ParmVar 0xa2a2cd0 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa2a30d8 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa2a30ac <col:45> 'streamsize':'int' lvalue Var 0xa2a2dd0 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa2a3278 <line:89:8, col:65>
            0xa2a3120 "const streamsize __len =
              (ImplicitCastExpr 0xa2a3268 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa2a3240 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa2a3230 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa2a3208 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa2a20f0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0xa081c30 'min')))
                  (DeclRefExpr 0xa2a31a8 <col:42> 'const streamsize':'const int' lvalue Var 0xa2a2ea0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa2a31c0 <col:53> 'const streamsize':'const int' lvalue Var 0xa2a3060 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa2a3380 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2a32b0 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0xa2a3330 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2a32f8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa2a32e8 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa2a334c <col:40> 'const char_type *' lvalue ParmVar 0xa2a2c90 '__s' 'const char_type *')
            (DeclRefExpr 0xa2a3364 <col:45> 'const streamsize':'const int' lvalue Var 0xa2a3120 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa2a33e8 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa2a33a8 <col:8> 'streamsize':'int' lvalue Var 0xa2a2dd0 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa2a33d8 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa2a33c0 <col:17> 'const streamsize':'const int' lvalue Var 0xa2a3120 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa2a3438 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa2a3408 <col:8> 'const char_type *' lvalue ParmVar 0xa2a2c90 '__s' 'const char_type *')
            (DeclRefExpr 0xa2a3420 <col:15> 'const streamsize':'const int' lvalue Var 0xa2a3120 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa2a34b8 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2a3468 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2a3458 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2a349c <col:27> 'const streamsize':'const int' lvalue Var 0xa2a3120 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa2a38c8 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0xa2a3570 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa2a3550 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa2a351c <col:8> 'streamsize':'int' lvalue Var 0xa2a2dd0 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa2a3560 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa2a3534 <col:16> 'streamsize':'int' lvalue ParmVar 0xa2a2cd0 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa2a38b0 <line:97:6, line:106:6>
          (DeclStmt 0xa2a36d8 <line:98:8, col:69>
            0xa2a3590 "int_type __c =
              (CallExpr 0xa2a36b8 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2a35d8 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2a35c8 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0xa2a3698 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2a3630 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0xa2a3680 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0xa2a3664 <col:64> 'const char_type *' lvalue ParmVar 0xa2a2c90 '__s' 'const char_type *'))))")
          (IfStmt 0xa2a3890 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0xa2a37f8 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa2a37d0 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2a3708 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2a373c <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2a3590 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa2a37b0 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2a3778 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa2a3870 <line:100:3, line:103:3>
              (UnaryOperator 0xa2a3828 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa2a380c <col:7> 'streamsize':'int' lvalue Var 0xa2a2dd0 '__ret' 'streamsize':'int'))
              (UnaryOperator 0xa2a3858 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa2a383c <col:7> 'const char_type *' lvalue ParmVar 0xa2a2c90 '__s' 'const char_type *')))
            (BreakStmt 0xa2a3888 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa2a3948 <line:108:7, col:14>
    (ImplicitCastExpr 0xa2a3938 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa2a391c <col:14> 'streamsize':'int' lvalue Var 0xa2a2dd0 '__ret' 'streamsize':'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0xa2a44f8 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0xa2a3ea0 <line:120:7, col:27>
    0xa2a3e50 "streamsize __ret =
      (IntegerLiteral 0xa2a3e88 <col:26> 'int' 0)")
  (BinaryOperator 0xa2a3ed8 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0xa2a3eb0 <col:7> '_Bool' lvalue ParmVar 0xa2a3d20 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0xa2a3ec8 <col:17> '_Bool' true))
  (DeclStmt 0xa2a4008 <line:122:7, col:55>
    0xa2a3f60 "typename _Traits::int_type __c =
      (CallExpr 0xa2a3fe8 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2a3fb0 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa2a3f94 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2a3b60 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0xa2a44a8 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0xa2a4108 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0xa2a40e0 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa2a4038 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0xa2a405c <col:36> 'typename _Traits::int_type' lvalue Var 0xa2a3f60 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa2a40c0 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa2a4098 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0xa2a4488 <line:124:2, line:133:2>
      (BinaryOperator 0xa2a4228 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa2a411c <col:4> 'typename _Traits::int_type' lvalue Var 0xa2a3f60 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa2a4208 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2a4150 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0xa2a4134 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2a3cd0 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0xa2a41e8 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa2a41a8 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0xa2a41cc <col:47> 'typename _Traits::int_type' lvalue Var 0xa2a3f60 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0xa2a4398 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0xa2a4310 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa2a4268 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0xa2a428c <col:29> 'typename _Traits::int_type' lvalue Var 0xa2a3f60 '__c' 'typename _Traits::int_type')
          (CallExpr 0xa2a42f0 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa2a42c8 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0xa2a4380 <line:127:6, line:130:6>
          (BinaryOperator 0xa2a4360 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0xa2a4334 <col:8> '_Bool' lvalue ParmVar 0xa2a3d20 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0xa2a4350 <col:18> '_Bool' false))
          (BreakStmt 0xa2a4378 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0xa2a43d0 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0xa2a43b4 <col:6> 'streamsize':'int' lvalue Var 0xa2a3e50 '__ret' 'streamsize':'int'))
      (BinaryOperator 0xa2a4470 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0xa2a43e4 <col:4> 'typename _Traits::int_type' lvalue Var 0xa2a3f60 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa2a4450 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2a4418 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0xa2a43fc <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2a3b60 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0xa2a44e8 <line:134:7, col:14>
    (ImplicitCastExpr 0xa2a44d8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa2a44bc <col:14> 'streamsize':'int' lvalue Var 0xa2a3e50 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0xa2a4af0 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0xa2a4a28 <line:142:7, col:19>
    0xa2a49f0 "bool __ineof")
  (ReturnStmt 0xa2a4ae0 <line:143:7, col:60>
    (CallExpr 0xa2a4ab8 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0xa2a4a38 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa2a3e10)
      (DeclRefExpr 0xa2a4a6c <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2a4700 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa2a4a84 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa2a48b0 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa2a4a9c <col:53> '_Bool' lvalue Var 0xa2a49f0 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0xa2bc430 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc414 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f39f10 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0xa2bc4a0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc484 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a160 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0xa2bc510 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc4f4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a3b0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0xa2bc580 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc564 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a600 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0xa2bc5f0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc5d4 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a850 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0xa2bc660 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc644 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3db80 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0xa2bc6d0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc6b4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3ddd0 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0xa2bc7d0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa2bc7b8 <col:32, col:54> 'int' '|'
    (BinaryOperator 0xa2bc778 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0xa2bc758 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0xa2bc724 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a3b0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0xa2bc768 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0xa2bc73c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a600 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0xa2bc7a8 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0xa2bc790 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3e710 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0xa2bc840 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc824 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3e4c0 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0xa2bc8b0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa2bc894 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3e710 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0xa2bc970 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa2bc958 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0xa2bc938 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0xa2bc904 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a3b0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0xa2bc948 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0xa2bc91c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f3a600 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0xa2bf730 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0xa2bf820 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa2bf7e8 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0xa2bf880 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0xa2bf8e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa2bf8a8 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa2bf890 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa2bf020 '__s' 'istream_type &')))
), _M_c((CallExpr 0xa2bf990 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa2bf958 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0xa2bf9f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa2bfa00 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0xa2bf140 '__s' 'streambuf_type *')
), _M_c((CallExpr 0xa2bfab0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa2bfa78 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0xa2bfb10 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0xa2bfc10 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0xa2bfc00 <line:121:2, col:43>
    (CallExpr 0xa2bfbe0 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2bfb58 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa2bfbc0 <col:35, col:42> '<dependent type>'
        (MemberExpr 0xa2bfba0 <col:35> '<bound member function type>' ->_M_get 0xa2bf650
          (CXXThisExpr 0xa2bfb90 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa2bfe20 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0xa2bfc28 <line:130:25>)
  (IfStmt 0xa2bfdc8 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0xa2bfc48 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa2bee80
      (CXXThisExpr 0xa2bfc38 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa2bfdb0 <line:132:4, line:135:4>
      (CallExpr 0xa2bfcd0 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2bfc98 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0xa2bfc78 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa2bee80
            (CXXThisExpr 0xa2bfc68 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0xa2bfd98 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa2bfd00 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa2beed0
          (CXXThisExpr 0xa2bfcf0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa2bfd78 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2bfd40 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa2bfe10 <line:136:2, col:10>
    (UnaryOperator 0xa2bfdf8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2bfde8 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0xa2c0110 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0xa2bfe40 <line:145:25>)
  (DeclStmt 0xa2bfec0 <line:147:2, col:35>
    0xa2bfe60 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0xa2bfea8 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa2bfe98 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0xa2c00c8 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0xa2bfee0 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa2bee80
      (CXXThisExpr 0xa2bfed0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa2c00b0 <line:149:4, line:152:4>
      (BinaryOperator 0xa2bffd8 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2bff18 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa2bff00 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa2bfe60 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0xa2bffb8 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2bff80 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0xa2bff60 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0xa2bee80
              (CXXThisExpr 0xa2bff50 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0xa2c0098 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa2c0000 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa2beed0
          (CXXThisExpr 0xa2bfff0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa2c0078 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2c0040 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa2c0100 <line:153:2, col:9>
    (DeclRefExpr 0xa2c00e4 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa2bfe60 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0xa2c0280 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0xa2c0270 <col:9, col:45>
    (CXXOperatorCallExpr 0xa2c0248 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c01f0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700)
      (CallExpr 0xa2c0160 <col:16, col:26> '<dependent type>'
        (MemberExpr 0xa2c0140 <col:16> '<bound member function type>' ->_M_at_eof 0xa2bf6d0
          (CXXThisExpr 0xa2c0130 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0xa2c01d0 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c0198 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa2c017c <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa2bf4d0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0xa2c8910 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0xa2c0350 <line:168:2, col:43>
    0xa2c02a0 "const int_type __eof =
      (CallExpr 0xa2c0330 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c02f8 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0xa2c84b0 <line:169:2, col:24>
    0xa2c8460 "int_type __ret =
      (DeclRefExpr 0xa2c8494 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2c02a0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0xa2c88c8 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0xa2c84d0 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa2bee80
      (CXXThisExpr 0xa2c84c0 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa2c88b0 <line:171:4, line:179:4>
      (IfStmt 0xa2c8890 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0xa2c85b8 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa2c8590 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c8510 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0xa2c8558 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa2beed0
              (CXXThisExpr 0xa2c8548 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2c8578 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2c02a0 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0xa2c8618 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0xa2c85cc <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2c8460 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0xa2c85f8 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa2beed0
            (CXXThisExpr 0xa2c85e8 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0xa2c8870 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0xa2c8798 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0xa2c8770 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2c8650 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0xa2c8740 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0xa2c8728 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0xa2c8684 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2c8460 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0xa2c8708 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2c86d0 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0xa2c86b0 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0xa2bee80
                        (CXXThisExpr 0xa2c86a0 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0xa2c8754 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2c02a0 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0xa2c87f8 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0xa2c87c0 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa2beed0
              (CXXThisExpr 0xa2c87b0 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2c87e0 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2c8460 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0xa2c8858 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa2c8820 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0xa2bee80
              (CXXThisExpr 0xa2c8810 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa2c8840 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0xa2c8900 <line:180:2, col:9>
    (DeclRefExpr 0xa2c88e4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2c8460 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0xa2c8af8 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0xa2c89f0 <line:186:2, col:43>
    0xa2c8940 "const int_type __eof =
      (CallExpr 0xa2c89d0 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c8998 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0xa2c8ae8 <line:187:2, col:49>
    (CallExpr 0xa2c8ac0 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2c8a20 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa2c8a88 <col:34, col:41> '<dependent type>'
        (MemberExpr 0xa2c8a68 <col:34> '<bound member function type>' ->_M_get 0xa2bf650
          (CXXThisExpr 0xa2c8a58 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa2c8aa4 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2c8940 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa2c9048 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0xa2c9038 <col:7, col:27>
    (CallExpr 0xa2c9018 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2c8fc8 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa2c8fb0 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa2c8d10 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0xa2c8ffc <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa2c8e80 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa2c9570 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0xa2c9560 <col:7, col:28>
    (UnaryOperator 0xa2c9548 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0xa2c9528 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c94d8 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa2c94c0 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa2c9240 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0xa2c950c <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa2c93b0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0xa2caed8 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa2caea0 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa2cae88 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa2ca720 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0xa2caf88 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0xa2caf68 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0xa2ca630
    (CXXThisExpr 0xa2caf58 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa2cafe0 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa2caff0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0xa2ca850 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0xa2cb078 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0xa2cb058 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0xa2ca630
    (CXXThisExpr 0xa2cb048 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa2cb0d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0xa2cb3a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0xa2cb348 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0xa2cb2d8 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0xa2cb120 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa2cb110 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0xa2cb0f0 <col:7> '_Bool' lvalue ->_M_failed 0xa2ca670
            (CXXThisExpr 0xa2cb0e0 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0xa2cb2b0 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2cb160 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0xa2cb218 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2cb1c8 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0xa2cb1a8 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0xa2ca630
              (CXXThisExpr 0xa2cb198 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa2cb1fc <col:42> '_CharT' lvalue ParmVar 0xa2ca950 '__c' '_CharT'))
        (CallExpr 0xa2cb290 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2cb258 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0xa2cb330 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa2cb300 <col:4> '_Bool' lvalue ->_M_failed 0xa2ca670
        (CXXThisExpr 0xa2cb2f0 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa2cb320 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa2cb390 <line:244:2, col:10>
    (UnaryOperator 0xa2cb378 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2cb368 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0xa2cb3f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0xa2cb3e0 <col:9, col:17>
    (UnaryOperator 0xa2cb3c8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2cb3b8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0xa2cb440 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0xa2cb430 <col:9, col:17>
    (UnaryOperator 0xa2cb418 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2cb408 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa2cb490 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0xa2cb480 <col:9, col:17>
    (UnaryOperator 0xa2cb468 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2cb458 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0xa2cb508 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0xa2cb4f8 <col:9, col:16>
    (MemberExpr 0xa2cb4d8 <col:16> 'const _Bool' lvalue ->_M_failed 0xa2ca670
      (CXXThisExpr 0xa2cb4c8 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0xa2cb898 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0xa2cb840 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0xa2cb7d0 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0xa2cb5c8 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0xa2cb5b8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2cb51c <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa2cb5f0 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0xa2cb578 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa2cb568 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0xa2cb548 <col:24> '_Bool' lvalue ->_M_failed 0xa2ca670
                (CXXThisExpr 0xa2cb538 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0xa2cb600 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa2cb590 <col:35> '_Bool' true)))
      (CallExpr 0xa2cb7a8 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0xa2cb60c <line:271:9> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0xa2cb770 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa2cb718 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2c9490 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0)
          (CallExpr 0xa2cb6d8 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2cb670 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2cb638 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa2cb628 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa2cb6a4 <col:47> 'const _CharT *' lvalue ParmVar 0xa2cad40 '__ws' 'const _CharT *')
            (DeclRefExpr 0xa2cb6bc <col:53> 'streamsize':'int' lvalue ParmVar 0xa2cad80 '__len' 'streamsize':'int'))
          (DeclRefExpr 0xa2cb6fc <col:63> 'streamsize':'int' lvalue ParmVar 0xa2cad80 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0xa2cb798 <line:272:5> '_Bool' false)))
    (BinaryOperator 0xa2cb828 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa2cb7f8 <col:4> '_Bool' lvalue ->_M_failed 0xa2ca670
        (CXXThisExpr 0xa2cb7e8 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa2cb818 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa2cb888 <line:274:2, col:10>
    (UnaryOperator 0xa2cb870 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2cb860 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa2cc6c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0xa2cc678 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0xa2cc3e0 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0xa2cc360 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0xa2cc2c0 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa2cc2a4 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cbe20 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0xa2cc348 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0xa2cc310 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0xa2cc2f4 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cbfb0 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0xa2cc3c8 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa2cc390 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0xa2cc378 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cc140 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa2cc658 <line:287:2, line:292:2>
      (DeclStmt 0xa2cc438 <line:288:4, col:16>
        0xa2cc400 "bool __ineof")
      (CallExpr 0xa2cc558 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa2cc468 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0xa2a3e10)
        (CXXDependentScopeMemberExpr 0xa2cc4b8 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa2cc49c <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cbe20 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0xa2cc508 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0xa2cc4ec <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cc140 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0xa2cc53c <col:61> '_Bool' lvalue Var 0xa2cc400 '__ineof' '_Bool'))
      (IfStmt 0xa2cc638 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0xa2cc5a8 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa2cc598 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa2cc580 <col:9> '_Bool' lvalue Var 0xa2cc400 '__ineof' '_Bool')))
        (BinaryOperator 0xa2cc620 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa2cc5d8 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0xa2cc5bc <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cc140 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0xa2cc610 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2cc6b0 <line:293:7, col:14>
    (DeclRefExpr 0xa2cc694 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cc140 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa2cd080 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0xa2ccf28 <line:302:7, col:48>
    0xa2cce60 "const streamsize __num =
      (CXXOperatorCallExpr 0xa2ccf00 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa2ccec8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa2cce94 <col:32> '_CharT *' lvalue ParmVar 0xa2ccb60 '__last' '_CharT *')
        (DeclRefExpr 0xa2cceac <col:41> '_CharT *' lvalue ParmVar 0xa2ccb10 '__first' '_CharT *'))")
  (IfStmt 0xa2cd038 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0xa2ccf78 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa2ccf68 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2ccf38 <col:11> 'const streamsize':'const int' lvalue Var 0xa2cce60 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa2ccf50 <col:19> 'int' 0))
    (CallExpr 0xa2cd010 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2ccfa8 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa2ccf90 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cccf0 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa2ccfdc <col:18> '_CharT *' lvalue ParmVar 0xa2ccb10 '__first' '_CharT *')
      (DeclRefExpr 0xa2ccff4 <col:27> 'const streamsize':'const int' lvalue Var 0xa2cce60 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa2cd070 <line:305:7, col:14>
    (DeclRefExpr 0xa2cd054 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cccf0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa2cda40 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0xa2cd8e8 <line:314:7, col:48>
    0xa2cd820 "const streamsize __num =
      (CXXOperatorCallExpr 0xa2cd8c0 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa2cd888 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa2cd854 <col:32> 'const _CharT *' lvalue ParmVar 0xa2cd520 '__last' 'const _CharT *')
        (DeclRefExpr 0xa2cd86c <col:41> 'const _CharT *' lvalue ParmVar 0xa2cd4d0 '__first' 'const _CharT *'))")
  (IfStmt 0xa2cd9f8 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0xa2cd938 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa2cd928 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2cd8f8 <col:11> 'const streamsize':'const int' lvalue Var 0xa2cd820 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa2cd910 <col:19> 'int' 0))
    (CallExpr 0xa2cd9d0 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2cd968 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa2cd950 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cd6b0 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa2cd99c <col:18> 'const _CharT *' lvalue ParmVar 0xa2cd4d0 '__first' 'const _CharT *')
      (DeclRefExpr 0xa2cd9b4 <col:27> 'const streamsize':'const int' lvalue Var 0xa2cd820 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa2cda30 <line:317:7, col:14>
    (DeclRefExpr 0xa2cda14 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cd6b0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0xa2cf098 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0xa2ce330 <line:326:7, col:78>
    0xa2ce300 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa2ce420 <line:327:7, col:71>
    0xa2ce3f0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa2ce4e0 <line:328:7, col:74>
    0xa2ce4b0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa2ce5d0 <line:329:7, col:68>
    0xa2ce5a0 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa2cf050 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0xa2ce698 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa2ce5f8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa2ce5e0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cde90 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa2ce680 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa2ce648 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa2ce62c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2ce020 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa2cf030 <line:332:2, line:351:2>
      (DeclStmt 0xa2ce798 <line:333:4, col:42>
        0xa2ce710 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa2ce760 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa2ce744 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cde90 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa2ce878 <line:334:4, col:32>
        0xa2ce7d0 "int_type __c =
          (CallExpr 0xa2ce858 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2ce820 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa2ce804 <col:19> 'streambuf_type *' lvalue Var 0xa2ce710 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa2cf018 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0xa2ce978 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0xa2ce950 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa2ce8a8 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0xa2ce8cc <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2ce7d0 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa2ce930 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa2ce908 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0xa2cf000 <line:336:6, line:350:6>
          (DeclStmt 0xa2ceb18 <line:337:8, col:59>
            0xa2ce9a0 "const streamsize __n =
              (CXXOperatorCallExpr 0xa2ceaf0 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa2ceab8 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                (CallExpr 0xa2cea28 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2ce9f0 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2ce9d4 <col:31> 'streambuf_type *' lvalue Var 0xa2ce710 '__sb' 'streambuf_type *')))
                (CallExpr 0xa2cea98 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2cea60 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2cea44 <col:47> 'streambuf_type *' lvalue Var 0xa2ce710 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa2cefe0 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0xa2ceb68 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa2ceb58 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa2ceb28 <col:12> 'const streamsize':'const int' lvalue Var 0xa2ce9a0 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0xa2ceb40 <col:18> 'int' 1))
            (CompoundStmt 0xa2cee10 <line:339:3, line:344:3>
              (CallExpr 0xa2cec70 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa2ceba8 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2cebcc <col:23> '_CharT *' lvalue ParmVar 0xa2ce070 '__result' '_CharT *')
                (CallExpr 0xa2cec38 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2cec00 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2cebe4 <col:33> 'streambuf_type *' lvalue Var 0xa2ce710 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0xa2cec54 <col:47> 'const streamsize':'const int' lvalue Var 0xa2ce9a0 '__n' 'const streamsize':'const int'))
              (CallExpr 0xa2ced00 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2cecb0 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2cec98 <col:5> 'streambuf_type *' lvalue Var 0xa2ce710 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa2cece4 <col:24> 'const streamsize':'const int' lvalue Var 0xa2ce9a0 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0xa2ced50 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa2ced20 <col:5> '_CharT *' lvalue ParmVar 0xa2ce070 '__result' '_CharT *')
                (DeclRefExpr 0xa2ced38 <col:17> 'const streamsize':'const int' lvalue Var 0xa2ce9a0 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0xa2cedf8 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0xa2ced70 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2ce7d0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa2cedd8 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2ceda0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2ced88 <col:11> 'streambuf_type *' lvalue Var 0xa2ce710 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0xa2cefc8 <line:346:3, line:349:3>
              (BinaryOperator 0xa2cef10 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0xa2cee78 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa2cee60 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa2cee30 <col:6> '_CharT *' lvalue ParmVar 0xa2ce070 '__result' '_CharT *')))
                (CallExpr 0xa2ceef0 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa2ceeb0 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa2ceed4 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2ce7d0 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0xa2cefb0 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa2cef28 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2ce7d0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa2cef90 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2cef58 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2cef40 <col:11> 'streambuf_type *' lvalue Var 0xa2ce710 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0xa2cf088 <line:352:7, col:14>
    (DeclRefExpr 0xa2cf06c <col:14> '_CharT *' lvalue ParmVar 0xa2ce070 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0xa2d0e28 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0xa2cfa70 <line:361:7, col:78>
    0xa2cfa40 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa2cfb60 <line:362:7, col:71>
    0xa2cfb30 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa2cfc20 <line:363:7, col:74>
    0xa2cfbf0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa2cfd10 <line:364:7, col:68>
    0xa2cfce0 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa2d0de0 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0xa2cfdd8 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa2cfd38 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa2cfd20 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cf5b0 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa2cfdc0 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa2cfd88 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa2cfd6c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cf740 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa2d0db8 <line:367:2, line:392:2>
      (DeclStmt 0xa2cfec8 <line:368:4, col:59>
        0xa2cfe10 "const int_type __ival =
          (CallExpr 0xa2cfea8 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa2cfe68 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0xa2cfe8c <col:53> 'const _CharT' lvalue ParmVar 0xa2cf7b0 '__val' 'const _CharT &'))")
      (DeclStmt 0xa2cffc8 <line:369:4, col:42>
        0xa2cff40 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa2cff90 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa2cff74 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cf5b0 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa2d0088 <line:370:4, col:32>
        0xa2cffe0 "int_type __c =
          (CallExpr 0xa2d0068 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2d0030 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa2d0014 <col:19> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa2d0b78 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0xa2d0258 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0xa2d0188 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0xa2d0160 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa2d00b8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa2d00dc <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2cffe0 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa2d0140 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa2d0118 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0xa2d0240 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0xa2d0218 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa2d01c0 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa2d01e4 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2cffe0 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0xa2d01fc <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa2cfe10 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0xa2d0b60 <line:373:6, line:386:6>
          (DeclStmt 0xa2d03f8 <line:374:8, col:53>
            0xa2d0280 "streamsize __n =
              (CXXOperatorCallExpr 0xa2d03d0 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0xa2d0398 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                (CallExpr 0xa2d0308 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2d02d0 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2d02b4 <col:25> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *')))
                (CallExpr 0xa2d0378 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2d0340 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2d0324 <col:41> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa2d0b40 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0xa2d0448 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa2d0438 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa2d0408 <col:12> 'streamsize':'int' lvalue Var 0xa2d0280 '__n' 'streamsize':'int'))
              (IntegerLiteral 0xa2d0420 <col:18> 'int' 1))
            (CompoundStmt 0xa2d0a80 <line:376:3, line:383:3>
              (DeclStmt 0xa2d07f8 <line:377:5, line:378:19>
                0xa2d06b0 "const _CharT *__p =
                  (CallExpr 0xa2d07d0 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa2d0708 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0xa2d0780 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa2d0748 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0xa2d072c <col:43> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0xa2d079c <line:378:8> 'streamsize':'int' lvalue Var 0xa2d0280 '__n' 'streamsize':'int')
                    (DeclRefExpr 0xa2d07b4 <col:13> 'const _CharT' lvalue ParmVar 0xa2cf7b0 '__val' 'const _CharT &'))")
              (IfStmt 0xa2d0938 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0xa2d0808 <line:379:9> 'const _CharT *' lvalue Var 0xa2d06b0 '__p' 'const _CharT *')
                (BinaryOperator 0xa2d0920 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0xa2d0820 <col:7> 'streamsize':'int' lvalue Var 0xa2d0280 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0xa2d08f8 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2d08c0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                    (DeclRefExpr 0xa2d0838 <col:13> 'const _CharT *' lvalue Var 0xa2d06b0 '__p' 'const _CharT *')
                    (CallExpr 0xa2d08a0 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa2d0868 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0xa2d0850 <col:19> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0xa2d09c0 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2d0970 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2d0954 <col:5> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa2d09a4 <col:24> 'streamsize':'int' lvalue Var 0xa2d0280 '__n' 'streamsize':'int'))
              (BinaryOperator 0xa2d0a68 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0xa2d09e0 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2cffe0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa2d0a48 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2d0a10 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2d09f8 <col:11> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0xa2d0b28 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa2d0aa0 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2cffe0 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa2d0b08 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2d0ad0 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2d0ab8 <col:9> 'streambuf_type *' lvalue Var 0xa2cff40 '__sb' 'streambuf_type *')))))))
      (IfStmt 0xa2d0d98 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0xa2d0c80 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0xa2d0c58 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa2d0bb0 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0xa2d0bd4 <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2cffe0 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa2d0c38 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa2d0c10 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0xa2d0d00 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa2d0cb0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa2d0c94 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cf5b0 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0xa2d0ce4 <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2cffe0 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0xa2d0d80 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa2d0d30 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa2d0d18 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cf5b0 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0xa2d0d68 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa2d0e18 <line:393:7, col:14>
    (DeclRefExpr 0xa2d0dfc <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa2cf5b0 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0xa2d31e8 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0xa2d3198 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2d3130 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa2d3114 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2d2ef0 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0xa2d3164 <col:18> 'const _CharT *' lvalue ParmVar 0xa2d2f60 '__ws' 'const _CharT *')
    (DeclRefExpr 0xa2d317c <col:24> 'int' lvalue ParmVar 0xa2d2fb0 '__len' 'int'))
  (ReturnStmt 0xa2d31d8 <line:116:7, col:14>
    (DeclRefExpr 0xa2d31bc <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa2d2ef0 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0xa2d3710 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0xa2d36c0 <line:125:7, line:126:17>
    (DeclStmt 0xa2d3540 <line:125:12, col:23>
      0xa2d34f0 "int __j =
        (IntegerLiteral 0xa2d3528 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0xa2d35a0 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0xa2d3580 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0xa2d3550 <col:25> 'int' lvalue Var 0xa2d34f0 '__j' 'int'))
      (ImplicitCastExpr 0xa2d3590 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0xa2d3568 <col:31> 'int' lvalue ParmVar 0xa2d3380 '__len' 'int')))
    (BinaryOperator 0xa2d3618 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0xa2d35d0 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0xa2d35b8 <col:38> 'int' lvalue Var 0xa2d34f0 '__j' 'int'))
      (UnaryOperator 0xa2d3600 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa2d35e4 <col:47> '_OutIter' lvalue ParmVar 0xa2d32c0 '__s' '_OutIter')))
    (BinaryOperator 0xa2d36a8 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0xa2d3648 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa2d3630 <col:3> '_OutIter' lvalue ParmVar 0xa2d32c0 '__s' '_OutIter'))
      (ArraySubscriptExpr 0xa2d3690 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0xa2d365c <col:9> 'const _CharT *' lvalue ParmVar 0xa2d3330 '__ws' 'const _CharT *')
        (DeclRefExpr 0xa2d3674 <col:14> 'int' lvalue Var 0xa2d34f0 '__j' 'int'))))
  (ReturnStmt 0xa2d3700 <line:127:7, col:14>
    (DeclRefExpr 0xa2d36e4 <col:14> '_OutIter' lvalue ParmVar 0xa2d32c0 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0xa2d7308 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0xa2d72f8 <col:9, col:36>
    (CallExpr 0xa2d72d0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7268 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7258 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d729c <col:28> 'mask':'unsigned short' lvalue ParmVar 0xa2d3aa0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa2d72b4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa2d3b00 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0xa2d73e8 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0xa2d73d8 <col:9, col:45>
    (CallExpr 0xa2d73b0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7330 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7320 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d7364 <col:28> 'const char_type *' lvalue ParmVar 0xa2d3c40 '__lo' 'const char_type *')
      (DeclRefExpr 0xa2d737c <col:34> 'const char_type *' lvalue ParmVar 0xa2d3c90 '__hi' 'const char_type *')
      (DeclRefExpr 0xa2d7394 <col:40> 'mask *' lvalue ParmVar 0xa2d3d00 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2d74c8 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0xa2d74b8 <col:9, col:48>
    (CallExpr 0xa2d7490 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7410 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7400 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d7444 <col:33> 'mask':'unsigned short' lvalue ParmVar 0xa2d3e40 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa2d745c <col:38> 'const char_type *' lvalue ParmVar 0xa2d3e90 '__lo' 'const char_type *')
      (DeclRefExpr 0xa2d7474 <col:44> 'const char_type *' lvalue ParmVar 0xa2d3ee0 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2d75a8 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0xa2d7598 <col:9, col:49>
    (CallExpr 0xa2d7570 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d74f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d74e0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d7524 <col:34> 'mask':'unsigned short' lvalue ParmVar 0xa2d4020 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa2d753c <col:39> 'const char_type *' lvalue ParmVar 0xa2d4070 '__lo' 'const char_type *')
      (DeclRefExpr 0xa2d7554 <col:45> 'const char_type *' lvalue ParmVar 0xa2d40c0 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0xa2d7650 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0xa2d7640 <col:9, col:36>
    (CallExpr 0xa2d7620 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d75d0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d75c0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d7604 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa2d41a0 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2d7718 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0xa2d7708 <col:9, col:43>
    (CallExpr 0xa2d76e0 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7678 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7668 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d76ac <col:33> 'char_type *' lvalue ParmVar 0xa2d42e0 '__lo' 'char_type *')
      (DeclRefExpr 0xa2d76c4 <col:39> 'const char_type *' lvalue ParmVar 0xa2d4330 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa2d77c0 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0xa2d77b0 <col:9, col:36>
    (CallExpr 0xa2d7790 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7740 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7730 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d7774 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa2d4440 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2d7888 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0xa2d7878 <col:9, col:43>
    (CallExpr 0xa2d7850 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d77e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d77d8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d781c <col:33> 'char_type *' lvalue ParmVar 0xa2d4510 '__lo' 'char_type *')
      (DeclRefExpr 0xa2d7834 <col:39> 'const char_type *' lvalue ParmVar 0xa2d4560 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0xa2d7930 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0xa2d7920 <col:9, col:34>
    (CallExpr 0xa2d7900 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d78b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d78a0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d78e4 <col:31> 'char' lvalue ParmVar 0xa2d4630 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa2d7a10 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0xa2d7a00 <col:9, col:47>
    (CallExpr 0xa2d79d8 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7958 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7948 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d798c <col:31> 'const char *' lvalue ParmVar 0xa2d5b50 '__lo' 'const char *')
      (DeclRefExpr 0xa2d79a4 <col:37> 'const char *' lvalue ParmVar 0xa2d5ba0 '__hi' 'const char *')
      (DeclRefExpr 0xa2d79bc <col:43> 'char_type *' lvalue ParmVar 0xa2d5bf0 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa2d7ad8 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0xa2d7ac8 <col:9, col:45>
    (CallExpr 0xa2d7aa0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7a38 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7a28 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d7a6c <col:32> 'char_type':'_CharT' lvalue ParmVar 0xa2d5d30 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa2d7a84 <col:37> 'char' lvalue ParmVar 0xa2d5d70 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa2d7bd8 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0xa2d7bc8 <col:9, col:58>
    (CallExpr 0xa2d7b98 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2d7b00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2d7af0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa2d7b34 <col:32> 'const char_type *' lvalue ParmVar 0xa2d5e90 '__lo' 'const char_type *')
      (DeclRefExpr 0xa2d7b4c <col:38> 'const char_type *' lvalue ParmVar 0xa2d5ee0 '__hi' 'const char_type *')
      (DeclRefExpr 0xa2d7b64 <col:44> 'char' lvalue ParmVar 0xa2d5f20 '__dfault' 'char')
      (DeclRefExpr 0xa2d7b7c <col:54> 'char *' lvalue ParmVar 0xa2d5f70 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0xa2d7230 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2d7218 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa2d7bec </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0xa2d60f0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa2d7c90 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0xa2d7ca0 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa2daa90 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa2daa78 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa2da9e8 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa2daa68 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa2daa50 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa2daa40 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa2daa18 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa2daa00 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa2dcf18 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa2dcf00 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa2dcf28 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa2dcf50 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2dcf38 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa2dcf78 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa2dcf60 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa2dcf88 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa2dcfb0 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2dcf98 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa2dd0a0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa2dd090 <col:9, col:36>
    (CXXMemberCallExpr 0xa2dd060 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa2dd040 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa2dc2d0
        (CXXThisExpr 0xa2dcfd8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd080 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd028 <col:33> 'char_type':'char' lvalue ParmVar 0xa2db540 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2dd1b0 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa2dd1a0 <col:9, col:43>
    (CXXMemberCallExpr 0xa2dd158 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa2dd138 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa2dc400
        (CXXThisExpr 0xa2dd0b8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd180 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd108 <col:33> 'char_type *' lvalue ParmVar 0xa2db680 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa2dd190 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd120 <col:39> 'const char_type *' lvalue ParmVar 0xa2db6f0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa2dd290 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa2dd280 <col:9, col:36>
    (CXXMemberCallExpr 0xa2dd250 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa2dd230 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa2dc4c0
        (CXXThisExpr 0xa2dd1c8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd270 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd218 <col:33> 'char_type':'char' lvalue ParmVar 0xa2db800 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2dd3a0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa2dd390 <col:9, col:43>
    (CXXMemberCallExpr 0xa2dd348 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa2dd328 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa2dc5f0
        (CXXThisExpr 0xa2dd2a8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd370 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd2f8 <col:33> 'char_type *' lvalue ParmVar 0xa2db8d0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa2dd380 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd310 <col:39> 'const char_type *' lvalue ParmVar 0xa2db920 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa2dd638 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa2dd500 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2dd418 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2dd408 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa2dd3e4 <col:6> 'char' lvalue ->_M_widen_ok 0xa2da6b0
          (CXXThisExpr 0xa2dd3b8 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa2dd4f0 <line:868:4, col:51>
      (ImplicitCastExpr 0xa2dd4e0 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2dd4c8 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa2dd4b8 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2dd438 <col:11> 'char [256]' lvalue ->_M_widen 0xa2da7a0
              (CXXThisExpr 0xa2dd428 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2dd4a0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2dd490 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2dd480 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa2dd458 <col:47> 'char' lvalue ParmVar 0xa2db9f0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa2dd550 <line:869:2, col:22> 'void'
    (MemberExpr 0xa2dd530 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa2dcc60
      (CXXThisExpr 0xa2dd520 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa2dd628 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa2dd5f8 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa2dd5d8 <col:9, col:15> '<bound member function type>' ->do_widen 0xa2dc6b0
        (CXXThisExpr 0xa2dd570 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd618 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd5c0 <col:24> 'char' lvalue ParmVar 0xa2db9f0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa2dda78 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa2dd860 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa2dd6c0 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa2dd6b0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2dd6a0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa2dd668 <col:6> 'char' lvalue ->_M_widen_ok 0xa2da6b0
            (CXXThisExpr 0xa2dd658 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa2dd688 <col:21> 'int' 1))
    (CompoundStmt 0xa2dd848 <line:895:4, line:898:4>
      (CallExpr 0xa2dd798 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa2dd788 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2dd6d8 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa2dd7d0 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa2dd7c0 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa2dd6f0 <col:23> 'char_type *' lvalue ParmVar 0xa2dbb90 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa2dd7f0 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa2dd7e0 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa2dd708 <col:29> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa2dd800 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa2dd770 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa2dd750 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa2dd720 <col:35> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa2dd760 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa2dd738 <col:42> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *')))))
      (ReturnStmt 0xa2dd838 <line:897:6, col:13>
        (ImplicitCastExpr 0xa2dd828 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2dd80c <col:13> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa2dd938 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa2dd8d0 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2dd8c0 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2dd8b0 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa2dd890 <col:7> 'char' lvalue ->_M_widen_ok 0xa2da6b0
            (CXXThisExpr 0xa2dd880 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa2dd918 <line:900:4, col:18> 'void'
      (MemberExpr 0xa2dd8f8 <col:4> '<bound member function type>' ->_M_widen_init 0xa2dcc60
        (CXXThisExpr 0xa2dd8e8 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa2dda68 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa2dda10 <col:9, col:40> 'const char *'
      (MemberExpr 0xa2dd9f0 <col:9, col:15> '<bound member function type>' ->do_widen 0xa2dc830
        (CXXThisExpr 0xa2dd958 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dda38 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9a8 <col:24> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa2dda48 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9c0 <col:30> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa2dda58 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9d8 <col:36> 'char_type *' lvalue ParmVar 0xa2dbb90 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa2ddfc0 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa2ddc48 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2ddb60 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2ddb50 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2ddb38 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa2ddb28 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2ddaa8 <col:6> 'char [256]' lvalue ->_M_narrow 0xa2da890
              (CXXThisExpr 0xa2dda98 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2ddb10 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2ddb00 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2ddaf0 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa2ddac8 <col:43> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa2ddc38 <line:926:4, col:52>
      (ImplicitCastExpr 0xa2ddc28 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2ddc10 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa2ddc00 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2ddb80 <col:11> 'char [256]' lvalue ->_M_narrow 0xa2da890
              (CXXThisExpr 0xa2ddb70 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2ddbe8 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2ddbd8 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2ddbc8 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa2ddba0 <col:48> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa2ddda0 <line:927:2, col:43>
    0xa2ddc70 "const char __t =
      (CXXMemberCallExpr 0xa2ddd58 <col:19, col:42> 'char'
        (MemberExpr 0xa2ddd38 <col:19> '<bound member function type>' ->do_narrow 0xa2dc950
          (CXXThisExpr 0xa2ddd28 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa2ddd80 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa2ddcf8 <col:29> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa2ddd90 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2ddd10 <col:34> 'char' lvalue ParmVar 0xa2dbd10 '__dfault' 'char')))")
  (IfStmt 0xa2ddf68 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa2dde20 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa2dddf0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2ddde0 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2dddb0 <col:6> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char')))
      (ImplicitCastExpr 0xa2dde10 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2dde00 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2dddc8 <col:13> 'char' lvalue ParmVar 0xa2dbd10 '__dfault' 'char'))))
    (BinaryOperator 0xa2ddf50 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa2ddf10 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa2ddf00 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa2dde80 <col:4> 'char [256]' lvalue ->_M_narrow 0xa2da890
            (CXXThisExpr 0xa2dde70 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa2ddee8 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa2dded8 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa2ddec8 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa2ddea0 <col:41> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa2ddf40 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2ddf24 <col:49> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa2ddfb0 <line:930:2, col:9>
    (ImplicitCastExpr 0xa2ddfa0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa2ddf84 <col:9> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa2e0178 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa2de278 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2de0e0 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa2de098 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa2de088 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2ddfe0 <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa2de0c0 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa2de060 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa2de050 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa2de040 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa2de008 <col:23> 'char' lvalue ->_M_narrow_ok 0xa2da8d0
                  (CXXThisExpr 0xa2ddff8 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa2de028 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa2de0d0 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa2de078 <col:42> '_Bool' true))))
    (CompoundStmt 0xa2de260 <line:960:4, line:963:4>
      (CallExpr 0xa2de1b0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa2de1a0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2de0ec <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa2de1e8 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa2de1d8 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa2de104 <col:23> 'char *' lvalue ParmVar 0xa2dbf10 '__to' 'char *')))
        (ImplicitCastExpr 0xa2de208 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa2de1f8 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa2de11c <col:29> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa2de218 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa2de188 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa2de168 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa2de134 <col:35> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa2de178 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa2de14c <col:42> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa2de250 <line:962:6, col:13>
        (ImplicitCastExpr 0xa2de240 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2de224 <col:13> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa2de350 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa2de2e8 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2de2d8 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2de2c8 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa2de2a8 <col:7> 'char' lvalue ->_M_narrow_ok 0xa2da8d0
            (CXXThisExpr 0xa2de298 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa2de330 <line:965:4, col:19> 'void'
      (MemberExpr 0xa2de310 <col:4> '<bound member function type>' ->_M_narrow_init 0xa2dcbe0
        (CXXThisExpr 0xa2de300 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa2e0168 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa2de440 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa2de420 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa2dcb10
        (CXXThisExpr 0xa2de370 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2e0128 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2de3c0 <col:25> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa2e0138 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2de3d8 <col:31> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa2e0148 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2de3f0 <col:37> 'char' lvalue ParmVar 0xa2dbec0 '__dfault' 'char'))
      (ImplicitCastExpr 0xa2e0158 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa2de408 <col:47> 'char *' lvalue ParmVar 0xa2dbf10 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa2e01e8 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa2e01d8 <col:9, col:16>
    (ImplicitCastExpr 0xa2e01c8 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa2e01a8 <col:16> 'const mask *const' lvalue ->_M_table 0xa2da670
        (CXXThisExpr 0xa2e0198 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa2e0238 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa2e0228 <col:9, col:16>
    (ImplicitCastExpr 0xa2e0218 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa2e01fc <col:16> 'char' lvalue ParmVar 0xa2dc660 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa2e03c0 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa2e0310 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa2e0300 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e024c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa2e0348 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa2e0338 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2e0264 <col:19> 'char_type *' lvalue ParmVar 0xa2dc7d0 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa2e0368 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa2e0358 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2e027c <col:27> 'const char *' lvalue ParmVar 0xa2dc730 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa2e0378 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa2e02e8 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa2e02c8 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e0294 <col:33> 'const char *' lvalue ParmVar 0xa2dc780 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa2e02d8 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e02ac <col:40> 'const char *' lvalue ParmVar 0xa2dc730 '__lo' 'const char *')))))
  (ReturnStmt 0xa2e03b0 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa2e03a0 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa2e0384 <col:9> 'const char *' lvalue ParmVar 0xa2dc780 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa2e0410 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa2e0400 <col:9, col:16>
    (ImplicitCastExpr 0xa2e03f0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa2e03d8 <col:16> 'char_type':'char' lvalue ParmVar 0xa2dc8b0 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa2e0598 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa2e04e8 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa2e04d8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e0424 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa2e0520 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa2e0510 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa2e043c <col:19> 'char *' lvalue ParmVar 0xa2dcab0 '__dest' 'char *')))
    (ImplicitCastExpr 0xa2e0540 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa2e0530 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2e0454 <col:27> 'const char_type *' lvalue ParmVar 0xa2dc9d0 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa2e0550 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa2e04c0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa2e04a0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2e046c <col:33> 'const char_type *' lvalue ParmVar 0xa2dca20 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa2e04b0 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2e0484 <col:40> 'const char_type *' lvalue ParmVar 0xa2dc9d0 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa2e0588 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa2e0578 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa2e055c <col:9> 'const char_type *' lvalue ParmVar 0xa2dca20 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa2e64b8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e64a0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa2e64e0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e64c8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0xa2d9488 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2d9470 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0xa2d9520 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0xa2d8150 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa2d9580 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0xa2d97c8 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa2daa90 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa2daa78 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa2da9e8 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa2daa68 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa2daa50 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa2daa40 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa2daa18 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa2daa00 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa2dcf18 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa2dcf00 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa2dcf28 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa2dcf50 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2dcf38 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa2dcf78 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa2dcf60 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa2dcf88 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa2dcfb0 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2dcf98 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa2dd0a0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa2dd090 <col:9, col:36>
    (CXXMemberCallExpr 0xa2dd060 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa2dd040 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa2dc2d0
        (CXXThisExpr 0xa2dcfd8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd080 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd028 <col:33> 'char_type':'char' lvalue ParmVar 0xa2db540 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2dd1b0 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa2dd1a0 <col:9, col:43>
    (CXXMemberCallExpr 0xa2dd158 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa2dd138 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa2dc400
        (CXXThisExpr 0xa2dd0b8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd180 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd108 <col:33> 'char_type *' lvalue ParmVar 0xa2db680 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa2dd190 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd120 <col:39> 'const char_type *' lvalue ParmVar 0xa2db6f0 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa2dd290 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa2dd280 <col:9, col:36>
    (CXXMemberCallExpr 0xa2dd250 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa2dd230 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa2dc4c0
        (CXXThisExpr 0xa2dd1c8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd270 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd218 <col:33> 'char_type':'char' lvalue ParmVar 0xa2db800 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa2dd3a0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa2dd390 <col:9, col:43>
    (CXXMemberCallExpr 0xa2dd348 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa2dd328 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa2dc5f0
        (CXXThisExpr 0xa2dd2a8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd370 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd2f8 <col:33> 'char_type *' lvalue ParmVar 0xa2db8d0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa2dd380 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd310 <col:39> 'const char_type *' lvalue ParmVar 0xa2db920 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa2dd638 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa2dd500 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2dd418 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2dd408 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa2dd3e4 <col:6> 'char' lvalue ->_M_widen_ok 0xa2da6b0
          (CXXThisExpr 0xa2dd3b8 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa2dd4f0 <line:868:4, col:51>
      (ImplicitCastExpr 0xa2dd4e0 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2dd4c8 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa2dd4b8 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2dd438 <col:11> 'char [256]' lvalue ->_M_widen 0xa2da7a0
              (CXXThisExpr 0xa2dd428 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2dd4a0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2dd490 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2dd480 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa2dd458 <col:47> 'char' lvalue ParmVar 0xa2db9f0 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa2dd550 <line:869:2, col:22> 'void'
    (MemberExpr 0xa2dd530 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa2dcc60
      (CXXThisExpr 0xa2dd520 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa2dd628 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa2dd5f8 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa2dd5d8 <col:9, col:15> '<bound member function type>' ->do_widen 0xa2dc6b0
        (CXXThisExpr 0xa2dd570 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dd618 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2dd5c0 <col:24> 'char' lvalue ParmVar 0xa2db9f0 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa2dda78 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa2dd860 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa2dd6c0 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa2dd6b0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2dd6a0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa2dd668 <col:6> 'char' lvalue ->_M_widen_ok 0xa2da6b0
            (CXXThisExpr 0xa2dd658 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa2dd688 <col:21> 'int' 1))
    (CompoundStmt 0xa2dd848 <line:895:4, line:898:4>
      (CallExpr 0xa2dd798 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa2dd788 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2dd6d8 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa2dd7d0 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa2dd7c0 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa2dd6f0 <col:23> 'char_type *' lvalue ParmVar 0xa2dbb90 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa2dd7f0 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa2dd7e0 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa2dd708 <col:29> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa2dd800 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa2dd770 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa2dd750 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa2dd720 <col:35> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa2dd760 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa2dd738 <col:42> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *')))))
      (ReturnStmt 0xa2dd838 <line:897:6, col:13>
        (ImplicitCastExpr 0xa2dd828 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2dd80c <col:13> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa2dd938 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa2dd8d0 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2dd8c0 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2dd8b0 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa2dd890 <col:7> 'char' lvalue ->_M_widen_ok 0xa2da6b0
            (CXXThisExpr 0xa2dd880 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa2dd918 <line:900:4, col:18> 'void'
      (MemberExpr 0xa2dd8f8 <col:4> '<bound member function type>' ->_M_widen_init 0xa2dcc60
        (CXXThisExpr 0xa2dd8e8 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa2dda68 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa2dda10 <col:9, col:40> 'const char *'
      (MemberExpr 0xa2dd9f0 <col:9, col:15> '<bound member function type>' ->do_widen 0xa2dc830
        (CXXThisExpr 0xa2dd958 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2dda38 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9a8 <col:24> 'const char *' lvalue ParmVar 0xa2dbaf0 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa2dda48 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9c0 <col:30> 'const char *' lvalue ParmVar 0xa2dbb40 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa2dda58 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2dd9d8 <col:36> 'char_type *' lvalue ParmVar 0xa2dbb90 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa2ddfc0 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa2ddc48 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2ddb60 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2ddb50 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2ddb38 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa2ddb28 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2ddaa8 <col:6> 'char [256]' lvalue ->_M_narrow 0xa2da890
              (CXXThisExpr 0xa2dda98 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2ddb10 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2ddb00 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2ddaf0 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa2ddac8 <col:43> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa2ddc38 <line:926:4, col:52>
      (ImplicitCastExpr 0xa2ddc28 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa2ddc10 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa2ddc00 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa2ddb80 <col:11> 'char [256]' lvalue ->_M_narrow 0xa2da890
              (CXXThisExpr 0xa2ddb70 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2ddbe8 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2ddbd8 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2ddbc8 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa2ddba0 <col:48> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa2ddda0 <line:927:2, col:43>
    0xa2ddc70 "const char __t =
      (CXXMemberCallExpr 0xa2ddd58 <col:19, col:42> 'char'
        (MemberExpr 0xa2ddd38 <col:19> '<bound member function type>' ->do_narrow 0xa2dc950
          (CXXThisExpr 0xa2ddd28 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa2ddd80 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa2ddcf8 <col:29> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa2ddd90 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2ddd10 <col:34> 'char' lvalue ParmVar 0xa2dbd10 '__dfault' 'char')))")
  (IfStmt 0xa2ddf68 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa2dde20 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa2dddf0 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2ddde0 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2dddb0 <col:6> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char')))
      (ImplicitCastExpr 0xa2dde10 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa2dde00 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa2dddc8 <col:13> 'char' lvalue ParmVar 0xa2dbd10 '__dfault' 'char'))))
    (BinaryOperator 0xa2ddf50 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa2ddf10 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa2ddf00 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa2dde80 <col:4> 'char [256]' lvalue ->_M_narrow 0xa2da890
            (CXXThisExpr 0xa2dde70 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa2ddee8 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa2dded8 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa2ddec8 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa2ddea0 <col:41> 'char_type':'char' lvalue ParmVar 0xa2dbcd0 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa2ddf40 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2ddf24 <col:49> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa2ddfb0 <line:930:2, col:9>
    (ImplicitCastExpr 0xa2ddfa0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa2ddf84 <col:9> 'const char' lvalue Var 0xa2ddc70 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa2e0178 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa2de278 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2de0e0 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa2de098 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa2de088 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2ddfe0 <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa2de0c0 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa2de060 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa2de050 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa2de040 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa2de008 <col:23> 'char' lvalue ->_M_narrow_ok 0xa2da8d0
                  (CXXThisExpr 0xa2ddff8 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa2de028 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa2de0d0 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa2de078 <col:42> '_Bool' true))))
    (CompoundStmt 0xa2de260 <line:960:4, line:963:4>
      (CallExpr 0xa2de1b0 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa2de1a0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2de0ec <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa2de1e8 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa2de1d8 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa2de104 <col:23> 'char *' lvalue ParmVar 0xa2dbf10 '__to' 'char *')))
        (ImplicitCastExpr 0xa2de208 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa2de1f8 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa2de11c <col:29> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa2de218 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa2de188 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa2de168 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa2de134 <col:35> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa2de178 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa2de14c <col:42> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa2de250 <line:962:6, col:13>
        (ImplicitCastExpr 0xa2de240 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2de224 <col:13> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa2de350 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa2de2e8 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2de2d8 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2de2c8 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa2de2a8 <col:7> 'char' lvalue ->_M_narrow_ok 0xa2da8d0
            (CXXThisExpr 0xa2de298 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa2de330 <line:965:4, col:19> 'void'
      (MemberExpr 0xa2de310 <col:4> '<bound member function type>' ->_M_narrow_init 0xa2dcbe0
        (CXXThisExpr 0xa2de300 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa2e0168 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa2de440 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa2de420 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa2dcb10
        (CXXThisExpr 0xa2de370 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa2e0128 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2de3c0 <col:25> 'const char_type *' lvalue ParmVar 0xa2dbe30 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa2e0138 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2de3d8 <col:31> 'const char_type *' lvalue ParmVar 0xa2dbe80 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa2e0148 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa2de3f0 <col:37> 'char' lvalue ParmVar 0xa2dbec0 '__dfault' 'char'))
      (ImplicitCastExpr 0xa2e0158 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa2de408 <col:47> 'char *' lvalue ParmVar 0xa2dbf10 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa2e01e8 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa2e01d8 <col:9, col:16>
    (ImplicitCastExpr 0xa2e01c8 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa2e01a8 <col:16> 'const mask *const' lvalue ->_M_table 0xa2da670
        (CXXThisExpr 0xa2e0198 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa2e0238 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa2e0228 <col:9, col:16>
    (ImplicitCastExpr 0xa2e0218 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa2e01fc <col:16> 'char' lvalue ParmVar 0xa2dc660 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa2e03c0 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa2e0310 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa2e0300 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e024c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa2e0348 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa2e0338 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2e0264 <col:19> 'char_type *' lvalue ParmVar 0xa2dc7d0 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa2e0368 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa2e0358 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2e027c <col:27> 'const char *' lvalue ParmVar 0xa2dc730 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa2e0378 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa2e02e8 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa2e02c8 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e0294 <col:33> 'const char *' lvalue ParmVar 0xa2dc780 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa2e02d8 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e02ac <col:40> 'const char *' lvalue ParmVar 0xa2dc730 '__lo' 'const char *')))))
  (ReturnStmt 0xa2e03b0 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa2e03a0 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa2e0384 <col:9> 'const char *' lvalue ParmVar 0xa2dc780 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa2e0410 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa2e0400 <col:9, col:16>
    (ImplicitCastExpr 0xa2e03f0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa2e03d8 <col:16> 'char_type':'char' lvalue ParmVar 0xa2dc8b0 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa2e0598 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa2e04e8 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa2e04d8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e0424 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa0bbb80 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa2e0520 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa2e0510 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa2e043c <col:19> 'char *' lvalue ParmVar 0xa2dcab0 '__dest' 'char *')))
    (ImplicitCastExpr 0xa2e0540 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa2e0530 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa2e0454 <col:27> 'const char_type *' lvalue ParmVar 0xa2dc9d0 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa2e0550 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa2e04c0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa2e04a0 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2e046c <col:33> 'const char_type *' lvalue ParmVar 0xa2dca20 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa2e04b0 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa2e0484 <col:40> 'const char_type *' lvalue ParmVar 0xa2dc9d0 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa2e0588 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa2e0578 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa2e055c <col:9> 'const char_type *' lvalue ParmVar 0xa2dca20 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa2e64b8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e64a0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa2e64e0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e64c8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa2e6af0 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e6ad8 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0xa2e6b00 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa2e7128 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e7110 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa2e7748 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e7730 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0xa2e7b08 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0xa2e7af8 <col:5, col:56>
    (ImplicitCastExpr 0xa2e7ae8 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0xa2e7ad0 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0xa2e7aa0 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e7a90 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0xa2e7a60 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0xa2e7a50 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0xa2e79d0 <col:12> 'const mask *const' lvalue ->_M_table 0xa2da670
                  (CXXThisExpr 0xa2e79c0 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0xa2e7a38 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0xa2e7a28 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0xa2e7a18 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0xa2e79f0 <col:48> 'char' lvalue ParmVar 0xa2e78d0 '__c' 'char')))))))
        (ImplicitCastExpr 0xa2e7ac0 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa2e7ab0 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa2e7a74 <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa2e7890 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0xa2e7f58 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0xa2e7f08 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0xa2e7d98 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0xa2e7d78 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2e7d44 <col:12> 'const char *' lvalue ParmVar 0xa2e7ba0 '__low' 'const char *'))
      (ImplicitCastExpr 0xa2e7d88 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa2e7d5c <col:20> 'const char *' lvalue ParmVar 0xa2e7bf0 '__high' 'const char *')))
    (BinaryOperator 0xa2e7ef0 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0xa2e7de0 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0xa2e7dc8 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0xa2e7db0 <col:8> 'mask *' lvalue ParmVar 0xa2e7c40 '__vec' 'mask *')))
      (ImplicitCastExpr 0xa2e7ee0 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0xa2e7ec8 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0xa2e7eb8 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0xa2e7e08 <col:18> 'const mask *const' lvalue ->_M_table 0xa2da670
              (CXXThisExpr 0xa2e7df8 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa2e7ea0 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa2e7e90 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa2e7e80 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0xa2e7e58 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0xa2e7e40 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0xa2e7e28 <col:55> 'const char *' lvalue ParmVar 0xa2e7ba0 '__low' 'const char *'))))))))))
  (ReturnStmt 0xa2e7f48 <line:52:5, col:12>
    (ImplicitCastExpr 0xa2e7f38 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa2e7f1c <col:12> 'const char *' lvalue ParmVar 0xa2e7bf0 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa2e9868 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0xa2e9818 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0xa2e97d0 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0xa2e9628 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa2e9608 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e95d4 <col:12> 'const char *' lvalue ParmVar 0xa2e8030 '__low' 'const char *'))
        (ImplicitCastExpr 0xa2e9618 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e95ec <col:20> 'const char *' lvalue ParmVar 0xa2e8080 '__high' 'const char *')))
      (UnaryOperator 0xa2e97b8 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa2e97a8 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa2e9790 <col:9, col:60> 'int'
            (BinaryOperator 0xa2e9778 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0xa2e9748 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa2e9738 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0xa2e9708 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0xa2e96f8 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0xa2e9650 <col:10> 'const mask *const' lvalue ->_M_table 0xa2da670
                        (CXXThisExpr 0xa2e9640 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0xa2e96e0 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0xa2e96d0 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0xa2e96c0 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0xa2e9698 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0xa2e9688 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0xa2e9670 <col:47> 'const char *' lvalue ParmVar 0xa2e8030 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0xa2e9768 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa2e9758 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0xa2e971c <col:57> 'mask':'unsigned short' lvalue ParmVar 0xa2e7fe0 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0xa2e9800 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa2e97e8 <col:9> 'const char *' lvalue ParmVar 0xa2e8030 '__low' 'const char *')))
  (ReturnStmt 0xa2e9858 <line:62:5, col:12>
    (ImplicitCastExpr 0xa2e9848 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa2e982c <col:12> 'const char *' lvalue ParmVar 0xa2e8030 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa2e9d30 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0xa2e9ce0 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0xa2e9c98 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0xa2e9ae8 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa2e9ac8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e9a94 <col:12> 'const char *' lvalue ParmVar 0xa2e9940 '__low' 'const char *'))
        (ImplicitCastExpr 0xa2e9ad8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa2e9aac <col:20> 'const char *' lvalue ParmVar 0xa2e9990 '__high' 'const char *')))
      (BinaryOperator 0xa2e9c80 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0xa2e9c50 <col:8, col:59> 'int'
          (BinaryOperator 0xa2e9c38 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0xa2e9c08 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa2e9bf8 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0xa2e9bc8 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0xa2e9bb8 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0xa2e9b10 <col:9> 'const mask *const' lvalue ->_M_table 0xa2da670
                      (CXXThisExpr 0xa2e9b00 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0xa2e9ba0 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0xa2e9b90 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0xa2e9b80 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0xa2e9b58 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0xa2e9b48 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0xa2e9b30 <col:46> 'const char *' lvalue ParmVar 0xa2e9940 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0xa2e9c28 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa2e9c18 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0xa2e9bdc <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa2e98f0 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0xa2e9c68 <col:64> 'int' 0)))
    (UnaryOperator 0xa2e9cc8 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa2e9cb0 <col:9> 'const char *' lvalue ParmVar 0xa2e9940 '__low' 'const char *')))
  (ReturnStmt 0xa2e9d20 <line:72:5, col:12>
    (ImplicitCastExpr 0xa2e9d10 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa2e9cf4 <col:12> 'const char *' lvalue ParmVar 0xa2e9940 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0xa2ea398 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2ea128 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0xa2ea0f4 <col:26> 'int' EnumConstant 0xa2ea0c0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa2ea110 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0xa2ea3a8 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2ea174 <col:23> 'int' EnumConstant 0xa2ea140 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0xa2ea3b8 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2ea1f8 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0xa2ea1c4 <col:27> 'int' EnumConstant 0xa2ea190 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa2ea1e0 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0xa2ea3c8 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2ea278 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0xa2ea244 <col:17> 'int' EnumConstant 0xa2ea0c0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa2ea260 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0xa2ea3d8 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2ea2f8 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0xa2ea2c4 <col:17> 'int' EnumConstant 0xa2ea190 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa2ea2e0 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0xa2ea3e8 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2ea344 <col:12> 'int' EnumConstant 0xa2ea210 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0xa2ea788 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2ea668 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa2ea634 <col:15> 'int' EnumConstant 0xa2ea600 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa2ea650 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0xa2ea798 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2ea6e8 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa2ea6b4 <col:15> 'int' EnumConstant 0xa2ea600 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa2ea6d0 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0xa2ea7a8 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2ea738 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0xa2eb598 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2eb580 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa2eb5a4 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0xa2eb0b0 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0xa2eb638 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0xa2eb698 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0xa2eb6f8 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0xa2eb748 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0xa2eb798 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0xa2eb7f8 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0xa2eb848 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0xa2eb8b0 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0xa2eb910 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0xa2eb968 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0xa2eb9e8 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0xa2ebdb0 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0xa2ebd90 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0xa2ebc78 <line:1618:11> '_Bool' lvalue ->_M_allocated 0xa2eb070
      (CXXThisExpr 0xa2ebc68 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0xa2ebd70 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0xa2ebcc8 <line:1620:4, col:14> 'void'
        (MemberExpr 0xa2ebca8 <col:14> 'const char *' lvalue ->_M_grouping 0xa2eac60
          (CXXThisExpr 0xa2ebc98 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa2ebd10 <line:1621:4, col:14> 'void'
        (MemberExpr 0xa2ebcf0 <col:14> 'const _CharT *' lvalue ->_M_truename 0xa2ead40
          (CXXThisExpr 0xa2ebce0 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa2ebd58 <line:1622:4, col:14> 'void'
        (MemberExpr 0xa2ebd38 <col:14> 'const _CharT *' lvalue ->_M_falsename 0xa2eadc0
          (CXXThisExpr 0xa2ebd28 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0xa2ecf70 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2ecf58 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa2ecff4 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0xa2ec4d0 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa2ed088 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0xa2ed148 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0xa2ed128 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa2ed108 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa2ecef0
      (CXXThisExpr 0xa2ed0f8 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0xa2ecf98 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2ecf80 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa2ed15c </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0xa2ec600 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0xa2ed1f8 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0xa2ec5c0 '__cache' '__cache_type *')
) (CompoundStmt 0xa2ed2a0 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0xa2ed280 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa2ed260 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa2ecef0
      (CXXThisExpr 0xa2ed250 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa2ecfc0 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2ecfa8 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa2ed2b4 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0xa2ec760 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa2ed348 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0xa2ed408 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0xa2ed3e8 <col:9, col:38> '<dependent type>'
    (MemberExpr 0xa2ed3b0 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa2ecef0
      (CXXThisExpr 0xa2ed3a0 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0xa2ed3d0 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa2ec720 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0xa2ed4b0 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0xa2ed4a0 <col:9, col:39>
    (CallExpr 0xa2ed480 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2ed448 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ed438 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0xa2ed540 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0xa2ed530 <col:9, col:39>
    (CallExpr 0xa2ed510 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2ed4d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ed4c8 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0xa2ed5d0 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0xa2ed5c0 <col:9, col:34>
    (CallExpr 0xa2ed5a0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2ed568 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ed558 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0xa2ed660 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0xa2ed650 <col:9, col:34>
    (CallExpr 0xa2ed630 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2ed5f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ed5e8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0xa2ed6f0 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0xa2ed6e0 <col:9, col:35>
    (CallExpr 0xa2ed6c0 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2ed688 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ed678 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0xa2ed780 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0xa2ed770 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa2ed738 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa2ed718 <col:16> '__cache_type *const' lvalue ->_M_data 0xa2ec3f0
        (CXXThisExpr 0xa2ed708 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0xa2ed810 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0xa2ed800 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa2ed7c8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa2ed7a8 <col:16> '__cache_type *const' lvalue ->_M_data 0xa2ec3f0
        (CXXThisExpr 0xa2ed798 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0xa2ed8a0 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0xa2ed890 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa2ed858 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa2ed838 <col:16> '__cache_type *const' lvalue ->_M_data 0xa2ec3f0
        (CXXThisExpr 0xa2ed828 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0xa2ed930 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0xa2ed920 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa2ed8e8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa2ed8c8 <col:16> '__cache_type *const' lvalue ->_M_data 0xa2ec3f0
        (CXXThisExpr 0xa2ed8b8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0xa2ed9c0 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0xa2ed9b0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa2ed978 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa2ed958 <col:16> '__cache_type *const' lvalue ->_M_data 0xa2ec3f0
        (CXXThisExpr 0xa2ed948 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0xa2ecfe8 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0xa2ecfd0 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0xa2edc18 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa2f28e0 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2f28c8 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0xa2f2980 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0xa2f2710 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa2f2e08 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0xa2f2de8 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0xa2f2b98 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0xa2f2aa0 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0xa2f2a40 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa2f2a30 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2f29dc <col:6> 'int (const char *, const char *)' lvalue Function 0xa25cb40 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa2f2a68 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa2f29f4 <col:23> 'const char *' lvalue ParmVar 0xa2f26d0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa2f2a78 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa2f2a0c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa2f2a88 <col:36> 'int' 0))
      (BinaryOperator 0xa2f2b80 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0xa2f2b20 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa2f2b10 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2f2ab8 <col:9> 'int (const char *, const char *)' lvalue Function 0xa25cb40 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa2f2b48 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa2f2ad0 <col:26> 'const char *' lvalue ParmVar 0xa2f26d0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa2f2b58 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa2f2ae8 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa2f2b68 <col:43> 'int' 0)))
    (CompoundStmt 0xa2f2dc8 <line:1886:4, line:1891:4>
      (DeclStmt 0xa2f2bf8 <line:1887:6, col:22>
        0xa2f2bc0 "__c_locale __tmp")
      (CallExpr 0xa2f2ca0 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f2c38 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa2f2c28 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa2f2c6c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0xa2f2bc0 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0xa2f2c84 <col:38> 'const char *' lvalue ParmVar 0xa2f26d0 '__s' 'const char *'))
      (CallExpr 0xa2f2d28 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f2cd8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa2f2cc8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa2f2d0c <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0xa2f2bc0 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0xa2f2da8 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f2d58 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa2f2d48 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa2f2d8c <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0xa2f2bc0 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0xa2f2e20 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0xa2f7890 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2f7878 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa2f789c </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0xa2f31b0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa2f7940 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa2f7a68 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0xa2f7a58 <col:9, col:58>
    (CallExpr 0xa2f7a28 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f7978 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f7968 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f79ac <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f32b0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f79c4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f32f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f79dc <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f3340 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f79f4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f33b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f7a0c <col:55> '_Bool' lvalue ParmVar 0xa2f3400 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa2f7b80 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0xa2f7b70 <col:9, col:58>
    (CallExpr 0xa2f7b40 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f7a90 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f7a80 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f7ac4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3550 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7adc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3590 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7af4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f35e0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f7b0c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f3650 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f7b24 <col:55> 'long' lvalue ParmVar 0xa2f36a0 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa2f7c98 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0xa2f7c88 <col:9, col:58>
    (CallExpr 0xa2f7c58 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f7ba8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f7b98 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f7bdc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f37f0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7bf4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3830 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7c0c <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f3880 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f7c24 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f38f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f7c3c <col:55> 'unsigned short' lvalue ParmVar 0xa2f3940 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa2f7db0 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0xa2f7da0 <col:9, col:58>
    (CallExpr 0xa2f7d70 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f7cc0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f7cb0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f7cf4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3a90 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7d0c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3ad0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7d24 <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f3b20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f7d3c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f3b90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f7d54 <col:55> 'unsigned int' lvalue ParmVar 0xa2f3be0 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa2f7ec8 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0xa2f7eb8 <col:9, col:58>
    (CallExpr 0xa2f7e88 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f7dd8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f7dc8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f7e0c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3d30 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7e24 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3d70 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7e3c <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f3dc0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f7e54 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f3e30 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f7e6c <col:55> 'unsigned long' lvalue ParmVar 0xa2f3e80 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa2f7fe0 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0xa2f7fd0 <col:9, col:58>
    (CallExpr 0xa2f7fa0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f7ef0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f7ee0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f7f24 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f3fd0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7f3c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4010 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f7f54 <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f4060 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f7f6c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f40d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f7f84 <col:55> 'long long' lvalue ParmVar 0xa2f4120 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa2f80f8 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0xa2f80e8 <col:9, col:58>
    (CallExpr 0xa2f80b8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f8008 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f7ff8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f803c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4270 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f8054 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f42b0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f806c <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f4300 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f8084 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f4370 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f809c <col:55> 'unsigned long long' lvalue ParmVar 0xa2f43c0 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa2f8210 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0xa2f8200 <col:9, col:58>
    (CallExpr 0xa2f81d0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f8120 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f8110 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f8154 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4510 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f816c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4550 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f8184 <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f45a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f819c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f4610 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f81b4 <col:55> 'float' lvalue ParmVar 0xa2f4660 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa2f8328 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0xa2f8318 <col:9, col:58>
    (CallExpr 0xa2f82e8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f8238 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f8228 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f826c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f47b0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f8284 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f47f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f829c <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f4840 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f82b4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f48b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f82cc <col:55> 'double' lvalue ParmVar 0xa2f4900 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa2f8440 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0xa2f8430 <col:9, col:58>
    (CallExpr 0xa2f8400 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f8350 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f8340 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f8384 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4a50 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f839c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4a90 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f83b4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f4ae0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f83cc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f4b50 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f83e4 <col:55> 'long double' lvalue ParmVar 0xa2f4ba0 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa2f8558 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0xa2f8548 <col:9, col:58>
    (CallExpr 0xa2f8518 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2f8468 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa2f8458 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa2f849c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4cf0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f84b4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa2f4d30 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f84cc <col:42> 'class std::ios_base' lvalue ParmVar 0xa2f4d80 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f84e4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f4df0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f84fc <col:55> 'void *' lvalue ParmVar 0xa2f4e40 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0xa2f8570 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0xa2f9398 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0xa2f85f8 <line:2120:4, col:18>
    0xa2f8590 "int __ret =
      (UnaryOperator 0xa2f85e0 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa2f85c8 <col:17> 'int' 1))")
  (IfStmt 0xa2f9350 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0xa2f8658 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0xa2f8638 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa2f8608 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0xa2f59c0 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa2f8648 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa2f8620 <col:17> 'int' 10)))
    (CompoundStmt 0xa2f89d0 <line:2122:6, line:2125:6>
      (IfStmt 0xa2f89b0 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0xa2f88b0 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa2f8710 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa2f86c8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
            (DeclRefExpr 0xa2f8670 <col:12> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2f86a8 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa2f8690 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa2f8888 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0xa2f8840 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
            (DeclRefExpr 0xa2f8734 <col:35> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2f8820 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0xa2f87f8 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa2f87b0 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                (CXXUnresolvedConstructExpr 0xa2f8778 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0xa2f8760 <col:57> 'char'48))
                (DeclRefExpr 0xa2f8794 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0xa2f59c0 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0xa2f8998 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa2f88c8 <col:3> 'int' lvalue Var 0xa2f8590 '__ret' 'int')
          (CXXOperatorCallExpr 0xa2f8970 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa2f8938 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa2f88e0 <col:11> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2f8918 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa2f8900 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0xa2f9338 <line:2127:6, line:2134:6>
      (IfStmt 0xa2f9318 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0xa2f8b78 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa2f8a88 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa2f8a40 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
            (DeclRefExpr 0xa2f89e4 <col:12> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2f8a20 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa2f8a08 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa2f8b50 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0xa2f8b08 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
            (DeclRefExpr 0xa2f8aac <col:35> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2f8ae8 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0xa2f8ad0 <col:50> 'char'57))))
        (BinaryOperator 0xa2f8c60 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa2f8b90 <col:3> 'int' lvalue Var 0xa2f8590 '__ret' 'int')
          (CXXOperatorCallExpr 0xa2f8c38 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa2f8c00 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa2f8ba8 <col:11> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa2f8be0 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa2f8bc8 <col:25> 'char'48))))
        (IfStmt 0xa2f92f8 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0xa2f8e08 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa2f8d18 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa2f8cd0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
              (DeclRefExpr 0xa2f8c78 <col:17> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa2f8cb0 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0xa2f8c98 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0xa2f8de0 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0xa2f8d98 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
              (DeclRefExpr 0xa2f8d3c <col:40> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa2f8d78 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0xa2f8d60 <col:55> 'char'102))))
          (BinaryOperator 0xa2f8f90 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa2f8e20 <col:3> 'int' lvalue Var 0xa2f8590 '__ret' 'int')
            (CXXOperatorCallExpr 0xa2f8f68 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa2f8f20 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
              (IntegerLiteral 0xa2f8e38 <col:11> 'int' 10)
              (ParenExpr 0xa2f8f08 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0xa2f8ee0 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2f8ea8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                  (DeclRefExpr 0xa2f8e50 <col:17> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0xa2f8e88 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0xa2f8e70 <col:31> 'char'97))))))
          (IfStmt 0xa2f92d8 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0xa2f9138 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa2f9048 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa2f9000 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
                (DeclRefExpr 0xa2f8fa8 <col:17> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa2f8fe0 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0xa2f8fc8 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0xa2f9110 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa2f90c8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
                (DeclRefExpr 0xa2f906c <col:40> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa2f90a8 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0xa2f9090 <col:55> 'char'70))))
            (BinaryOperator 0xa2f92c0 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa2f9150 <col:3> 'int' lvalue Var 0xa2f8590 '__ret' 'int')
              (CXXOperatorCallExpr 0xa2f9298 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa2f9250 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                (IntegerLiteral 0xa2f9168 <col:11> 'int' 10)
                (ParenExpr 0xa2f9238 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0xa2f9210 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2f91d8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                    (DeclRefExpr 0xa2f9180 <col:17> '_CharT2' lvalue ParmVar 0xa2f5a00 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0xa2f91b8 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0xa2f91a0 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0xa2f9388 <line:2135:4, col:11>
    (DeclRefExpr 0xa2f936c <col:11> 'int' lvalue Var 0xa2f8590 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0xa2f9828 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0xa2f9438 <line:2143:4, col:18>
    0xa2f93d0 "int __ret =
      (UnaryOperator 0xa2f9420 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa2f9408 <col:17> 'int' 1))")
  (DeclStmt 0xa2f9618 <line:2144:4, col:73>
    0xa2f9490 "const char_type *__q =
      (CallExpr 0xa2f95f0 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2f9570 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0xa2f95a4 <col:54> 'const _CharT2 *' lvalue ParmVar 0xa2f5e80 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0xa2f95bc <col:62> 'size_t':'unsigned int' lvalue ParmVar 0xa2f5ec0 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0xa2f95d4 <col:69> '_CharT2' lvalue ParmVar 0xa2f5f00 '__c' '_CharT2'))")
  (IfStmt 0xa2f97e0 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0xa2f9628 <line:2145:8> 'const char_type *' lvalue Var 0xa2f9490 '__q' 'const char_type *')
    (CompoundStmt 0xa2f97c8 <line:2146:6, line:2150:6>
      (BinaryOperator 0xa2f96e8 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa2f9640 <col:8> 'int' lvalue Var 0xa2f93d0 '__ret' 'int')
        (CXXOperatorCallExpr 0xa2f96c0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa2f9688 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (DeclRefExpr 0xa2f9658 <col:16> 'const char_type *' lvalue Var 0xa2f9490 '__q' 'const char_type *')
          (DeclRefExpr 0xa2f9670 <col:22> 'const _CharT2 *' lvalue ParmVar 0xa2f5e80 '__zero' 'const _CharT2 *')))
      (IfStmt 0xa2f97a8 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0xa2f9740 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0xa2f9730 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0xa2f9700 <col:12> 'int' lvalue Var 0xa2f93d0 '__ret' 'int'))
          (IntegerLiteral 0xa2f9718 <col:20> 'int' 15))
        (CompoundAssignOperator 0xa2f9788 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0xa2f9758 <col:3> 'int' lvalue Var 0xa2f93d0 '__ret' 'int')
          (IntegerLiteral 0xa2f9770 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2f9818 <line:2151:4, col:11>
    (DeclRefExpr 0xa2f97fc <col:11> 'int' lvalue Var 0xa2f93d0 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa2f9950 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0xa2f9940 <col:9, col:61>
    (CallExpr 0xa2f9910 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa2f9858 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2f9894 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2f62a0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f98ac <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa2f62e0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f98c4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa2f6330 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f98dc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f63a0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f98f4 <col:58> 'long' lvalue ParmVar 0xa2f63f0 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa2f9a70 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0xa2f9a60 <col:9, col:61>
    (CallExpr 0xa2f9a30 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa2f9978 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2f99b4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2f64d0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f99cc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6510 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f99e4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa2f6560 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f99fc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f65d0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f9a14 <col:58> 'unsigned short' lvalue ParmVar 0xa2f6620 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa2f9b90 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0xa2f9b80 <col:9, col:61>
    (CallExpr 0xa2f9b50 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa2f9a98 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2f9ad4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6700 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9aec <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6740 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9b04 <col:45> 'class std::ios_base' lvalue ParmVar 0xa2f6790 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f9b1c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f6800 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f9b34 <col:58> 'unsigned int' lvalue ParmVar 0xa2f6850 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa2f9cb0 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0xa2f9ca0 <col:9, col:61>
    (CallExpr 0xa2f9c70 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa2f9bb8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2f9bf4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6930 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9c0c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6970 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9c24 <col:45> 'class std::ios_base' lvalue ParmVar 0xa2f69c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f9c3c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f6a30 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f9c54 <col:58> 'unsigned long' lvalue ParmVar 0xa2f6a80 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa2f9dd0 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0xa2f9dc0 <col:9, col:61>
    (CallExpr 0xa2f9d90 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa2f9cd8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2f9d14 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6b60 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9d2c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6ba0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9d44 <col:45> 'class std::ios_base' lvalue ParmVar 0xa2f6bf0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f9d5c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f6c60 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f9d74 <col:58> 'long long' lvalue ParmVar 0xa2f6cb0 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa2f9ef0 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0xa2f9ee0 <col:9, col:61>
    (CallExpr 0xa2f9eb0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa2f9df8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa2f9e34 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6d90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9e4c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa2f6dd0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa2f9e64 <col:45> 'class std::ios_base' lvalue ParmVar 0xa2f6e20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa2f9e7c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa2f6e90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa2f9e94 <col:58> 'unsigned long long' lvalue ParmVar 0xa2f6ee0 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0xa2fe6d8 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0xa301a68 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa301a50 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa301a74 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0xa2fea80 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa301b10 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0xa301c20 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0xa301c10 <col:9, col:50>
    (CallExpr 0xa301be0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa301b48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa301b38 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa301b7c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2feb80 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa301b94 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2febd0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa301bac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2fec30 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa301bc4 <col:47> '_Bool' lvalue ParmVar 0xa2fec70 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0xa301d20 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0xa301d10 <col:9, col:50>
    (CallExpr 0xa301ce0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa301c48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa301c38 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa301c7c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2fedb0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa301c94 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2fee00 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa301cac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2fee40 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa301cc4 <col:47> 'long' lvalue ParmVar 0xa2fee90 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0xa301e20 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0xa301e10 <col:9, col:50>
    (CallExpr 0xa301de0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa301d48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa301d38 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa301d7c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2fefd0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa301d94 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2ff020 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa301dac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2ff060 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa301dc4 <col:47> 'unsigned long' lvalue ParmVar 0xa2ff0b0 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0xa301f20 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0xa301f10 <col:9, col:50>
    (CallExpr 0xa301ee0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa301e48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa301e38 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa301e7c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2ff1f0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa301e94 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2ff240 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa301eac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2ff280 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa301ec4 <col:47> 'long long' lvalue ParmVar 0xa2ff2d0 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa302020 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0xa302010 <col:9, col:50>
    (CallExpr 0xa301fe0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa301f48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa301f38 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa301f7c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2ff410 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa301f94 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2ff460 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa301fac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2ff4a0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa301fc4 <col:47> 'unsigned long long' lvalue ParmVar 0xa2ff4f0 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0xa302120 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0xa302110 <col:9, col:50>
    (CallExpr 0xa3020e0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa302048 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa302038 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa30207c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2ff630 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa302094 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2ff680 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa3020ac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2ff6c0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa3020c4 <col:47> 'double' lvalue ParmVar 0xa2ff710 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0xa302220 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0xa302210 <col:9, col:50>
    (CallExpr 0xa3021e0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa302148 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa302138 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa30217c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2ff850 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa302194 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2ff8a0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa3021ac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2ff8e0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa3021c4 <col:47> 'long double' lvalue ParmVar 0xa2ff930 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0xa302320 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0xa302310 <col:9, col:50>
    (CallExpr 0xa3022e0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa302248 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa302238 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa30227c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa2ffa70 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa302294 <col:34> 'class std::ios_base' lvalue ParmVar 0xa2ffac0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa3022ac <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa2ffb00 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa3022c4 <col:47> 'const void *' lvalue ParmVar 0xa2ffb50 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0xa302338 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0xa302438 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0xa302428 <col:9, col:52>
    (CallExpr 0xa3023f8 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa302358 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa302394 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa300e20 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa3023ac <col:35> 'class std::ios_base' lvalue ParmVar 0xa300e70 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa3023c4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa300eb0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa3023dc <col:49> 'long' lvalue ParmVar 0xa300f00 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0xa302540 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0xa302530 <col:9, col:52>
    (CallExpr 0xa302500 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa302460 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa30249c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa300fe0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa3024b4 <col:35> 'class std::ios_base' lvalue ParmVar 0xa301030 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa3024cc <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa301070 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa3024e4 <col:49> 'unsigned long' lvalue ParmVar 0xa3010c0 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0xa302648 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0xa302638 <col:9, col:52>
    (CallExpr 0xa302608 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa302568 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa3025a4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa3011a0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa3025bc <col:35> 'class std::ios_base' lvalue ParmVar 0xa3011f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa3025d4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa301230 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa3025ec <col:49> 'long long' lvalue ParmVar 0xa301280 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa302750 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0xa302740 <col:9, col:52>
    (CallExpr 0xa302710 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa302670 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa3026ac <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa301360 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa3026c4 <col:35> 'class std::ios_base' lvalue ParmVar 0xa3013b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa3026dc <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa3013f0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa3026f4 <col:49> 'unsigned long long' lvalue ParmVar 0xa301440 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0xa302a98 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa302ec0 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0xa302eb0 <col:7, col:72>
    (CallExpr 0xa302e88 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa302df0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa302dd0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa302d50 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa302db8 <col:40> 'const class std::locale' lvalue ParmVar 0xa302b70 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa302e50 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc610 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa302e70 <col:69> '_CharT' lvalue ParmVar 0xa302b20 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa3032d8 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0xa3032c8 <col:7, col:72>
    (CallExpr 0xa3032a0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa303210 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa3031f0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa303170 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa3031d8 <col:40> 'const class std::locale' lvalue ParmVar 0xa302f90 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa303264 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc680 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa303284 <col:69> '_CharT' lvalue ParmVar 0xa302f40 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa3036e8 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0xa3036d8 <col:7, col:72>
    (CallExpr 0xa3036b0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa303620 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa303600 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa303580 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa3035e8 <col:40> 'const class std::locale' lvalue ParmVar 0xa3033a0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa303674 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc7f0 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa303694 <col:69> '_CharT' lvalue ParmVar 0xa303350 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa303af8 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0xa303ae8 <col:7, col:72>
    (CallExpr 0xa303ac0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa303a30 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa303a10 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa303990 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa3039f8 <col:40> 'const class std::locale' lvalue ParmVar 0xa3037b0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa303a84 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc3e0 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa303aa4 <col:69> '_CharT' lvalue ParmVar 0xa303760 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa303f08 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0xa303ef8 <col:7, col:72>
    (CallExpr 0xa303ed0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa303e40 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa303e20 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa303da0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa303e08 <col:40> 'const class std::locale' lvalue ParmVar 0xa303bc0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa303e94 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc450 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa303eb4 <col:69> '_CharT' lvalue ParmVar 0xa303b70 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa304318 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0xa304308 <col:7, col:72>
    (CallExpr 0xa3042e0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa304250 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa304230 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa3041b0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa304218 <col:40> 'const class std::locale' lvalue ParmVar 0xa303fd0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa3042a4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc4c0 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa3042c4 <col:69> '_CharT' lvalue ParmVar 0xa303f80 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa304728 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0xa304718 <col:7, col:72>
    (CallExpr 0xa3046f0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa304660 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa304640 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa3045c0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa304628 <col:40> 'const class std::locale' lvalue ParmVar 0xa3043e0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa3046b4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc530 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa3046d4 <col:69> '_CharT' lvalue ParmVar 0xa304390 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa304b38 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0xa304b28 <col:7, col:72>
    (CallExpr 0xa304b00 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa304a70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa304a50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa3049d0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa304a38 <col:40> 'const class std::locale' lvalue ParmVar 0xa3047f0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa304ac4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc860 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa304ae4 <col:69> '_CharT' lvalue ParmVar 0xa3047a0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa304f48 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0xa304f38 <col:7, col:73>
    (CallExpr 0xa304f10 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa304e80 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa304e60 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa304de0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa304e48 <col:40> 'const class std::locale' lvalue ParmVar 0xa304c00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa304ed4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc5a0 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa304ef4 <col:70> '_CharT' lvalue ParmVar 0xa304bb0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa305358 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0xa305348 <col:7, col:72>
    (CallExpr 0xa305320 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa305290 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa305270 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa3051f0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa305258 <col:40> 'const class std::locale' lvalue ParmVar 0xa305010 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa3052e4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc8d0 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa305304 <col:69> '_CharT' lvalue ParmVar 0xa304fc0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa305768 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0xa305758 <col:7, col:72>
    (CallExpr 0xa305730 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3056a0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa305680 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa305600 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa305668 <col:40> 'const class std::locale' lvalue ParmVar 0xa305420 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa3056f4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa2bc6f0 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa305714 <col:69> '_CharT' lvalue ParmVar 0xa3053d0 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa305b30 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0xa305b20 <col:7, col:58>
    (CallExpr 0xa305b00 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa305ab0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa305a90 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa305a10 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa305a78 <col:40> 'const class std::locale' lvalue ParmVar 0xa305830 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa305ae4 <col:55> '_CharT' lvalue ParmVar 0xa3057e0 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa305f00 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0xa305ef0 <col:7, col:58>
    (CallExpr 0xa305ed0 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa305e80 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa305e60 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa305de0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa305e48 <col:40> 'const class std::locale' lvalue ParmVar 0xa305c00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa305eb4 <col:55> '_CharT' lvalue ParmVar 0xa305bb0 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0xa30a778 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0xa309fb8 <line:56:2, col:49>
    0xa309e30 "const size_t __i =
      (CallExpr 0xa309f98 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa309f60 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa309f28 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0xa30a0b0 <line:57:2, col:59>
    0xa30a000 "const locale::facet **__caches =
      (ImplicitCastExpr 0xa30a0a0 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa30a07c <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0xa25af70
          (ImplicitCastExpr 0xa30a070 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa30a04c <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
              (DeclRefExpr 0xa30a034 <col:35> 'const class std::locale' lvalue ParmVar 0xa309ca0 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa30a5f0 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0xa30a148 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa30a138 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa30a128 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa30a110 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa30a0f0 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa30a0c0 <col:7> 'const class locale::facet **' lvalue Var 0xa30a000 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa30a100 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa30a0d8 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa309e30 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0xa30a5d0 <line:59:4, line:72:4>
      (DeclStmt 0xa30a280 <line:60:6, col:41>
        0xa30a230 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0xa30a268 <col:40> 'int' 0)")
      (IfStmt 0xa30a468 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa30a290 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa30a450 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0xa30a3b0 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0xa30a2a0 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa30a230 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0xa30a378 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0xa30a430 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa30a3e0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa30a3c8 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa30a230 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0xa30a414 <col:19> 'const class std::locale' lvalue ParmVar 0xa309ca0 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0xa30a4f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa30a488 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa30a4d8 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0xa30a4b0 <line:68:3, col:10> 'void'
            (DeclRefExpr 0xa30a498 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0xa30a230 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0xa30a4c8 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0xa30a5a8 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0xa30a554 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0xa25c4f0
          (ImplicitCastExpr 0xa30a548 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa30a524 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa0f0b40
              (DeclRefExpr 0xa30a50c <col:6> 'const class std::locale' lvalue ParmVar 0xa309ca0 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0xa30a574 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0xa30a230 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0xa30a58c <col:45> 'const size_t':'const unsigned int' lvalue Var 0xa309e30 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0xa30a768 <line:73:2, col:67>
    (CXXStaticCastExpr 0xa30a750 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0xa30a6f0 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0xa30a6d0 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0xa30a6a0 <col:54> 'const class locale::facet **' lvalue Var 0xa30a000 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0xa30a6e0 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa30a6b8 <col:63> 'const size_t':'const unsigned int' lvalue Var 0xa309e30 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0xa30d4b0 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0xa30aa78 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa30aa48 <col:7> '_Bool' lvalue ->_M_allocated 0xa2eb070
      (CXXThisExpr 0xa30aa38 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0xa30aa68 <col:22> '_Bool' true))
  (DeclStmt 0xa30ad00 <line:83:7, col:73>
    0xa30ab80 "const numpunct<_CharT> &__np =
      (CallExpr 0xa30ace0 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa30ac60 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
        (DeclRefExpr 0xa30acc8 <col:67> 'const class std::locale' lvalue ParmVar 0xa30a950 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa30ad80 <line:85:7, col:27>
    0xa30ad20 "char *__grouping =
      (ImplicitCastExpr 0xa30ad70 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0xa30ad58 <col:26> 'int' 0))")
  (DeclStmt 0xa30ae10 <line:86:7, col:29>
    0xa30adc0 "_CharT *__truename =
      (IntegerLiteral 0xa30adf8 <col:28> 'int' 0)")
  (DeclStmt 0xa30ae80 <line:87:7, col:30>
    0xa30ae30 "_CharT *__falsename =
      (IntegerLiteral 0xa30ae68 <col:29> 'int' 0)")
  (IfStmt 0xa30d390 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa30ae90 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa30d338 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0xa30af98 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa30aeb0 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa2eaca0
          (CXXThisExpr 0xa30aea0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa30af78 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30af40 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa30af20 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa30aee8 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa30aed0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa30b040 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0xa30afb0 <col:4> 'char *' lvalue Var 0xa30ad20 '__grouping' 'char *')
        (CXXNewExpr 0xa30b000 <col:17, col:21> 'char *'
          (MemberExpr 0xa30afd8 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa2eaca0
            (CXXThisExpr 0xa30afc8 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa30b148 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30b0c8 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa30b0a8 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa30b070 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa30b058 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa30b0fc <col:25> 'char *' lvalue Var 0xa30ad20 '__grouping' 'char *')
        (MemberExpr 0xa30b128 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa2eaca0
          (CXXThisExpr 0xa30b118 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa30b1b8 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa30b180 <col:4> 'const char *' lvalue ->_M_grouping 0xa2eac60
          (CXXThisExpr 0xa30b170 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa30b1a0 <col:18> 'char *' lvalue Var 0xa30ad20 '__grouping' 'char *'))
      (BinaryOperator 0xa30c580 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0xa30b1e0 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0xa2eace0
          (CXXThisExpr 0xa30b1d0 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0xa30c568 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0xa30c550 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0xa30b2f8 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0xa30b210 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa2eaca0
                (CXXThisExpr 0xa30b200 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0xa30b2e0 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0xa30b2d0 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0xa30b2a0 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0xa30b278 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0xa30b240 <col:37> 'const char *' lvalue ->_M_grouping 0xa2eac60
                        (CXXThisExpr 0xa30b230 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0xa30b260 <col:49> 'int' 0))))
                (IntegerLiteral 0xa30b2b8 <col:55> 'int' 0)))
            (ParenExpr 0xa30c538 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0xa30c510 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa30c4b8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
                (ArraySubscriptExpr 0xa30b358 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0xa30b320 <col:13> 'const char *' lvalue ->_M_grouping 0xa2eac60
                    (CXXThisExpr 0xa30b310 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0xa30b340 <col:25> 'int' 0))
                (DeclRefExpr 0xa30c498 <line:97:9, col:44> 'const char':'const char' lvalue Var 0xa30be50 '__max' 'const char':'const char'))))))
      (BinaryOperator 0xa30c690 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa30c5a8 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa2ead80
          (CXXThisExpr 0xa30c598 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa30c670 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30c638 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa30c618 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa30c5e0 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa30c5c8 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa30c738 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa30c6a8 <col:4> '_CharT *' lvalue Var 0xa30adc0 '__truename' '_CharT *')
        (CXXNewExpr 0xa30c6f8 <col:17, col:21> '_CharT *'
          (MemberExpr 0xa30c6d0 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa2ead80
            (CXXThisExpr 0xa30c6c0 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa30c840 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30c7c0 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa30c7a0 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa30c768 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa30c750 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa30c7f4 <col:25> '_CharT *' lvalue Var 0xa30adc0 '__truename' '_CharT *')
        (MemberExpr 0xa30c820 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa2ead80
          (CXXThisExpr 0xa30c810 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa30c8b0 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa30c878 <col:4> 'const _CharT *' lvalue ->_M_truename 0xa2ead40
          (CXXThisExpr 0xa30c868 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa30c898 <col:18> '_CharT *' lvalue Var 0xa30adc0 '__truename' '_CharT *'))
      (BinaryOperator 0xa30c9c0 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0xa30c8d8 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa2eae00
          (CXXThisExpr 0xa30c8c8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa30c9a0 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30c968 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0xa30c948 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa30c910 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0xa30c8f8 <col:24> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa30ca68 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa30c9d8 <col:4> '_CharT *' lvalue Var 0xa30ae30 '__falsename' '_CharT *')
        (CXXNewExpr 0xa30ca28 <col:18, col:22> '_CharT *'
          (MemberExpr 0xa30ca00 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa2eae00
            (CXXThisExpr 0xa30c9f0 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa30cb70 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30caf0 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0xa30cad0 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa30ca98 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa30ca80 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa30cb24 <col:26> '_CharT *' lvalue Var 0xa30ae30 '__falsename' '_CharT *')
        (MemberExpr 0xa30cb50 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa2eae00
          (CXXThisExpr 0xa30cb40 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa30cbe0 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa30cba8 <col:4> 'const _CharT *' lvalue ->_M_falsename 0xa2eadc0
          (CXXThisExpr 0xa30cb98 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa30cbc8 <col:19> '_CharT *' lvalue Var 0xa30ae30 '__falsename' '_CharT *'))
      (BinaryOperator 0xa30cc98 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa30cc08 <col:4> '_CharT' lvalue ->_M_decimal_point 0xa2eae40
          (CXXThisExpr 0xa30cbf8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa30cc78 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30cc40 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa30cc28 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0xa30cd50 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa30ccc0 <col:4> '_CharT' lvalue ->_M_thousands_sep 0xa2eae80
          (CXXThisExpr 0xa30ccb0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa30cd30 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30ccf8 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa30cce0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa30ab80 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0xa30cfb0 <line:112:4, col:64>
        0xa30ce30 "const ctype<_CharT> &__ct =
          (CallExpr 0xa30cf90 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa30cf10 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
            (DeclRefExpr 0xa30cf78 <col:58> 'const class std::locale' lvalue ParmVar 0xa30a950 '__loc' 'const class std::locale &'))")
      (CallExpr 0xa30d170 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30cfd8 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa30cfc0 <col:4> 'const ctype<_CharT>' lvalue Var 0xa30ce30 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa30d02c <col:15, col:27> 'const char *' lvalue Var 0xa2ea410 '_S_atoms_out' 'const char *')
        (BinaryOperator 0xa30d128 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0xa30d108 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa30d06c <col:8, col:20> 'const char *' lvalue Var 0xa2ea410 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0xa30d118 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa30d0ac <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea360 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0xa30d150 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0xa2eaf60
          (CXXThisExpr 0xa30d140 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0xa30d310 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30d1b0 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa30d198 <col:4> 'const ctype<_CharT>' lvalue Var 0xa30ce30 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa30d204 <col:15, col:27> 'const char *' lvalue Var 0xa2ea460 '_S_atoms_in' 'const char *')
        (BinaryOperator 0xa30d2c8 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0xa30d2a8 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa30d244 <col:8, col:20> 'const char *' lvalue Var 0xa2ea460 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0xa30d2b8 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa30d284 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea750 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0xa30d2f0 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0xa2eb030
          (CXXThisExpr 0xa30d2e0 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0xa30d490 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa30d3b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa30d470 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0xa30d3e8 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0xa30d3d8 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0xa30d3c0 <col:14> 'char *' lvalue Var 0xa30ad20 '__grouping' 'char *')))
      (CXXDeleteExpr 0xa30d418 <line:123:4, col:14> 'void'
        (DeclRefExpr 0xa30d400 <col:14> '_CharT *' lvalue Var 0xa30adc0 '__truename' '_CharT *'))
      (CXXDeleteExpr 0xa30d448 <line:124:4, col:14> 'void'
        (DeclRefExpr 0xa30d430 <col:14> '_CharT *' lvalue Var 0xa30ae30 '__falsename' '_CharT *'))
      (NullStmt 0xa30d460 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0xa3129a8 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0xa30dd10 <line:149:7, col:50>
    0xa30dce0 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa30de00 <line:150:7, col:69>
    0xa30ddd0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa30df08 <line:151:7, col:37>
    0xa30ded0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa30dfd0 <line:152:7, col:45>
    0xa30df30 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa30dfa0 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0xa30df7c <col:29, col:34> '<bound member function type>' ._M_getloc 0xa27fb50
          (ImplicitCastExpr 0xa30dfc0 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa30df64 <col:29> 'class std::ios_base' lvalue ParmVar 0xa30da20 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa30e098 <line:153:7, col:45>
    0xa30e010 "const __cache_type *__lc =
      (CallExpr 0xa30e078 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0xa30e044 <col:34> '__use_cache<__cache_type>' lvalue Var 0xa30ded0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa30e05c <col:39> 'const class std::locale' lvalue Var 0xa30df30 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa30e168 <line:154:7, col:46>
    0xa30e0e0 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa30e130 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa30e114 <col:29> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa30e1d8 <line:155:7, col:34>
    0xa30e180 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa30e1c0 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0xa30e2e0 <line:158:7, col:38>
    0xa30e1f0 "bool __testeof =
      (CXXOperatorCallExpr 0xa30e2b8 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa30e258 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
        (DeclRefExpr 0xa30e224 <col:24> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')
        (DeclRefExpr 0xa30e23c <col:33> '_InIter' lvalue ParmVar 0xa30d9d0 '__end' '_InIter'))")
  (IfStmt 0xa30ec40 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0xa30e318 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa30e308 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa30e2f0 <col:12> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')))
    (CompoundStmt 0xa30ec20 <line:162:2, line:175:2>
      (BinaryOperator 0xa30e378 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0xa30e32c <col:4> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa30e360 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa30e344 <col:11> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))
      (DeclStmt 0xa30e4e8 <line:164:4, col:58>
        0xa30e3a0 "const bool __plus =
          (CXXOperatorCallExpr 0xa30e4c0 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa30e460 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (DeclRefExpr 0xa30e3d4 <col:24> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa30e448 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0xa30e3ec <col:31> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa30e424 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea540 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0xa30ec00 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0xa30e910 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0xa30e7d8 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0xa30e638 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0xa30e620 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0xa30e4f8 <col:9> 'const _Bool' lvalue Var 0xa30e3a0 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0xa30e5f8 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0xa30e598 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (DeclRefExpr 0xa30e510 <col:19> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa30e580 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa30e528 <col:26> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa30e55c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea500 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa30e7c0 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0xa30e7a8 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0xa30e790 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa30e668 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0xa30e64c <col:13> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa30e768 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0xa30e708 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                    (DeclRefExpr 0xa30e69c <col:38> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa30e6d0 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0xa30e6b4 <col:45> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa30e8f8 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0xa30e8e0 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0xa30e8b8 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0xa30e858 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa30e7f0 <col:13> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa30e820 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0xa30e808 <col:20> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa30ebe8 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0xa30ea38 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0xa30ea28 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa30e9d8 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0xa30e928 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
            (ConditionalOperator 0xa30e998 <col:18, col:33> 'char'
              (ImplicitCastExpr 0xa30e988 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa30e940 <col:18> 'const _Bool' lvalue Var 0xa30e3a0 '__plus' 'const _Bool'))
              (CharacterLiteral 0xa30e958 <col:27> 'char'43)
              (CharacterLiteral 0xa30e970 <col:33> 'char'45)))
          (IfStmt 0xa30ebc8 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa30eb00 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0xa30eaa8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
              (UnaryOperator 0xa30ea78 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa30ea5c <col:14> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter'))
              (DeclRefExpr 0xa30ea8c <col:23> '_InIter' lvalue ParmVar 0xa30d9d0 '__end' '_InIter'))
            (BinaryOperator 0xa30eb70 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0xa30eb24 <col:3> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa30eb58 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa30eb3c <col:10> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))
            (BinaryOperator 0xa30ebb0 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0xa30eb88 <col:3> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa30eba0 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa30ecb8 <line:178:7, col:36>
    0xa30ec70 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0xa30eca8 <col:31> '_Bool' false)")
  (DeclStmt 0xa30ed30 <line:179:7, col:24>
    0xa30ece0 "int __sep_pos =
      (IntegerLiteral 0xa30ed18 <col:23> 'int' 0)")
  (WhileStmt 0xa30f480 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0xa30ed68 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa30ed58 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa30ed40 <col:15> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')))
    (CompoundStmt 0xa30f468 <line:181:2, line:201:2>
      (IfStmt 0xa30f448 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0xa30efe0 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0xa30eed8 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0xa30eec0 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa30ed98 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0xa30ed7c <col:9> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa30ee98 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa30ee38 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa30edcc <col:34> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa30ee00 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0xa30ede4 <col:41> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa30efb8 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa30ef58 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (DeclRefExpr 0xa30eeec <col:11> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa30ef20 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0xa30ef04 <col:18> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa30eff8 <line:184:6>)
        (IfStmt 0xa30f428 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa30f0e8 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa30f088 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (DeclRefExpr 0xa30f000 <col:13> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa30f070 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0xa30f018 <col:20> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa30f04c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea600 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0xa30f400 <line:186:6, line:198:6>
            (IfStmt 0xa30f228 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0xa30f138 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa30f128 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa30f10c <col:13> '_Bool' lvalue Var 0xa30ec70 '__found_mantissa' '_Bool')))
              (CompoundStmt 0xa30f210 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0xa30f1a8 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa30f198 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa30f180 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa30f14c <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa30f168 <col:15> 'char'48))
                (BinaryOperator 0xa30f1f8 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa30f1cc <col:5> '_Bool' lvalue Var 0xa30ec70 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0xa30f1e8 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0xa30f260 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa30f244 <col:10> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int'))
            (IfStmt 0xa30f3e0 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0xa30f318 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0xa30f2c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
                (UnaryOperator 0xa30f290 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa30f274 <col:14> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter'))
                (DeclRefExpr 0xa30f2a4 <col:23> '_InIter' lvalue ParmVar 0xa30d9d0 '__end' '_InIter'))
              (BinaryOperator 0xa30f388 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0xa30f33c <col:3> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                (UnaryOperator 0xa30f370 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0xa30f354 <col:10> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))
              (BinaryOperator 0xa30f3c8 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0xa30f3a0 <col:3> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa30f3b8 <col:15> '_Bool' true))))
          (BreakStmt 0xa30f420 <line:200:6>)))))
  (DeclStmt 0xa30f4e8 <line:204:7, col:31>
    0xa30f4a0 "bool __found_dec =
      (CXXBoolLiteralExpr 0xa30f4d8 <col:26> '_Bool' false)")
  (DeclStmt 0xa30f548 <line:205:7, col:31>
    0xa30f500 "bool __found_sci =
      (CXXBoolLiteralExpr 0xa30f538 <col:26> '_Bool' false)")
  (DeclStmt 0xa30f5b8 <line:206:7, col:30>
    0xa30f560 "string __found_grouping =
      (CXXConstructExpr 0xa30f598 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa30f698 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa30f5e0 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0xa30f5c8 <col:11> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa30f668 <line:208:2, col:29> 'void'
      (MemberExpr 0xa30f62c <col:2, col:19> '<bound member function type>' .reserve 0xa206dc0
        (DeclRefExpr 0xa30f614 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa30f688 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa30f650 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa30f7d0 <line:209:7, col:65>
    0xa30f6d0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa30f7a8 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa30f760 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (DeclRefExpr 0xa30f704 <col:37> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa30f73c <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea600 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa312560 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0xa30f830 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa30f7f8 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa30f7e0 <col:12> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa310900 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0xa30f870 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa30f860 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa30f844 <col:10> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')))
      (CompoundStmt 0xa3108e0 <line:214:4, line:258:4>
        (DeclStmt 0xa30f998 <line:215:6, col:54>
          0xa30f8a0 "const int __digit =
            (CallExpr 0xa30f970 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0xa30f8e8 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa30f928 <col:34> 'const char_type *' lvalue Var 0xa30f6d0 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0xa30f940 <col:46> 'int' 10)
              (DeclRefExpr 0xa30f958 <col:50> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT'))")
        (IfStmt 0xa310738 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0xa30fa00 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0xa30f9f0 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0xa30f9a8 <col:10> 'const int' lvalue Var 0xa30f8a0 '__digit' 'const int'))
            (UnaryOperator 0xa30f9d8 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0xa30f9c0 <col:22> 'int' 1)))
          (CompoundStmt 0xa30fb38 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0xa30fad0 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0xa30fac0 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa30faa8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0xa30fa18 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
              (ImplicitCastExpr 0xa30fa98 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0xa30fa80 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0xa30fa60 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0xa30fa30 <col:13> 'char'48))
                  (ImplicitCastExpr 0xa30fa70 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa30fa44 <col:19> 'const int' lvalue Var 0xa30f8a0 '__digit' 'const int')))))
            (BinaryOperator 0xa30fb20 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0xa30faf4 <col:3> '_Bool' lvalue Var 0xa30ec70 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0xa30fb10 <col:22> '_Bool' true)))
          (IfStmt 0xa310718 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0xa30fcd8 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0xa30fc80 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa30fc18 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa30fbb8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (DeclRefExpr 0xa30fb50 <col:15> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0xa30fb80 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0xa30fb68 <col:22> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *')))
                (UnaryOperator 0xa30fc68 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa30fc58 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa30fc3c <col:12> '_Bool' lvalue Var 0xa30f4a0 '__found_dec' '_Bool'))))
              (UnaryOperator 0xa30fcc0 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa30fcb0 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa30fc98 <col:28> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool'))))
            (CompoundStmt 0xa30fdb0 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0xa30fd48 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0xa30fd38 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa30fd20 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0xa30fcf0 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                (CharacterLiteral 0xa30fd08 <col:13> 'char'46))
              (BinaryOperator 0xa30fd98 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa30fd6c <col:3> '_Bool' lvalue Var 0xa30f4a0 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0xa30fd88 <col:17> '_Bool' true)))
            (IfStmt 0xa3106f8 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0xa310088 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0xa310058 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0xa310000 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0xa30ffe8 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0xa30feb0 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa30fe50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                        (DeclRefExpr 0xa30fdc8 <col:16> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa30fe38 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0xa30fde0 <col:23> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa30fe14 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea680 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0xa30ffc0 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0xa30ff60 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                        (DeclRefExpr 0xa30fed4 <col:12> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa30ff48 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0xa30feec <col:19> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa30ff24 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea700 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0xa310040 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa310030 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa310014 <col:12> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool'))))
                (DeclRefExpr 0xa310070 <col:27> '_Bool' lvalue Var 0xa30ec70 '__found_mantissa' '_Bool'))
              (CompoundStmt 0xa3106d0 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0xa3100f8 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa3100e8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3100d0 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa3100a0 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa3100b8 <col:13> 'char'101))
                (BinaryOperator 0xa310148 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0xa31011c <col:3> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0xa310138 <col:17> '_Bool' true))
                (IfStmt 0xa3106b0 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa310200 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3101a8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
                    (UnaryOperator 0xa310178 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0xa310160 <col:9> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter'))
                    (DeclRefExpr 0xa31018c <col:18> '_InIter' lvalue ParmVar 0xa30d9d0 '__end' '_InIter'))
                  (CompoundStmt 0xa310630 <line:237:5, line:244:5>
                    (BinaryOperator 0xa310270 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0xa310224 <col:7> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0xa310258 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0xa31023c <col:14> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))
                    (DeclStmt 0xa3103d8 <line:239:7, col:61>
                      0xa310290 "const bool __plus =
                        (CXXOperatorCallExpr 0xa3103b0 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0xa310350 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                          (DeclRefExpr 0xa3102c4 <col:27> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa310338 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0xa3102dc <col:34> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa310314 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea540 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0xa310610 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0xa310510 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0xa3103e8 <col:11> 'const _Bool' lvalue Var 0xa310290 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0xa3104e8 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0xa310488 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                          (DeclRefExpr 0xa310400 <col:21> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa310470 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0xa310418 <col:28> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa31044c <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea500 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0xa3105e0 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa3105d0 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa3105b8 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa310528 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                        (ConditionalOperator 0xa310598 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0xa310588 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa310540 <col:19> 'const _Bool' lvalue Var 0xa310290 '__plus' 'const _Bool'))
                          (CharacterLiteral 0xa310558 <col:28> 'char'43)
                          (CharacterLiteral 0xa310570 <col:34> 'char'45)))
                      (ContinueStmt 0xa310608 <line:243:9>)))
                  (CompoundStmt 0xa310698 <line:246:5, line:249:5>
                    (BinaryOperator 0xa310678 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0xa31064c <col:7> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0xa310668 <col:19> '_Bool' true))
                    (BreakStmt 0xa310690 <line:248:7>))))
              (BreakStmt 0xa3106f0 <line:252:8>))))
        (IfStmt 0xa3108c0 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa3107f8 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa3107a0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
            (UnaryOperator 0xa310770 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa310754 <col:12> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter'))
            (DeclRefExpr 0xa310784 <col:21> '_InIter' lvalue ParmVar 0xa30d9d0 '__end' '_InIter'))
          (BinaryOperator 0xa310868 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa31081c <col:8> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa310850 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa310834 <col:15> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))
          (BinaryOperator 0xa3108a8 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa310880 <col:8> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa310898 <col:20> '_Bool' true)))))
    (WhileStmt 0xa312548 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0xa310940 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa310930 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa310914 <col:10> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')))
      (CompoundStmt 0xa312530 <line:261:4, line:348:4>
        (IfStmt 0xa312388 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0xa310a98 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa310970 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa310954 <col:10> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa310a70 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa310a10 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa3109a4 <col:35> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa3109d8 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa3109bc <col:42> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa310d78 <line:265:8, line:285:8>
            (IfStmt 0xa310d58 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0xa310b30 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0xa310ad8 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa310ac8 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa310ab0 <col:8> '_Bool' lvalue Var 0xa30f4a0 '__found_dec' '_Bool')))
                (UnaryOperator 0xa310b18 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa310b08 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa310aec <col:24> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool'))))
              (CompoundStmt 0xa310d38 <line:267:5, line:282:5>
                (IfStmt 0xa310d18 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0xa310b70 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0xa310b60 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa310b48 <col:11> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int')))
                  (CompoundStmt 0xa310c88 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0xa310c18 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa310c08 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa310bf0 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa310b7c <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa310bd8 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa310bc8 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa310bb8 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa310b94 <col:42> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int')))))
                    (BinaryOperator 0xa310c70 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0xa310c3c <col:4> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int')
                      (IntegerLiteral 0xa310c58 <col:16> 'int' 0)))
                  (CompoundStmt 0xa310d00 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0xa310cd8 <line:279:4, col:17> 'void'
                      (MemberExpr 0xa310cb8 <col:4, col:11> '<bound member function type>' .clear 0xa206e30
                        (DeclRefExpr 0xa310ca0 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')))
                    (BreakStmt 0xa310cf8 <line:280:4>))))
              (BreakStmt 0xa310d50 <line:284:5>)))
          (IfStmt 0xa312368 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa310e58 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0xa310df8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa310d8c <col:15> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa310dc0 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa310da4 <col:22> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *')))
            (CompoundStmt 0xa311190 <line:287:8, line:300:8>
              (IfStmt 0xa311170 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0xa310f00 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0xa310ea8 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa310e98 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa310e7c <col:8> '_Bool' lvalue Var 0xa30f4a0 '__found_dec' '_Bool')))
                  (UnaryOperator 0xa310ee8 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa310ed8 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa310ebc <col:24> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool'))))
                (CompoundStmt 0xa311148 <line:289:5, line:297:5>
                  (IfStmt 0xa311068 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa310f98 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0xa310f50 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0xa310f30 <col:11, col:28> '<bound member function type>' .size 0xa206280
                          (ImplicitCastExpr 0xa310f88 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0xa310f18 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0xa311040 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa311030 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa311018 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa310fa4 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa311000 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa310ff0 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa310fe0 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa310fbc <col:47> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0xa3110e0 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0xa3110d0 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa3110b8 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0xa311084 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                    (CharacterLiteral 0xa3110a0 <col:17> 'char'46))
                  (BinaryOperator 0xa311130 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0xa311104 <col:7> '_Bool' lvalue Var 0xa30f4a0 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0xa311120 <col:21> '_Bool' true)))
                (BreakStmt 0xa311168 <line:299:5>)))
            (CompoundStmt 0xa312350 <line:302:8, line:342:8>
              (DeclStmt 0xa3112e0 <line:303:3, line:304:45>
                0xa3111c0 "const char_type *__q =
                  (CallExpr 0xa3112b8 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa311238 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa31126c <col:25> 'const char_type *' lvalue Var 0xa30f6d0 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0xa311288 <col:37> 'int' 10)
                    (DeclRefExpr 0xa3112a0 <col:41> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa312330 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0xa3112f0 <line:305:7> 'const char_type *' lvalue Var 0xa3111c0 '__q' 'const char_type *')
                (CompoundStmt 0xa3114e0 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0xa311450 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa311308 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0xa311428 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0xa3113e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                      (CharacterLiteral 0xa311320 <col:17> 'char'48)
                      (ParenExpr 0xa3113c8 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0xa3113a0 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0xa311368 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                          (DeclRefExpr 0xa311334 <col:24> 'const char_type *' lvalue Var 0xa3111c0 '__q' 'const char_type *')
                          (DeclRefExpr 0xa31134c <col:30> 'const char_type *' lvalue Var 0xa30f6d0 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0xa311498 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa311470 <col:7> '_Bool' lvalue Var 0xa30ec70 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0xa311488 <col:26> '_Bool' true))
                  (UnaryOperator 0xa3114c8 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa3114b0 <col:9> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int')))
                (IfStmt 0xa312310 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0xa3117c0 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0xa311790 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0xa311738 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0xa311720 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0xa3115e8 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0xa311588 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                            (DeclRefExpr 0xa3114fc <col:13> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa311570 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0xa311514 <col:20> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa31154c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea680 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0xa3116f8 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0xa311698 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                            (DeclRefExpr 0xa31160c <col:9> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa311680 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0xa311624 <col:16> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa31165c <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea700 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0xa311778 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0xa311768 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0xa31174c <col:9> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0xa3117a8 <col:24> '_Bool' lvalue Var 0xa30ec70 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0xa3122e8 <line:314:5, line:339:5>
                    (IfStmt 0xa311968 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0xa311890 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0xa311880 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0xa311810 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0xa3117f0 <col:11, col:28> '<bound member function type>' .size 0xa206280
                              (ImplicitCastExpr 0xa311830 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0xa3117d8 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0xa311868 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0xa311858 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa31183c <col:39> '_Bool' lvalue Var 0xa30f4a0 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0xa311940 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa311930 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa311918 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa3118a8 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0xa311900 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0xa3118f0 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0xa3118e0 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa3118c0 <col:47> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0xa3119e0 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa3119d0 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa3119b8 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa311984 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                      (CharacterLiteral 0xa3119a0 <col:17> 'char'101))
                    (BinaryOperator 0xa311a30 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0xa311a04 <col:7> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0xa311a20 <col:21> '_Bool' true))
                    (IfStmt 0xa3122c8 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0xa311ae8 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0xa311a90 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
                        (UnaryOperator 0xa311a60 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0xa311a48 <col:13> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter'))
                        (DeclRefExpr 0xa311a74 <col:22> '_InIter' lvalue ParmVar 0xa30d9d0 '__end' '_InIter'))
                      (CompoundStmt 0xa312248 <line:323:9, line:333:9>
                        (BinaryOperator 0xa311b58 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0xa311b0c <col:4> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0xa311b40 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0xa311b24 <col:11> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))
                        (DeclStmt 0xa311d00 <line:325:4, col:58>
                          0xa311b80 "const bool __plus =
                            (CXXOperatorCallExpr 0xa311cd8 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0xa311c78 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                              (DeclRefExpr 0xa311bb4 <col:24> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0xa311c28 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0xa311bcc <col:31> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                                (DeclRefExpr 0xa311c04 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea540 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0xa312228 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0xa312128 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0xa311ff0 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0xa311e50 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0xa311e38 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0xa311d10 <col:9> 'const _Bool' lvalue Var 0xa311b80 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0xa311e10 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0xa311db0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                                    (DeclRefExpr 0xa311d28 <col:19> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0xa311d98 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa311d40 <col:26> 'const _CharT *' lvalue Var 0xa30e0e0 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0xa311d74 <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea500 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0xa311fd8 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0xa311fc0 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0xa311fa8 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0xa311e80 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa311e64 <col:13> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0xa311f80 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0xa311f20 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                                      (DeclRefExpr 0xa311eb4 <col:9> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0xa311ee8 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0xa311ecc <col:16> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0xa312110 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0xa3120f8 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0xa3120d0 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0xa312070 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                                  (DeclRefExpr 0xa312008 <col:13> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0xa312038 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0xa312020 <col:20> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0xa3121f8 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0xa3121e8 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0xa3121d0 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0xa312140 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa30dae0 '__xtrc' 'string &')
                            (ConditionalOperator 0xa3121b0 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0xa3121a0 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0xa312158 <col:19> 'const _Bool' lvalue Var 0xa311b80 '__plus' 'const _Bool'))
                              (CharacterLiteral 0xa312170 <col:28> 'char'43)
                              (CharacterLiteral 0xa312188 <col:34> 'char'45)))
                          (ContinueStmt 0xa312220 <line:332:6>)))
                      (CompoundStmt 0xa3122b0 <line:335:9, line:338:9>
                        (BinaryOperator 0xa312290 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0xa312264 <col:4> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0xa312280 <col:16> '_Bool' true))
                        (BreakStmt 0xa3122a8 <line:337:4>))))
                  (BreakStmt 0xa312308 <line:341:5>))))))
        (IfStmt 0xa312510 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa312448 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa3123f0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
            (UnaryOperator 0xa3123c0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa3123a4 <col:12> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter'))
            (DeclRefExpr 0xa3123d4 <col:21> '_InIter' lvalue ParmVar 0xa30d9d0 '__end' '_InIter'))
          (BinaryOperator 0xa3124b8 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa31246c <col:8> 'char_type':'_CharT' lvalue Var 0xa30e180 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa3124a0 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa312484 <col:15> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))
          (BinaryOperator 0xa3124f8 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa3124d0 <col:8> '_Bool' lvalue Var 0xa30e1f0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa3124e8 <col:20> '_Bool' true))))))
  (IfStmt 0xa312960 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3125e8 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa3125b8 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0xa312594 <col:11, col:28> '<bound member function type>' .size 0xa206280
          (ImplicitCastExpr 0xa3125d8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa31257c <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa312948 <line:353:9, line:362:9>
      (IfStmt 0xa312750 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0xa312678 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0xa312620 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa312610 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3125f4 <col:9> '_Bool' lvalue Var 0xa30f4a0 '__found_dec' '_Bool')))
          (UnaryOperator 0xa312660 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa312650 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa312634 <col:25> '_Bool' lvalue Var 0xa30f500 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0xa312728 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0xa312718 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa312700 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0xa312690 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0xa3126e8 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0xa3126d8 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0xa3126c8 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0xa3126a8 <col:44> 'int' lvalue Var 0xa30ece0 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0xa312928 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0xa312890 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0xa312868 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0xa312790 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa30d640 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa3127c8 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa3127b0 <col:39> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa312818 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0xa3127fc <col:11> 'const __cache_type *' lvalue Var 0xa30e010 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa31284c <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0xa30f560 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa312910 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa3128a4 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa30da90 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa312900 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3128dc <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa312998 <line:364:7, col:14>
    (DeclRefExpr 0xa31297c <col:14> '_InIter' lvalue ParmVar 0xa30d990 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0xa3181f8 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0xa313120 <line:374:9, col:57>
    0xa3130f0 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa3131a8 <line:375:2, col:33>
    0xa313140 "Using__gnu_cxx::;")
  (DeclStmt 0xa313330 <line:376:2, col:66>
    0xa313300 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa313420 <line:377:2, col:67>
    0xa3133f0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa313528 <line:378:2, col:32>
    0xa3134f0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa3135f0 <line:379:2, col:40>
    0xa313550 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa3135c0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa31359c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa27fb50
          (ImplicitCastExpr 0xa3135e0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa313584 <col:24> 'class std::ios_base' lvalue ParmVar 0xa312da0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa3136b8 <line:380:2, col:40>
    0xa313630 "const __cache_type *__lc =
      (CallExpr 0xa313698 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa313664 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa3134f0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa31367c <col:34> 'const class std::locale' lvalue Var 0xa313550 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa313788 <line:381:2, col:41>
    0xa313700 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa313750 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa313734 <col:24> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa3137f8 <line:382:2, col:29>
    0xa3137a0 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa3137e0 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0xa3139e0 <line:385:2, line:386:62>
    0xa313860 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa3139b8 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa3139a8 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa313990 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa313910 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa3138ec <col:41, col:46> '<bound member function type>' .flags 0xa27c160
            (ImplicitCastExpr 0xa313930 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa313894 <col:41> 'class std::ios_base' lvalue ParmVar 0xa312da0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa313980 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa31395c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa313b50 <line:387:2, col:49>
    0xa313a00 "const bool __oct =
      (BinaryOperator 0xa313ad0 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0xa313ab0 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa313a90 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa313a34 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa313860 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa313ac0 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa313aa0 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa313a6c <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0xa313d50 <line:388:2, col:67>
    0xa313b70 "int __base =
      (ConditionalOperator 0xa313d00 <col:15, col:66> 'int'
        (ImplicitCastExpr 0xa313cf0 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa313ba4 <col:15> 'const _Bool' lvalue Var 0xa313a00 '__oct' 'const _Bool'))
        (IntegerLiteral 0xa313bc0 <col:23> 'int' 8)
        (ParenExpr 0xa313cd8 <col:27, col:66> 'int'
          (ConditionalOperator 0xa313cb8 <col:28, col:64> 'int'
            (BinaryOperator 0xa313c70 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0xa313c50 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa313c30 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa313bd8 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa313860 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0xa313c60 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa313c40 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa313c0c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0xa313c88 <col:59> 'int' 16)
            (IntegerLiteral 0xa313ca0 <col:64> 'int' 10))))")
  (DeclStmt 0xa313e60 <line:391:2, col:33>
    0xa313d70 "bool __testeof =
      (CXXOperatorCallExpr 0xa313e38 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa313dd8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
        (DeclRefExpr 0xa313da4 <col:19> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter')
        (DeclRefExpr 0xa313dbc <col:28> '_InIter' lvalue ParmVar 0xa312d50 '__end' '_InIter'))")
  (DeclStmt 0xa313ec8 <line:394:2, col:25>
    0xa313e80 "bool __negative =
      (CXXBoolLiteralExpr 0xa313eb8 <col:20> '_Bool' false)")
  (IfStmt 0xa3146c8 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0xa313f00 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa313ef0 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa313ed8 <col:7> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')))
    (CompoundStmt 0xa3146a8 <line:396:4, line:408:4>
      (BinaryOperator 0xa313f60 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa313f14 <col:6> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa313f48 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa313f2c <col:13> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter')))
      (BinaryOperator 0xa3140a0 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa313f78 <col:6> '_Bool' lvalue Var 0xa313e80 '__negative' '_Bool')
        (CXXOperatorCallExpr 0xa314078 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa314018 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
          (DeclRefExpr 0xa313f90 <col:19> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0xa314000 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0xa313fa8 <col:26> 'const _CharT *' lvalue Var 0xa313700 '__lit' 'const _CharT *')
            (DeclRefExpr 0xa313fdc <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea500 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0xa314688 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0xa3144d0 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0xa314398 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0xa3141f8 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0xa3141e0 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0xa3140b8 <col:11> '_Bool' lvalue Var 0xa313e80 '__negative' '_Bool')
                (CXXOperatorCallExpr 0xa3141b8 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0xa314158 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (DeclRefExpr 0xa3140d0 <col:25> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa314140 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3140e8 <col:32> 'const _CharT *' lvalue Var 0xa313700 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa31411c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea540 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa314380 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0xa314368 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0xa314350 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa314228 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa31420c <col:8> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa314328 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3142c8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                    (DeclRefExpr 0xa31425c <col:33> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa314290 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa314274 <col:40> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa3144b8 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0xa3144a0 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0xa314478 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0xa314418 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa3143b0 <col:8> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa3143e0 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3143c8 <col:15> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa314670 <line:402:8, line:407:8>
          (IfStmt 0xa314650 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa314588 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0xa314530 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
              (UnaryOperator 0xa314500 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa3144e8 <col:9> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter'))
              (DeclRefExpr 0xa314514 <col:18> '_InIter' lvalue ParmVar 0xa312d50 '__end' '_InIter'))
            (BinaryOperator 0xa3145f8 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0xa3145ac <col:5> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa3145e0 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa3145c4 <col:12> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter')))
            (BinaryOperator 0xa314638 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0xa314610 <col:5> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa314628 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa314738 <line:412:2, col:27>
    0xa3146f0 "bool __found_zero =
      (CXXBoolLiteralExpr 0xa314728 <col:22> '_Bool' false)")
  (DeclStmt 0xa3147b0 <line:413:2, col:19>
    0xa314760 "int __sep_pos =
      (IntegerLiteral 0xa314798 <col:18> 'int' 0)")
  (WhileStmt 0xa3155a0 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0xa3147e8 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3147d8 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa3147c0 <col:10> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')))
    (CompoundStmt 0xa315588 <line:415:4, line:454:4>
      (IfStmt 0xa315360 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0xa314a60 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0xa314958 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0xa314940 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa314818 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0xa3147fc <col:11> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa314918 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0xa3148b8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa31484c <col:36> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa314880 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0xa314864 <col:43> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa314a38 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0xa3149d8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (DeclRefExpr 0xa31496c <col:6> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa3149a0 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa314984 <col:13> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa314a78 <line:418:8>)
        (IfStmt 0xa315340 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0xa314c58 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa314b68 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa314b08 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa314a80 <col:15> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0xa314af0 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa314a98 <col:22> 'const _CharT *' lvalue Var 0xa313700 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa314acc <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea600 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0xa314c40 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0xa314c28 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0xa314bb8 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa314ba8 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa314b8c <col:13> '_Bool' lvalue Var 0xa3146f0 '__found_zero' '_Bool')))
                (BinaryOperator 0xa314c10 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0xa314c00 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa314bcc <col:29> 'int' lvalue Var 0xa313b70 '__base' 'int'))
                  (IntegerLiteral 0xa314be8 <col:39> 'int' 10)))))
          (CompoundStmt 0xa314e70 <line:421:8, line:428:8>
            (BinaryOperator 0xa314c98 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0xa314c70 <col:3> '_Bool' lvalue Var 0xa3146f0 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0xa314c88 <col:18> '_Bool' true))
            (UnaryOperator 0xa314cc8 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa314cb0 <col:5> 'int' lvalue Var 0xa314760 '__sep_pos' 'int'))
            (IfStmt 0xa314d90 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0xa314d30 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0xa314d20 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa314d10 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0xa314cdc <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa313860 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0xa314cf8 <col:22> 'int' 0))
              (BinaryOperator 0xa314d78 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0xa314d48 <col:5> 'int' lvalue Var 0xa313b70 '__base' 'int')
                (IntegerLiteral 0xa314d60 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0xa314e50 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0xa314df0 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0xa314de0 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa314dac <col:7> 'int' lvalue Var 0xa313b70 '__base' 'int'))
                (IntegerLiteral 0xa314dc8 <col:17> 'int' 8))
              (BinaryOperator 0xa314e38 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0xa314e08 <col:5> 'int' lvalue Var 0xa314760 '__sep_pos' 'int')
                (IntegerLiteral 0xa314e20 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0xa315320 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0xa3150f8 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0xa314e90 <line:429:15> '_Bool' lvalue Var 0xa3146f0 '__found_zero' '_Bool')
              (ParenExpr 0xa3150e0 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0xa3150c8 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0xa314f90 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0xa314f30 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                    (DeclRefExpr 0xa314ea8 <col:12> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa314f18 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa314ec0 <col:19> 'const _CharT *' lvalue Var 0xa313700 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa314ef4 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea580 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0xa3150a0 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa315040 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                    (DeclRefExpr 0xa314fb4 <col:8> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa315028 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0xa314fcc <col:15> 'const _CharT *' lvalue Var 0xa313700 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa315004 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea5c0 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0xa315300 <line:432:8, line:442:8>
              (IfStmt 0xa3151c0 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0xa315160 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0xa315150 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa315140 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa315110 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa313860 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0xa315128 <col:22> 'int' 0))
                (BinaryOperator 0xa3151a8 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0xa315178 <col:5> 'int' lvalue Var 0xa313b70 '__base' 'int')
                  (IntegerLiteral 0xa315190 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0xa3152e0 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0xa315220 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0xa315210 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa3151dc <col:7> 'int' lvalue Var 0xa313b70 '__base' 'int'))
                  (IntegerLiteral 0xa3151f8 <col:17> 'int' 16))
                (CompoundStmt 0xa3152c0 <line:436:5, line:439:5>
                  (BinaryOperator 0xa315260 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0xa315238 <col:7> '_Bool' lvalue Var 0xa3146f0 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0xa315250 <col:22> '_Bool' false))
                  (BinaryOperator 0xa3152a8 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0xa315278 <col:7> 'int' lvalue Var 0xa314760 '__sep_pos' 'int')
                    (IntegerLiteral 0xa315290 <col:19> 'int' 0)))
                (BreakStmt 0xa3152d8 <line:441:5>)))
            (BreakStmt 0xa315318 <line:444:8>))))
      (IfStmt 0xa315568 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa315420 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa3153c8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
          (UnaryOperator 0xa315398 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa31537c <col:12> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter'))
          (DeclRefExpr 0xa3153ac <col:21> '_InIter' lvalue ParmVar 0xa312d50 '__end' '_InIter'))
        (CompoundStmt 0xa315510 <line:447:8, line:451:8>
          (BinaryOperator 0xa315490 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa315444 <col:3> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa315478 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa31545c <col:10> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter')))
          (IfStmt 0xa3154f0 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0xa3154d0 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa3154c0 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa3154a8 <col:8> '_Bool' lvalue Var 0xa3146f0 '__found_zero' '_Bool')))
            (BreakStmt 0xa3154e8 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0xa315550 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa315528 <col:8> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0xa315540 <col:20> '_Bool' true)))))
  (DeclStmt 0xa315778 <line:458:2, line:459:42>
    0xa3155c0 "const size_t __len =
      (ImplicitCastExpr 0xa315768 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0xa315750 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0xa315730 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0xa315638 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0xa315628 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0xa3155f4 <col:24> 'int' lvalue Var 0xa313b70 '__base' 'int'))
              (IntegerLiteral 0xa315610 <col:34> 'int' 16))
            (BinaryOperator 0xa3156f0 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0xa3156d0 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0xa31566c <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea750 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0xa3156e0 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa3156ac <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea600 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0xa315720 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0xa315708 <col:35> 'int' lvalue Var 0xa313b70 '__base' 'int')))))")
  (DeclStmt 0xa3157e8 <line:462:2, col:25>
    0xa315790 "string __found_grouping =
      (CXXConstructExpr 0xa3157c8 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa3158c8 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa315810 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa3157f8 <col:6> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa315898 <line:464:4, col:31> 'void'
      (MemberExpr 0xa31585c <col:4, col:21> '<bound member function type>' .reserve 0xa206dc0
        (DeclRefExpr 0xa315844 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa315790 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa3158b8 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa315880 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa315938 <line:465:2, col:25>
    0xa3158f0 "bool __testfail =
      (CXXBoolLiteralExpr 0xa315928 <col:20> '_Bool' false)")
  (DeclStmt 0xa315998 <line:466:2, col:29>
    0xa315950 "bool __testoverflow =
      (CXXBoolLiteralExpr 0xa315988 <col:24> '_Bool' false)")
  (DeclStmt 0xa315dd8 <line:467:2, line:470:49>
    0xa3159d0 "const __unsigned_type __max =
      (ConditionalOperator 0xa315db8 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0xa315b60 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0xa315b48 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0xa315a04 <col:5> '_Bool' lvalue Var 0xa313e80 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa315b10 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0xa315ca0 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa315c68 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (CXXDependentScopeMemberExpr 0xa315c30 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0xa315d80 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0xa315e70 <line:471:2, col:47>
    0xa315df0 "const __unsigned_type __smax =
      (BinaryOperator 0xa315e58 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0xa315e24 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa3159d0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa315e3c <col:41> 'int' lvalue Var 0xa313b70 '__base' 'int'))")
  (DeclStmt 0xa315ee0 <line:472:2, col:30>
    0xa315e90 "__unsigned_type __result =
      (IntegerLiteral 0xa315ec8 <col:29> 'int' 0)")
  (DeclStmt 0xa315f50 <line:473:2, col:17>
    0xa315f00 "int __digit =
      (IntegerLiteral 0xa315f38 <col:16> 'int' 0)")
  (DeclStmt 0xa316070 <line:474:2, col:60>
    0xa315f70 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa316048 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa316000 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (DeclRefExpr 0xa315fa4 <col:32> 'const _CharT *' lvalue Var 0xa313700 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa315fdc <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa2ea600 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa317548 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0xa3160d0 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa316098 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0xa316080 <col:7> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa3167e0 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0xa316110 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa316100 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3160e4 <col:12> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')))
      (CompoundStmt 0xa3167c0 <line:479:6, line:498:6>
        (BinaryOperator 0xa316200 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0xa316124 <col:8> 'int' lvalue Var 0xa315f00 '__digit' 'int')
          (CallExpr 0xa3161d8 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0xa316150 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa316190 <col:26> 'const char_type *' lvalue Var 0xa315f70 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0xa3161a8 <col:38> 'const size_t':'const unsigned int' lvalue Var 0xa3155c0 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0xa3161c0 <col:45> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')))
        (IfStmt 0xa316290 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0xa316270 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0xa316260 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0xa316218 <col:12> 'int' lvalue Var 0xa315f00 '__digit' 'int'))
            (UnaryOperator 0xa316248 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0xa316230 <col:24> 'int' 1)))
          (BreakStmt 0xa316288 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0xa316618 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa316328 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa3162e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
            (DeclRefExpr 0xa3162ac <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0xa3162c4 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315df0 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0xa316378 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa31634c <col:3> '_Bool' lvalue Var 0xa315950 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0xa316368 <col:20> '_Bool' true))
          (CompoundStmt 0xa3165f8 <line:487:3, line:492:3>
            (CompoundAssignOperator 0xa3163c0 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa316390 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa3163a8 <col:17> 'int' lvalue Var 0xa313b70 '__base' 'int'))
            (CXXOperatorCallExpr 0xa316550 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0xa316510 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2737c0 0xa274fc0 0xa278ad0)
              (DeclRefExpr 0xa3163e0 <col:5> '_Bool' lvalue Var 0xa315950 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0xa3164e8 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa3164a0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
                (DeclRefExpr 0xa3163f8 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0xa316478 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa316440 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                  (DeclRefExpr 0xa316410 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa3159d0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa316428 <col:42> 'int' lvalue Var 0xa315f00 '__digit' 'int'))))
            (CompoundAssignOperator 0xa3165a8 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa316574 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa31658c <col:17> 'int' lvalue Var 0xa315f00 '__digit' 'int'))
            (UnaryOperator 0xa3165e0 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa3165c8 <col:7> 'int' lvalue Var 0xa314760 '__sep_pos' 'int'))))
        (IfStmt 0xa3167a0 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa3166d8 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa316680 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
            (UnaryOperator 0xa316650 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa316634 <col:14> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter'))
            (DeclRefExpr 0xa316664 <col:23> '_InIter' lvalue ParmVar 0xa312d50 '__end' '_InIter'))
          (BinaryOperator 0xa316748 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa3166fc <col:3> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa316730 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa316714 <col:10> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter')))
          (BinaryOperator 0xa316788 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa316760 <col:3> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa316778 <col:15> '_Bool' true)))))
    (WhileStmt 0xa317530 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0xa316820 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa316810 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3167f4 <col:12> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')))
      (CompoundStmt 0xa317518 <line:501:6, line:546:6>
        (IfStmt 0xa317370 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0xa316978 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa316850 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0xa316834 <col:12> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa316950 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa3168f0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa316884 <col:37> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa3168b8 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa31689c <col:44> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa316b68 <line:505:3, line:518:3>
            (IfStmt 0xa316b48 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0xa3169b8 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa3169a8 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa316990 <col:9> 'int' lvalue Var 0xa314760 '__sep_pos' 'int')))
              (CompoundStmt 0xa316ad0 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0xa316a60 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa316a50 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa316a38 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa3169c4 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa315790 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0xa316a20 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0xa316a10 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0xa316a00 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa3169dc <col:47> 'int' lvalue Var 0xa314760 '__sep_pos' 'int')))))
                (BinaryOperator 0xa316ab8 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0xa316a84 <col:9> 'int' lvalue Var 0xa314760 '__sep_pos' 'int')
                  (IntegerLiteral 0xa316aa0 <col:21> 'int' 0)))
              (CompoundStmt 0xa316b30 <line:514:7, line:517:7>
                (BinaryOperator 0xa316b10 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0xa316ae8 <col:9> '_Bool' lvalue Var 0xa3158f0 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0xa316b00 <col:22> '_Bool' true))
                (BreakStmt 0xa316b28 <line:516:9>))))
          (IfStmt 0xa317350 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa316c48 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0xa316be8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa316b7c <col:17> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa316bb0 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0xa316b94 <col:24> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *')))
            (BreakStmt 0xa316c70 <line:520:3>)
            (CompoundStmt 0xa317328 <line:522:3, line:540:3>
              (DeclStmt 0xa316db0 <line:523:5, line:524:50>
                0xa316c90 "const char_type *__q =
                  (CallExpr 0xa316d88 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa316d08 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa316d3c <col:27> 'const char_type *' lvalue Var 0xa315f70 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0xa316d54 <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa3155c0 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0xa316d6c <col:46> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa316df8 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0xa316dd8 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa316dc0 <col:10> 'const char_type *' lvalue Var 0xa316c90 '__q' 'const char_type *'))
                (BreakStmt 0xa316df0 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0xa316ec0 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0xa316e14 <col:5> 'int' lvalue Var 0xa315f00 '__digit' 'int')
                (CXXOperatorCallExpr 0xa316e98 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0xa316e60 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                  (DeclRefExpr 0xa316e2c <col:15> 'const char_type *' lvalue Var 0xa316c90 '__q' 'const char_type *')
                  (DeclRefExpr 0xa316e44 <col:21> 'const char_type *' lvalue Var 0xa315f70 '__lit_zero' 'const char_type *')))
              (IfStmt 0xa316f80 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0xa316f18 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0xa316f08 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa316ed8 <col:9> 'int' lvalue Var 0xa315f00 '__digit' 'int'))
                  (IntegerLiteral 0xa316ef0 <col:19> 'int' 15))
                (CompoundAssignOperator 0xa316f60 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0xa316f30 <col:7> 'int' lvalue Var 0xa315f00 '__digit' 'int')
                  (IntegerLiteral 0xa316f48 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0xa317308 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa317018 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0xa316fd0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
                  (DeclRefExpr 0xa316f9c <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa316fb4 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315df0 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0xa317068 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa31703c <col:7> '_Bool' lvalue Var 0xa315950 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0xa317058 <col:24> '_Bool' true))
                (CompoundStmt 0xa3172e8 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0xa3170b0 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa317080 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa317098 <col:21> 'int' lvalue Var 0xa313b70 '__base' 'int'))
                  (CXXOperatorCallExpr 0xa317240 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa317200 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa2737c0 0xa274fc0 0xa278ad0)
                    (DeclRefExpr 0xa3170d0 <col:9> '_Bool' lvalue Var 0xa315950 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0xa3171d8 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0xa317190 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
                      (DeclRefExpr 0xa3170e8 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0xa317168 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa317130 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                        (DeclRefExpr 0xa317100 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa3159d0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0xa317118 <col:46> 'int' lvalue Var 0xa315f00 '__digit' 'int'))))
                  (CompoundAssignOperator 0xa317298 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa317264 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa31727c <col:21> 'int' lvalue Var 0xa315f00 '__digit' 'int'))
                  (UnaryOperator 0xa3172d0 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa3172b8 <col:11> 'int' lvalue Var 0xa314760 '__sep_pos' 'int')))))))
        (IfStmt 0xa3174f8 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa317430 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa3173d8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
            (UnaryOperator 0xa3173a8 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa31738c <col:14> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter'))
            (DeclRefExpr 0xa3173bc <col:23> '_InIter' lvalue ParmVar 0xa312d50 '__end' '_InIter'))
          (BinaryOperator 0xa3174a0 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa317454 <col:3> 'char_type':'_CharT' lvalue Var 0xa3137a0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa317488 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa31746c <col:10> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter')))
          (BinaryOperator 0xa3174e0 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa3174b8 <col:3> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa3174d0 <col:15> '_Bool' true))))))
  (IfStmt 0xa317888 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3175d0 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa3175a0 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0xa31757c <col:6, col:23> '<bound member function type>' .size 0xa206280
          (ImplicitCastExpr 0xa3175c0 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa317564 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa315790 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa317870 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0xa317678 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0xa317668 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa317650 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa208200 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0xa3175dc <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa315790 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0xa317638 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa317628 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa317618 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0xa3175f4 <col:44> 'int' lvalue Var 0xa314760 '__sep_pos' 'int')))))
      (IfStmt 0xa317850 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0xa3177b8 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0xa317790 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0xa3176b4 <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa30d640 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa3176f0 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0xa3176d4 <col:34> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa317740 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0xa317724 <col:6> 'const __cache_type *' lvalue Var 0xa313630 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa317774 <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0xa315790 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa317838 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa3177cc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa312e10 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa317828 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa317804 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa318098 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0xa317a38 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0xa3179f8 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0xa3179e0 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0xa317938 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0xa3178e0 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa3178d0 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa3178c0 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa3178a4 <col:8> 'int' lvalue Var 0xa314760 '__sep_pos' 'int'))))
            (UnaryOperator 0xa317920 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa317910 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa3178f4 <col:22> '_Bool' lvalue Var 0xa3146f0 '__found_zero' '_Bool'))))
          (UnaryOperator 0xa3179c8 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa3179b8 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0xa317988 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0xa317968 <col:39, col:56> '<bound member function type>' .size 0xa206280
                  (ImplicitCastExpr 0xa3179a8 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0xa317950 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0xa315790 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0xa317a28 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa317a0c <col:9> '_Bool' lvalue Var 0xa3158f0 '__testfail' '_Bool')))
    (CompoundStmt 0xa317b18 <line:565:4, line:568:4>
      (BinaryOperator 0xa317a80 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0xa317a50 <col:6> '_ValueT' lvalue ParmVar 0xa312e80 '__v' '_ValueT &')
        (IntegerLiteral 0xa317a68 <col:12> 'int' 0))
      (BinaryOperator 0xa317b00 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa317a98 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa312e10 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0xa317af0 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa317acc <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0xa318078 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0xa317b48 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa317b30 <col:11> '_Bool' lvalue Var 0xa315950 '__testoverflow' '_Bool'))
      (CompoundStmt 0xa317f60 <line:570:4, line:577:4>
        (IfStmt 0xa317ec0 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0xa317c68 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0xa317b54 <line:571:10> '_Bool' lvalue Var 0xa313e80 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa317c30 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0xa317d88 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa317c80 <col:8> '_ValueT' lvalue ParmVar 0xa312e80 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa317d50 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0xa317ea8 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa317da0 <col:8> '_ValueT' lvalue ParmVar 0xa312e80 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa317e70 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0xa317f48 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa317edc <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa312e10 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa317f38 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa317f14 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0xa318060 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0xa317f78 <col:4> '_ValueT' lvalue ParmVar 0xa312e80 '__v' '_ValueT &')
        (ConditionalOperator 0xa318040 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0xa318030 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa317f90 <col:10> '_Bool' lvalue Var 0xa313e80 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0xa317ff8 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa317fc0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa317fa8 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0xa318018 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa315e90 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0xa3181b0 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3180d0 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa3180b4 <col:6> '_Bool' lvalue Var 0xa313d70 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0xa318188 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa318178 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa318148 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3180dc <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa312e10 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa318138 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa318114 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa3181e8 <line:583:2, col:9>
    (DeclRefExpr 0xa3181cc <col:9> '_InIter' lvalue ParmVar 0xa312d10 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa31ac00 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0xa31abb8 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0xa318948 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa318938 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0xa318920 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa3188f8 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa3188e8 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3188d0 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0xa318850 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0xa31882c <col:13, col:18> '<bound member function type>' .flags 0xa27c160
                (ImplicitCastExpr 0xa318870 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0xa3187d4 <col:13> 'class std::ios_base' lvalue ParmVar 0xa3185c0 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0xa3188c0 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa31889c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2799f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0xa318f20 <line:595:9, line:612:9>
      (DeclStmt 0xa3189e8 <line:599:4, col:17>
        0xa318970 "long __l =
          (ImplicitCastExpr 0xa3189d8 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0xa3189c0 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0xa3189a8 <col:16> 'int' 1)))")
      (BinaryOperator 0xa318b08 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0xa3189f8 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa318530 '__beg' 'iter_type':'_InIter')
        (CallExpr 0xa318ad8 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0xa318a20 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa318a5c <col:34> 'iter_type':'_InIter' lvalue ParmVar 0xa318530 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0xa318a74 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0xa318570 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0xa318a8c <col:48> 'class std::ios_base' lvalue ParmVar 0xa3185c0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa318aa4 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0xa318abc <col:61> 'long' lvalue Var 0xa318970 '__l' 'long')))
      (IfStmt 0xa318f00 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0xa318bf0 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0xa318b70 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0xa318b50 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0xa318b20 <col:8> 'long' lvalue Var 0xa318970 '__l' 'long'))
            (ImplicitCastExpr 0xa318b60 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0xa318b38 <col:15> 'int' 0)))
          (BinaryOperator 0xa318bd8 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0xa318bb8 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0xa318b88 <col:20> 'long' lvalue Var 0xa318970 '__l' 'long'))
            (ImplicitCastExpr 0xa318bc8 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0xa318ba0 <col:27> 'int' 1))))
        (BinaryOperator 0xa318c78 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa318c08 <col:6> '_Bool' lvalue ParmVar 0xa318680 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0xa318c60 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0xa318c50 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa318c40 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0xa318c28 <col:17> 'long' lvalue Var 0xa318970 '__l' 'long')))))
        (CompoundStmt 0xa318ee0 <line:604:6, line:611:6>
          (BinaryOperator 0xa318cb8 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa318c90 <col:8> '_Bool' lvalue ParmVar 0xa318680 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa318ca8 <col:14> '_Bool' true))
          (BinaryOperator 0xa318d38 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0xa318cd0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0xa318d28 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa318d04 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0xa318ec0 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa318de0 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa318d80 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa318d50 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa318530 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa318d68 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa318570 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0xa318e98 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa318e88 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa318e70 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa318e04 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa318e60 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa318e3c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0xa31ab78 <line:614:9, line:680:2>
      (DeclStmt 0xa319020 <line:616:4, col:50>
        0xa318ff0 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa319128 <line:617:4, col:34>
        0xa3190f0 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa3191f0 <line:618:4, col:42>
        0xa319150 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa3191c0 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa31919c <col:26, col:31> '<bound member function type>' ._M_getloc 0xa27fb50
              (ImplicitCastExpr 0xa3191e0 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa319184 <col:26> 'class std::ios_base' lvalue ParmVar 0xa3185c0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa3192b8 <line:619:4, col:42>
        0xa319230 "const __cache_type *__lc =
          (CallExpr 0xa319298 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa319264 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa3190f0 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa31927c <col:36> 'const class std::locale' lvalue Var 0xa319150 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa319318 <line:621:4, col:23>
        0xa3192d0 "bool __testf =
          (CXXBoolLiteralExpr 0xa319308 <col:19> '_Bool' true)")
      (DeclStmt 0xa319378 <line:622:4, col:23>
        0xa319330 "bool __testt =
          (CXXBoolLiteralExpr 0xa319368 <col:19> '_Bool' true)")
      (DeclStmt 0xa3194b8 <line:623:4, col:47>
        0xa319390 "bool __donef =
          (CXXOperatorCallExpr 0xa319490 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa319430 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (CXXDependentScopeMemberExpr 0xa3193e0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa3193c4 <col:19> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa319418 <col:46> 'int' 0))")
      (DeclStmt 0xa3195f8 <line:624:4, col:46>
        0xa3194d0 "bool __donet =
          (CXXOperatorCallExpr 0xa3195d0 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa319570 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (CXXDependentScopeMemberExpr 0xa319520 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa319504 <col:19> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa319558 <col:45> 'int' 0))")
      (DeclStmt 0xa319658 <line:625:4, col:26>
        0xa319610 "bool __testeof =
          (CXXBoolLiteralExpr 0xa319648 <col:21> '_Bool' false)")
      (DeclStmt 0xa3196d0 <line:626:4, col:18>
        0xa319670 "size_t __n =
          (ImplicitCastExpr 0xa3196c0 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa3196a8 <col:17> 'int' 0))")
      (WhileStmt 0xa31a220 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0xa319760 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0xa319708 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa3196f8 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3196e0 <col:12> '_Bool' lvalue Var 0xa319390 '__donef' '_Bool')))
          (UnaryOperator 0xa319748 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa319738 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa31971c <col:24> '_Bool' lvalue Var 0xa3194d0 '__donet' '_Bool'))))
        (CompoundStmt 0xa31a1e0 <line:628:6, line:657:6>
          (IfStmt 0xa319890 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa319808 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa3197a8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa319778 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa318530 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa319790 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa318570 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0xa319878 <line:630:3, line:633:3>
              (BinaryOperator 0xa319858 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa31982c <col:5> '_Bool' lvalue Var 0xa319610 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa319848 <col:17> '_Bool' true))
              (BreakStmt 0xa319870 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0xa319928 <line:635:8, col:36>
            0xa3198c0 "const char_type __c =
              (UnaryOperator 0xa319910 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa3198f4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa318530 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0xa319ac8 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0xa319960 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa319950 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa319938 <col:13> '_Bool' lvalue Var 0xa319390 '__donef' '_Bool')))
            (BinaryOperator 0xa319ab0 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0xa319974 <col:3> '_Bool' lvalue Var 0xa3192d0 '__testf' '_Bool')
              (CXXOperatorCallExpr 0xa319a88 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa319a28 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa31998c <col:13> 'const char_type':'const _CharT' lvalue Var 0xa3198c0 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa319a10 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa3199c0 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3199a4 <col:20> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa3199f4 <col:39> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa319b70 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0xa319b50 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa319b10 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa319b00 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa319ae4 <col:13> '_Bool' lvalue Var 0xa3192d0 '__testf' '_Bool')))
              (ImplicitCastExpr 0xa319b40 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa319b24 <col:24> '_Bool' lvalue Var 0xa3194d0 '__donet' '_Bool')))
            (BreakStmt 0xa319b68 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0xa319d38 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0xa319bb8 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa319ba8 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa319b8c <col:13> '_Bool' lvalue Var 0xa3194d0 '__donet' '_Bool')))
            (BinaryOperator 0xa319d20 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0xa319bcc <col:3> '_Bool' lvalue Var 0xa319330 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa319cf8 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0xa319c98 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa319be4 <col:13> 'const char_type':'const _CharT' lvalue Var 0xa3198c0 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa319c80 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa319c18 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa319bfc <col:20> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa319c4c <col:38> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa319de0 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0xa319dc0 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa319d80 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa319d70 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa319d54 <col:13> '_Bool' lvalue Var 0xa319330 '__testt' '_Bool')))
              (ImplicitCastExpr 0xa319db0 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa319d94 <col:24> '_Bool' lvalue Var 0xa319390 '__donef' '_Bool')))
            (BreakStmt 0xa319dd8 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0xa319ea0 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0xa319e80 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0xa319e28 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa319e18 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa319dfc <col:13> '_Bool' lvalue Var 0xa319330 '__testt' '_Bool')))
              (UnaryOperator 0xa319e68 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa319e58 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa319e3c <col:25> '_Bool' lvalue Var 0xa3192d0 '__testf' '_Bool'))))
            (BreakStmt 0xa319e98 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa319ed8 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0xa319ebc <col:10> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0xa319f08 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa319eec <col:10> 'iter_type':'_InIter' lvalue ParmVar 0xa318530 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0xa31a068 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa319f1c <col:8> '_Bool' lvalue Var 0xa319390 '__donef' '_Bool')
            (BinaryOperator 0xa31a050 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa319f60 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa319f50 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa319f34 <col:19> '_Bool' lvalue Var 0xa3192d0 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0xa31a028 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa319fe0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
                (DeclRefExpr 0xa319f74 <col:30> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa319fa8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa319f8c <col:37> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0xa31a1c8 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa31a080 <col:8> '_Bool' lvalue Var 0xa3194d0 '__donet' '_Bool')
            (BinaryOperator 0xa31a1b0 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa31a0c0 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa31a0b0 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa31a098 <col:19> '_Bool' lvalue Var 0xa319330 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0xa31a188 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa31a140 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
                (DeclRefExpr 0xa31a0d4 <col:30> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa31a108 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa31a0ec <col:37> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *')))))))
      (IfStmt 0xa31ab58 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0xa31a370 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0xa31a340 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0xa31a234 <col:8> '_Bool' lvalue Var 0xa3192d0 '__testf' '_Bool')
            (CXXOperatorCallExpr 0xa31a318 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0xa31a2b8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa31a24c <col:19> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0xa31a280 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0xa31a264 <col:26> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0xa31a358 <col:53> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0xa31a690 <line:659:6, line:665:6>
          (BinaryOperator 0xa31a3b0 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa31a388 <col:8> '_Bool' lvalue ParmVar 0xa318680 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa31a3a0 <col:14> '_Bool' false))
          (IfStmt 0xa31a670 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0xa31a4d0 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0xa31a3c8 <col:12> '_Bool' lvalue Var 0xa319330 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa31a4a8 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0xa31a448 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa31a3e0 <col:23> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa31a410 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa31a3f8 <col:30> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0xa31a550 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa31a4e8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa31a540 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa31a51c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa31a658 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa31a568 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa31a648 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa31a628 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa31a618 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa31a580 <col:11> '_Bool' lvalue Var 0xa319610 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa31a5b4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa31a5f4 <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0xa31ab38 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0xa31a7e0 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0xa31a7b0 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0xa31a6a8 <col:13> '_Bool' lvalue Var 0xa319330 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa31a788 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0xa31a728 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (DeclRefExpr 0xa31a6c0 <col:24> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa31a6f0 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0xa31a6d8 <col:31> 'const __cache_type *' lvalue Var 0xa319230 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0xa31a7c8 <col:57> 'size_t':'unsigned int' lvalue Var 0xa319670 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0xa31a940 <line:667:6, line:670:6>
            (BinaryOperator 0xa31a820 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa31a7f8 <col:8> '_Bool' lvalue ParmVar 0xa318680 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa31a810 <col:14> '_Bool' true))
            (BinaryOperator 0xa31a928 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa31a838 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa31a918 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa31a8f8 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa31a8e8 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa31a850 <col:16> '_Bool' lvalue Var 0xa319610 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa31a884 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa31a8c4 <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0xa31ab18 <line:672:6, line:679:6>
            (BinaryOperator 0xa31a980 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa31a958 <col:8> '_Bool' lvalue ParmVar 0xa318680 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa31a970 <col:14> '_Bool' false))
            (BinaryOperator 0xa31aa00 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa31a998 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa31a9f0 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa31a9cc <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa31aaf8 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0xa31aa30 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa31aa18 <col:12> '_Bool' lvalue Var 0xa319610 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0xa31aad0 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa31aac0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa31aaa8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa31aa3c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa318630 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0xa31aa98 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa31aa74 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0xa31abf0 <line:681:7, col:14>
    (DeclRefExpr 0xa31abd4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa318530 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa31b740 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0xa31b1c8 <line:690:7, col:20>
    0xa31b170 "string __xtrc =
      (CXXConstructExpr 0xa31b1a8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa31b228 <line:691:7, col:24> 'void'
    (MemberExpr 0xa31b1f0 <col:7, col:14> '<bound member function type>' .reserve 0xa206dc0
      (DeclRefExpr 0xa31b1d8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa31b170 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa31b248 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa31b210 <col:22> 'int' 32)))
  (BinaryOperator 0xa31b348 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa31b254 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa31aec0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa31b318 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa31b280 <col:15> '<bound member function type>' ->_M_extract_float 0xa30db90
        (CXXThisExpr 0xa31b270 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa31b2a0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa31aec0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31b2b8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa31af00 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31b2d0 <col:46> 'class std::ios_base' lvalue ParmVar 0xa31af50 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa31b2e8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31afc0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa31b300 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa31b170 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa31b548 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0xa31b538 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa31b4d0 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa2d1440 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa2d1210 '__convert_to_v')))
    (CXXMemberCallExpr 0xa31b3f8 <col:27, col:40> 'const char *'
      (MemberExpr 0xa31b3d4 <col:27, col:34> '<bound member function type>' .c_str 0xa216bd0
        (ImplicitCastExpr 0xa31b418 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa31b3bc <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa31b170 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa31b424 <col:43> 'float' lvalue ParmVar 0xa31b010 '__v' 'float &')
    (DeclRefExpr 0xa31b43c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31afc0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa31b578 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa31b480 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa31b470 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa31b454 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa2593f0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa31b6f8 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa31b618 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa31b5b8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
      (DeclRefExpr 0xa31b584 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa31aec0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31b59c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa31af00 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa31b6d0 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa31b6c0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa31b6a8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa31b63c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31afc0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa31b698 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa31b674 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa31b730 <line:696:7, col:14>
    (DeclRefExpr 0xa31b714 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa31aec0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa31c290 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0xa31bd18 <line:705:7, col:20>
    0xa31bcc0 "string __xtrc =
      (CXXConstructExpr 0xa31bcf8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa31bd78 <line:706:7, col:24> 'void'
    (MemberExpr 0xa31bd40 <col:7, col:14> '<bound member function type>' .reserve 0xa206dc0
      (DeclRefExpr 0xa31bd28 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa31bcc0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa31bd98 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa31bd60 <col:22> 'int' 32)))
  (BinaryOperator 0xa31be98 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa31bda4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa31ba10 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa31be68 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa31bdd0 <col:15> '<bound member function type>' ->_M_extract_float 0xa30db90
        (CXXThisExpr 0xa31bdc0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa31bdf0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa31ba10 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31be08 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa31ba50 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31be20 <col:46> 'class std::ios_base' lvalue ParmVar 0xa31baa0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa31be38 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31bb10 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa31be50 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa31bcc0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa31c098 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0xa31c088 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa31c020 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa2d19c0 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa2d1210 '__convert_to_v')))
    (CXXMemberCallExpr 0xa31bf48 <col:27, col:40> 'const char *'
      (MemberExpr 0xa31bf24 <col:27, col:34> '<bound member function type>' .c_str 0xa216bd0
        (ImplicitCastExpr 0xa31bf68 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa31bf0c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa31bcc0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa31bf74 <col:43> 'double' lvalue ParmVar 0xa31bb60 '__v' 'double &')
    (DeclRefExpr 0xa31bf8c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31bb10 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa31c0c8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa31bfd0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa31bfc0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa31bfa4 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa2593f0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa31c248 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa31c168 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa31c108 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
      (DeclRefExpr 0xa31c0d4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa31ba10 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31c0ec <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa31ba50 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa31c220 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa31c210 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa31c1f8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa31c18c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31bb10 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa31c1e8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa31c1c4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa31c280 <line:711:7, col:14>
    (DeclRefExpr 0xa31c264 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa31ba10 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa31cde0 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0xa31c868 <line:737:7, col:20>
    0xa31c810 "string __xtrc =
      (CXXConstructExpr 0xa31c848 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa31c8c8 <line:738:7, col:24> 'void'
    (MemberExpr 0xa31c890 <col:7, col:14> '<bound member function type>' .reserve 0xa206dc0
      (DeclRefExpr 0xa31c878 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa31c810 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa31c8e8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa31c8b0 <col:22> 'int' 32)))
  (BinaryOperator 0xa31c9e8 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa31c8f4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa31c560 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa31c9b8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa31c920 <col:15> '<bound member function type>' ->_M_extract_float 0xa30db90
        (CXXThisExpr 0xa31c910 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa31c940 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa31c560 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31c958 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa31c5a0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31c970 <col:46> 'class std::ios_base' lvalue ParmVar 0xa31c5f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa31c988 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31c660 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa31c9a0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa31c810 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa31cbe8 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0xa31cbd8 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa31cb70 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa2d1f20 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa2d1210 '__convert_to_v')))
    (CXXMemberCallExpr 0xa31ca98 <col:27, col:40> 'const char *'
      (MemberExpr 0xa31ca74 <col:27, col:34> '<bound member function type>' .c_str 0xa216bd0
        (ImplicitCastExpr 0xa31cab8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa31ca5c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa31c810 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa31cac4 <col:43> 'long double' lvalue ParmVar 0xa31c6b0 '__v' 'long double &')
    (DeclRefExpr 0xa31cadc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31c660 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa31cc18 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa31cb20 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa31cb10 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa31caf4 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa2593f0 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa31cd98 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa31ccb8 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa31cc58 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
      (DeclRefExpr 0xa31cc24 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa31c560 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31cc3c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa31c5a0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa31cd70 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa31cd60 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa31cd48 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa31ccdc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31c660 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa31cd38 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa31cd14 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa31cdd0 <line:743:7, col:14>
    (DeclRefExpr 0xa31cdb4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa31c560 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa31de28 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0xa31d3c0 <line:753:7, col:49>
    0xa31d390 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0xa31d4d0 <line:754:7, col:42>
    0xa31d3f0 "const fmtflags __fmt =
      (CXXMemberCallExpr 0xa31d4a0 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa31d47c <col:30, col:35> '<bound member function type>' .flags 0xa27c160
          (ImplicitCastExpr 0xa31d4c0 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa31d424 <col:30> 'class std::ios_base' lvalue ParmVar 0xa31d140 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0xa31d720 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa31d6fc <col:7, col:12> '<bound member function type>' .flags 0xa27c250
      (DeclRefExpr 0xa31d4e0 <col:7> 'class std::ios_base' lvalue ParmVar 0xa31d140 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa31d6d8 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa31d6c8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa31d6b0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa273140 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa31d648 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa31d620 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa31d610 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa31d5f8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa31d5e8 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa31d538 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa31d3f0 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0xa31d5c8 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa31d5b8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa31d5a0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa273580 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa31d590 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa31d56c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0xa31d6a0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa31d67c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0xa31db20 <line:757:7, line:759:57>
    0xa31daf0 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0xa31db88 <line:761:7, col:24>
    0xa31db50 "_UIntPtrType __ul")
  (BinaryOperator 0xa31dca8 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0xa31db98 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa31d0b0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa31dc78 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa31dbc0 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa31dbfc <col:30> 'iter_type':'_InIter' lvalue ParmVar 0xa31d0b0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31dc14 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0xa31d0f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa31dc2c <col:44> 'class std::ios_base' lvalue ParmVar 0xa31d140 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa31dc44 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa31d1b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa31dc5c <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0xa31db50 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0xa31dd50 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa31dd30 <col:7, col:12> '<bound member function type>' .flags 0xa27c250
      (DeclRefExpr 0xa31dcc0 <col:7> 'class std::ios_base' lvalue ParmVar 0xa31d140 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa31dd70 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa31dd18 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa31d3f0 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0xa31dde8 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0xa31dd7c <col:7> 'void *' lvalue ParmVar 0xa31d200 '__v' 'void *&')
    (CXXReinterpretCastExpr 0xa31ddd0 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0xa31ddc0 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa31dd94 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0xa31db50 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0xa31de18 <line:768:7, col:14>
    (DeclRefExpr 0xa31de00 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa31d0b0 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0xa31e788 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0xa31e6d0 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa31e608 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0xa31e63c <col:51> 'class std::ios_base' lvalue ParmVar 0xa31e190 '__io' 'class std::ios_base &')
    (DeclRefExpr 0xa31e654 <col:57> '_CharT' lvalue ParmVar 0xa31e100 '__fill' '_CharT')
    (DeclRefExpr 0xa31e66c <col:65> '_CharT *' lvalue ParmVar 0xa31e200 '__new' '_CharT *')
    (DeclRefExpr 0xa31e684 <line:782:9> 'const _CharT *' lvalue ParmVar 0xa31e270 '__cs' 'const _CharT *')
    (DeclRefExpr 0xa31e69c <col:15> 'streamsize':'int' lvalue ParmVar 0xa31e140 '__w' 'streamsize':'int')
    (DeclRefExpr 0xa31e6b4 <col:20> 'int' lvalue ParmVar 0xa31e2c0 '__len' 'int &'))
  (BinaryOperator 0xa31e770 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0xa31e704 <col:7> 'int' lvalue ParmVar 0xa31e2c0 '__len' 'int &')
    (CXXStaticCastExpr 0xa31e758 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0xa31e748 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa31e71c <col:32> 'streamsize':'int' lvalue ParmVar 0xa31e140 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0xa31fa58 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0xa31ebb0 <line:793:7, col:31>
    0xa31eb60 "_CharT *__buf =
      (DeclRefExpr 0xa31eb94 <col:23> '_CharT *' lvalue ParmVar 0xa31e880 '__bufend' '_CharT *')")
  (IfStmt 0xa31f998 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa31ec68 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa31ec10 <col:11, col:39> 'long'
        (ImplicitCastExpr 0xa31ec00 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa31ebc0 <col:11> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa31ec48 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa31ec38 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa31ebd8 <col:28> '_Bool' lvalue ParmVar 0xa31e9e0 '__dec' '_Bool')))
        (ImplicitCastExpr 0xa31ec58 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa31ebf0 <col:35> '_Bool' true))))
    (CompoundStmt 0xa31ef48 <line:795:2, line:803:2>
      (DoStmt 0xa31ef30 <line:797:4, line:802:19>
        (CompoundStmt 0xa31ee68 <line:798:6, line:801:6>
          (BinaryOperator 0xa31ee00 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0xa31eca8 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa31ec90 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa31ec74 <col:11> '_CharT *' lvalue Var 0xa31eb60 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0xa31ede8 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0xa31ecbc <col:19> 'const _CharT *' lvalue ParmVar 0xa31e930 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0xa31edc0 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0xa31ed78 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                (ParenExpr 0xa31ed20 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0xa31ed08 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0xa31ecd4 <col:26> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
                    (IntegerLiteral 0xa31ecf0 <col:32> 'int' 10)))
                (DeclRefExpr 0xa31ed54 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea0c0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0xa31ee48 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa31ee18 <col:8> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
            (IntegerLiteral 0xa31ee30 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0xa31ef08 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0xa31eeb0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
          (DeclRefExpr 0xa31ee80 <col:11> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
          (IntegerLiteral 0xa31ee98 <col:18> 'int' 0))))
    (IfStmt 0xa31f978 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0xa31f0b0 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0xa31f090 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0xa31f028 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0xa31f000 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa31eff0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa31efd8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa31efb8 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa31ef5c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa31e9a0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa31efc8 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa31ef94 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0xa31f0a0 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa31f080 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa31f05c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0xa31f3e8 <line:805:2, line:813:2>
        (DoStmt 0xa31f3d0 <line:807:4, line:812:19>
          (CompoundStmt 0xa31f308 <line:808:6, line:811:6>
            (BinaryOperator 0xa31f2a0 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0xa31f0f8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa31f0e0 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa31f0c8 <col:11> '_CharT *' lvalue Var 0xa31eb60 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa31f288 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0xa31f10c <col:19> 'const _CharT *' lvalue ParmVar 0xa31e930 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa31f260 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0xa31f218 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                  (ParenExpr 0xa31f1c0 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa31f198 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa31f158 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
                      (DeclRefExpr 0xa31f124 <col:26> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
                      (IntegerLiteral 0xa31f140 <col:32> 'int' 7)))
                  (DeclRefExpr 0xa31f1f4 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea0c0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0xa31f2e8 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa31f2b8 <col:8> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
              (IntegerLiteral 0xa31f2d0 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0xa31f3a8 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa31f350 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
            (DeclRefExpr 0xa31f320 <col:11> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
            (IntegerLiteral 0xa31f338 <col:18> 'int' 0))))
      (CompoundStmt 0xa31f958 <line:815:2, line:826:2>
        (DeclStmt 0xa31f520 <line:817:4, col:58>
          0xa31f410 "const bool __uppercase =
            (ImplicitCastExpr 0xa31f510 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0xa31f4e8 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0xa31f4d8 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa31f4c0 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0xa31f4a0 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa31f444 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa31e9a0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0xa31f4b0 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa31f47c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0xa31f650 <line:818:4, line:819:66>
          0xa31f540 "const int __case_offset =
            (ImplicitCastExpr 0xa31f640 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0xa31f620 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0xa31f610 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa31f574 <col:30> 'const _Bool' lvalue Var 0xa31f410 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0xa31f5ac <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea190 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0xa31f5ec <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea0c0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0xa31f940 <line:820:4, line:825:19>
          (CompoundStmt 0xa31f878 <line:821:6, line:824:6>
            (BinaryOperator 0xa31f810 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0xa31f690 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa31f678 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa31f660 <col:11> '_CharT *' lvalue Var 0xa31eb60 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa31f7f8 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0xa31f6a4 <col:19> 'const _CharT *' lvalue ParmVar 0xa31e930 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa31f7d0 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0xa31f788 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                  (ParenExpr 0xa31f758 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa31f730 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa31f6f0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
                      (DeclRefExpr 0xa31f6bc <col:26> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
                      (IntegerLiteral 0xa31f6d8 <col:32> 'int' 15)))
                  (DeclRefExpr 0xa31f76c <col:39> 'const int' lvalue Var 0xa31f540 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0xa31f858 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa31f828 <col:8> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
              (IntegerLiteral 0xa31f840 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0xa31f918 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa31f8c0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
            (DeclRefExpr 0xa31f890 <col:11> '_ValueT' lvalue ParmVar 0xa31e8c0 '__v' '_ValueT')
            (IntegerLiteral 0xa31f8a8 <col:18> 'int' 0))))))
  (ReturnStmt 0xa31fa48 <line:827:7, col:25>
    (CXXOperatorCallExpr 0xa31fa20 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa31f9e8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0xa31f9b4 <col:14> '_CharT *' lvalue ParmVar 0xa31e880 '__bufend' '_CharT *')
      (DeclRefExpr 0xa31f9cc <col:25> '_CharT *' lvalue Var 0xa31eb60 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa320318 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0xa320248 <line:838:7, line:839:42>
    0xa320070 "_CharT *__p =
      (CallExpr 0xa320210 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa3200c0 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d2bd0)
        (DeclRefExpr 0xa3200f4 <col:41> '_CharT *' lvalue ParmVar 0xa31fe60 '__new' '_CharT *')
        (DeclRefExpr 0xa32010c <col:48> '_CharT' lvalue ParmVar 0xa31fda0 '__sep' '_CharT')
        (DeclRefExpr 0xa320124 <col:55> 'const char *' lvalue ParmVar 0xa31fd20 '__grouping' 'const char *')
        (DeclRefExpr 0xa32013c <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0xa31fd60 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa320154 <col:23> '_CharT *' lvalue ParmVar 0xa31feb0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa3201e8 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa3201a0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa32016c <col:29> '_CharT *' lvalue ParmVar 0xa31feb0 '__cs' '_CharT *')
          (DeclRefExpr 0xa320184 <col:36> 'int' lvalue ParmVar 0xa31ff00 '__len' 'int &')))")
  (BinaryOperator 0xa320300 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0xa320258 <col:7> 'int' lvalue ParmVar 0xa31ff00 '__len' 'int &')
    (CXXOperatorCallExpr 0xa3202d8 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3202a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (DeclRefExpr 0xa320270 <col:15> '_CharT *' lvalue Var 0xa320070 '__p' '_CharT *')
      (DeclRefExpr 0xa320288 <col:21> '_CharT *' lvalue ParmVar 0xa31fe60 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0xa3253e8 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0xa320918 <line:850:2, col:33>
    0xa3208b0 "Using__gnu_cxx::;")
  (DeclStmt 0xa320a40 <line:851:2, col:66>
    0xa320a10 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa320b30 <line:852:2, col:60>
    0xa320b00 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa320c38 <line:853:2, col:32>
    0xa320c00 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa320d00 <line:854:2, col:40>
    0xa320c60 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa320cd0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa320cac <col:24, col:29> '<bound member function type>' ._M_getloc 0xa27fb50
          (ImplicitCastExpr 0xa320cf0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa320c94 <col:24> 'class std::ios_base' lvalue ParmVar 0xa320680 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa320dc8 <line:855:2, col:40>
    0xa320d40 "const __cache_type *__lc =
      (CallExpr 0xa320da8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa320d74 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa320c00 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa320d8c <col:34> 'const class std::locale' lvalue Var 0xa320c60 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa320e98 <line:856:2, col:42>
    0xa320e10 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa320e60 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa320e44 <col:24> 'const __cache_type *' lvalue Var 0xa320d40 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa320fc0 <line:857:2, col:49>
    0xa320ee0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa320f90 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa320f6c <col:37, col:42> '<bound member function type>' .flags 0xa27c160
          (ImplicitCastExpr 0xa320fb0 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa320f14 <col:37> 'class std::ios_base' lvalue ParmVar 0xa320680 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa321088 <line:860:2, col:40>
    0xa320fe0 "const int __ilen =
      (ImplicitCastExpr 0xa321078 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0xa321060 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0xa321050 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa321018 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0xa321038 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0xa3212c8 <line:861:2, line:862:23>
    0xa3210d0 "_CharT *__cs =
      (CXXStaticCastExpr 0xa3212b0 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa321280 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0xa321270 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3211e4 <col:38> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa321258 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa321208 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa321248 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa321238 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa321220 <col:15> 'const int' lvalue Var 0xa320fe0 '__ilen' 'const int'))))))")
  (DeclStmt 0xa321410 <line:866:2, col:70>
    0xa321310 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa3213e8 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa3213d8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3213c0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa3213a0 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa321344 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa320ee0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa3213b0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa32137c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa321630 <line:867:2, line:868:40>
    0xa321430 "const bool __dec =
      (ParenExpr 0xa3215e0 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0xa3215c8 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0xa321500 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0xa3214e0 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3214c0 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa321464 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa321310 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa3214f0 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3214d0 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa32149c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa3215b0 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0xa321590 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa321570 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa321518 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa321310 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa3215a0 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa321580 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa32154c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0xa3218b8 <line:869:2, line:871:34>
    0xa321660 "const __unsigned_type __u =
      (ParenExpr 0xa3218a0 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0xa321880 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0xa321790 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0xa321778 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0xa321710 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0xa3216c8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
                (DeclRefExpr 0xa321694 <col:32> '_ValueT' lvalue ParmVar 0xa320700 '__v' '_ValueT')
                (IntegerLiteral 0xa3216b0 <col:38> 'int' 0))
              (UnaryOperator 0xa321760 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa321750 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa321734 <col:44> 'const _Bool' lvalue Var 0xa321430 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0xa3217c8 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0xa3217b0 <col:28> '_ValueT' lvalue ParmVar 0xa320700 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0xa321860 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa321828 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (CXXUnresolvedConstructExpr 0xa321808 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0xa3217f0 <col:29> '_ValueT' lvalue ParmVar 0xa320700 '__v' '_ValueT')))))")
  (DeclStmt 0xa321a80 <line:872:3, col:71>
    0xa3218e0 "int __len =
      (CallExpr 0xa321a50 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0xa321918 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0xa31eb10)
        (CXXOperatorCallExpr 0xa3219c8 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa321980 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa32194c <col:29> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')
          (DeclRefExpr 0xa321964 <col:36> 'const int' lvalue Var 0xa320fe0 '__ilen' 'const int'))
        (DeclRefExpr 0xa3219ec <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa321660 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa321a04 <col:49> 'const _CharT *' lvalue Var 0xa320e10 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa321a1c <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa320ee0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0xa321a34 <col:65> 'const _Bool' lvalue Var 0xa321430 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0xa321b10 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa321a90 <col:2> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')
    (BinaryOperator 0xa321af8 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0xa321ad8 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0xa321aa8 <col:10> 'const int' lvalue Var 0xa320fe0 '__ilen' 'const int'))
      (ImplicitCastExpr 0xa321ae8 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0xa321ac0 <col:19> 'int' lvalue Var 0xa3218e0 '__len' 'int'))))
  (IfStmt 0xa3240d0 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa321b48 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa321b30 <col:6> 'const __cache_type *' lvalue Var 0xa320d40 '__lc' 'const __cache_type *'))
    (CompoundStmt 0xa3240b0 <line:877:4, line:886:4>
      (DeclStmt 0xa323d90 <line:880:6, line:882:16>
        0xa321b90 "_CharT *__cs2 =
          (CXXStaticCastExpr 0xa323d78 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa323d48 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0xa323d38 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa321bc4 <col:43> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa323d20 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0xa323ce0 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa321be8 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa323cd0 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0xa321c58 <col:13, col:23> 'int'
                      (BinaryOperator 0xa321c40 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0xa321c30 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa321c00 <col:14> 'int' lvalue Var 0xa3218e0 '__len' 'int'))
                        (IntegerLiteral 0xa321c18 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0xa323d10 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa323cf8 <col:13> 'int' 2)))))")
      (CallExpr 0xa323fa8 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0xa323db0 <line:883:6> '<bound member function type>' ->_M_group_int 0xa31ffb0
          (CXXThisExpr 0xa323da0 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa323de8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa323dd0 <col:19> 'const __cache_type *' lvalue Var 0xa320d40 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa323e38 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0xa323e1c <col:38> 'const __cache_type *' lvalue Var 0xa320d40 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa323e88 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa323e6c <col:5> 'const __cache_type *' lvalue Var 0xa320d40 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa323ebc <col:29> 'class std::ios_base' lvalue ParmVar 0xa320680 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0xa323f50 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa323f08 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa323ed4 <col:35> '_CharT *' lvalue Var 0xa321b90 '__cs2' '_CharT *')
          (IntegerLiteral 0xa323ef0 <col:43> 'int' 2))
        (DeclRefExpr 0xa323f74 <col:46> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')
        (DeclRefExpr 0xa323f8c <col:52> 'int' lvalue Var 0xa3218e0 '__len' 'int'))
      (BinaryOperator 0xa324098 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa323fe0 <col:6> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa324070 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa324028 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa323ff8 <col:13> '_CharT *' lvalue Var 0xa321b90 '__cs2' '_CharT *')
          (IntegerLiteral 0xa324010 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0xa324e08 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa324198 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa324140 <col:6, col:34> 'long'
        (ImplicitCastExpr 0xa324130 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3240ec <col:6> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa324178 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa324168 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa324104 <col:23> 'const _Bool' lvalue Var 0xa321430 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0xa324188 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa324120 <col:30> '_Bool' true))))
    (CompoundStmt 0xa324708 <line:890:4, line:900:4>
      (IfStmt 0xa3246e8 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa324258 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa324210 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
          (DeclRefExpr 0xa3241dc <col:10> '_ValueT' lvalue ParmVar 0xa320700 '__v' '_ValueT')
          (IntegerLiteral 0xa3241f8 <col:17> 'int' 0))
        (CompoundStmt 0xa3245b8 <line:893:8, line:897:8>
          (IfStmt 0xa324598 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0xa324468 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0xa324360 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0xa324350 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa324328 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa324318 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa324300 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa3242e0 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa324288 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa320ee0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa3242f0 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa3242bc <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279e10 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0xa324430 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0xa324580 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0xa324538 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0xa3244b0 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa324498 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0xa324480 <col:8> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0xa324520 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3244c4 <col:15> 'const _CharT *' lvalue Var 0xa320e10 '__lit' 'const _CharT *')
                  (DeclRefExpr 0xa3244fc <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea000 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0xa324568 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0xa324550 <col:46> 'int' lvalue Var 0xa3218e0 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0xa3246d0 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0xa324688 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0xa324600 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa3245e8 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa3245cc <col:11> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0xa324670 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa324614 <col:18> 'const _CharT *' lvalue Var 0xa320e10 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa32464c <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2e9fc0 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0xa3246b8 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0xa3246a0 <col:50> 'int' lvalue Var 0xa3218e0 '__len' 'int')))))
    (IfStmt 0xa324de8 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0xa324830 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0xa324800 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa3247f0 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0xa3247c8 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa3247b8 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3247a0 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa324780 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa324728 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa320ee0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa324790 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa32475c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0xa324818 <col:49> '_ValueT' lvalue ParmVar 0xa320700 '__v' '_ValueT'))
      (CompoundStmt 0xa324dd0 <line:902:4, line:914:4>
        (IfStmt 0xa324db0 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0xa3248e0 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0xa3248c0 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3248a0 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa324848 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa321310 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa3248d0 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3248b0 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa32487c <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa3249f8 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0xa3249b0 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0xa324928 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa324910 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa3248f8 <col:11> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa324998 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0xa32493c <col:18> 'const _CharT *' lvalue Var 0xa320e10 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa324974 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea0c0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0xa3249e0 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa3249c8 <col:51> 'int' lvalue Var 0xa3218e0 '__len' 'int')))
          (CompoundStmt 0xa324d90 <line:906:8, line:913:8>
            (DeclStmt 0xa324b30 <line:908:3, col:57>
              0xa324a20 "const bool __uppercase =
                (ImplicitCastExpr 0xa324b20 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa324af8 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa324ae8 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa324ad0 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa324ab0 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa324a54 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa320ee0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa324ac0 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa324a8c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0xa324c58 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0xa324b70 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa324b58 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa324b40 <col:6> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa324c40 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa324b84 <col:13> 'const _CharT *' lvalue Var 0xa320e10 '__lit' 'const _CharT *')
                (BinaryOperator 0xa324c28 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0xa324bf8 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0xa324bbc <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea040 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0xa324c18 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa324c08 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa324bdc <col:39> 'const _Bool' lvalue Var 0xa324a20 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0xa324d28 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0xa324ca0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa324c88 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa324c70 <col:6> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa324d10 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0xa324cb4 <col:13> 'const _CharT *' lvalue Var 0xa320e10 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa324cec <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa2ea0c0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0xa324d70 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0xa324d40 <col:3> 'int' lvalue Var 0xa3218e0 '__len' 'int')
              (IntegerLiteral 0xa324d58 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0xa324f10 <line:917:2, col:37>
    0xa324e30 "const streamsize __w =
      (CXXMemberCallExpr 0xa324ee0 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa324ebc <col:25, col:30> '<bound member function type>' .width 0xa27f770
          (ImplicitCastExpr 0xa324f00 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa324e64 <col:25> 'class std::ios_base' lvalue ParmVar 0xa320680 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa325248 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0xa324f90 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa324f80 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa324f20 <col:6> 'const streamsize':'const int' lvalue Var 0xa324e30 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa324f68 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa324f58 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa324f38 <col:36> 'int' lvalue Var 0xa3218e0 '__len' 'int'))))
    (CompoundStmt 0xa325228 <line:919:4, line:924:4>
      (DeclStmt 0xa3250d8 <line:920:6, line:921:18>
        0xa324fc0 "_CharT *__cs3 =
          (CXXStaticCastExpr 0xa3250c0 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa325090 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0xa325080 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa324ff4 <col:43> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa325068 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa325018 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa325058 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa325048 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa325030 <col:13> 'const streamsize':'const int' lvalue Var 0xa324e30 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa3251a8 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0xa3250f8 <col:6> '<bound member function type>' ->_M_pad 0xa31e360
          (CXXThisExpr 0xa3250e8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa325118 <col:13> '_CharT' lvalue ParmVar 0xa3206c0 '__fill' '_CharT')
        (DeclRefExpr 0xa325130 <col:21> 'const streamsize':'const int' lvalue Var 0xa324e30 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa325148 <col:26> 'class std::ios_base' lvalue ParmVar 0xa320680 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa325160 <col:32> '_CharT *' lvalue Var 0xa324fc0 '__cs3' '_CharT *')
        (DeclRefExpr 0xa325178 <col:39> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')
        (DeclRefExpr 0xa325190 <col:45> 'int' lvalue Var 0xa3218e0 '__len' 'int'))
      (BinaryOperator 0xa325210 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa3251dc <col:6> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')
        (DeclRefExpr 0xa3251f4 <col:13> '_CharT *' lvalue Var 0xa324fc0 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa3252f8 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa3252d8 <col:2, col:7> '<bound member function type>' .width 0xa27f830
      (DeclRefExpr 0xa325264 <col:2> 'class std::ios_base' lvalue ParmVar 0xa320680 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa3252c0 <col:13> 'int' 0))
  (ReturnStmt 0xa3253d8 <line:929:2, col:38>
    (CallExpr 0xa3253b0 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa325330 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d30e0 0xa2d34a0)
      (DeclRefExpr 0xa325368 <col:22> '_OutIter' lvalue ParmVar 0xa320630 '__s' '_OutIter')
      (DeclRefExpr 0xa325380 <col:27> '_CharT *' lvalue Var 0xa3210d0 '__cs' '_CharT *')
      (DeclRefExpr 0xa325398 <col:33> 'int' lvalue Var 0xa3218e0 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa326178 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0xa325b78 <line:942:7, col:52>
    0xa325a60 "const int __declen =
      (ConditionalOperator 0xa325b58 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0xa325a94 <col:28> 'const _CharT *' lvalue ParmVar 0xa3257e0 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0xa325b18 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0xa325ae0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (DeclRefExpr 0xa325aac <col:34> 'const _CharT *' lvalue ParmVar 0xa3257e0 '__p' 'const _CharT *')
          (DeclRefExpr 0xa325ac4 <col:40> '_CharT *' lvalue ParmVar 0xa3258a0 '__cs' '_CharT *'))
        (DeclRefExpr 0xa325b3c <col:47> 'int' lvalue ParmVar 0xa3258f0 '__len' 'int &'))")
  (DeclStmt 0xa325d78 <line:943:7, line:945:29>
    0xa325ba0 "_CharT *__p2 =
      (CallExpr 0xa325d40 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa325bf0 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d2bd0)
        (DeclRefExpr 0xa325c24 <col:42> '_CharT *' lvalue ParmVar 0xa325850 '__new' '_CharT *')
        (DeclRefExpr 0xa325c3c <col:49> '_CharT' lvalue ParmVar 0xa325770 '__sep' '_CharT')
        (DeclRefExpr 0xa325c54 <col:56> 'const char *' lvalue ParmVar 0xa3256f0 '__grouping' 'const char *')
        (DeclRefExpr 0xa325c6c <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0xa325730 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa325c84 <line:945:7> '_CharT *' lvalue ParmVar 0xa3258a0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa325d18 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa325cd0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa325c9c <col:13> '_CharT *' lvalue ParmVar 0xa3258a0 '__cs' '_CharT *')
          (DeclRefExpr 0xa325cb4 <col:20> 'const int' lvalue Var 0xa325a60 '__declen' 'const int')))")
  (DeclStmt 0xa325e68 <line:948:7, col:34>
    0xa325da0 "int __newlen =
      (CXXOperatorCallExpr 0xa325e40 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa325e08 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa325dd4 <col:22> '_CharT *' lvalue Var 0xa325ba0 '__p2' '_CharT *')
        (DeclRefExpr 0xa325dec <col:29> '_CharT *' lvalue ParmVar 0xa325850 '__new' '_CharT *'))")
  (IfStmt 0xa326100 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0xa325e78 <line:949:11> 'const _CharT *' lvalue ParmVar 0xa3257e0 '__p' 'const _CharT *')
    (CompoundStmt 0xa3260e8 <line:950:2, line:953:2>
      (CallExpr 0xa326020 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa325f50 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0xa325f84 <col:30> '_CharT *' lvalue Var 0xa325ba0 '__p2' '_CharT *')
        (DeclRefExpr 0xa325f9c <col:36> 'const _CharT *' lvalue ParmVar 0xa3257e0 '__p' 'const _CharT *')
        (BinaryOperator 0xa326008 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0xa325fe8 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0xa325fb4 <col:41> 'int' lvalue ParmVar 0xa3258f0 '__len' 'int &'))
          (ImplicitCastExpr 0xa325ff8 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0xa325fcc <col:49> 'const int' lvalue Var 0xa325a60 '__declen' 'const int'))))
      (CompoundAssignOperator 0xa3260c8 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa326048 <col:4> 'int' lvalue Var 0xa325da0 '__newlen' 'int')
        (BinaryOperator 0xa3260b0 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0xa326090 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0xa326060 <col:16> 'int' lvalue ParmVar 0xa3258f0 '__len' 'int &'))
          (ImplicitCastExpr 0xa3260a0 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0xa326078 <col:24> 'const int' lvalue Var 0xa325a60 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0xa326160 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0xa32611c <col:7> 'int' lvalue ParmVar 0xa3258f0 '__len' 'int &')
    (ImplicitCastExpr 0xa326150 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa326134 <col:15> 'int' lvalue Var 0xa325da0 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0xa329338 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0xa326850 <line:974:2, col:62>
    0xa326820 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa326958 <line:975:2, col:32>
    0xa326920 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa326a20 <line:976:2, col:40>
    0xa326980 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa3269f0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa3269cc <col:24, col:29> '<bound member function type>' ._M_getloc 0xa27fb50
          (ImplicitCastExpr 0xa326a10 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa3269b4 <col:24> 'class std::ios_base' lvalue ParmVar 0xa3264f0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa326ae8 <line:977:2, col:40>
    0xa326a60 "const __cache_type *__lc =
      (CallExpr 0xa326ac8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa326a94 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa326920 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa326aac <col:34> 'const class std::locale' lvalue Var 0xa326980 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa326cf0 <line:980:2, col:71>
    0xa326b00 "const streamsize __prec =
      (ConditionalOperator 0xa326cd0 <col:28, col:70> 'int'
        (BinaryOperator 0xa326bf8 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0xa326bb0 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0xa326b8c <col:28, col:33> '<bound member function type>' .precision 0xa27f600
              (ImplicitCastExpr 0xa326bd0 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa326b34 <col:28> 'class std::ios_base' lvalue ParmVar 0xa3264f0 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0xa326be0 <col:47> 'int' 0))
        (IntegerLiteral 0xa326c10 <col:51> 'int' 6)
        (CXXMemberCallExpr 0xa326ca0 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0xa326c80 <col:55, col:60> '<bound member function type>' .precision 0xa27f600
            (ImplicitCastExpr 0xa326cc0 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa326c28 <col:55> 'class std::ios_base' lvalue ParmVar 0xa3264f0 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0xa326e38 <line:982:2, line:983:52>
    0xa326d10 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0xa326e00 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0xa326e98 <line:986:2, col:11>
    0xa326e60 "int __len")
  (DeclStmt 0xa326f38 <line:988:2, col:17>
    0xa326f00 "char __fbuf[16]")
  (CallExpr 0xa327028 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0xa327018 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa326f70 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0xa2ea920 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0xa327050 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0xa326f90 <col:30> 'class std::ios_base' lvalue ParmVar 0xa3264f0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa327060 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa326fa8 <col:36> 'char [16]' lvalue Var 0xa326f00 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0xa327070 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0xa326fc0 <col:44> 'char' lvalue ParmVar 0xa326570 '__mod' 'char')))
  (DeclStmt 0xa327120 <line:994:2, col:34>
    0xa327090 "int __cs_size =
      (BinaryOperator 0xa327108 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0xa3270f8 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0xa3270c4 <col:18> 'const int' lvalue Var 0xa326d10 '__max_digits' 'const int'))
        (IntegerLiteral 0xa3270e0 <col:33> 'int' 3))")
  (DeclStmt 0xa327220 <line:995:2, col:62>
    0xa327140 "char *__cs =
      (CXXStaticCastExpr 0xa327208 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0xa3271b8 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0xa3271a8 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa327174 <col:34> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0xa3271e8 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa3271d8 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0xa32718c <col:51> 'int' lvalue Var 0xa327090 '__cs_size' 'int')))))")
  (BinaryOperator 0xa327378 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0xa327230 <line:996:2> 'int' lvalue Var 0xa326e60 '__len' 'int')
    (CallExpr 0xa327340 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0xa327260 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0xa0e29d0 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0xa3272a8 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa327298 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa327280 <col:32> '__c_locale (void)' lvalue CXXMethod 0xa2593f0 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0xa3272c4 <col:51> 'char *' lvalue Var 0xa327140 '__cs' 'char *')
      (DeclRefExpr 0xa3272dc <col:57> 'int' lvalue Var 0xa327090 '__cs_size' 'int')
      (DeclRefExpr 0xa3272f4 <line:997:11> 'char [16]' lvalue Var 0xa326f00 '__fbuf' 'char [16]')
      (DeclRefExpr 0xa32730c <col:19> 'const streamsize':'const int' lvalue Var 0xa326b00 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0xa327324 <col:27> '_ValueT' lvalue ParmVar 0xa3265b0 '__v' '_ValueT')))
  (IfStmt 0xa3276d8 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0xa3273e0 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0xa3273c0 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0xa327390 <col:6> 'int' lvalue Var 0xa326e60 '__len' 'int'))
      (ImplicitCastExpr 0xa3273d0 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0xa3273a8 <col:15> 'int' lvalue Var 0xa327090 '__cs_size' 'int')))
    (CompoundStmt 0xa3276b8 <line:1001:4, line:1006:4>
      (BinaryOperator 0xa327468 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0xa3273f8 <col:6> 'int' lvalue Var 0xa327090 '__cs_size' 'int')
        (BinaryOperator 0xa327450 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0xa327440 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0xa327410 <col:18> 'int' lvalue Var 0xa326e60 '__len' 'int'))
          (IntegerLiteral 0xa327428 <col:26> 'int' 1)))
      (BinaryOperator 0xa327540 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0xa327480 <col:6> 'char *' lvalue Var 0xa327140 '__cs' 'char *')
        (CXXStaticCastExpr 0xa327528 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0xa3274d8 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0xa3274c8 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa327498 <col:32> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0xa327508 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa3274f8 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0xa3274b0 <col:49> 'int' lvalue Var 0xa327090 '__cs_size' 'int'))))))
      (BinaryOperator 0xa3276a0 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0xa327558 <line:1004:6> 'int' lvalue Var 0xa326e60 '__len' 'int')
        (CallExpr 0xa327668 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0xa327588 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0xa0e29d0 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0xa3275d0 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0xa3275c0 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3275a8 <col:36> '__c_locale (void)' lvalue CXXMethod 0xa2593f0 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0xa3275ec <col:55> 'char *' lvalue Var 0xa327140 '__cs' 'char *')
          (DeclRefExpr 0xa327604 <col:61> 'int' lvalue Var 0xa327090 '__cs_size' 'int')
          (DeclRefExpr 0xa32761c <line:1005:8> 'char [16]' lvalue Var 0xa326f00 '__fbuf' 'char [16]')
          (DeclRefExpr 0xa327634 <col:16> 'const streamsize':'const int' lvalue Var 0xa326b00 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0xa32764c <col:24> '_ValueT' lvalue ParmVar 0xa3265b0 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0xa327940 <line:1028:2, col:65>
    0xa3277c0 "const ctype<_CharT> &__ctype =
      (CallExpr 0xa327920 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa3278a0 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
        (DeclRefExpr 0xa327908 <col:59> 'const class std::locale' lvalue Var 0xa326980 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa327a98 <line:1030:2, line:1031:22>
    0xa327980 "_CharT *__ws =
      (CXXStaticCastExpr 0xa327a80 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa327a50 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0xa327a40 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3279b4 <col:38> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa327a28 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa3279d8 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa327a18 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa327a08 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa3279f0 <col:15> 'int' lvalue Var 0xa326e60 '__len' 'int'))))))")
  (CallExpr 0xa327b90 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa327ac0 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0xa327aa8 <col:2> 'const ctype<_CharT>' lvalue Var 0xa3277c0 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0xa327af4 <col:16> 'char *' lvalue Var 0xa327140 '__cs' 'char *')
    (BinaryOperator 0xa327b60 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0xa327b40 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa327b0c <col:22> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))
      (ImplicitCastExpr 0xa327b50 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0xa327b24 <col:29> 'int' lvalue Var 0xa326e60 '__len' 'int')))
    (DeclRefExpr 0xa327b78 <col:36> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *'))
  (DeclStmt 0xa327c20 <line:1035:2, col:18>
    0xa327bd0 "_CharT *__wp =
      (IntegerLiteral 0xa327c08 <col:17> 'int' 0)")
  (DeclStmt 0xa327e20 <line:1036:2, col:61>
    0xa327c40 "const char *__p =
      (CallExpr 0xa327da8 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0xa327d98 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa327cf0 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0xa0b98e0 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0xa327de0 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0xa327dd0 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa327d10 <col:44> 'char *' lvalue Var 0xa327140 '__cs' 'char *')))
        (ImplicitCastExpr 0xa327e00 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa327df0 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0xa327d28 <col:50> 'int' lvalue Var 0xa326e60 '__len' 'int')))
        (MaterializeTemporaryExpr 0xa327e10 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0xa327d40 <col:57> 'char'46)))")
  (IfStmt 0xa328050 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa327e58 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa327e48 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa327e30 <col:6> 'const char *' lvalue Var 0xa327c40 '__p' 'const char *')))
    (CompoundStmt 0xa328038 <line:1038:4, line:1041:4>
      (BinaryOperator 0xa327f88 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0xa327e64 <col:6> '_CharT *' lvalue Var 0xa327bd0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa327f60 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0xa327f18 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa327e7c <col:13> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *')
          (ParenExpr 0xa327f00 <col:20, col:31> 'int'
            (BinaryOperator 0xa327ee8 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0xa327ec8 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa327e94 <col:21> 'const char *' lvalue Var 0xa327c40 '__p' 'const char *'))
              (ImplicitCastExpr 0xa327ed8 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0xa327eac <col:27> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))))))
      (BinaryOperator 0xa328020 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0xa327fb8 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa327fa0 <col:7> '_CharT *' lvalue Var 0xa327bd0 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0xa327fe8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa327fcc <col:14> 'const __cache_type *' lvalue Var 0xa326a60 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa328d50 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0xa3284b8 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa328088 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0xa32806c <col:6> 'const __cache_type *' lvalue Var 0xa326a60 '__lc' 'const __cache_type *'))
      (ParenExpr 0xa3284a0 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0xa328488 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0xa328130 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0xa3280bc <col:10> '_CharT *' lvalue Var 0xa327bd0 '__wp' '_CharT *')
            (BinaryOperator 0xa328118 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0xa328108 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0xa3280d4 <col:18> 'int' lvalue Var 0xa326e60 '__len' 'int'))
              (IntegerLiteral 0xa3280f0 <col:26> 'int' 3)))
          (ParenExpr 0xa328470 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0xa328458 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0xa328388 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0xa3282b8 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0xa3281e8 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0xa3281c8 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa3281b8 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa328188 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0xa328178 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa328148 <col:32> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))
                          (IntegerLiteral 0xa328160 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0xa3281d8 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0xa3281a0 <col:43> 'char'57)))
                  (BinaryOperator 0xa3282a0 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0xa328280 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa328270 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa328240 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0xa328230 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa328200 <col:50> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))
                          (IntegerLiteral 0xa328218 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0xa328290 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0xa328258 <col:61> 'char'57))))
                (BinaryOperator 0xa328370 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0xa328350 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa328340 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0xa328310 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0xa328300 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0xa3282d0 <col:14> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))
                        (IntegerLiteral 0xa3282e8 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0xa328360 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0xa328328 <col:25> 'char'48))))
              (BinaryOperator 0xa328440 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0xa328420 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa328410 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0xa3283e0 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0xa3283d0 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0xa3283a0 <col:32> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))
                      (IntegerLiteral 0xa3283b8 <col:37> 'int' 2))))
                (ImplicitCastExpr 0xa328430 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0xa3283f8 <col:43> 'char'48))))))))
    (CompoundStmt 0xa328d28 <line:1049:4, line:1069:4>
      (DeclStmt 0xa328638 <line:1052:6, line:1053:24>
        0xa3284e0 "_CharT *__ws2 =
          (CXXStaticCastExpr 0xa328620 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa3285f0 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0xa3285e0 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa328514 <col:43> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa3285c8 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0xa328588 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa328538 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa328578 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0xa328568 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa328550 <col:13> 'int' lvalue Var 0xa326e60 '__len' 'int'))))
                (ImplicitCastExpr 0xa3285b8 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa3285a0 <col:21> 'int' 2)))))")
      (DeclStmt 0xa3286a0 <line:1055:6, col:26>
        0xa328650 "streamsize __off =
          (IntegerLiteral 0xa328688 <col:25> 'int' 0)")
      (IfStmt 0xa328998 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0xa328820 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0xa328750 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0xa328730 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa328720 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa3286f0 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0xa3286e0 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa3286b0 <col:10> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))
                  (IntegerLiteral 0xa3286c8 <col:15> 'int' 0))))
            (ImplicitCastExpr 0xa328740 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0xa328708 <col:21> 'char'45)))
          (BinaryOperator 0xa328808 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa3287e8 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3287d8 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa3287a8 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0xa328798 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa328768 <col:28> 'char *' lvalue Var 0xa327140 '__cs' 'char *'))
                  (IntegerLiteral 0xa328780 <col:33> 'int' 0))))
            (ImplicitCastExpr 0xa3287f8 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0xa3287c0 <col:39> 'char'43))))
        (CompoundStmt 0xa328978 <line:1057:8, line:1061:8>
          (BinaryOperator 0xa328868 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0xa328838 <col:3> 'streamsize':'int' lvalue Var 0xa328650 '__off' 'streamsize':'int')
            (IntegerLiteral 0xa328850 <col:11> 'int' 1))
          (BinaryOperator 0xa328910 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0xa3288b0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa328880 <col:3> '_CharT *' lvalue Var 0xa3284e0 '__ws2' '_CharT *')
              (IntegerLiteral 0xa328898 <col:9> 'int' 0))
            (ArraySubscriptExpr 0xa3288f8 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0xa3288c4 <col:14> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *')
              (IntegerLiteral 0xa3288e0 <col:19> 'int' 0)))
          (CompoundAssignOperator 0xa328958 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa328928 <col:3> 'int' lvalue Var 0xa326e60 '__len' 'int')
            (IntegerLiteral 0xa328940 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0xa328c48 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0xa3289c8 <line:1063:6> '<bound member function type>' ->_M_group_float 0xa3259a0
          (CXXThisExpr 0xa3289b8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa328a00 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0xa3289e8 <col:21> 'const __cache_type *' lvalue Var 0xa326a60 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa328a50 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0xa328a34 <col:40> 'const __cache_type *' lvalue Var 0xa326a60 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa328aa0 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0xa328a84 <col:7> 'const __cache_type *' lvalue Var 0xa326a60 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa328ad4 <col:31> '_CharT *' lvalue Var 0xa327bd0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa328b68 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa328b20 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa328aec <col:37> '_CharT *' lvalue Var 0xa3284e0 '__ws2' '_CharT *')
          (DeclRefExpr 0xa328b04 <col:45> 'streamsize':'int' lvalue Var 0xa328650 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0xa328c08 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0xa328bc0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa328b8c <col:7> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *')
          (DeclRefExpr 0xa328ba4 <col:14> 'streamsize':'int' lvalue Var 0xa328650 '__off' 'streamsize':'int'))
        (DeclRefExpr 0xa328c2c <col:21> 'int' lvalue Var 0xa326e60 '__len' 'int'))
      (CompoundAssignOperator 0xa328cc0 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa328c80 <col:6> 'int' lvalue Var 0xa326e60 '__len' 'int')
        (ImplicitCastExpr 0xa328cb0 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa328c98 <col:15> 'streamsize':'int' lvalue Var 0xa328650 '__off' 'streamsize':'int')))
      (BinaryOperator 0xa328d10 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa328ce0 <col:6> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *')
        (DeclRefExpr 0xa328cf8 <col:13> '_CharT *' lvalue Var 0xa3284e0 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0xa328e60 <line:1072:2, col:37>
    0xa328d80 "const streamsize __w =
      (CXXMemberCallExpr 0xa328e30 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa328e0c <col:25, col:30> '<bound member function type>' .width 0xa27f770
          (ImplicitCastExpr 0xa328e50 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa328db4 <col:25> 'class std::ios_base' lvalue ParmVar 0xa3264f0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa329198 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0xa328ee0 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa328ed0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa328e70 <col:6> 'const streamsize':'const int' lvalue Var 0xa328d80 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa328eb8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa328ea8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa328e88 <col:36> 'int' lvalue Var 0xa326e60 '__len' 'int'))))
    (CompoundStmt 0xa329178 <line:1074:4, line:1079:4>
      (DeclStmt 0xa329028 <line:1075:6, line:1076:18>
        0xa328f10 "_CharT *__ws3 =
          (CXXStaticCastExpr 0xa329010 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa328fe0 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0xa328fd0 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa328f44 <col:43> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa328fb8 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa328f68 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa328fa8 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa328f98 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa328f80 <col:13> 'const streamsize':'const int' lvalue Var 0xa328d80 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa3290f8 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0xa329048 <col:6> '<bound member function type>' ->_M_pad 0xa31e360
          (CXXThisExpr 0xa329038 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa329068 <col:13> '_CharT' lvalue ParmVar 0xa326530 '__fill' '_CharT')
        (DeclRefExpr 0xa329080 <col:21> 'const streamsize':'const int' lvalue Var 0xa328d80 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa329098 <col:26> 'class std::ios_base' lvalue ParmVar 0xa3264f0 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa3290b0 <col:32> '_CharT *' lvalue Var 0xa328f10 '__ws3' '_CharT *')
        (DeclRefExpr 0xa3290c8 <col:39> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *')
        (DeclRefExpr 0xa3290e0 <col:45> 'int' lvalue Var 0xa326e60 '__len' 'int'))
      (BinaryOperator 0xa329160 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa32912c <col:6> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *')
        (DeclRefExpr 0xa329144 <col:13> '_CharT *' lvalue Var 0xa328f10 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa329248 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa329228 <col:2, col:7> '<bound member function type>' .width 0xa27f830
      (DeclRefExpr 0xa3291b4 <col:2> 'class std::ios_base' lvalue ParmVar 0xa3264f0 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa329210 <col:13> 'int' 0))
  (ReturnStmt 0xa329328 <line:1084:2, col:38>
    (CallExpr 0xa329300 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa329280 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d30e0 0xa2d34a0)
      (DeclRefExpr 0xa3292b8 <col:22> '_OutIter' lvalue ParmVar 0xa3264a0 '__s' '_OutIter')
      (DeclRefExpr 0xa3292d0 <col:27> '_CharT *' lvalue Var 0xa327980 '__ws' '_CharT *')
      (DeclRefExpr 0xa3292e8 <col:33> 'int' lvalue Var 0xa326e60 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0xa32b060 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0xa329970 <line:1092:7, col:54>
    0xa329890 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa329940 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa32991c <col:42, col:47> '<bound member function type>' .flags 0xa27c160
          (ImplicitCastExpr 0xa329960 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa3298c4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa3296a0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa32b018 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0xa329a88 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0xa329a78 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0xa329a48 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa329a20 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa329a10 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3299f8 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa3299d8 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa329980 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa329890 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa3299e8 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3299b4 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa2799f0 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0xa329a60 <col:46> 'int' 0))
    (CompoundStmt 0xa329c40 <line:1094:9, line:1097:9>
      (DeclStmt 0xa329b20 <line:1095:11, col:31>
        0xa329ab0 "const long __l =
          (ImplicitCastExpr 0xa329b10 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0xa329b00 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa329ae4 <col:28> '_Bool' lvalue ParmVar 0xa329720 '__v' '_Bool')))")
      (BinaryOperator 0xa329c28 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa329b30 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa329bf8 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa329b58 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa329b94 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa329bac <col:36> 'class std::ios_base' lvalue ParmVar 0xa3296a0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa329bc4 <col:42> 'char_type':'_CharT' lvalue ParmVar 0xa3296e0 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0xa329bdc <col:50> 'const long' lvalue Var 0xa329ab0 '__l' 'const long'))))
    (CompoundStmt 0xa32afe0 <line:1099:9, line:1135:2>
      (DeclStmt 0xa329d30 <line:1100:4, col:62>
        0xa329d00 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa329e38 <line:1101:4, col:34>
        0xa329e00 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa329f00 <line:1102:4, col:42>
        0xa329e60 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa329ed0 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa329eac <col:26, col:31> '<bound member function type>' ._M_getloc 0xa27fb50
              (ImplicitCastExpr 0xa329ef0 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa329e94 <col:26> 'class std::ios_base' lvalue ParmVar 0xa3296a0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa329fc8 <line:1103:4, col:42>
        0xa329f40 "const __cache_type *__lc =
          (CallExpr 0xa329fa8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa329f74 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa329e00 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa329f8c <col:36> 'const class std::locale' lvalue Var 0xa329e60 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa32a130 <line:1105:4, line:1106:51>
        0xa32a010 "const _CharT *__name =
          (ConditionalOperator 0xa32a110 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0xa32a100 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa32a044 <col:27> '_Bool' lvalue ParmVar 0xa329720 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa32a078 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa32a05c <col:33> 'const __cache_type *' lvalue Var 0xa329f40 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa32a0c8 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa32a0ac <col:33> 'const __cache_type *' lvalue Var 0xa329f40 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa32a270 <line:1107:4, line:1108:45>
        0xa32a150 "int __len =
          (ConditionalOperator 0xa32a250 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0xa32a240 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa32a184 <col:16> '_Bool' lvalue ParmVar 0xa329720 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa32a1b8 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa32a19c <col:22> 'const __cache_type *' lvalue Var 0xa329f40 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa32a208 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa32a1ec <col:22> 'const __cache_type *' lvalue Var 0xa329f40 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa32a370 <line:1110:4, col:39>
        0xa32a290 "const streamsize __w =
          (CXXMemberCallExpr 0xa32a340 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0xa32a31c <col:27, col:32> '<bound member function type>' .width 0xa27f770
              (ImplicitCastExpr 0xa32a360 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa32a2c4 <col:27> 'class std::ios_base' lvalue ParmVar 0xa3296a0 '__io' 'class std::ios_base &'))))")
      (IfStmt 0xa32ae20 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0xa32a3f0 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0xa32a3e0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa32a380 <col:8> 'const streamsize':'const int' lvalue Var 0xa32a290 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0xa32a3c8 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0xa32a3b8 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0xa32a398 <col:38> 'int' lvalue Var 0xa32a150 '__len' 'int'))))
        (CompoundStmt 0xa32adf8 <line:1112:6, line:1132:6>
          (DeclStmt 0xa32a4b0 <line:1113:8, col:45>
            0xa32a410 "const streamsize __plen =
              (BinaryOperator 0xa32a498 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0xa32a478 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa32a444 <col:34> 'const streamsize':'const int' lvalue Var 0xa32a290 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0xa32a488 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa32a45c <col:40> 'int' lvalue Var 0xa32a150 '__len' 'int')))")
          (DeclStmt 0xa32a608 <line:1114:8, line:1116:18>
            0xa32a4f0 "_CharT *__ps =
              (CXXStaticCastExpr 0xa32a5f0 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0xa32a5c0 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0xa32a5b0 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa32a524 <col:26> 'void *(unsigned int)' lvalue Function 0xa321110 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0xa32a598 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0xa32a548 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0xa32a588 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0xa32a578 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa32a560 <col:10> 'const streamsize':'const int' lvalue Var 0xa32a410 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0xa32a750 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa32a6d0 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0xa32a704 <col:36> '_CharT *' lvalue Var 0xa32a4f0 '__ps' '_CharT *')
            (DeclRefExpr 0xa32a71c <col:42> 'const streamsize':'const int' lvalue Var 0xa32a410 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0xa32a734 <col:50> 'char_type':'_CharT' lvalue ParmVar 0xa3296e0 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0xa32a808 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0xa32a7e8 <col:8, col:13> '<bound member function type>' .width 0xa27f830
              (DeclRefExpr 0xa32a778 <col:8> 'class std::ios_base' lvalue ParmVar 0xa3296a0 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0xa32a7d0 <col:19> 'int' 0))
          (IfStmt 0xa32adb0 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0xa32a978 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0xa32a958 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0xa32a8f0 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0xa32a8c8 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa32a8b8 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa32a8a0 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa32a880 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa32a828 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa329890 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa32a890 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa32a85c <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0xa32a968 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa32a948 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa32a924 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279bd0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0xa32aba0 <line:1122:3, line:1125:3>
              (BinaryOperator 0xa32aa98 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa32a9bc <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa32aa70 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa32a9f0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d30e0 0xa2d34a0)
                  (DeclRefExpr 0xa32aa28 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa32aa40 <col:29> 'const _CharT *' lvalue Var 0xa32a010 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa32aa58 <col:37> 'int' lvalue Var 0xa32a150 '__len' 'int')))
              (BinaryOperator 0xa32ab88 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa32aab0 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa32ab60 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa32aae0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d30e0 0xa2d34a0)
                  (DeclRefExpr 0xa32ab18 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa32ab30 <col:29> '_CharT *' lvalue Var 0xa32a4f0 '__ps' '_CharT *')
                  (DeclRefExpr 0xa32ab48 <col:35> 'const streamsize':'const int' lvalue Var 0xa32a410 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0xa32ad98 <line:1127:3, line:1130:3>
              (BinaryOperator 0xa32ac90 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa32abb8 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa32ac68 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa32abe8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d30e0 0xa2d34a0)
                  (DeclRefExpr 0xa32ac20 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa32ac38 <col:29> '_CharT *' lvalue Var 0xa32a4f0 '__ps' '_CharT *')
                  (DeclRefExpr 0xa32ac50 <col:35> 'const streamsize':'const int' lvalue Var 0xa32a410 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0xa32ad80 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa32aca8 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa32ad58 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa32acd8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d30e0 0xa2d34a0)
                  (DeclRefExpr 0xa32ad10 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa32ad28 <col:29> 'const _CharT *' lvalue Var 0xa32a010 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa32ad40 <col:37> 'int' lvalue Var 0xa32a150 '__len' 'int')))))
          (ReturnStmt 0xa32ade8 <line:1131:8, col:15>
            (DeclRefExpr 0xa32adcc <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0xa32aed0 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0xa32aeb0 <col:4, col:9> '<bound member function type>' .width 0xa27f830
          (DeclRefExpr 0xa32ae3c <col:4> 'class std::ios_base' lvalue ParmVar 0xa3296a0 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0xa32ae98 <col:15> 'int' 0))
      (BinaryOperator 0xa32afc8 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa32aef0 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa32afa0 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa32af20 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2d30e0 0xa2d34a0)
          (DeclRefExpr 0xa32af58 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa32af70 <col:28> 'const _CharT *' lvalue Var 0xa32a010 '__name' 'const _CharT *')
          (DeclRefExpr 0xa32af88 <col:36> 'int' lvalue Var 0xa32a150 '__len' 'int')))))
  (ReturnStmt 0xa32b050 <line:1136:7, col:14>
    (DeclRefExpr 0xa32b034 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa329650 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0xa32b648 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0xa32b638 <col:7, col:60>
    (CallExpr 0xa32b608 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0xa32b550 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa32b58c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa32b320 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa32b5a4 <col:35> 'class std::ios_base' lvalue ParmVar 0xa32b370 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa32b5bc <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa32b3b0 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0xa32b5e0 <col:49, col:54> 'char')
      (DeclRefExpr 0xa32b5f0 <col:57> 'double' lvalue ParmVar 0xa32b400 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0xa32bc28 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0xa32bc18 <col:7, col:57>
    (CallExpr 0xa32bbe8 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0xa32bb30 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa32bb6c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa32b900 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa32bb84 <col:35> 'class std::ios_base' lvalue ParmVar 0xa32b950 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa32bb9c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa32b990 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0xa32bbb8 <col:49> 'char'76)
      (DeclRefExpr 0xa32bbcc <col:54> 'long double' lvalue ParmVar 0xa32b9e0 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0xa32d1f8 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0xa32c950 <line:1166:7, col:54>
    0xa32c870 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa32c920 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa32c8fc <col:42, col:47> '<bound member function type>' .flags 0xa27c160
          (ImplicitCastExpr 0xa32c940 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa32c8a4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa32c670 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa32cb20 <line:1167:7, line:1168:29>
    0xa32c990 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa32cb00 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa32caf0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa32cad8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa273580 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0xa32cac0 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa32ca98 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa32ca88 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa32ca70 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa273140 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa32ca50 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa32c9f0 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa32ca60 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa32ca2c <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f30 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0xa32cdc0 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa32cd9c <col:7, col:12> '<bound member function type>' .flags 0xa27c250
      (DeclRefExpr 0xa32cb30 <col:7> 'class std::ios_base' lvalue ParmVar 0xa32c670 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa32cd78 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa32cd68 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa32cd50 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa273140 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa32cc28 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa32cc00 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa32cbf0 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa32cbd8 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa32cbb8 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa32cb88 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa32c870 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa32cbc8 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa32cba0 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa32c990 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0xa32cd38 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa32cd10 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa32cd00 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa32cce8 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa273140 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa32ccc8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa32cc68 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa32ccd8 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa32cca4 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279d50 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0xa32cfb0 <line:1171:7, line:1173:57>
    0xa32cf80 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0xa32d0f8 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0xa32cfc0 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0xa32c620 '__s' 'iter_type':'_OutIter')
    (CallExpr 0xa32d0c8 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0xa32cfe8 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa32d024 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0xa32c620 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa32d03c <col:32> 'class std::ios_base' lvalue ParmVar 0xa32c670 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa32d054 <col:38> 'char_type':'_CharT' lvalue ParmVar 0xa32c6b0 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0xa32d0b0 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0xa32d0a0 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0xa32d080 <col:37> 'const void *' lvalue ParmVar 0xa32c700 '__v' 'const void *')))))
  (CXXMemberCallExpr 0xa32d1a0 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa32d180 <col:7, col:12> '<bound member function type>' .flags 0xa27c250
      (DeclRefExpr 0xa32d110 <col:7> 'class std::ios_base' lvalue ParmVar 0xa32c670 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa32d1c0 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa32d168 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa32c870 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa32d1e8 <line:1178:7, col:14>
    (DeclRefExpr 0xa32d1cc <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa32c620 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0xa32f080 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0xa32d890 <line:1196:7, col:69>
    0xa32d7c0 "const size_t __plen =
      (CXXStaticCastExpr 0xa32d878 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0xa32d868 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0xa32d848 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0xa32d828 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa32d7f4 <col:49> 'streamsize':'int' lvalue ParmVar 0xa32d630 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0xa32d838 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa32d80c <col:60> 'streamsize':'int' lvalue ParmVar 0xa32d670 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0xa32da50 <line:1197:7, col:79>
    0xa32d8d0 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0xa32da28 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa32da18 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa32da00 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa272f10 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa32d980 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa32d95c <col:43, col:48> '<bound member function type>' .flags 0xa27c160
            (ImplicitCastExpr 0xa32d9a0 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa32d904 <col:43> 'class std::ios_base' lvalue ParmVar 0xa32d4d0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa32d9f0 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa32d9cc <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279f90 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0xa32dd88 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0xa32daf8 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa32dad8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa32dab8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa32da60 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa32d8d0 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa32dae8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa32dac8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa32da94 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279bd0 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa32dd68 <line:1201:2, line:1205:2>
      (CallExpr 0xa32dbe8 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa32db78 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0xa32db9c <col:18> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
        (DeclRefExpr 0xa32dbb4 <col:26> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
        (DeclRefExpr 0xa32dbcc <col:34> 'streamsize':'int' lvalue ParmVar 0xa32d670 '__oldlen' 'streamsize':'int'))
      (CallExpr 0xa32dd30 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa32dc38 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa32dcd8 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa32dc90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (DeclRefExpr 0xa32dc5c <col:20> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
          (DeclRefExpr 0xa32dc74 <col:29> 'streamsize':'int' lvalue ParmVar 0xa32d670 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0xa32dcfc <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa32d7c0 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0xa32dd14 <col:47> '_CharT' lvalue ParmVar 0xa32d510 '__fill' '_CharT'))
      (ReturnStmt 0xa32dd58 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0xa32de10 <line:1207:7, col:23>
    0xa32ddb0 "size_t __mod =
      (ImplicitCastExpr 0xa32de00 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa32dde8 <col:22> 'int' 0))")
  (IfStmt 0xa32ed70 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0xa32deb8 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa32de98 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa32de78 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa32de20 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa32d8d0 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa32dea8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa32de88 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa32de54 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b70 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa32ed50 <line:1209:2, line:1234:2>
      (DeclStmt 0xa32dfb0 <line:1213:11, col:49>
        0xa32df10 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa32df80 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0xa32df5c <col:33, col:38> '<bound member function type>' ._M_getloc 0xa27fb50
              (ImplicitCastExpr 0xa32dfa0 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa32df44 <col:33> 'class std::ios_base' lvalue ParmVar 0xa32d4d0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa32e210 <line:1214:4, col:67>
        0xa32e090 "const ctype<_CharT> &__ctype =
          (CallExpr 0xa32e1f0 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0xa32e170 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
            (DeclRefExpr 0xa32e1d8 <col:61> 'const class std::locale' lvalue Var 0xa32df10 '__loc' 'const class std::locale &'))")
      (IfStmt 0xa32ed30 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0xa32e4d0 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa32e350 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0xa32e2f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (CallExpr 0xa32e288 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa32e238 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa32e220 <col:8> 'const ctype<_CharT>' lvalue Var 0xa32e090 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa32e270 <col:22> 'char'45))
            (ArraySubscriptExpr 0xa32e2d8 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa32e2a8 <col:30> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa32e2c0 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0xa32e4a8 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0xa32e448 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (CallExpr 0xa32e3e0 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa32e390 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0xa32e374 <col:11> 'const ctype<_CharT>' lvalue Var 0xa32e090 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa32e3c8 <col:25> 'char'43))
            (ArraySubscriptExpr 0xa32e430 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0xa32e400 <col:33> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa32e418 <col:40> 'int' 0))))
        (CompoundStmt 0xa32e618 <line:1218:6, line:1222:6>
          (BinaryOperator 0xa32e578 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0xa32e518 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa32e4e8 <col:8> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
              (IntegerLiteral 0xa32e500 <col:15> 'int' 0))
            (ArraySubscriptExpr 0xa32e560 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa32e52c <col:20> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa32e548 <col:27> 'int' 0)))
          (BinaryOperator 0xa32e5d0 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0xa32e590 <col:8> 'size_t':'unsigned int' lvalue Var 0xa32ddb0 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0xa32e5c0 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa32e5a8 <col:16> 'int' 1)))
          (UnaryOperator 0xa32e600 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa32e5e8 <col:10> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')))
        (IfStmt 0xa32ed10 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0xa32eae0 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0xa32e7e8 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa32e768 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa32e708 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                (CallExpr 0xa32e6a0 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa32e650 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0xa32e634 <col:13> 'const ctype<_CharT>' lvalue Var 0xa32e090 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0xa32e688 <col:27> 'char'48))
                (ArraySubscriptExpr 0xa32e6f0 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa32e6c0 <col:35> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
                  (IntegerLiteral 0xa32e6d8 <col:42> 'int' 0)))
              (BinaryOperator 0xa32e7d0 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0xa32e7c0 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa32e78c <col:9> 'streamsize':'int' lvalue ParmVar 0xa32d670 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0xa32e7a8 <col:20> 'int' 1)))
            (ParenExpr 0xa32eac8 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0xa32eab0 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0xa32e930 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0xa32e8d0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (CallExpr 0xa32e868 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa32e818 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa32e800 <col:10> 'const ctype<_CharT>' lvalue Var 0xa32e090 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa32e850 <col:24> 'char'120))
                  (ArraySubscriptExpr 0xa32e8b8 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa32e888 <col:32> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa32e8a0 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0xa32ea88 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0xa32ea28 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (CallExpr 0xa32e9c0 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa32e970 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0xa32e954 <col:13> 'const ctype<_CharT>' lvalue Var 0xa32e090 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa32e9a8 <col:27> 'char'88))
                  (ArraySubscriptExpr 0xa32ea10 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0xa32e9e0 <col:35> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa32e9f8 <col:42> 'int' 1))))))
          (CompoundStmt 0xa32ecf0 <line:1227:6, line:1232:6>
            (BinaryOperator 0xa32eb88 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa32eb28 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa32eaf8 <col:8> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
                (IntegerLiteral 0xa32eb10 <col:15> 'int' 0))
              (ArraySubscriptExpr 0xa32eb70 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa32eb3c <col:20> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa32eb58 <col:27> 'int' 0)))
            (BinaryOperator 0xa32ec30 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa32ebd0 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa32eba0 <col:8> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
                (IntegerLiteral 0xa32ebb8 <col:15> 'int' 1))
              (ArraySubscriptExpr 0xa32ec18 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa32ebe4 <col:20> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa32ec00 <col:27> 'int' 1)))
            (BinaryOperator 0xa32ec88 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0xa32ec48 <col:8> 'size_t':'unsigned int' lvalue Var 0xa32ddb0 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0xa32ec78 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa32ec60 <col:16> 'int' 2)))
            (CompoundAssignOperator 0xa32ecd0 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa32eca0 <col:8> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
              (IntegerLiteral 0xa32ecb8 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0xa32ee28 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa32edb8 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0xa32eddc <col:23> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
    (DeclRefExpr 0xa32edf4 <col:31> 'const size_t':'const unsigned int' lvalue Var 0xa32d7c0 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0xa32ee0c <col:39> '_CharT' lvalue ParmVar 0xa32d510 '__fill' '_CharT'))
  (CallExpr 0xa32f058 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa32ee78 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0xa32ef18 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa32eed0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
      (DeclRefExpr 0xa32ee9c <col:21> '_CharT *' lvalue ParmVar 0xa32d580 '__news' '_CharT *')
      (DeclRefExpr 0xa32eeb4 <col:30> 'const size_t':'const unsigned int' lvalue Var 0xa32d7c0 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0xa32efb8 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa32ef70 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
      (DeclRefExpr 0xa32ef3c <col:38> 'const _CharT *' lvalue ParmVar 0xa32d5f0 '__olds' 'const _CharT *')
      (DeclRefExpr 0xa32ef54 <col:47> 'size_t':'unsigned int' lvalue Var 0xa32ddb0 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0xa32f040 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0xa32f030 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa32f010 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa32efdc <col:54> 'streamsize':'int' lvalue ParmVar 0xa32d670 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0xa32f020 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa32eff4 <col:65> 'size_t':'unsigned int' lvalue Var 0xa32ddb0 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0xa3303a0 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0xa32f4a0 <line:1245:7, col:23>
    0xa32f440 "size_t __idx =
      (ImplicitCastExpr 0xa32f490 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa32f478 <col:22> 'int' 0))")
  (DeclStmt 0xa32f520 <line:1246:7, col:23>
    0xa32f4c0 "size_t __ctr =
      (ImplicitCastExpr 0xa32f510 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa32f4f8 <col:22> 'int' 0))")
  (WhileStmt 0xa32fb00 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0xa32f908 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0xa32f788 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa32f670 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa32f628 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (CXXOperatorCallExpr 0xa32f598 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa32f560 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (DeclRefExpr 0xa32f530 <col:14> 'const _CharT *' lvalue ParmVar 0xa32f2d0 '__last' 'const _CharT *')
            (DeclRefExpr 0xa32f548 <col:23> 'const _CharT *' lvalue ParmVar 0xa32f280 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0xa32f610 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0xa32f5f0 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa32f5bc <col:33> 'const char *' lvalue ParmVar 0xa32f1d0 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0xa32f600 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa32f5d4 <col:40> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0xa32f770 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0xa32f760 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0xa32f730 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0xa32f720 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0xa32f710 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0xa32f6e8 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0xa32f6c8 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0xa32f694 <col:35> 'const char *' lvalue ParmVar 0xa32f1d0 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0xa32f6d8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa32f6ac <col:42> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0xa32f748 <col:52> 'int' 0)))
      (BinaryOperator 0xa32f8f0 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0xa32f8c0 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa32f8b0 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0xa32f7f0 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0xa32f7d0 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa32f7a0 <col:10> 'const char *' lvalue ParmVar 0xa32f1d0 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0xa32f7e0 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa32f7b8 <col:17> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0xa32f8e0 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa32f8d0 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0xa32f890 <col:27, col:62> 'const char':'const char' lvalue Var 0xa30be50 '__max' 'const char':'const char')))))
    (CompoundStmt 0xa32fae8 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0xa32f9a0 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa32f920 <col:4> 'const _CharT *' lvalue ParmVar 0xa32f2d0 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0xa32f988 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0xa32f968 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa32f938 <col:14> 'const char *' lvalue ParmVar 0xa32f1d0 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0xa32f978 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa32f950 <col:21> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0xa32fac8 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0xa32fa50 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0xa32fa40 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa32f9c0 <col:4> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0xa32fa28 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0xa32fa08 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa32f9d8 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0xa32f210 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa32fa18 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa32f9f0 <col:22> 'int' 1))))
        (UnaryOperator 0xa32fa80 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa32fa68 <col:28> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0xa32fab0 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa32fa94 <col:38> 'size_t':'unsigned int' lvalue Var 0xa32f4c0 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0xa32fca0 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa32fba0 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa32fb48 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (DeclRefExpr 0xa32fb14 <col:14> 'const _CharT *' lvalue ParmVar 0xa32f280 '__first' 'const _CharT *')
      (DeclRefExpr 0xa32fb2c <col:25> 'const _CharT *' lvalue ParmVar 0xa32f2d0 '__last' 'const _CharT *'))
    (BinaryOperator 0xa32fc88 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa32fc10 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0xa32fbf8 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa32fbc4 <col:3> '_CharT *' lvalue ParmVar 0xa32f140 '__s' '_CharT *')))
      (UnaryOperator 0xa32fc70 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0xa32fc58 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa32fc24 <col:12> 'const _CharT *' lvalue ParmVar 0xa32f280 '__first' 'const _CharT *')))))
  (WhileStmt 0xa330000 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa32fce8 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa32fcd0 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa32fcb4 <col:14> 'size_t':'unsigned int' lvalue Var 0xa32f4c0 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0xa32ffe8 <line:1260:2, line:1264:2>
      (BinaryOperator 0xa32fd70 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa32fd40 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa32fd28 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa32fcf4 <col:5> '_CharT *' lvalue ParmVar 0xa32f140 '__s' '_CharT *')))
        (DeclRefExpr 0xa32fd54 <col:13> '_CharT' lvalue ParmVar 0xa32f180 '__sep' '_CharT'))
      (ForStmt 0xa32ffc0 <line:1262:4, line:1263:23>
        (DeclStmt 0xa32fe40 <line:1262:9, col:33>
          0xa32fd90 "char __i =
            (ImplicitCastExpr 0xa32fe30 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa32fe18 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa32fdf8 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa32fdc4 <col:20> 'const char *' lvalue ParmVar 0xa32f1d0 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa32fe08 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa32fddc <col:27> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa32fea0 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa32fe90 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa32fe80 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa32fe50 <col:35> 'char' lvalue Var 0xa32fd90 '__i' 'char')))
          (IntegerLiteral 0xa32fe68 <col:41> 'int' 0))
        (UnaryOperator 0xa32fed0 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa32feb8 <col:46> 'char' lvalue Var 0xa32fd90 '__i' 'char'))
        (BinaryOperator 0xa32ffa8 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa32ff30 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa32ff18 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa32fee4 <col:7> '_CharT *' lvalue ParmVar 0xa32f140 '__s' '_CharT *')))
          (UnaryOperator 0xa32ff90 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa32ff78 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa32ff44 <col:16> 'const _CharT *' lvalue ParmVar 0xa32f280 '__first' 'const _CharT *')))))))
  (WhileStmt 0xa330360 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa330048 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa330030 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa330014 <col:14> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0xa330348 <line:1267:2, line:1271:2>
      (BinaryOperator 0xa3300d0 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa3300a0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa330088 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa330054 <col:5> '_CharT *' lvalue ParmVar 0xa32f140 '__s' '_CharT *')))
        (DeclRefExpr 0xa3300b4 <col:13> '_CharT' lvalue ParmVar 0xa32f180 '__sep' '_CharT'))
      (ForStmt 0xa330320 <line:1269:4, line:1270:23>
        (DeclStmt 0xa3301a0 <line:1269:9, col:33>
          0xa3300f0 "char __i =
            (ImplicitCastExpr 0xa330190 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa330178 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa330158 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa330124 <col:20> 'const char *' lvalue ParmVar 0xa32f1d0 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa330168 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa33013c <col:27> 'size_t':'unsigned int' lvalue Var 0xa32f440 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa330200 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa3301f0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3301e0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa3301b0 <col:35> 'char' lvalue Var 0xa3300f0 '__i' 'char')))
          (IntegerLiteral 0xa3301c8 <col:41> 'int' 0))
        (UnaryOperator 0xa330230 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa330218 <col:46> 'char' lvalue Var 0xa3300f0 '__i' 'char'))
        (BinaryOperator 0xa330308 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa330290 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa330278 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa330244 <col:7> '_CharT *' lvalue ParmVar 0xa32f140 '__s' '_CharT *')))
          (UnaryOperator 0xa3302f0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa3302d8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa3302a4 <col:16> 'const _CharT *' lvalue ParmVar 0xa32f280 '__first' 'const _CharT *')))))))
  (ReturnStmt 0xa330390 <line:1273:7, col:14>
    (DeclRefExpr 0xa330374 <col:14> '_CharT *' lvalue ParmVar 0xa32f140 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0xa354410 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0xa3543b0 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0xa354318 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa3542fc <col:12> 'const _Facet *' lvalue ParmVar 0xa3541b0 '__f' 'const _Facet *'))
    (CallExpr 0xa354390 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0xa354380 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa354364 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0xa016e50 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa354400 <line:51:7, col:15>
    (UnaryOperator 0xa3543e8 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa3543cc <col:15> 'const _Facet *' lvalue ParmVar 0xa3541b0 '__f' 'const _Facet *'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0xa359360 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0xa359350 <col:9, col:62>
    (ConditionalOperator 0xa359330 <col:16, col:62> '<dependent type>'
      (CallExpr 0xa3592a0 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa359268 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa359258 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa3592c0 <col:31> 'int' 0)
      (CXXConstCastExpr 0xa359318 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0xa3592d8 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0xa3593f0 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0xa3593e0 <col:9, col:27>
    (CallExpr 0xa3593c0 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa359388 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa359378 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0xa359448 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0xa359438 <col:9, col:16>
    (MemberExpr 0xa359418 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa27ae20
      (CXXThisExpr 0xa359408 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0xa359230 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa359214 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0xa3595b0 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0xa359590 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa359470 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa359460 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa359568 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa359528 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa273140 0xa274940 0xa275bb0)
      (CallExpr 0xa3594f0 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3594b8 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa3594a8 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa35950c <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa3557a0 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0xa359788 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0xa359648 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0xa359610 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa278ad0)
    (MemberExpr 0xa3595d8 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa27ae20
      (CXXThisExpr 0xa3595c8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3595f8 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa355860 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0xa359768 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa359730 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa3596f0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (CallExpr 0xa3596b8 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa359680 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa359670 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa3596d4 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa355860 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0xa359758 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0xa3598b8 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0xa3598a8 <col:9, col:35>
    (CXXOperatorCallExpr 0xa359880 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa359820 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
      (CallExpr 0xa3597e8 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3597b0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa3597a0 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa359808 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0xa359a78 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0xa359a68 <col:9, col:46>
    (CXXOperatorCallExpr 0xa359a40 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa3599e8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (ParenExpr 0xa3599b8 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa359990 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa359950 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CallExpr 0xa359918 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3598e0 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa3598d0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa359934 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa3599d0 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0xa359cd8 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0xa359cc8 <col:9, col:58>
    (CXXOperatorCallExpr 0xa359ca0 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0xa359c48 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (ParenExpr 0xa359c18 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0xa359bf0 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa359bb0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CallExpr 0xa359ad8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa359aa0 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa359a90 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0xa359b98 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0xa359b70 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0xa359b60 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa359b48 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa275bb0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0xa359b28 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa359af4 <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0xa359b38 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa359b0c <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0xa359c30 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0xa359e98 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0xa359e88 <col:9, col:46>
    (CXXOperatorCallExpr 0xa359e60 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa359e08 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (ParenExpr 0xa359dd8 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa359db0 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa359d70 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CallExpr 0xa359d38 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa359d00 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa359cf0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa359d54 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa359df0 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0xa359ef0 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0xa359ee0 <col:9, col:16>
    (MemberExpr 0xa359ec0 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0xa27ade0
      (CXXThisExpr 0xa359eb0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0xa35a000 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0xa359f50 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0xa359f18 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa27ade0
      (CXXThisExpr 0xa359f08 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa359f38 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa355ba0 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0xa359fe0 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa359f78 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa359f68 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa359fc0 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa27ae20
      (CXXThisExpr 0xa359fb0 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0xa35a078 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0xa35a0f8 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa35a148 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0xa35a198 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0xa35a1e8 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0xa35a238 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0xa35a328 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0xa35a308 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35a2b8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa35a2a8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35a2ec <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa355d90 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0xa35a340 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0xa35a390 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0xa35a380 <col:9, col:16>
    (MemberExpr 0xa35a360 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0xa355090
      (CXXThisExpr 0xa35a350 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0xa35a5e0 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0xa35a548 <line:300:9, col:55>
    0xa35a4e0 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0xa35a528 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa355090
        (CXXThisExpr 0xa35a518 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa35a5a0 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0xa35a568 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa355090
      (CXXThisExpr 0xa35a558 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35a588 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0xa3581f0 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0xa35a5d0 <line:302:9, col:16>
    (DeclRefExpr 0xa35a5b8 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0xa35a4e0 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0xa35a640 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0xa35a630 <col:9, col:16>
    (MemberExpr 0xa35a610 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0xa355280
      (CXXThisExpr 0xa35a600 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0xa35a848 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0xa35a7e8 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0xa35a698 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa35a688 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0xa35a668 <col:7> '_Bool' lvalue ->_M_fill_init 0xa355120
          (CXXThisExpr 0xa35a658 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0xa35a7d0 <line:364:4, line:367:4>
      (BinaryOperator 0xa35a760 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0xa35a6c0 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0xa3550e0
          (CXXThisExpr 0xa35a6b0 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35a740 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35a6f0 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa35a6e0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0xa35a728 <col:28> 'char'32)))
      (BinaryOperator 0xa35a7b8 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0xa35a788 <col:6> '_Bool' lvalue ->_M_fill_init 0xa355120
          (CXXThisExpr 0xa35a778 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa35a7a8 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0xa35a838 <line:368:2, col:9>
    (MemberExpr 0xa35a818 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0xa3550e0
      (CXXThisExpr 0xa35a808 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0xa35a9a8 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0xa35a910 <line:383:2, col:32>
    0xa35a870 "char_type __old =
      (CallExpr 0xa35a8f0 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35a8b8 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0xa35a8a8 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0xa35a968 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa35a930 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0xa3550e0
      (CXXThisExpr 0xa35a920 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35a950 <col:12> 'char_type':'_CharT' lvalue ParmVar 0xa358a80 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0xa35a998 <line:385:2, col:9>
    (DeclRefExpr 0xa35a980 <col:9> 'char_type':'_CharT' lvalue Var 0xa35a870 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa35aaf0 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0xa35aae0 <col:9, col:60>
    (CallExpr 0xa35aab8 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35aa50 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa35aa30 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa35a9c8 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa3542d0)
          (MemberExpr 0xa35aa10 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa355310
            (CXXThisExpr 0xa35aa00 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa35aa84 <col:47> 'char_type':'_CharT' lvalue ParmVar 0xa358c40 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa35aa9c <col:52> 'char' lvalue ParmVar 0xa358c80 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0xa35ac10 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0xa35ac00 <col:9, col:49>
    (CallExpr 0xa35abe0 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35ab90 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa35ab70 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa35ab08 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa3542d0)
          (MemberExpr 0xa35ab50 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa355310
            (CXXThisExpr 0xa35ab40 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa35abc4 <col:46> 'char' lvalue ParmVar 0xa358d70 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0xa35ac88 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0xa35ace0 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0xa35ad38 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa35ad88 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0xa35add8 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0xa35ae28 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0xa35ae78 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0xa35aee8 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0xa359230 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa359214 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0xa35b730 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0xa35b4e8 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0xa35b380 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35b348 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0xa35b338 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0xa35b3e8 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0xa35b3b0 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa27ae20
        (CXXThisExpr 0xa35b3a0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa35b3d0 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa35b250 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0xa35b4d0 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0xa35b410 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa27ae20
        (CXXThisExpr 0xa35b400 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa35b4a8 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa35b498 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa35b480 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa275bb0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa35b460 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa35b430 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa35b250 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0xa35b470 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa35b448 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0xa35b710 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa35b618 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa35b5d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (CallExpr 0xa35b550 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35b518 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa35b508 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa35b5b8 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35b580 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa35b570 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0xa35b6e0 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0xa35b6d0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa35b6b4 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017750 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa35b700 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa35b6a0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa35b674 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa35c0d8 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0xa35bfd8 <line:55:7, col:61>
    0xa35bf70 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0xa35bfb8 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa355280
        (CXXThisExpr 0xa35bfa8 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa35c030 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa35bff8 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa355280
      (CXXThisExpr 0xa35bfe8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35c018 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa35bbf0 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0xa35c090 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa35c058 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa35c048 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa35c0c8 <line:58:7, col:14>
    (DeclRefExpr 0xa35c0ac <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0xa35bf70 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0xa35db00 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0xa35daa8 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa35c7a8 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa35c750 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (CXXThisExpr 0xa35c6c8 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0xa35c730 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa35c6f0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (DeclRefExpr 0xa35c6d8 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0xa35da48 <line:68:2, line:107:2>
      (DeclStmt 0xa35cbb0 <line:73:4, line:74:69>
        0xa35c7e0 "std::ios_base::_Words *__words =
          (ConditionalOperator 0xa35cb90 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0xa35c8f0 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0xa35c8c8 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa35c880 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
                (CXXDependentScopeMemberExpr 0xa35c830 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa35c814 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0xa35c864 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0xa27b8f0 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0xa35c918 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa27ba20
              (CXXThisExpr 0xa35c908 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0xa35cb50 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0xa35c950 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0xa35c938 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0xa35cc58 <line:77:4, col:45>
        0xa35cbd0 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0xa35cc20 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0xa35cc04 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0xa35cd08 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0xa35cc90 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa35cc80 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0xa35cc68 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa35cbd0 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0xa35cce8 <line:79:6, col:29> 'void'
          (MemberExpr 0xa35ccc4 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0xa27b310
            (ImplicitCastExpr 0xa35ccb8 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0xa35cc9c <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa35cbd0 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0xa35cd70 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0xa35cd38 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa27b4e0
          (CXXThisExpr 0xa35cd28 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa35cd58 <col:22> 'enum std::ios_base::event' EnumConstant 0xa27a8a0 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0xa35cf30 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa35ce48 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa35cdf0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
          (MemberExpr 0xa35cda0 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa27bac0
            (CXXThisExpr 0xa35cd90 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0xa35cdd0 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa27ba20
            (CXXThisExpr 0xa35cdc0 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0xa35cf18 <line:82:6, line:85:6>
          (CXXDeleteExpr 0xa35cea0 <line:83:8, col:18> 'void'
            (MemberExpr 0xa35ce80 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa27bac0
              (CXXThisExpr 0xa35ce70 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0xa35cf00 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa35cec8 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa27bac0
              (CXXThisExpr 0xa35ceb8 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa35cee8 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0xa35cf80 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0xa35cf60 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0xa27b5a0
          (CXXThisExpr 0xa35cf50 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0xa35cfe8 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa35cfb0 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0xa27b400
          (CXXThisExpr 0xa35cfa0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa35cfd0 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa35cbd0 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0xa35d278 <line:90:4, line:91:38>
        (DeclStmt 0xa35d060 <line:90:9, col:20>
          0xa35d010 "int __i =
            (IntegerLiteral 0xa35d048 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa35d120 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa35d0d8 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
          (DeclRefExpr 0xa35d070 <col:22> 'int' lvalue Var 0xa35d010 '__i' 'int')
          (CXXDependentScopeMemberExpr 0xa35d0a0 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d088 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0xa35d160 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0xa35d144 <col:50> 'int' lvalue Var 0xa35d010 '__i' 'int'))
        (BinaryOperator 0xa35d260 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0xa35d1c8 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0xa35d1a8 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0xa35d174 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0xa35c7e0 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0xa35d1b8 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0xa35d18c <col:14> 'int' lvalue Var 0xa35d010 '__i' 'int')))
          (ArraySubscriptExpr 0xa35d248 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa35d1f8 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0xa35d1dc <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0xa35d22c <col:35> 'int' lvalue Var 0xa35d010 '__i' 'int'))))
      (BinaryOperator 0xa35d2e8 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0xa35d2b0 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa27bac0
          (CXXThisExpr 0xa35d2a0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa35d2d0 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0xa35c7e0 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0xa35d380 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0xa35d310 <col:4> 'int' lvalue ->_M_word_size 0xa27ba60
          (CXXThisExpr 0xa35d300 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0xa35d348 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa35d330 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0xa35d450 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d3a8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d398 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35d430 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35d3f8 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d3dc <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa35d528 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d480 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d470 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35d508 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35d4d0 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d4b4 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa35d600 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d558 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d548 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35d5e0 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35d5a8 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d58c <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa35d6d8 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d630 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d620 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35d6b8 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35d680 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d664 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa35d7b0 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d708 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d6f8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35d790 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35d758 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d73c <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0xa35d870 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0xa35d7e0 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0xa27bc50
          (CXXThisExpr 0xa35d7d0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35d850 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35d818 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d800 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa35d8e8 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0xa35d898 <col:4> '<bound member function type>' ->_M_cache_locale 0xa3591b0
          (CXXThisExpr 0xa35d888 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0xa35d8c8 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0xa27bc50
          (CXXThisExpr 0xa35d8b8 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa35d950 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0xa35d918 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa27b4e0
          (CXXThisExpr 0xa35d908 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa35d938 <col:22> 'enum std::ios_base::event' EnumConstant 0xa27a920 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0xa35da28 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35d980 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa35d970 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa35da08 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35d9d0 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0xa35d9b4 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa35c480 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0xa35daf0 <line:108:7, col:15>
    (UnaryOperator 0xa35dad8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa35dac8 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0xa35e2e0 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0xa35df70 <line:116:7, col:35>
    0xa35deb0 "std::locale __old =
      (ParenListExpr 0xa35df50 <col:19, col:34> 'class std::locale'
        (CallExpr 0xa35df30 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35def8 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa35dee8 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0xa35e000 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0xa35dfb8 <col:7, col:17> '<bound member function type>' ->imbue 0xa27fa20
      (CXXThisExpr 0xa35dfa8 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35dfe4 <col:23> 'const class std::locale' lvalue ParmVar 0xa35ddc0 '__loc' 'const class std::locale &'))
  (CallExpr 0xa35e068 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0xa35e030 <col:7> '<bound member function type>' ->_M_cache_locale 0xa3591b0
      (CXXThisExpr 0xa35e020 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35e050 <col:23> 'const class std::locale' lvalue ParmVar 0xa35ddc0 '__loc' 'const class std::locale &'))
  (IfStmt 0xa35e260 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa35e160 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa35e108 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (CallExpr 0xa35e0d0 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35e098 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa35e088 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa35e0f0 <col:28> 'int' 0))
    (CallExpr 0xa35e240 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35e1f0 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0xa35e1d0 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa35e198 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0xa35e188 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa35e224 <col:26> 'const class std::locale' lvalue ParmVar 0xa35ddc0 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0xa35e2d0 <line:121:7, col:14>
    (CXXConstructExpr 0xa35e2a8 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa35e298 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa35e27c <col:14> 'class std::locale' lvalue Var 0xa35deb0 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa35eb80 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0xa35e850 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0xa35e820 <col:7, col:17> '<bound member function type>' ->_M_init 0xa27bca0
      (CXXThisExpr 0xa35e810 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0xa35e8d0 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0xa35e880 <col:7> '<bound member function type>' ->_M_cache_locale 0xa3591b0
      (CXXThisExpr 0xa35e870 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa35e8b0 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0xa27bc50
      (CXXThisExpr 0xa35e8a0 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0xa35e940 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0xa35e900 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0xa3550e0
      (CXXThisExpr 0xa35e8f0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0xa35e928 <col:17, col:24> '_CharT'))
  (BinaryOperator 0xa35e998 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa35e968 <col:7> '_Bool' lvalue ->_M_fill_init 0xa355120
      (CXXThisExpr 0xa35e958 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0xa35e988 <col:22> '_Bool' false))
  (BinaryOperator 0xa35e9f8 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0xa35e9c0 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa355090
      (CXXThisExpr 0xa35e9b0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa35e9e0 <col:16> 'int' 0))
  (BinaryOperator 0xa35ea58 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa35ea20 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa27ade0
      (CXXThisExpr 0xa35ea10 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35ea40 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0xa35eab8 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa35ea80 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa355280
      (CXXThisExpr 0xa35ea70 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa35eaa0 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa35e6d0 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0xa35eb68 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0xa35eae0 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa27ae20
      (CXXThisExpr 0xa35ead0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0xa35eb48 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0xa35eb00 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa35e6d0 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa35eb18 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0xa35eb30 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0xa35f790 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0xa35f1e0 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0xa35f008 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0xa35ef34 <col:11> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa35efd8 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa35ef58 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0xa2698f0)
        (DeclRefExpr 0xa35efc0 <col:52> 'const class std::locale' lvalue ParmVar 0xa35ee50 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa35eff8 <col:60> '_Bool' true))
    (BinaryOperator 0xa35f168 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0xa35f040 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa355310
        (CXXThisExpr 0xa35f030 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa35f148 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa35f108 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (CallExpr 0xa35f0e8 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa35f068 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa35f0d0 <col:38> 'const class std::locale' lvalue ParmVar 0xa35ee50 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa35f1c8 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0xa35f190 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa355310
        (CXXThisExpr 0xa35f180 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa35f1b0 <col:13> 'int' 0)))
  (IfStmt 0xa35f4a8 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0xa35f2d0 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa35f1fc <col:11> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa35f2a0 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa35f220 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa2698f0)
        (DeclRefExpr 0xa35f288 <col:54> 'const class std::locale' lvalue ParmVar 0xa35ee50 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa35f2c0 <col:62> '_Bool' true))
    (BinaryOperator 0xa35f430 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa35f308 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa3553a0
        (CXXThisExpr 0xa35f2f8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa35f410 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa35f3d0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (CallExpr 0xa35f3b0 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa35f330 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa35f398 <col:42> 'const class std::locale' lvalue ParmVar 0xa35ee50 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa35f490 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa35f458 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa3553a0
        (CXXThisExpr 0xa35f448 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa35f478 <col:15> 'int' 0)))
  (IfStmt 0xa35f770 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0xa35f598 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa35f4c4 <col:11> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa35f568 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa35f4e8 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa2698f0)
        (DeclRefExpr 0xa35f550 <col:54> 'const class std::locale' lvalue ParmVar 0xa35ee50 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa35f588 <col:62> '_Bool' true))
    (BinaryOperator 0xa35f6f8 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa35f5d0 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa355430
        (CXXThisExpr 0xa35f5c0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa35f6d8 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa35f698 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (CallExpr 0xa35f678 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa35f5f8 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
          (DeclRefExpr 0xa35f660 <col:42> 'const class std::locale' lvalue ParmVar 0xa35ee50 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa35f758 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa35f720 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa355430
        (CXXThisExpr 0xa35f710 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa35f740 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0xa36fed8 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0xa36feb8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa36fe68 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa36fe58 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa36fe9c <col:20> '__streambuf_type *' lvalue ParmVar 0xa36ba70 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa36fef0 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0xa36ff70 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0xa36ff60 <line:114:2, col:19>
    (CallExpr 0xa36ff40 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0xa36ff00 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0xa36be30 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0xa36ff28 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa36ff18 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa370020 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0xa36ffc8 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa36ff84 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa36c0a0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa36ffb0 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa36ffa0 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa370010 <line:124:2, col:10>
    (UnaryOperator 0xa36fff8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa36ffe8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa3700d0 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0xa370078 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa370038 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa36c280 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa370060 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa370050 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa3700c0 <line:134:2, col:10>
    (UnaryOperator 0xa3700a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa370098 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0xa370180 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0xa370170 <col:9, col:29>
    (CallExpr 0xa370150 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa3700f8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa370134 <col:26> 'long' lvalue ParmVar 0xa36c3a0 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0xa370230 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0xa370220 <col:9, col:29>
    (CallExpr 0xa370200 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa3701a8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa3701e4 <col:26> 'unsigned long' lvalue ParmVar 0xa36c4c0 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0xa3702e0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0xa3702d0 <col:9, col:29>
    (CallExpr 0xa3702b0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa370258 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa370294 <col:26> '_Bool' lvalue ParmVar 0xa36c5d0 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0xa3703d8 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0xa3703c8 <line:185:2, col:50>
    (CallExpr 0xa3703a8 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa370308 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa370390 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa370380 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa370370 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa370344 <col:46> 'unsigned short' lvalue ParmVar 0xa36c810 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0xa3704d0 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0xa3704c0 <line:196:2, col:50>
    (CallExpr 0xa3704a0 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa370400 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa370488 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa370478 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa370468 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa37043c <col:46> 'unsigned int' lvalue ParmVar 0xa36ca50 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0xa370580 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0xa370570 <col:9, col:29>
    (CallExpr 0xa370550 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa3704f8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa370534 <col:26> 'long long' lvalue ParmVar 0xa36cb70 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0xa370630 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0xa370620 <col:9, col:29>
    (CallExpr 0xa370600 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa3705a8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa3705e4 <col:26> 'unsigned long long' lvalue ParmVar 0xa36cc90 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0xa3706e0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0xa3706d0 <col:9, col:29>
    (CallExpr 0xa3706b0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa370658 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa370694 <col:26> 'double' lvalue ParmVar 0xa36cdb0 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0xa3707d8 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0xa3707c8 <line:218:2, col:43>
    (CallExpr 0xa3707a8 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0xa370708 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa370790 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0xa370780 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0xa370770 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0xa370744 <col:39> 'float' lvalue ParmVar 0xa36ced0 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0xa370888 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0xa370878 <col:9, col:29>
    (CallExpr 0xa370858 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa370800 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa37083c <col:26> 'long double' lvalue ParmVar 0xa36cff0 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0xa370938 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0xa370928 <col:9, col:29>
    (CallExpr 0xa370908 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa3708b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa3708ec <col:26> 'const void *' lvalue ParmVar 0xa36d110 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0xa370bd0 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0xa370a90 <line:290:2, col:57>
    0xa370960 "const streamsize __put =
      (CallExpr 0xa370a68 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa370a00 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0xa3709e0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3709a8 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0xa370998 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa370a34 <col:48> 'const char_type *' lvalue ParmVar 0xa36f500 '__s' 'const char_type *')
        (DeclRefExpr 0xa370a4c <col:53> 'streamsize':'int' lvalue ParmVar 0xa36f540 '__n' 'streamsize':'int'))")
  (IfStmt 0xa370bb0 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0xa370af0 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0xa370ad0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa370aa0 <col:6> 'const streamsize':'const int' lvalue Var 0xa370960 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0xa370ae0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa370ab8 <col:15> 'streamsize':'int' lvalue ParmVar 0xa36f540 '__n' 'streamsize':'int')))
    (CallExpr 0xa370b90 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa370b18 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa370b08 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa370b6c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa370c68 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0xa370c48 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa370bf8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa370be8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa370c30 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0xa371a80 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0xa371a60 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0xa371710 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0xa371618 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0xa3715f0 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa3715b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CallExpr 0xa371550 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa371518 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0xa3714f8 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa3710d0
                (CXXThisExpr 0xa3714e8 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0xa37158c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ed0 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0xa3716f8 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0xa3716d8 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0xa3716c8 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa37166c <col:50> '_Bool (void) throw()' lvalue Function 0xa0c8ee0 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0xa371a48 <line:410:4, line:414:4>
      (IfStmt 0xa371a28 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0xa371948 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0xa371790 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa371758 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0xa371738 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa3710d0
                (CXXThisExpr 0xa371728 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0xa371920 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa3718c0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (CallExpr 0xa371870 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa371838 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0xa371818 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3717e0 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0xa3717c0 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa3710d0
                      (CXXThisExpr 0xa3717b0 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0xa3718a8 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0xa371890 <col:56> 'int' 1))))
        (CallExpr 0xa371a08 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa371990 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0xa371970 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa3710d0
              (CXXThisExpr 0xa371960 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0xa3719e4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0xa371af8 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0xa371ae8 <col:9, col:16>
    (MemberExpr 0xa371ac8 <col:16> 'const _Bool' lvalue ->_M_ok 0xa370f70
      (CXXThisExpr 0xa371ab8 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0xa3720a8 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0xa372098 <col:7, col:45>
    (CallExpr 0xa372070 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa371f90 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa103440)
      (DeclRefExpr 0xa371fc4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa371dd0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0xa372038 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa371ff8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (DeclRefExpr 0xa371fdc <col:39> '_CharT' lvalue ParmVar 0xa371e10 '__c' '_CharT'))
      (IntegerLiteral 0xa372058 <col:44> 'int' 1))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0xa372670 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0xa372660 <col:7, col:40>
    (ParenExpr 0xa372648 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0xa372620 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa3725e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa372510 0xa371f60 0xa1c88e0)
        (DeclRefExpr 0xa372540 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa372380 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0xa3725c0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa372570 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0xa372558 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa372380 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa3725a4 <col:36> 'char' lvalue ParmVar 0xa3723c0 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0xa372c00 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0xa372bf0 <col:7, col:45>
    (CallExpr 0xa372bc8 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa372b30 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa103440)
      (DeclRefExpr 0xa372b64 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa372970 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0xa372b98 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0xa372b7c <col:39> 'char' lvalue ParmVar 0xa3729b0 '__c' 'char'))
      (IntegerLiteral 0xa372bb0 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0xa373168 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0xa373158 <col:7, col:46>
    (ParenExpr 0xa373140 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa373118 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa3730d0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa373030 0xa372b00 0xa372510 0xa371f60 0xa1c88e0)
        (DeclRefExpr 0xa373060 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa372e90 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa3730b8 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa3730a8 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa373098 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0xa373078 <col:42> 'signed char' lvalue ParmVar 0xa372ee0 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0xa3736c8 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0xa3736b8 <col:7, col:46>
    (ParenExpr 0xa3736a0 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa373678 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa373630 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa373590 0xa373030 0xa372b00 0xa372510 0xa371f60 0xa1c88e0)
        (DeclRefExpr 0xa3735c0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa3733f0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa373618 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa373608 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa3735f8 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0xa3735d8 <col:42> 'unsigned char' lvalue ParmVar 0xa373440 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0xa373df0 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0xa373da8 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0xa373ba8 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa373b90 <col:12> 'const _CharT *' lvalue ParmVar 0xa373a10 '__s' 'const _CharT *'))
    (CallExpr 0xa373c50 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa373bd8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa373bbc <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3739a0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa373c2c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa373d80 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa373c70 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa103440)
      (DeclRefExpr 0xa373ca4 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3739a0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0xa373cbc <col:26> 'const _CharT *' lvalue ParmVar 0xa373a10 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0xa373d68 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa373d40 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa373d00 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa373d24 <col:45> 'const _CharT *' lvalue ParmVar 0xa373a10 '__s' 'const _CharT *')))))
  (ReturnStmt 0xa373de0 <line:499:7, col:14>
    (DeclRefExpr 0xa373dc4 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3739a0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0xa374960 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0xa374918 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0xa374718 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa374708 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa3746f8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa3746e0 <col:12> 'const char *' lvalue ParmVar 0xa374560 '__s' 'const char *'))))
    (CallExpr 0xa3747c0 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa374748 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa37472c <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa374510 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0xa37479c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa3748f0 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa3747e0 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa103440)
      (DeclRefExpr 0xa374814 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa374510 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0xa37482c <col:26> 'const char *' lvalue ParmVar 0xa374560 '__s' 'const char *')
      (CXXStaticCastExpr 0xa3748d8 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa3748b0 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa374870 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa374894 <col:45> 'const char *' lvalue ParmVar 0xa374560 '__s' 'const char *')))))
  (ReturnStmt 0xa374950 <line:516:7, col:14>
    (DeclRefExpr 0xa374934 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa374510 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0xa374ef0 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0xa374ee0 <col:7, col:58>
    (ParenExpr 0xa374ec8 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa374ea0 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa374e48 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa374db0 0xa3746b0 0xa374270 0xa373b60 0xa373590 0xa373030 0xa372b00 0xa372510 0xa371f60 0xa1c88e0)
        (DeclRefExpr 0xa374de0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa374bf0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa374e30 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa374e20 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0xa374df8 <col:54> 'const signed char *' lvalue ParmVar 0xa374c60 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0xa375488 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0xa375478 <col:7, col:58>
    (ParenExpr 0xa375460 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa375438 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa3753d8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa375340 0xa374db0 0xa3746b0 0xa374270 0xa373b60 0xa373590 0xa373030 0xa372b00 0xa372510 0xa371f60 0xa1c88e0)
        (DeclRefExpr 0xa375370 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa375180 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa3753c0 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa3753b0 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa375388 <col:54> 'const unsigned char *' lvalue ParmVar 0xa3751f0 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa375a38 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0xa375a28 <col:7, col:46>
    (CallExpr 0xa375a08 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa3758e0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0xa3759e8 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa375928 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa375910 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa375760 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0xa3759c8 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa375978 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa37595c <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa375760 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0xa3759b0 <col:40> 'char'10))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa375f10 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0xa375f00 <col:7, col:31>
    (CallExpr 0xa375ee0 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa375e88 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa375e6c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa375d10 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0xa375ec8 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa3763d0 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0xa3763c0 <col:7, col:25>
    (CallExpr 0xa3763a0 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa376368 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa37634c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3761f0 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0xa376b08 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0xa376b58 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3769e0 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0xa376f28 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0xa376d70 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0xa376c90 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0xa376c00 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa376bc8 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa376bb0 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3769e0 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0xa376c70 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa376c38 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa376c1c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3769e0 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0xa376d50 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa376d18 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0xa376cf8 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa376cc0 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0xa376ca8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3769e0 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0xa376f08 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0xa376de0 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa376da8 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa376d8c <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3769e0 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0xa376e40 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa376e10 <col:2> '_Bool' lvalue ->_M_ok 0xa370f70
        (CXXThisExpr 0xa376e00 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0xa376e30 <col:10> '_Bool' true))
    (CallExpr 0xa376ee8 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa376e70 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa376e58 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa3769e0 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa376ec4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0xa37bf78 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0xa37b720 <line:67:2, col:22>
    0xa37b6a0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa37b700 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa37b6e8 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa37b6d8 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa37bf20 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0xa37b730 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0xa37b6a0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa37bef8 <line:69:4, line:86:4>
      (DeclStmt 0xa37b808 <line:70:6, col:49>
        0xa37b780 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa37b7f8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa37b7d4 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa37bc10 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37b818 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa37bbf8 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0xa37b968 <line:73:3, col:63>
            0xa37b890 "const __num_put_type &__np =
              (CallExpr 0xa37b948 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa37b8c8 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa3542d0)
                (CXXDependentScopeMemberExpr 0xa37b910 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa37b900 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa37bbd8 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0xa37bb00 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa37bac8 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0xa37ba98 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa37b990 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0xa37b978 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa37b890 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0xa37b9d8 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa37b9c8 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0xa37ba00 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa37b9f0 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0xa37ba60 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa37ba28 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa37ba18 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0xa37ba7c <col:44> '_ValueT' lvalue ParmVar 0xa37b3e0 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0xa37bbb0 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa37bba0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa37bb88 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa37bb1c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37b780 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa37bb78 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa37bb54 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa37bd10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37bc30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37bcf8 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0xa37bcc8 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37bc50 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa37bc40 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37bca4 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa37bce8 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0xa37be00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37bd30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37bde8 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0xa37bdc8 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37bd50 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa37bd40 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37bda4 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa37bed8 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa37be48 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa37be38 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa37be1c <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37b780 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa37beb8 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa37be68 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa37be58 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa37be9c <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37b780 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa37bf68 <line:87:2, col:10>
    (UnaryOperator 0xa37bf50 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa37bf40 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0xa37ca88 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0xa37c6e8 <line:97:7, col:75>
    0xa37c5a0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa37c6c0 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa37c680 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (CallExpr 0xa37c620 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa37c5e8 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa37c5d8 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa37c65c <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0xa37ca68 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0xa37c858 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0xa37c790 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa37c770 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37c750 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37c6f8 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa37c5a0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa37c780 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37c760 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37c72c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0xa37c840 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0xa37c820 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37c800 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37c7a8 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa37c5a0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa37c830 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37c810 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37c7dc <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0xa37c978 <line:99:2, col:70>
      (CallExpr 0xa37c958 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0xa37c880 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa37c940 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa37c930 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0xa37c908 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0xa37c8f8 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0xa37c8e8 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0xa37c8bc <col:65> 'short' lvalue ParmVar 0xa37c320 '__n' 'short'))))))))
    (ReturnStmt 0xa37ca58 <line:101:2, col:41>
      (CallExpr 0xa37ca38 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0xa37c998 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa37ca20 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa37ca10 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0xa37ca00 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0xa37c9d4 <col:37> 'short' lvalue ParmVar 0xa37c320 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0xa37d588 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0xa37d1e8 <line:111:7, col:75>
    0xa37d0a0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa37d1c0 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa37d180 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (CallExpr 0xa37d120 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa37d0e8 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa37d0d8 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa37d15c <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279ff0 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0xa37d568 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0xa37d358 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0xa37d290 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa37d270 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37d250 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37d1f8 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa37d0a0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa37d280 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37d260 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37d22c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279c30 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0xa37d340 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0xa37d320 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37d300 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37d2a8 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa37d0a0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa37d330 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa37d310 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa37d2dc <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279b10 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0xa37d478 <line:113:2, col:68>
      (CallExpr 0xa37d458 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0xa37d380 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa37d440 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa37d430 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0xa37d408 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0xa37d3f8 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0xa37d3e8 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa37d3bc <col:63> 'int' lvalue ParmVar 0xa37ce20 '__n' 'int'))))))))
    (ReturnStmt 0xa37d558 <line:115:2, col:41>
      (CallExpr 0xa37d538 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0xa37d498 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa37d520 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa37d510 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0xa37d500 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0xa37d4d4 <col:37> 'int' lvalue ParmVar 0xa37ce20 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0xa37e378 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0xa37dc28 <line:123:7, col:50>
    0xa37dba0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa37dc18 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa37dbf4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa37dcc0 <line:124:7, col:27>
    0xa37dc40 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa37dca0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa37dc88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa37dc78 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa37e248 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0xa37dd00 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa37dcd0 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0xa37dc40 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0xa37dce8 <col:21> '__streambuf_type *' lvalue ParmVar 0xa37d920 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0xa37e120 <line:126:2, line:139:2>
      (IfStmt 0xa37df10 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37dd18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa37def8 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0xa37ded8 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0xa37de08 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0xa37dde0 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0xa37dd28 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa2a49b0)
                (DeclRefExpr 0xa37dd5c <col:31> '__streambuf_type *' lvalue ParmVar 0xa37d920 '__sbin' '__streambuf_type *')
                (CallExpr 0xa37ddc0 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa37dd88 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0xa37dd78 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0xa37deb0 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa37dea0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa37de88 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa37de1c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa37de78 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa37de54 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa37e010 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37df30 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37dff8 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0xa37dfc8 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37df50 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa37df40 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37dfa4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa37dfe8 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0xa37e100 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37e030 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37e0e8 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0xa37e0c8 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37e050 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa37e040 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37e0a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa37e228 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0xa37e158 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa37e13c <col:17> '__streambuf_type *' lvalue ParmVar 0xa37d920 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa37e200 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa37e1f0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa37e1d8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa37e16c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa37e1c8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa37e1a4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa37e320 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa37e290 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa37e280 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa37e264 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa37e300 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa37e2b0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa37e2a0 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa37e2e4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37dba0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa37e368 <line:144:7, col:15>
    (UnaryOperator 0xa37e350 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa37e340 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0xa37f1d0 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0xa37e9f0 <line:158:7, col:27>
    0xa37e970 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa37e9d0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa37e9b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa37e9a8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa37f178 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0xa37ea00 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0xa37e970 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa37f150 <line:160:2, line:177:2>
      (DeclStmt 0xa37ead8 <line:161:4, col:47>
        0xa37ea50 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa37eac8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa37eaa4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa37ee68 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37eae8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa37ee50 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0xa37ec30 <line:164:8, col:56>
            0xa37eb20 "const int_type __put =
              (CallExpr 0xa37ec10 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa37ebc0 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa37eba0 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa37eb68 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0xa37eb58 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa37ebf4 <col:52> 'char_type':'_CharT' lvalue ParmVar 0xa37e720 '__c' 'char_type':'_CharT'))")
          (IfStmt 0xa37ee30 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0xa37ed50 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa37ec88 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa37ecbc <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa37eb20 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0xa37ed30 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa37ecf8 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa37ee08 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa37edf8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa37ede0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa37ed74 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37ea50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa37edd0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa37edac <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa37ef68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37ee88 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37ef50 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0xa37ef20 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37eea8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa37ee98 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37eefc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa37ef40 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0xa37f058 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37ef88 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37f040 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0xa37f020 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37efa8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa37ef98 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37effc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa37f130 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa37f0a0 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa37f090 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa37f074 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37ea50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa37f110 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa37f0c0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa37f0b0 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa37f0f4 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa37ea50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa37f1c0 <line:178:7, col:15>
    (UnaryOperator 0xa37f1a8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa37f198 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0xa37fc00 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0xa37f8a0 <line:193:7, col:27>
    0xa37f820 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa37f880 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa37f868 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa37f858 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa37fba8 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0xa37f8b0 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0xa37f820 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa37fb88 <line:195:2, line:205:2>
      (IfStmt 0xa37f978 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37f8c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa37f960 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0xa37f938 <col:8, col:25> '<dependent type>'
            (MemberExpr 0xa37f8e8 <col:8> '<bound member function type>' ->_M_write 0xa36f5e0
              (CXXThisExpr 0xa37f8d8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37f908 <col:17> 'const _CharT *' lvalue ParmVar 0xa37f590 '__s' 'const _CharT *')
            (DeclRefExpr 0xa37f920 <col:22> 'streamsize':'int' lvalue ParmVar 0xa37f5d0 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0xa37fa78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37f998 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37fa60 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0xa37fa30 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37f9b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa37f9a8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37fa0c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa37fa50 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0xa37fb68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa37fa98 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa37fb50 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0xa37fb30 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa37fab8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa37faa8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa37fb0c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa37fbf0 <line:206:7, col:15>
    (UnaryOperator 0xa37fbd8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa37fbc8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0xa380860 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0xa380238 <line:217:7, col:50>
    0xa3801b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa380228 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa380204 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa380540 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa380248 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa380528 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0xa380508 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0xa380438 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0xa3802a0 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa380268 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa380258 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0xa380410 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0xa3803b0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
            (CallExpr 0xa380360 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa380328 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0xa380308 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3802d0 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3802c0 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0xa380398 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0xa380380 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0xa3804e0 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0xa3804d0 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3804b8 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0xa380450 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3801b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0xa3804a8 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa380484 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa380640 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa380560 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa380628 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0xa3805f8 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa380580 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa380570 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa3805d4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa380618 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0xa380730 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa380660 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa380718 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0xa3806f8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa380680 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa380670 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa3806d4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa380808 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa380778 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa380768 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa38074c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3801b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3807e8 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa380798 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa380788 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3807cc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3801b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa380850 <line:232:7, col:15>
    (UnaryOperator 0xa380838 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa380828 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0xa381390 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0xa380ef0 <line:240:7, col:36>
    0xa380e60 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa380ed0 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa380eb8 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa380ea0 <col:34> 'int' 1)))")
  (IfStmt 0xa381158 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa380f00 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa381140 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0xa381120 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0xa380f78 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa380f58 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa380f20 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa380f10 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0xa381108 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0xa380f8c <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa380e60 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0xa3810e0 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa381010 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0xa380ff0 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa380fb8 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa380fa8 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0xa381048 <col:40> 'int' 0)
            (DeclRefExpr 0xa38107c <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa27a5c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0xa3810bc <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa381258 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa381178 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa381240 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0xa381210 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa381198 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa381188 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa3811ec <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa381230 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0xa381348 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa381278 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa381330 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0xa381310 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa381298 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa381288 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa3812ec <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa381380 <line:253:7, col:14>
    (DeclRefExpr 0xa381364 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa380e60 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0xa3821c0 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0xa381a48 <line:261:7, col:50>
    0xa3819c0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa381a38 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa381a14 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa381ea0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa381a58 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa381e88 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0xa381e68 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0xa381ad0 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa381ab0 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa381a78 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa381a68 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0xa381e50 <line:265:6, line:274:6>
          (DeclStmt 0xa381c48 <line:268:8, line:269:27>
            0xa381af0 "const pos_type __p =
              (CallExpr 0xa381c20 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa381b90 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0xa381b70 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa381b38 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0xa381b28 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa381bc4 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa381740 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0xa381bfc <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa381e30 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa381d50 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa381cf0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa381c58 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa381af0 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0xa381cd0 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0xa381cb0 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0xa381c98 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0xa381c80 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0xa381e08 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa381df8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa381de0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa381d74 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3819c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa381dd0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa381dac <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa381fa0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa381ec0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa381f88 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0xa381f58 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa381ee0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa381ed0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa381f34 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa381f78 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0xa382090 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa381fc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa382078 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0xa382058 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa381fe0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa381fd0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa382034 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa382168 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3820d8 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3820c8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3820ac <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3819c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa382148 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3820f8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3820e8 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa38212c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3819c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3821b0 <line:285:7, col:15>
    (UnaryOperator 0xa382198 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa382188 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa383078 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0xa3828e8 <line:293:7, col:50>
    0xa382860 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3828d8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3828b4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa382d58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3828f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa382d40 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0xa382d20 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0xa382970 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa382950 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa382918 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa382908 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0xa382d08 <line:297:6, line:306:6>
          (DeclStmt 0xa382b00 <line:300:8, line:301:27>
            0xa382990 "const pos_type __p =
              (CallExpr 0xa382ad8 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa382a30 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0xa382a10 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3829d8 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3829c8 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa382a64 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa382570 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0xa382a7c <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa3825e0 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa382ab4 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa382ce8 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa382c08 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa382ba8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
              (DeclRefExpr 0xa382b10 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa382990 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0xa382b88 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0xa382b68 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0xa382b50 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0xa382b38 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0xa382cc0 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa382cb0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa382c98 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa382c2c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa382860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa382c88 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa382c64 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa382e58 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa382d78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa382e40 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0xa382e10 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa382d98 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa382d88 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa382dec <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa382e30 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0xa382f48 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa382e78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa382f30 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0xa382f10 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa382e98 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa382e88 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa382eec <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa383020 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa382f90 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa382f80 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa382f64 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa382860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa383000 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa382fb0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa382fa0 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa382fe4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa382860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa383068 <line:317:7, col:15>
    (UnaryOperator 0xa383050 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa383040 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0xa3852d8 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0xa385290 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0xa3843c8 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3843b8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa3843a8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa38438c <col:12> 'const char *' lvalue ParmVar 0xa384210 '__s' 'const char *'))))
    (CallExpr 0xa384470 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3843f8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa3843dc <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa383360 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa38444c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0xa385270 <line:327:2, line:353:2>
      (DeclStmt 0xa3845e8 <line:330:4, col:56>
        0xa3844a0 "const size_t __clen =
          (CallExpr 0xa3845b8 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0xa3845a8 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa384550 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0xa0b9710 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0xa3845d8 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa384570 <col:52> 'const char *' lvalue ParmVar 0xa384210 '__s' 'const char *')))")
      (IfStmt 0xa385050 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3845f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa385030 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0xa384c38 <line:333:8, line:339:35>
            0xa384610 "struct __ptr_guard;"
            0xa384b40 "struct __ptr_guard __pg =
              (ParenListExpr 0xa384c10 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0xa384bd0 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0xa384b74 <col:27> 'const size_t':'const unsigned int' lvalue Var 0xa3844a0 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0xa384d08 <line:341:8, col:35>
            0xa384c60 "_CharT *__ws =
              (CallExpr 0xa384ce8 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa384cb0 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0xa384c94 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0xa384b40 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0xa384f60 <line:342:8, line:343:35>
            (DeclStmt 0xa384d80 <line:342:13, col:28>
              0xa384d20 "size_t __i =
                (ImplicitCastExpr 0xa384d70 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa384d58 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0xa384de0 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0xa384dc0 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa384d90 <col:30> 'size_t':'unsigned int' lvalue Var 0xa384d20 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa384dd0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa384da8 <col:36> 'const size_t':'const unsigned int' lvalue Var 0xa3844a0 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0xa384e10 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0xa384df8 <col:46> 'size_t':'unsigned int' lvalue Var 0xa384d20 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0xa384f48 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0xa384e58 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa384e24 <col:3> '_CharT *' lvalue Var 0xa384c60 '__ws' '_CharT *')
                (DeclRefExpr 0xa384e3c <col:8> 'size_t':'unsigned int' lvalue Var 0xa384d20 '__i' 'size_t':'unsigned int'))
              (CallExpr 0xa384f28 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa384e88 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa384e6c <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa383360 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0xa384f10 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0xa384ef0 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0xa384ebc <col:27> 'const char *' lvalue ParmVar 0xa384210 '__s' 'const char *'))
                  (ImplicitCastExpr 0xa384f00 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa384ed4 <col:31> 'size_t':'unsigned int' lvalue Var 0xa384d20 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0xa385008 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa384f88 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0xa103440)
            (DeclRefExpr 0xa384fbc <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa383360 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0xa384fd4 <col:32> '_CharT *' lvalue Var 0xa384c60 '__ws' '_CharT *')
            (DeclRefExpr 0xa384fec <col:38> 'const size_t':'const unsigned int' lvalue Var 0xa3844a0 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0xa385158 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa385070 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa385140 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0xa385110 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa385098 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa385080 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa383360 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa3850ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa385130 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0xa385250 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa385178 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa385238 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0xa385218 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3851a0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa385188 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa383360 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa3851f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0xa3852c8 <line:354:7, col:14>
    (DeclRefExpr 0xa3852ac <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa383360 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0xa39d290 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa39d278 <col:30> 'int' 0))
) (CompoundStmt 0xa39d388 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0xa39d368 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa39d318 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa39d308 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa39d34c <col:20> '__streambuf_type *' lvalue ParmVar 0xa39a190 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0xa39d420 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0xa39d408 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0xa39d3b0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa39d3a0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0xa39d3f0 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0xa39d3d8 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0xa39d4a8 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0xa39d498 <col:9, col:26>
    (CallExpr 0xa39d478 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0xa39d434 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0xa39a550 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0xa39d460 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa39d450 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa39d558 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0xa39d500 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa39d4bc <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa39a760 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa39d4e8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa39d4d8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa39d548 <line:128:2, col:10>
    (UnaryOperator 0xa39d530 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa39d520 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa39d608 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0xa39d5b0 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa39d570 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa39a8e0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa39d598 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa39d588 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa39d5f8 <line:135:2, col:10>
    (UnaryOperator 0xa39d5e0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa39d5d0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0xa39d6b8 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0xa39d6a8 <col:9, col:30>
    (CallExpr 0xa39d688 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39d630 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39d66c <col:27> '_Bool' lvalue ParmVar 0xa39aa00 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0xa39d768 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0xa39d758 <col:9, col:30>
    (CallExpr 0xa39d738 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39d6e0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39d71c <col:27> 'unsigned short' lvalue ParmVar 0xa39ac40 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0xa39d818 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0xa39d808 <col:9, col:30>
    (CallExpr 0xa39d7e8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39d790 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39d7cc <col:27> 'unsigned int' lvalue ParmVar 0xa39ae80 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0xa39d8c8 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0xa39d8b8 <col:9, col:30>
    (CallExpr 0xa39d898 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39d840 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39d87c <col:27> 'long' lvalue ParmVar 0xa39afa0 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0xa39d978 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0xa39d968 <col:9, col:30>
    (CallExpr 0xa39d948 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39d8f0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39d92c <col:27> 'unsigned long' lvalue ParmVar 0xa39b0c0 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0xa39da28 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0xa39da18 <col:9, col:30>
    (CallExpr 0xa39d9f8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39d9a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39d9dc <col:27> 'long long' lvalue ParmVar 0xa39b1e0 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0xa39dad8 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0xa39dac8 <col:9, col:30>
    (CallExpr 0xa39daa8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39da50 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39da8c <col:27> 'unsigned long long' lvalue ParmVar 0xa39b300 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0xa39db88 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0xa39db78 <col:9, col:30>
    (CallExpr 0xa39db58 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39db00 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39db3c <col:27> 'float' lvalue ParmVar 0xa39b420 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0xa39dc38 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0xa39dc28 <col:9, col:30>
    (CallExpr 0xa39dc08 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39dbb0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39dbec <col:27> 'double' lvalue ParmVar 0xa39b540 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0xa39dce8 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0xa39dcd8 <col:9, col:30>
    (CallExpr 0xa39dcb8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39dc60 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39dc9c <col:27> 'long double' lvalue ParmVar 0xa39b660 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0xa39dd98 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0xa39dd88 <col:9, col:30>
    (CallExpr 0xa39dd68 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa39dd10 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa39dd4c <col:27> 'void *' lvalue ParmVar 0xa39b780 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0xa39de08 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0xa39ddf8 <col:9, col:16>
    (MemberExpr 0xa39ddd8 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa39ddc8 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0xa39df50 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0xa39df40 <col:9, col:53>
    (CallExpr 0xa39df18 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa39de30 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa39de20 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa39de64 <col:26> 'char_type *' lvalue ParmVar 0xa39be00 '__s' 'char_type *')
      (DeclRefExpr 0xa39de7c <col:31> 'streamsize':'int' lvalue ParmVar 0xa39be40 '__n' 'streamsize':'int')
      (CallExpr 0xa39def8 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa39dea8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa39de98 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa39dee0 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0xa39e080 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0xa39e070 <col:9, col:49>
    (CallExpr 0xa39e048 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa39df78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa39df68 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa39dfac <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa39c100 '__sb' '__streambuf_type &')
      (CallExpr 0xa39e028 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa39dfd8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa39dfc8 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa39e010 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0xa39e1c8 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0xa39e1b8 <col:9, col:57>
    (CallExpr 0xa39e190 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa39e0a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa39e098 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa39e0dc <col:30> 'char_type *' lvalue ParmVar 0xa39c380 '__s' 'char_type *')
      (DeclRefExpr 0xa39e0f4 <col:35> 'streamsize':'int' lvalue ParmVar 0xa39c3c0 '__n' 'streamsize':'int')
      (CallExpr 0xa39e170 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa39e120 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0xa39e110 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa39e158 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0xa39e200 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa39e1e8 <col:30> 'int' 0))
) (CompoundStmt 0xa39e2e0 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0xa39e2c0 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa39e270 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa39e260 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa39e2a8 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0xa3aff20 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0xa3affa8 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0xa3aff98 <col:9, col:16>
    (MemberExpr 0xa3aff74 <col:16> 'const _Bool' lvalue ->_M_ok 0xa3af790
      (CXXThisExpr 0xa3aff48 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0xa3b0a20 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0xa3b0a10 <col:7, col:51>
    (ParenExpr 0xa3b09f8 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa3b09d0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3b0990 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3b08f0 0xa3b0440 0xa2b1910 0xa2b1340)
        (DeclRefExpr 0xa3b0920 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa3b0750 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa3b0978 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa3b0938 <col:47> 'unsigned char' lvalue ParmVar 0xa3b07a0 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0xa3b0f88 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0xa3b0f78 <col:7, col:51>
    (ParenExpr 0xa3b0f60 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa3b0f38 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3b0ef0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3b0e50 0xa3b08f0 0xa3b0440 0xa2b1910 0xa2b1340)
        (DeclRefExpr 0xa3b0e80 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa3b0cb0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa3b0ed8 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa3b0e98 <col:47> 'signed char' lvalue ParmVar 0xa3b0d00 '__c' 'signed char &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0xa3b20c0 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0xa3b20b0 <col:7, col:51>
    (ParenExpr 0xa3b2098 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa3b2070 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3b2028 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3b1f90 0xa3b1430 0xa3b0e50 0xa3b08f0 0xa3b0440 0xa2b1910)
        (DeclRefExpr 0xa3b1fc0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa3b1df0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa3b2010 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa3b2000 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa3b1fd8 <col:47> 'unsigned char *' lvalue ParmVar 0xa3b1e40 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0xa3b2628 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0xa3b2618 <col:7, col:51>
    (ParenExpr 0xa3b2600 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa3b25d8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3b2588 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3b24f0 0xa3b1f90 0xa3b1430 0xa3b0e50 0xa3b08f0 0xa3b0440 0xa2b1910)
        (DeclRefExpr 0xa3b2520 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa3b2350 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa3b2570 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa3b2560 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0xa3b2538 <col:47> 'signed char *' lvalue ParmVar 0xa3b23a0 '__s' 'signed char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0xa3b32e8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa3b3080 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0xa3b3358 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa3b3080 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0xa3b33d0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0xa3b33e0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0xa3b3470 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0xa3aff20 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0xa3b4018 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0xa3b5088 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0xa3b4128 <line:50:7, col:50>
    0xa3b40a0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3b4118 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3b40f4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa3b4d60 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0xa3b4188 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3b4150 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa3b4138 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0xa3b4d48 <line:52:2, line:73:2>
      (IfStmt 0xa3b42e0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0xa3b41f8 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3b41c0 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0xa3b41a4 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0xa3b42c0 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3b4288 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0xa3b4268 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3b4230 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa3b4214 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0xa3b4d28 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa3b4480 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0xa3b4328 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa3b4318 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3b42fc <col:9> '_Bool' lvalue ParmVar 0xa3b3ef0 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0xa3b4460 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0xa3b4438 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa3b43f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
              (CallExpr 0xa3b4398 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3b4360 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3b4348 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0xa3b43d4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa279e70 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0xa3b4d00 <line:56:6, line:72:6>
          (DeclStmt 0xa3b4590 <line:57:8, col:51>
            0xa3b44c0 "const __int_type __eof =
              (CallExpr 0xa3b4570 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3b4538 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0xa3b4688 <line:58:8, col:45>
            0xa3b45e0 "__streambuf_type *__sb =
              (CallExpr 0xa3b4668 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3b4630 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3b4614 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa3b4748 <line:59:8, col:38>
            0xa3b46a0 "__int_type __c =
              (CallExpr 0xa3b4728 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3b46f0 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3b46d4 <col:25> '__streambuf_type *' lvalue Var 0xa3b45e0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa3b4880 <line:61:8, col:63>
            0xa3b47a0 "const __ctype_type &__ct =
              (CallExpr 0xa3b4860 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa3b47d8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0xa3542d0)
                (CXXDependentScopeMemberExpr 0xa3b4828 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3b480c <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0xa3b4b58 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0xa3b4aa0 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0xa3b4940 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0xa3b4918 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3b48b0 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3b48e4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0xa3b46a0 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa3b48fc <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa3b44c0 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0xa3b4a78 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3b4970 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3b4954 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa3b47a0 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0xa3b49c4 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0xa2bc610 'space' 'const mask':'const unsigned short')
                (CallExpr 0xa3b4a58 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3b4a08 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3b4a3c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0xa3b46a0 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0xa3b4b40 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa3b4ab8 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0xa3b46a0 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0xa3b4b20 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3b4ae8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3b4ad0 <col:9> '__streambuf_type *' lvalue Var 0xa3b45e0 '__sb' '__streambuf_type *')))))
          (IfStmt 0xa3b4ce0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0xa3b4c00 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3b4b98 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3b4bcc <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0xa3b46a0 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3b4be4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa3b44c0 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3b4cb8 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3b4ca8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3b4c90 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3b4c24 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b40a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3b4c80 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3b4c5c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa3b5068 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0xa3b4ea0 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0xa3b4dd0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3b4d98 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa3b4d7c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0xa3b4e88 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0xa3b4e68 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa3b4e48 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3b4dec <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b40a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0xa3b4e78 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa3b4e58 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3b4e24 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0xa3b4ef8 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa3b4ec8 <col:2> '_Bool' lvalue ->_M_ok 0xa3af790
        (CXXThisExpr 0xa3b4eb8 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0xa3b4ee8 <col:10> '_Bool' true))
    (CompoundStmt 0xa3b5050 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0xa3b4fa0 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa3b4f90 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3b4f78 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa3b4f10 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b40a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa3b4f68 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa3b4f44 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0xa3b5030 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3b4fe0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa3b4fc4 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3b3eb0 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0xa3b5014 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b40a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0xa3b5ef0 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0xa3b5800 <line:90:2, col:29>
    0xa3b5770 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3b57e0 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3b57b8 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3b57a8 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3b57d0 <col:23> '_Bool' false))")
  (IfStmt 0xa3b5e98 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0xa3b5810 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0xa3b5770 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3b5e70 <line:92:4, line:108:4>
      (DeclStmt 0xa3b58e8 <line:93:6, col:49>
        0xa3b5860 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3b58d8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3b58b4 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3b5b88 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b58f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3b5b70 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0xa3b5a48 <line:96:3, col:63>
            0xa3b5970 "const __num_get_type &__ng =
              (CallExpr 0xa3b5a28 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa3b59a8 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa3542d0)
                (CXXDependentScopeMemberExpr 0xa3b59f0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3b59e0 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa3b5b40 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3b5a70 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0xa3b5a58 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa3b5970 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa3b5ab8 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa3b5aa8 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa3b5ad0 <col:19> 'int' 0)
            (UnaryOperator 0xa3b5af8 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa3b5ae8 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3b5b0c <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b5860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa3b5b24 <col:36> '_ValueT' lvalue ParmVar 0xa3b54b0 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0xa3b5c88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b5ba8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3b5c70 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0xa3b5c40 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3b5bc8 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa3b5bb8 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3b5c1c <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3b5c60 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0xa3b5d78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b5ca8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3b5d60 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0xa3b5d40 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3b5cc8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa3b5cb8 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3b5d1c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3b5e50 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3b5dc0 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3b5db0 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3b5d94 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b5860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3b5e30 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3b5de0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa3b5dd0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3b5e14 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b5860 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3b5ee0 <line:109:2, col:10>
    (UnaryOperator 0xa3b5ec8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3b5eb8 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0xa3b83f8 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0xa3b6570 <line:119:7, col:34>
    0xa3b64e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3b6550 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3b6528 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3b6518 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3b6540 <col:28> '_Bool' false))")
  (IfStmt 0xa3b83a0 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3b6580 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0xa3b64e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3b8378 <line:121:2, line:153:2>
      (DeclStmt 0xa3b6658 <line:122:4, col:47>
        0xa3b65d0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3b6648 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3b6624 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3b8090 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b6668 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3b8070 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0xa3b66c8 <line:125:8, col:16>
            0xa3b6690 "long __l")
          (DeclStmt 0xa3b67c8 <line:126:8, col:68>
            0xa3b66f0 "const __num_get_type &__ng =
              (CallExpr 0xa3b67a8 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa3b6728 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa3542d0)
                (CXXDependentScopeMemberExpr 0xa3b6770 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3b6760 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa3b68c0 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3b67f0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3b67d8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa3b66f0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa3b6838 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa3b6828 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa3b6850 <col:24> 'int' 0)
            (UnaryOperator 0xa3b6878 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa3b6868 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3b688c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b65d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa3b68a4 <col:41> 'long' lvalue Var 0xa3b6690 '__l' 'long'))
          (IfStmt 0xa3b8050 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0xa3b7a88 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0xa3b7a58 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa3b68f0 <col:12> 'long' lvalue Var 0xa3b6690 '__l' 'long'))
              (ImplicitCastExpr 0xa3b7a78 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa3b7a68 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa3b7a38 <col:18, col:54> 'const short':'const short' lvalue Var 0xa3b7150 '__min' 'const short':'const short'))))
            (CompoundStmt 0xa3b7c78 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0xa3b7b60 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa3b7b50 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa3b7b38 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa3b7acc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b65d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa3b7b28 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa3b7b04 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa3b7c60 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0xa3b7b84 <col:5> 'short' lvalue ParmVar 0xa3b6290 '__n' 'short &')
                (ImplicitCastExpr 0xa3b7c50 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa3b7c30 <col:11, col:47> 'const short':'const short' lvalue Var 0xa3b7150 '__min' 'const short':'const short'))))
            (IfStmt 0xa3b8030 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0xa3b7d90 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0xa3b7d60 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa3b7c90 <col:17> 'long' lvalue Var 0xa3b6690 '__l' 'long'))
                (ImplicitCastExpr 0xa3b7d80 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa3b7d70 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa3b7d40 <col:23, col:59> 'const short':'const short' lvalue Var 0xa3b73f0 '__max' 'const short':'const short'))))
              (CompoundStmt 0xa3b7f88 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0xa3b7e70 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3b7e60 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3b7e48 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa3b7ddc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b65d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa3b7e38 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3b7e14 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa3b7f70 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0xa3b7e94 <col:5> 'short' lvalue ParmVar 0xa3b6290 '__n' 'short &')
                  (ImplicitCastExpr 0xa3b7f60 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa3b7f40 <col:11, col:47> 'const short':'const short' lvalue Var 0xa3b73f0 '__max' 'const short':'const short'))))
              (BinaryOperator 0xa3b8018 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0xa3b7fa0 <col:3> 'short' lvalue ParmVar 0xa3b6290 '__n' 'short &')
                (CXXFunctionalCastExpr 0xa3b8000 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0xa3b7ff0 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0xa3b7fe0 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa3b7fc4 <col:15> 'long' lvalue Var 0xa3b6690 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa3b8190 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b80b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3b8178 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0xa3b8148 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3b80d0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3b80c0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3b8124 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3b8168 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0xa3b8280 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b81b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3b8268 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0xa3b8248 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3b81d0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3b81c0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3b8224 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3b8358 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3b82c8 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3b82b8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3b829c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b65d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3b8338 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3b82e8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3b82d8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3b831c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b65d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3b83e8 <line:154:7, col:15>
    (UnaryOperator 0xa3b83d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3b83c0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0xa3bca18 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0xa3b8a80 <line:164:7, col:34>
    0xa3b89f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3b8a60 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3b8a38 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3b8a28 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3b8a50 <col:28> '_Bool' false))")
  (IfStmt 0xa3bc9c0 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3b8a90 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0xa3b89f0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3bc998 <line:166:2, line:198:2>
      (DeclStmt 0xa3b8b68 <line:167:4, col:47>
        0xa3b8ae0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3b8b58 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3b8b34 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3bc6b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b8b78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3bc690 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0xa3b8bd8 <line:170:8, col:16>
            0xa3b8ba0 "long __l")
          (DeclStmt 0xa3b8cd8 <line:171:8, col:68>
            0xa3b8c00 "const __num_get_type &__ng =
              (CallExpr 0xa3b8cb8 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa3b8c38 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa3542d0)
                (CXXDependentScopeMemberExpr 0xa3b8c80 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3b8c70 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa3b8dd0 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3b8d00 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3b8ce8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa3b8c00 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa3b8d48 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa3b8d38 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa3b8d60 <col:24> 'int' 0)
            (UnaryOperator 0xa3b8d88 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa3b8d78 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3b8d9c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b8ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa3b8db4 <col:41> 'long' lvalue Var 0xa3b8ba0 '__l' 'long'))
          (IfStmt 0xa3bc670 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0xa3b8f00 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0xa3b8ed0 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa3b8e00 <col:12> 'long' lvalue Var 0xa3b8ba0 '__l' 'long'))
              (ImplicitCastExpr 0xa3b8ef0 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa3b8ee0 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa3b8eb0 <col:18, col:52> 'const int':'const int' lvalue Var 0xa1ae080 '__min' 'const int':'const int'))))
            (CompoundStmt 0xa3b90f8 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0xa3b8fe0 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa3b8fd0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa3b8fb8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa3b8f4c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b8ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa3b8fa8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa3b8f84 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa3b90e0 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0xa3b9004 <col:5> 'int' lvalue ParmVar 0xa3b87a0 '__n' 'int &')
                (ImplicitCastExpr 0xa3b90d0 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa3b90b0 <col:11, col:45> 'const int':'const int' lvalue Var 0xa1ae080 '__min' 'const int':'const int'))))
            (IfStmt 0xa3bc650 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0xa3b9210 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0xa3b91e0 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa3b9110 <col:17> 'long' lvalue Var 0xa3b8ba0 '__l' 'long'))
                (ImplicitCastExpr 0xa3b9200 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa3b91f0 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa3b91c0 <col:23, col:57> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))))
              (CompoundStmt 0xa3b9408 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0xa3b92f0 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3b92e0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3b92c8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa3b925c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b8ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa3b92b8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3b9294 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa3b93f0 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0xa3b9314 <col:5> 'int' lvalue ParmVar 0xa3b87a0 '__n' 'int &')
                  (ImplicitCastExpr 0xa3b93e0 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa3b93c0 <col:11, col:45> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))))
              (BinaryOperator 0xa3bc638 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0xa3bc5c0 <col:3> 'int' lvalue ParmVar 0xa3b87a0 '__n' 'int &')
                (CXXFunctionalCastExpr 0xa3bc620 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa3bc610 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa3bc600 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa3bc5e4 <col:13> 'long' lvalue Var 0xa3b8ba0 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa3bc7b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bc6d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3bc798 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0xa3bc768 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3bc6f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3bc6e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3bc744 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3bc788 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0xa3bc8a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bc7d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3bc888 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0xa3bc868 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3bc7f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3bc7e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3bc844 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3bc978 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3bc8e8 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3bc8d8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3bc8bc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b8ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3bc958 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3bc908 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3bc8f8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3bc93c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3b8ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3bca08 <line:199:7, col:15>
    (UnaryOperator 0xa3bc9f0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3bc9e0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0xa3bd998 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0xa3bd0c8 <line:207:7, col:50>
    0xa3bd040 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3bd0b8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3bd094 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3bd170 <line:208:7, col:34>
    0xa3bd0e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3bd150 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3bd128 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3bd118 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3bd140 <col:28> '_Bool' false))")
  (IfStmt 0xa3bd868 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0xa3bd1b0 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa3bd180 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa3bd0e0 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0xa3bd198 <col:21> '__streambuf_type *' lvalue ParmVar 0xa3bcdc0 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0xa3bd740 <line:210:2, line:226:2>
      (IfStmt 0xa3bd530 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bd1c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3bd510 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0xa3bd218 <line:213:8, col:20>
            0xa3bd1e0 "bool __ineof")
          (IfStmt 0xa3bd3f0 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0xa3bd320 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0xa3bd2f8 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0xa3bd228 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa2a3e10)
                (CallExpr 0xa3bd2a8 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3bd270 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3bd260 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0xa3bd2c4 <col:50> '__streambuf_type *' lvalue ParmVar 0xa3bcdc0 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0xa3bd2dc <col:59> '_Bool' lvalue Var 0xa3bd1e0 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0xa3bd3c8 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3bd3b8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3bd3a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3bd334 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bd040 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3bd390 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3bd36c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0xa3bd4f0 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3bd428 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3bd40c <col:12> '_Bool' lvalue Var 0xa3bd1e0 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0xa3bd4c8 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3bd4b8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3bd4a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3bd434 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bd040 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3bd490 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3bd46c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3bd630 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bd550 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3bd618 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0xa3bd5e8 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3bd570 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3bd560 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3bd5c4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3bd608 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0xa3bd720 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bd650 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3bd708 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0xa3bd6e8 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3bd670 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3bd660 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3bd6c4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa3bd848 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0xa3bd778 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa3bd75c <col:17> '__streambuf_type *' lvalue ParmVar 0xa3bcdc0 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa3bd820 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa3bd810 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3bd7f8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa3bd78c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bd040 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa3bd7e8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa3bd7c4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa3bd940 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3bd8b0 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3bd8a0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3bd884 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bd040 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3bd920 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3bd8d0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3bd8c0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3bd904 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bd040 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3bd988 <line:231:7, col:15>
    (UnaryOperator 0xa3bd970 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3bd960 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0xa3beaa0 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0xa3be090 <line:239:7, col:48>
    0xa3bdfc0 "const int_type __eof =
      (CallExpr 0xa3be070 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3be038 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0xa3be100 <line:240:7, col:27>
    0xa3be0b0 "int_type __c =
      (DeclRefExpr 0xa3be0e4 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3bdfc0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0xa3be158 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3be120 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3be110 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3be140 <col:19> 'int' 0))
  (DeclStmt 0xa3be228 <line:242:7, col:50>
    0xa3be1a0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3be218 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3be1f4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3be2d0 <line:243:7, col:33>
    0xa3be240 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3be2b0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3be288 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3be278 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3be2a0 <col:28> '_Bool' true))")
  (IfStmt 0xa3be840 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3be2e0 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0xa3be240 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3be820 <line:245:2, line:262:2>
      (IfStmt 0xa3be610 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3be2f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3be5f8 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0xa3be3e0 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0xa3be308 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3be0b0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa3be3c0 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3be388 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa3be368 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3be330 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3be320 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa3be5d8 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0xa3be4a8 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0xa3be480 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3be418 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3be44c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3be0b0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa3be464 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3bdfc0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0xa3be508 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa3be4d0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                (CXXThisExpr 0xa3be4c0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa3be4f0 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0xa3be5b0 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3be5a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3be588 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3be520 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3be1a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3be578 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3be554 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa3be710 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3be630 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3be6f8 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0xa3be6c8 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3be650 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3be640 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3be6a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3be6e8 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0xa3be800 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3be730 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3be7e8 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0xa3be7c8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3be750 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3be740 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3be7a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa3be980 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0xa3be8b0 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3be8a0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3be890 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa3be870 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
            (CXXThisExpr 0xa3be860 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa3be958 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa3be948 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3be930 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3be8c4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3be1a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa3be920 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3be8fc <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa3bea58 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3be9c8 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3be9b8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3be99c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3be1a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3bea38 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3be9e8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3be9d8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3bea1c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3be1a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3bea90 <line:267:7, col:14>
    (DeclRefExpr 0xa3bea74 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3be0b0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0xa3bfba8 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0xa3bf0f0 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3bf0b8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3bf0a8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3bf0d8 <col:19> 'int' 0))
  (DeclStmt 0xa3bf1c8 <line:276:7, col:50>
    0xa3bf140 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3bf1b8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3bf194 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3bf270 <line:277:7, col:33>
    0xa3bf1e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3bf250 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3bf228 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3bf218 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3bf240 <col:28> '_Bool' true))")
  (IfStmt 0xa3bf938 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3bf280 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0xa3bf1e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3bf918 <line:279:2, line:299:2>
      (IfStmt 0xa3bf708 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bf298 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3bf6f0 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0xa3bf3a8 <line:282:8, col:53>
            0xa3bf2b0 "const int_type __cb =
              (CallExpr 0xa3bf388 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3bf350 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa3bf330 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3bf2f8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3bf2e8 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa3bf6d0 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0xa3bf4c8 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0xa3bf4a0 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3bf3d8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3bf40c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3bf2b0 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0xa3bf480 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3bf448 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0xa3bf600 <line:285:3, line:288:3>
              (BinaryOperator 0xa3bf528 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0xa3bf4f0 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                  (CXXThisExpr 0xa3bf4e0 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0xa3bf510 <col:17> 'int' 1))
              (BinaryOperator 0xa3bf5e8 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa3bf540 <col:5> 'char_type':'_CharT' lvalue ParmVar 0xa3bee60 '__c' 'char_type &')
                (CallExpr 0xa3bf5c8 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3bf578 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3bf5ac <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3bf2b0 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0xa3bf6a8 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3bf698 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3bf680 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3bf618 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bf140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3bf670 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3bf64c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa3bf808 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bf728 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3bf7f0 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0xa3bf7c0 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3bf748 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3bf738 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3bf79c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3bf7e0 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0xa3bf8f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3bf828 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3bf8e0 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0xa3bf8c0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3bf848 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3bf838 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3bf89c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa3bfa78 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0xa3bf9a8 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3bf998 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3bf988 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa3bf968 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
            (CXXThisExpr 0xa3bf958 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa3bfa50 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa3bfa40 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3bfa28 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3bf9bc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bf140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa3bfa18 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3bf9f4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa3bfb50 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3bfac0 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3bfab0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3bfa94 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bf140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3bfb30 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3bfae0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3bfad0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3bfb14 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3bf140 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3bfb98 <line:304:7, col:15>
    (UnaryOperator 0xa3bfb80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3bfb70 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa3c13c8 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0xa3c0288 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c0250 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c0240 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c0270 <col:19> 'int' 0))
  (DeclStmt 0xa3c0358 <line:313:7, col:50>
    0xa3c02d0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3c0348 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c0324 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3c0400 <line:314:7, col:33>
    0xa3c0370 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c03e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c03b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c03a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c03d0 <col:28> '_Bool' true))")
  (IfStmt 0xa3c1078 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3c0410 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c0370 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3c1058 <line:316:2, line:342:2>
      (IfStmt 0xa3c0e48 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c0428 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3c0e20 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0xa3c0508 <line:319:8, col:67>
            0xa3c0440 "const int_type __idelim =
              (CallExpr 0xa3c04e8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c0498 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3c04cc <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa3bffe0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa3c05d0 <line:320:8, col:49>
            0xa3c0520 "const int_type __eof =
              (CallExpr 0xa3c05b0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c0578 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa3c0690 <line:321:8, col:46>
            0xa3c05f0 "__streambuf_type *__sb =
              (CallExpr 0xa3c0670 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c0638 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3c0628 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa3c0758 <line:322:8, col:36>
            0xa3c06b0 "int_type __c =
              (CallExpr 0xa3c0738 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c0700 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3c06e4 <col:23> '__streambuf_type *' lvalue Var 0xa3c05f0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa3c0c78 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0xa3c0a50 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0xa3c0970 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa3c0880 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3c0838 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
                  (CXXOperatorCallExpr 0xa3c07f8 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3c07b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                    (MemberExpr 0xa3c0778 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c0768 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa3c0798 <col:27> 'int' 1))
                  (DeclRefExpr 0xa3c081c <col:31> 'streamsize':'int' lvalue ParmVar 0xa3bffa0 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa3c0958 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0xa3c0930 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3c08c8 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3c08fc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c06b0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa3c0914 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c0520 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa3c0a38 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0xa3c0a10 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c09a8 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3c09dc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c06b0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa3c09f4 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c0440 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa3c0c58 <line:327:3, line:331:3>
              (BinaryOperator 0xa3c0b58 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0xa3c0ab0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa3c0a98 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa3c0a68 <col:6> 'char_type *' lvalue ParmVar 0xa3bff60 '__s' 'char_type *')))
                (CallExpr 0xa3c0b38 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c0ae8 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3c0b1c <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c06b0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa3c0ba0 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa3c0b80 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                  (CXXThisExpr 0xa3c0b70 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa3c0c40 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa3c0bb4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c06b0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa3c0c20 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c0be8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3c0bcc <col:11> '__streambuf_type *' lvalue Var 0xa3c05f0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa3c0e00 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0xa3c0d20 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c0cb8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3c0cec <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c06b0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3c0d04 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c0520 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3c0dd8 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3c0dc8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3c0db0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3c0d44 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c02d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3c0da0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3c0d7c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3c0f48 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c0e68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c0f30 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0xa3c0f00 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c0e88 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c0e78 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c0edc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3c0f20 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0xa3c1038 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c0f68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c1020 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0xa3c1000 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c0f88 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c0f78 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c0fdc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa3c1158 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0xa3c10d8 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa3c10c8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa3c1094 <col:11> 'streamsize':'int' lvalue ParmVar 0xa3bffa0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa3c10b0 <col:17> 'int' 0))
    (BinaryOperator 0xa3c1140 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa3c1108 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3c10f0 <col:3> 'char_type *' lvalue ParmVar 0xa3bff60 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa3c1128 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa3c1298 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0xa3c11c8 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3c11b8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3c11a8 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa3c1188 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
            (CXXThisExpr 0xa3c1178 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa3c1270 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa3c1260 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3c1248 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3c11dc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c02d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa3c1238 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c1214 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa3c1370 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3c12e0 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3c12d0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c12b4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c02d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3c1350 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3c1300 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c12f0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3c1334 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c02d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3c13b8 <line:351:7, col:15>
    (UnaryOperator 0xa3c13a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3c1390 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0xa3c2b50 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0xa3c1a50 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c1a18 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c1a08 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c1a38 <col:19> 'int' 0))
  (DeclStmt 0xa3c1b28 <line:360:7, col:50>
    0xa3c1aa0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3c1b18 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c1af4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3c1bd0 <line:361:7, col:33>
    0xa3c1b40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c1bb0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c1b88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c1b78 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c1ba0 <col:28> '_Bool' true))")
  (IfStmt 0xa3c28e0 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3c1be0 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c1b40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3c28c0 <line:363:2, line:390:2>
      (IfStmt 0xa3c26b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c1bf8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3c2680 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0xa3c1cd8 <line:366:8, col:67>
            0xa3c1c10 "const int_type __idelim =
              (CallExpr 0xa3c1cb8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c1c68 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3c1c9c <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa3c17c0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa3c1da0 <line:367:8, col:49>
            0xa3c1cf0 "const int_type __eof =
              (CallExpr 0xa3c1d80 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c1d48 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa3c1e60 <line:368:8, col:51>
            0xa3c1dc0 "__streambuf_type *__this_sb =
              (CallExpr 0xa3c1e40 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c1e08 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3c1df8 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa3c1f28 <line:369:8, col:41>
            0xa3c1e80 "int_type __c =
              (CallExpr 0xa3c1f08 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c1ed0 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3c1eb4 <col:23> '__streambuf_type *' lvalue Var 0xa3c1dc0 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0xa3c2008 <line:370:8, col:55>
            0xa3c1f40 "char_type __c2 =
              (CallExpr 0xa3c1fe8 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c1f98 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3c1fcc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c1e80 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0xa3c24d8 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0xa3c22f8 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0xa3c21a8 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0xa3c20c8 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0xa3c20a0 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3c2038 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3c206c <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c1e80 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa3c2084 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c1cf0 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0xa3c2190 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0xa3c2168 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3c2100 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3c2134 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c1e80 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa3c214c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c1c10 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa3c22e0 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0xa3c22b8 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c21e0 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0xa3c2280 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3c2230 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3c2214 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3c1780 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0xa3c2264 <col:48> 'char_type':'_CharT' lvalue Var 0xa3c1f40 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0xa3c22a0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c1cf0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa3c24b8 <line:375:3, line:379:3>
              (UnaryOperator 0xa3c2340 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa3c2320 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                  (CXXThisExpr 0xa3c2310 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa3c23e0 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0xa3c2354 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c1e80 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa3c23c0 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c2388 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3c236c <col:11> '__streambuf_type *' lvalue Var 0xa3c1dc0 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0xa3c24a0 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa3c23f8 <col:5> 'char_type':'_CharT' lvalue Var 0xa3c1f40 '__c2' 'char_type':'_CharT')
                (CallExpr 0xa3c2480 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c2430 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3c2464 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c1e80 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0xa3c2660 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0xa3c2580 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c2518 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3c254c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c1e80 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3c2564 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c1cf0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3c2638 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3c2628 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3c2610 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3c25a4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c1aa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3c2600 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3c25dc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3c27b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c26d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c2798 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0xa3c2768 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c26f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c26e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c2744 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3c2788 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0xa3c28a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c27d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c2888 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0xa3c2868 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c27f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c27e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c2844 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa3c2a20 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0xa3c2950 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3c2940 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3c2930 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa3c2910 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
            (CXXThisExpr 0xa3c2900 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa3c29f8 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa3c29e8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3c29d0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3c2964 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c1aa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa3c29c0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c299c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa3c2af8 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3c2a68 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3c2a58 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c2a3c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c1aa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3c2ad8 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3c2a88 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c2a78 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3c2abc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c1aa0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3c2b40 <line:395:7, col:15>
    (UnaryOperator 0xa3c2b28 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3c2b18 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa3c45f0 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0xa3c3228 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c31f0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c31e0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c3210 <col:19> 'int' 0))
  (DeclStmt 0xa3c32f8 <line:404:7, col:50>
    0xa3c3270 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3c32e8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c32c4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3c33a0 <line:405:7, col:33>
    0xa3c3310 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c3380 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c3358 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c3348 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c3370 <col:28> '_Bool' true))")
  (IfStmt 0xa3c4290 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0xa3c33b0 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c3310 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3c4270 <line:407:9, line:443:9>
      (IfStmt 0xa3c4060 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c33c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3c4038 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0xa3c34a8 <line:410:15, col:74>
            0xa3c33e0 "const int_type __idelim =
              (CallExpr 0xa3c3488 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c3438 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3c346c <col:66> 'char_type':'_CharT' lvalue ParmVar 0xa3c2f80 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa3c3570 <line:411:15, col:56>
            0xa3c34c0 "const int_type __eof =
              (CallExpr 0xa3c3550 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c3518 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa3c3630 <line:412:15, col:53>
            0xa3c3590 "__streambuf_type *__sb =
              (CallExpr 0xa3c3610 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c35d8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3c35c8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa3c36f8 <line:413:15, col:43>
            0xa3c3650 "int_type __c =
              (CallExpr 0xa3c36d8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c36a0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3c3684 <col:30> '__streambuf_type *' lvalue Var 0xa3c3590 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa3c3c18 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0xa3c39f0 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0xa3c3910 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa3c3820 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3c37d8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
                  (CXXOperatorCallExpr 0xa3c3798 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3c3750 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                    (MemberExpr 0xa3c3718 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c3708 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa3c3738 <col:34> 'int' 1))
                  (DeclRefExpr 0xa3c37bc <col:38> 'streamsize':'int' lvalue ParmVar 0xa3c2f40 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa3c38f8 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0xa3c38d0 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3c3868 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3c389c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c3650 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa3c38b4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c34c0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa3c39d8 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0xa3c39b0 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c3948 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3c397c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c3650 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa3c3994 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c33e0 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa3c3bf8 <line:418:17, line:422:17>
              (BinaryOperator 0xa3c3af8 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0xa3c3a50 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa3c3a38 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa3c3a08 <col:20> 'char_type *' lvalue ParmVar 0xa3c2f00 '__s' 'char_type *')))
                (CallExpr 0xa3c3ad8 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c3a88 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3c3abc <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c3650 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0xa3c3b98 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0xa3c3b10 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c3650 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa3c3b78 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c3b40 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3c3b28 <col:25> '__streambuf_type *' lvalue Var 0xa3c3590 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0xa3c3be0 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0xa3c3bc0 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                  (CXXThisExpr 0xa3c3bb0 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0xa3c4018 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0xa3c3cc0 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c3c58 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3c3c8c <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c3650 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3c3ca4 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c34c0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3c3d78 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3c3d68 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3c3d50 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3c3ce4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c3270 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3c3d40 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3c3d1c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0xa3c4000 <line:426:17, line:434:17>
              (IfStmt 0xa3c3fe0 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0xa3c3e30 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c3dc8 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3c3dfc <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c3650 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa3c3e14 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c33e0 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0xa3c3f10 <line:428:21, line:431:21>
                  (CallExpr 0xa3c3ea8 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3c3e70 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3c3e54 <col:23> '__streambuf_type *' lvalue Var 0xa3c3590 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa3c3ef8 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0xa3c3ed8 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c3ec8 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0xa3c3fb8 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3c3fa8 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3c3f90 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa3c3f28 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c3270 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa3c3f80 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3c3f5c <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa3c4160 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c4080 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c4148 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0xa3c4118 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c40a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c4090 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c40f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3c4138 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0xa3c4250 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c4180 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c4238 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0xa3c4218 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c41a0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c4190 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c41f4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa3c4370 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0xa3c42f0 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa3c42e0 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa3c42ac <col:11> 'streamsize':'int' lvalue ParmVar 0xa3c2f40 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa3c42c8 <col:17> 'int' 0))
    (BinaryOperator 0xa3c4358 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa3c4320 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa3c4308 <col:3> 'char_type *' lvalue ParmVar 0xa3c2f00 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa3c4340 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa3c44b0 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0xa3c43e0 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3c43d0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3c43c0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa3c43a0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
            (CXXThisExpr 0xa3c4390 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa3c4488 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa3c4478 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3c4460 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3c43f4 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c3270 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa3c4450 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c442c <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa3c4588 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3c44f8 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3c44e8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3c44cc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c3270 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3c4568 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3c4518 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa3c4508 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3c454c <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c3270 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3c45e0 <line:452:7, col:15>
    (UnaryOperator 0xa3c45c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3c45a8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0xa3c5530 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0xa3c4c18 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c4be0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c4bd0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c4c00 <col:19> 'int' 0))
  (DeclStmt 0xa3c4cd0 <line:464:7, col:33>
    0xa3c4c40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c4cb0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c4c88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c4c78 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c4ca0 <col:28> '_Bool' true))")
  (IfStmt 0xa3c54d8 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3c4ce0 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c4c40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3c54b0 <line:466:2, line:487:2>
      (DeclStmt 0xa3c4db8 <line:467:4, col:47>
        0xa3c4d30 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3c4da8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c4d84 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3c51c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c4dc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3c51a8 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0xa3c4e90 <line:470:8, col:49>
            0xa3c4de0 "const int_type __eof =
              (CallExpr 0xa3c4e70 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c4e38 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa3c4f50 <line:471:8, col:46>
            0xa3c4eb0 "__streambuf_type *__sb =
              (CallExpr 0xa3c4f30 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c4ef8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3c4ee8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa3c5188 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0xa3c5048 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c4f88 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0xa3c5010 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c4fd8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3c4fbc <col:37> '__streambuf_type *' lvalue Var 0xa3c4eb0 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0xa3c502c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c4de0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3c5100 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3c50f0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3c50d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3c506c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c4d30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3c50c8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3c50a4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa3c5170 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa3c5138 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                (CXXThisExpr 0xa3c5128 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa3c5158 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0xa3c52c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c51e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c52b0 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0xa3c5280 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c5208 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c51f8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c525c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3c52a0 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0xa3c53b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c52e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c53a0 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0xa3c5380 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c5308 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c52f8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c535c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3c5490 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3c5400 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3c53f0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c53d4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c4d30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3c5470 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c5420 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3c5410 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3c5454 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c4d30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3c5520 <line:488:7, col:15>
    (UnaryOperator 0xa3c5508 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3c54f8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0xa3c6ce0 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0xa3c5b60 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c5b28 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c5b18 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c5b48 <col:19> 'int' 0))
  (DeclStmt 0xa3c5c10 <line:497:7, col:33>
    0xa3c5b80 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c5bf0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c5bc8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c5bb8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c5be0 <col:28> '_Bool' true))")
  (IfStmt 0xa3c6c88 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0xa3c5c90 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa3c5c20 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c5b80 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa3c5c78 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa3c5c68 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa3c5c38 <col:21> 'streamsize':'int' lvalue ParmVar 0xa3c58d0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa3c5c50 <col:27> 'int' 0)))
    (CompoundStmt 0xa3c6c60 <line:499:9, line:549:9>
      (DeclStmt 0xa3c5d68 <line:500:11, col:54>
        0xa3c5ce0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3c5d58 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c5d34 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3c6978 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c5d78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3c6948 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0xa3c5e40 <line:503:15, col:56>
            0xa3c5d90 "const int_type __eof =
              (CallExpr 0xa3c5e20 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c5de8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa3c5f00 <line:504:15, col:53>
            0xa3c5e60 "__streambuf_type *__sb =
              (CallExpr 0xa3c5ee0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c5ea8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3c5e98 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa3c5fc8 <line:505:15, col:43>
            0xa3c5f20 "int_type __c =
              (CallExpr 0xa3c5fa8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c5f70 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3c5f54 <col:30> '__streambuf_type *' lvalue Var 0xa3c5e60 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa3c6028 <line:514:8, col:35>
            0xa3c5fe0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa3c6018 <col:30> '_Bool' false)")
          (WhileStmt 0xa3c6660 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa3c6038 <line:515:15> '_Bool' true)
            (CompoundStmt 0xa3c6648 <line:516:3, line:532:3>
              (WhileStmt 0xa3c62e0 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0xa3c61c8 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0xa3c60d8 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3c6090 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
                    (MemberExpr 0xa3c6058 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c6048 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa3c6078 <col:24> 'streamsize':'int' lvalue ParmVar 0xa3c58d0 '__n' 'streamsize':'int'))
                  (UnaryOperator 0xa3c61b0 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0xa3c6188 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3c6120 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa3c6154 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c5f20 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa3c616c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c5d90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa3c62c8 <line:519:7, line:522:7>
                  (UnaryOperator 0xa3c6210 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa3c61f0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c61e0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa3c62b0 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa3c6224 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c5f20 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa3c6290 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3c6258 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa3c623c <col:15> '__streambuf_type *' lvalue Var 0xa3c5e60 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa3c6628 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0xa3c64c0 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0xa3c63e0 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0xa3c63c0 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa3c62f4 <col:9> 'streamsize':'int' lvalue ParmVar 0xa3c58d0 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0xa3c63d0 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0xa3c63a0 <col:16, col:57> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int')))
                  (UnaryOperator 0xa3c64a8 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0xa3c6480 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3c6418 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa3c644c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c5f20 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa3c6464 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c5d90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa3c6608 <line:525:7, line:529:7>
                  (BinaryOperator 0xa3c65b0 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0xa3c64e8 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c64d8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa3c6590 <line:527:4, col:45> 'const int':'const int' lvalue Var 0xa1ae080 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa3c65f0 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa3c65c8 <col:9> '_Bool' lvalue Var 0xa3c5fe0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa3c65e0 <col:26> '_Bool' true)))
                (BreakStmt 0xa3c6620 <line:531:7>))))
          (IfStmt 0xa3c6798 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3c6690 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3c6674 <col:12> '_Bool' lvalue Var 0xa3c5fe0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa3c6780 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa3c66b0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                (CXXThisExpr 0xa3c66a0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa3c6760 <col:15, col:56> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa3c6928 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0xa3c6848 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c67e0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3c6814 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c5f20 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3c682c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c5d90 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3c6900 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3c68f0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3c68d8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3c686c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c5ce0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3c68c8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3c68a4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3c6a78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c6998 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c6a60 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0xa3c6a30 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c69b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c69a8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c6a0c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3c6a50 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0xa3c6b68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c6a98 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c6b50 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0xa3c6b30 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c6ab8 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c6aa8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c6b0c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3c6c40 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3c6bb0 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3c6ba0 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c6b84 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c5ce0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3c6c20 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c6bd0 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa3c6bc0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3c6c04 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c5ce0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3c6cd0 <line:550:7, col:15>
    (UnaryOperator 0xa3c6cb8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3c6ca8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0xa3c89a8 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0xa3c7350 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c7318 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c7308 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c7338 <col:19> 'int' 0))
  (DeclStmt 0xa3c7400 <line:559:7, col:33>
    0xa3c7370 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c73e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c73b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c73a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c73d0 <col:28> '_Bool' true))")
  (IfStmt 0xa3c8950 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0xa3c7480 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa3c7410 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c7370 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa3c7468 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa3c7458 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa3c7428 <col:21> 'streamsize':'int' lvalue ParmVar 0xa3c7080 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa3c7440 <col:27> 'int' 0)))
    (CompoundStmt 0xa3c8928 <line:561:9, line:614:9>
      (DeclStmt 0xa3c7558 <line:562:11, col:54>
        0xa3c74d0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3c7548 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c7524 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3c8640 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c7568 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3c8610 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0xa3c7630 <line:565:15, col:56>
            0xa3c7580 "const int_type __eof =
              (CallExpr 0xa3c7610 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c75d8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa3c76f0 <line:566:15, col:53>
            0xa3c7650 "__streambuf_type *__sb =
              (CallExpr 0xa3c76d0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c7698 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3c7688 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa3c77b8 <line:567:15, col:43>
            0xa3c7710 "int_type __c =
              (CallExpr 0xa3c7798 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c7760 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3c7744 <col:30> '__streambuf_type *' lvalue Var 0xa3c7650 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa3c7818 <line:570:8, col:35>
            0xa3c77d0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa3c7808 <col:30> '_Bool' false)")
          (WhileStmt 0xa3c8010 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa3c7828 <line:571:15> '_Bool' true)
            (CompoundStmt 0xa3c7ff8 <line:572:3, line:590:3>
              (WhileStmt 0xa3c7bb0 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0xa3c7a98 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0xa3c79b8 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0xa3c78c8 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0xa3c7880 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
                      (MemberExpr 0xa3c7848 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                        (CXXThisExpr 0xa3c7838 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0xa3c7868 <col:24> 'streamsize':'int' lvalue ParmVar 0xa3c7080 '__n' 'streamsize':'int'))
                    (UnaryOperator 0xa3c79a0 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0xa3c7978 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa3c7910 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa3c7944 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c7710 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa3c795c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c7580 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa3c7a80 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0xa3c7a58 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3c79f0 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa3c7a24 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c7710 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa3c7a3c <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa3c70c0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa3c7b98 <line:576:7, line:579:7>
                  (UnaryOperator 0xa3c7ae0 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa3c7ac0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c7ab0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa3c7b80 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa3c7af4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c7710 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa3c7b60 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3c7b28 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa3c7b0c <col:15> '__streambuf_type *' lvalue Var 0xa3c7650 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa3c7fd8 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0xa3c7e70 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0xa3c7d90 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0xa3c7cb0 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0xa3c7c90 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa3c7bc4 <col:9> 'streamsize':'int' lvalue ParmVar 0xa3c7080 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0xa3c7ca0 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0xa3c7c70 <col:16, col:57> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int')))
                    (UnaryOperator 0xa3c7d78 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0xa3c7d50 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa3c7ce8 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa3c7d1c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c7710 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa3c7d34 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c7580 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa3c7e58 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0xa3c7e30 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3c7dc8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa3c7dfc <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c7710 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa3c7e14 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa3c70c0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa3c7fb8 <line:583:7, line:587:7>
                  (BinaryOperator 0xa3c7f60 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0xa3c7e98 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c7e88 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa3c7f40 <line:585:4, col:45> 'const int':'const int' lvalue Var 0xa1ae080 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa3c7fa0 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa3c7f78 <col:9> '_Bool' lvalue Var 0xa3c77d0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa3c7f90 <col:26> '_Bool' true)))
                (BreakStmt 0xa3c7fd0 <line:589:7>))))
          (IfStmt 0xa3c8148 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3c8040 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3c8024 <col:12> '_Bool' lvalue Var 0xa3c77d0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa3c8130 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa3c8060 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                (CXXThisExpr 0xa3c8050 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa3c8110 <col:15, col:56> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa3c85f0 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0xa3c81f8 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c8190 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3c81c4 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c7710 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3c81dc <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3c7580 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3c82b0 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3c82a0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3c8288 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3c821c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c74d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3c8278 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3c8254 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa3c85d0 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0xa3c8368 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c8300 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3c8334 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c7710 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa3c834c <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa3c70c0 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0xa3c85b8 <line:598:3, line:603:3>
                (IfStmt 0xa3c8528 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa3c84b8 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3c8470 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
                    (MemberExpr 0xa3c83a0 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c8390 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa3c8450 <line:600:11, col:52> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))
                  (UnaryOperator 0xa3c8510 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0xa3c84f0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                      (CXXThisExpr 0xa3c84e0 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0xa3c8598 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c8560 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3c8544 <col:5> '__streambuf_type *' lvalue Var 0xa3c7650 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa3c8740 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c8660 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c8728 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0xa3c86f8 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c8680 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c8670 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c86d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3c8718 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0xa3c8830 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c8760 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c8818 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0xa3c87f8 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c8780 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c8770 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c87d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3c8908 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3c8878 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3c8868 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c884c <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c74d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3c88e8 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c8898 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa3c8888 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3c88cc <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c74d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3c8998 <line:615:7, col:15>
    (UnaryOperator 0xa3c8980 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3c8970 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0xa3c98e8 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0xa3c9080 <line:623:7, col:40>
    0xa3c8fd0 "int_type __c =
      (CallExpr 0xa3c9060 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c9028 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0xa3c90d8 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c90a0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c9090 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c90c0 <col:19> 'int' 0))
  (DeclStmt 0xa3c9190 <line:625:7, col:33>
    0xa3c9100 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c9170 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c9148 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c9138 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c9160 <col:28> '_Bool' true))")
  (IfStmt 0xa3c98a0 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3c91a0 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c9100 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3c9878 <line:627:2, line:644:2>
      (DeclStmt 0xa3c9278 <line:628:4, col:47>
        0xa3c91f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3c9268 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c9244 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3c9590 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c9288 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3c9578 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0xa3c9370 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa3c9298 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c8fd0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa3c9350 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c9318 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa3c92f8 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3c92c0 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3c92b0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa3c9558 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0xa3c9478 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c93b0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3c93e4 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c8fd0 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0xa3c9458 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3c9420 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa3c9530 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3c9520 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3c9508 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3c949c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c91f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3c94f8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3c94d4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3c9690 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c95b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c9678 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0xa3c9648 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c95d0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c95c0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c9624 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3c9668 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0xa3c9780 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3c96b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3c9768 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0xa3c9748 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c96d0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3c96c0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3c9724 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3c9858 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3c97c8 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3c97b8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3c979c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c91f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3c9838 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c97e8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3c97d8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3c981c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3c91f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3c98d8 <line:645:7, col:14>
    (DeclRefExpr 0xa3c98bc <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3c8fd0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0xa3ca838 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0xa3c9f60 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3c9f28 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3c9f18 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3c9f48 <col:19> 'int' 0))
  (DeclStmt 0xa3ca010 <line:654:7, col:33>
    0xa3c9f80 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3c9ff0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3c9fc8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3c9fb8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3c9fe0 <col:28> '_Bool' true))")
  (IfStmt 0xa3ca7e0 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3ca020 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0xa3c9f80 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3ca7b8 <line:656:2, line:673:2>
      (DeclStmt 0xa3ca0f8 <line:657:4, col:47>
        0xa3ca070 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3ca0e8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3ca0c4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3ca4d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3ca108 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3ca4b8 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0xa3ca240 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0xa3ca128 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
              (CXXThisExpr 0xa3ca118 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0xa3ca218 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3ca1b0 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0xa3ca190 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ca158 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3ca148 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0xa3ca1e4 <col:41> 'char_type *' lvalue ParmVar 0xa3c9c90 '__s' 'char_type *')
              (DeclRefExpr 0xa3ca1fc <col:46> 'streamsize':'int' lvalue ParmVar 0xa3c9cd0 '__n' 'streamsize':'int')))
          (IfStmt 0xa3ca498 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa3ca2f8 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0xa3ca2a0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
              (MemberExpr 0xa3ca268 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                (CXXThisExpr 0xa3ca258 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa3ca288 <col:25> 'streamsize':'int' lvalue ParmVar 0xa3c9cd0 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0xa3ca470 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3ca460 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3ca448 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3ca31c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3ca070 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa3ca430 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa3ca408 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa3ca3f8 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3ca3e0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa275bb0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa3ca3c0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3ca360 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa3ca3d0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3ca39c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3ca5d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3ca4f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3ca5b8 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0xa3ca588 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ca510 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3ca500 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3ca564 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3ca5a8 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0xa3ca6c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3ca5f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3ca6a8 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0xa3ca688 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ca610 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3ca600 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3ca664 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3ca798 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3ca708 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3ca6f8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3ca6dc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3ca070 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3ca778 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3ca728 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3ca718 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3ca75c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3ca070 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3ca828 <line:674:7, col:15>
    (UnaryOperator 0xa3ca810 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3ca800 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0xa3cb6e0 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0xa3cac80 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3cac48 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3cac38 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3cac68 <col:19> 'int' 0))
  (DeclStmt 0xa3cad30 <line:683:7, col:33>
    0xa3caca0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3cad10 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3cace8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3cacd8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3cad00 <col:28> '_Bool' true))")
  (IfStmt 0xa3cb680 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3cad40 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0xa3caca0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3cb658 <line:685:2, line:705:2>
      (DeclStmt 0xa3cae18 <line:686:4, col:47>
        0xa3cad90 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3cae08 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3cade4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3cb370 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cae28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3cb358 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0xa3caf38 <line:690:8, col:58>
            0xa3cae40 "const streamsize __num =
              (CallExpr 0xa3caf18 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3caee0 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0xa3caec0 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3cae88 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3cae78 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa3cb338 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0xa3caf88 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0xa3caf78 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa3caf48 <col:12> 'const streamsize':'const int' lvalue Var 0xa3cae40 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0xa3caf60 <col:20> 'int' 0))
            (BinaryOperator 0xa3cb1d8 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0xa3cafb0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
                (CXXThisExpr 0xa3cafa0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0xa3cb1b0 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3cb038 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0xa3cb018 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3cafe0 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3cafd0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa3cb06c <col:36> 'char_type *' lvalue ParmVar 0xa3cab00 '__s' 'char_type *')
                (CallExpr 0xa3cb178 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa3cb168 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3cb140 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0xa2a20f0 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0xa081c30 'min')))
                  (DeclRefExpr 0xa3cb0e0 <col:50> 'const streamsize':'const int' lvalue Var 0xa3cae40 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0xa3cb1a0 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0xa3cb0f8 <col:57> 'streamsize':'int' lvalue ParmVar 0xa3cab40 '__n' 'streamsize':'int')))))
            (IfStmt 0xa3cb318 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0xa3cb248 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0xa3cb238 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa3cb1f0 <col:17> 'const streamsize':'const int' lvalue Var 0xa3cae40 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0xa3cb220 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0xa3cb208 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0xa3cb2f0 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa3cb2e0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa3cb2c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa3cb260 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cad90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa3cb2b8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa3cb294 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa3cb470 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cb390 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3cb458 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0xa3cb428 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3cb3b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3cb3a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3cb404 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3cb448 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0xa3cb560 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cb490 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3cb548 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0xa3cb528 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3cb4b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3cb4a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3cb504 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3cb638 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3cb5a8 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3cb598 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3cb57c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cad90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3cb618 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3cb5c8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3cb5b8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3cb5fc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cad90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3cb6d0 <line:706:7, col:14>
    (MemberExpr 0xa3cb6b0 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3cb6a0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0xa3cdc30 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0xa3cbd10 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3cbcd8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3cbcc8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3cbcf8 <col:19> 'int' 0))
  (CallExpr 0xa3cbef0 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3cbd38 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa3cbd28 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa3cbec8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa3cbe88 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (CallExpr 0xa3cbdb8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3cbd80 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa3cbd70 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa3cbe68 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa3cbe58 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3cbe28 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa278890 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa3cbe18 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa3cbdf4 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa3cbfb0 <line:719:7, col:33>
    0xa3cbf20 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3cbf90 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3cbf68 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3cbf58 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3cbf80 <col:28> '_Bool' true))")
  (IfStmt 0xa3cdbd8 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3cbfc0 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0xa3cbf20 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3cdbb0 <line:721:2, line:740:2>
      (DeclStmt 0xa3cc098 <line:722:4, col:47>
        0xa3cc010 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3cc088 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3cc064 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3cc4a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cc0a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3cc480 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0xa3cc170 <line:725:8, col:49>
            0xa3cc0c0 "const int_type __eof =
              (CallExpr 0xa3cc150 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3cc118 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa3cc230 <line:726:8, col:46>
            0xa3cc190 "__streambuf_type *__sb =
              (CallExpr 0xa3cc210 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3cc1d8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3cc1c8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa3cc460 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0xa3cc390 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0xa3cc258 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa3cc240 <col:13> '__streambuf_type *' lvalue Var 0xa3cc190 '__sb' '__streambuf_type *'))
              (CallExpr 0xa3cc368 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3cc290 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa3cc330 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3cc2e0 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3cc2c4 <col:33> '__streambuf_type *' lvalue Var 0xa3cc190 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0xa3cc314 <col:49> 'char_type':'_CharT' lvalue ParmVar 0xa3cba80 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0xa3cc350 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3cc0c0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa3cc438 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3cc428 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3cc410 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3cc3a8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cc010 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3cc400 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3cc3dc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3cc5a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cc4c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3cc588 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0xa3cc558 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3cc4e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3cc4d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3cc534 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3cc578 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0xa3cdab8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cd9e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3cdaa0 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0xa3cda80 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3cda08 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3cd9f8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3cda5c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3cdb90 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3cdb00 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3cdaf0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3cdad4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cc010 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3cdb70 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3cdb20 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3cdb10 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3cdb54 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cc010 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3cdc20 <line:741:7, col:15>
    (UnaryOperator 0xa3cdc08 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3cdbf8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0xa3ced20 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0xa3ce258 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa3ce220 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa39a0e0
      (CXXThisExpr 0xa3ce210 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa3ce240 <col:19> 'int' 0))
  (CallExpr 0xa3ce420 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ce280 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa3ce270 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa3ce3f8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ce3b8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (CallExpr 0xa3ce300 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3ce2c8 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa3ce2b8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa3ce398 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa3ce388 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3ce370 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa278890 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa3ce360 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa3ce33c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa3ce4e0 <line:754:7, col:33>
    0xa3ce450 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3ce4c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3ce498 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3ce488 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3ce4b0 <col:28> '_Bool' true))")
  (IfStmt 0xa3cecc8 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3ce4f0 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0xa3ce450 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3ceca0 <line:756:2, line:775:2>
      (DeclStmt 0xa3ce5c8 <line:757:4, col:47>
        0xa3ce540 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3ce5b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3ce594 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3ce9b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3ce5d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3ce998 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0xa3ce6a0 <line:760:8, col:49>
            0xa3ce5f0 "const int_type __eof =
              (CallExpr 0xa3ce680 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ce648 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa3ce760 <line:761:8, col:46>
            0xa3ce6c0 "__streambuf_type *__sb =
              (CallExpr 0xa3ce740 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ce708 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ce6f8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa3ce978 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0xa3ce8a8 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0xa3ce788 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa3ce770 <col:13> '__streambuf_type *' lvalue Var 0xa3ce6c0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa3ce880 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ce7c0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa3ce848 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ce810 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3ce7f4 <col:33> '__streambuf_type *' lvalue Var 0xa3ce6c0 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0xa3ce864 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3ce5f0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa3ce950 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3ce940 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3ce928 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3ce8c0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3ce540 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3ce918 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3ce8f4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3ceab8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3ce9d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3ceaa0 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0xa3cea70 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ce9f8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3ce9e8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3cea4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3cea90 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0xa3ceba8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cead8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3ceb90 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0xa3ceb70 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ceaf8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3ceae8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3ceb4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3cec80 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3cebf0 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3cebe0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3cebc4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3ce540 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3cec60 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3cec10 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3cec00 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3cec44 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3ce540 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3ced10 <line:776:7, col:15>
    (UnaryOperator 0xa3cecf8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3cece8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0xa3cf9d8 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0xa3cf148 <line:786:7, col:21>
    0xa3cf0e0 "int __ret =
      (UnaryOperator 0xa3cf130 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0xa3cf118 <col:20> 'int' 1))")
  (DeclStmt 0xa3cf1f0 <line:787:7, col:33>
    0xa3cf160 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3cf1d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3cf1a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3cf198 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3cf1c0 <col:28> '_Bool' true))")
  (IfStmt 0xa3cf980 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3cf200 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0xa3cf160 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3cf958 <line:789:2, line:811:2>
      (DeclStmt 0xa3cf2d8 <line:790:4, col:47>
        0xa3cf250 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3cf2c8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3cf2a4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3cf670 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cf2e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3cf658 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0xa3cf3b0 <line:793:8, col:46>
            0xa3cf310 "__streambuf_type *__sb =
              (CallExpr 0xa3cf390 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3cf358 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3cf348 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa3cf638 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0xa3cf3c0 <line:794:12> '__streambuf_type *' lvalue Var 0xa3cf310 '__sb' '__streambuf_type *')
            (CompoundStmt 0xa3cf620 <line:795:3, line:800:3>
              (IfStmt 0xa3cf600 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa3cf4d8 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3cf478 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (CallExpr 0xa3cf428 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3cf3f0 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3cf3d8 <col:9> '__streambuf_type *' lvalue Var 0xa3cf310 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa3cf460 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0xa3cf448 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0xa3cf590 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3cf580 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3cf568 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa3cf4fc <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cf250 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa3cf558 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3cf534 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa3cf5e8 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0xa3cf5b4 <col:7> 'int' lvalue Var 0xa3cf0e0 '__ret' 'int')
                  (IntegerLiteral 0xa3cf5d0 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3cf770 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cf690 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3cf758 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0xa3cf728 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3cf6b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3cf6a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3cf704 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3cf748 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0xa3cf860 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3cf790 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3cf848 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0xa3cf828 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3cf7b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3cf7a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3cf804 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3cf938 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3cf8a8 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3cf898 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3cf87c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cf250 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3cf918 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3cf8c8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3cf8b8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3cf8fc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3cf250 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3cf9c8 <line:812:7, col:14>
    (ImplicitCastExpr 0xa3cf9b8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa3cf99c <col:14> 'int' lvalue Var 0xa3cf0e0 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0xa3d0658 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0xa3d00b0 <line:822:7, col:36>
    0xa3d0020 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa3d0090 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa3d0078 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa3d0060 <col:34> 'int' 1)))")
  (DeclStmt 0xa3d0160 <line:823:7, col:33>
    0xa3d00d0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3d0140 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3d0118 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3d0108 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3d0130 <col:28> '_Bool' true))")
  (IfStmt 0xa3d0610 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3d0170 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0xa3d00d0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3d05f0 <line:825:2, line:839:2>
      (IfStmt 0xa3d03e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d0188 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3d03c8 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0xa3d03a8 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0xa3d0200 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa3d01e0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d01a8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3d0198 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0xa3d0390 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0xa3d0214 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa3d0020 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0xa3d0368 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d0298 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa3d0278 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3d0240 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3d0230 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0xa3d02d0 <col:37> 'int' 0)
                (DeclRefExpr 0xa3d0304 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa27a5c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa3d0344 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3d04e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d0400 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d04c8 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0xa3d0498 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d0420 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d0410 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3d0474 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3d04b8 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0xa3d05d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d0500 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d05b8 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0xa3d0598 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d0520 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d0510 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3d0574 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3d0648 <line:840:7, col:14>
    (DeclRefExpr 0xa3d062c <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa3d0020 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0xa3d1758 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0xa3d0df8 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3d0c58 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa3d0c48 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa3d0dd0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d0d90 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (CallExpr 0xa3d0cd8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d0ca0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d0c90 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa3d0d70 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa3d0d60 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3d0d48 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa278890 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa3d0d38 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa3d0d14 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa3d0eb0 <line:852:7, col:33>
    0xa3d0e20 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3d0e90 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3d0e68 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3d0e58 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3d0e80 <col:28> '_Bool' true))")
  (IfStmt 0xa3d1700 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3d0ec0 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0xa3d0e20 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3d16d8 <line:854:2, line:878:2>
      (DeclStmt 0xa3d0f98 <line:855:4, col:47>
        0xa3d0f10 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3d0f88 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d0f64 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3d13f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d0fa8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3d13d8 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0xa3d13b8 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0xa3d1020 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa3d1000 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d0fc8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3d0fb8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa3d13a0 <line:859:3, line:867:3>
              (DeclStmt 0xa3d1198 <line:861:5, line:862:23>
                0xa3d1040 "const pos_type __p =
                  (CallExpr 0xa3d1170 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3d10e0 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa3d10c0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa3d1088 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa3d1078 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa3d1114 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa3d0a00 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0xa3d114c <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa3d1380 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa3d12a0 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3d1240 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (DeclRefExpr 0xa3d11a8 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa3d1040 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa3d1220 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa3d1200 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa3d11e8 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa3d11d0 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa3d1358 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3d1348 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3d1330 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa3d12c4 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d0f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa3d1320 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3d12fc <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3d14f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d1410 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d14d8 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0xa3d14a8 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d1430 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d1420 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3d1484 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3d14c8 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0xa3d15e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d1510 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d15c8 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0xa3d15a8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d1530 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d1520 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3d1584 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3d16b8 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3d1628 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3d1618 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d15fc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d0f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3d1698 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3d1648 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3d1638 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3d167c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d0f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3d1748 <line:879:7, col:15>
    (UnaryOperator 0xa3d1730 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3d1720 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa3d28e0 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0xa3d1f68 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3d1dc8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa3d1db8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa3d1f40 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa3d1f00 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (CallExpr 0xa3d1e48 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d1e10 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa3d1e00 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa3d1ee0 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa3d1ed0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3d1eb8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa278890 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa3d1ea8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa3d1e84 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa3d2020 <line:891:7, col:33>
    0xa3d1f90 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa3d2000 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa3d1fd8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3d1fc8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa3d1ff0 <col:28> '_Bool' true))")
  (IfStmt 0xa3d2888 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3d2030 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0xa3d1f90 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa3d2860 <line:893:2, line:917:2>
      (DeclStmt 0xa3d2108 <line:894:4, col:47>
        0xa3d2080 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3d20f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d20d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3d2578 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d2118 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3d2560 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0xa3d2540 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0xa3d2190 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa3d2170 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d2138 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3d2128 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa3d2528 <line:898:3, line:906:3>
              (DeclStmt 0xa3d2320 <line:900:5, line:901:23>
                0xa3d21b0 "const pos_type __p =
                  (CallExpr 0xa3d22f8 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3d2250 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa3d2230 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa3d21f8 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa3d21e8 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa3d2284 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa3d1b00 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0xa3d229c <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa3d1b70 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0xa3d22d4 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa3d2508 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa3d2428 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3d23c8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
                  (DeclRefExpr 0xa3d2330 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa3d21b0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa3d23a8 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa3d2388 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa3d2370 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa3d2358 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa3d24e0 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa3d24d0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3d24b8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa3d244c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d2080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa3d24a8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3d2484 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa3d2678 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d2598 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d2660 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0xa3d2630 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d25b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d25a8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3d260c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3d2650 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0xa3d2768 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d2698 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d2750 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0xa3d2730 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d26b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3d26a8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa3d270c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3d2840 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3d27b0 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3d27a0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d2784 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d2080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3d2820 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3d27d0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3d27c0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa3d2804 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d2080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3d28d0 <line:918:7, col:15>
    (UnaryOperator 0xa3d28b8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa3d28a8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0xa3d39c0 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0xa3d2ef0 <line:926:7, col:61>
    0xa3d2ec0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa3d2fb0 <line:927:7, col:67>
    0xa3d2f80 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa3d30a0 <line:929:7, col:58>
    0xa3d3020 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa3d3080 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa3d3054 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d2bc0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa3d3070 <col:52> '_Bool' false))")
  (IfStmt 0xa3d3978 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3d30b0 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0xa3d3020 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa3d3950 <line:931:2, line:950:2>
      (DeclStmt 0xa3d3188 <line:932:4, col:47>
        0xa3d3100 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa3d3178 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d3154 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa3d3650 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d3198 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3d3638 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0xa3d32d0 <line:935:8, col:54>
            0xa3d31d0 "const __int_type __cb =
              (CallExpr 0xa3d32b0 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d3278 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa3d3258 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3d3220 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0xa3d3204 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d2bc0 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0xa3d3618 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0xa3d33d8 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0xa3d33b0 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa3d3308 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3d332c <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa3d31d0 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0xa3d3390 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa3d3368 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0xa3d3488 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa3d33ec <col:3> '_CharT' lvalue ParmVar 0xa3d2c30 '__c' '_CharT &')
              (CallExpr 0xa3d3468 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa3d3428 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa3d344c <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa3d31d0 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0xa3d35f0 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3d35e0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3d35c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3d34a0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d3100 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa3d35b0 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa3d3588 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa3d3578 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3d3560 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa275bb0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa3d3540 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3d34e0 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa3d3550 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa3d351c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa3d3758 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d3670 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d3740 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0xa3d3710 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d3698 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3d3680 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d2bc0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa3d36ec <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3d3730 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0xa3d3850 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d3778 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d3838 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0xa3d3818 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d37a0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3d3788 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d2bc0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa3d37f4 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa3d3930 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3d3898 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3d3888 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d386c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d3100 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa3d3910 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3d38c0 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0xa3d38a4 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d2bc0 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa3d38f4 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d3100 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3d39b0 <line:951:7, col:14>
    (DeclRefExpr 0xa3d3994 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d2bc0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0xa3d57e8 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0xa3d3fc0 <line:958:7, col:61>
    0xa3d3f90 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa3d4110 <line:959:7, col:73>
    0xa3d40e0 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa3d41c0 <line:960:7, col:51>
    0xa3d4190 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0xa3d4210 <line:961:7, col:35>
    0xa3d41e0 "typedef _CharT char_type")
  (DeclStmt 0xa3d4300 <line:962:7, col:44>
    0xa3d42d0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa3d4370 <line:964:7, col:33>
    0xa3d4320 "streamsize __extracted =
      (IntegerLiteral 0xa3d4358 <col:32> 'int' 0)")
  (DeclStmt 0xa3d4438 <line:965:7, col:50>
    0xa3d43b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa3d4428 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3d4404 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a220 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa3d4550 <line:966:7, col:58>
    0xa3d44d0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa3d4530 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa3d4504 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa3d4520 <col:52> '_Bool' false))")
  (IfStmt 0xa3d5598 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0xa3d4560 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0xa3d44d0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa3d5578 <line:968:2, line:1006:2>
      (IfStmt 0xa3d5358 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d4578 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3d5320 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0xa3d4638 <line:972:8, col:39>
            0xa3d4590 "streamsize __num =
              (CallExpr 0xa3d4618 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d45e0 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3d45c4 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0xa3d4788 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0xa3d4688 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0xa3d4678 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa3d4648 <col:12> 'streamsize':'int' lvalue Var 0xa3d4590 '__num' 'streamsize':'int'))
              (IntegerLiteral 0xa3d4660 <col:21> 'int' 0))
            (BinaryOperator 0xa3d4770 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0xa3d46a0 <col:3> 'streamsize':'int' lvalue Var 0xa3d4590 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0xa3d4760 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0xa3d4740 <col:11, col:52> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0xa3d4928 <line:976:8, col:73>
            0xa3d47f0 "const __ctype_type &__ct =
              (CallExpr 0xa3d4908 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa3d4830 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
                (CallExpr 0xa3d48e8 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3d48b0 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3d4898 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa3d4a00 <line:978:8, col:45>
            0xa3d4960 "const int_type __eof =
              (CallExpr 0xa3d49e0 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa3d49b8 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0xa3d4af8 <line:979:8, col:45>
            0xa3d4a50 "__streambuf_type *__sb =
              (CallExpr 0xa3d4ad8 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d4aa0 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3d4a84 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa3d4bb8 <line:980:8, col:36>
            0xa3d4b10 "int_type __c =
              (CallExpr 0xa3d4b98 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3d4b60 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa3d4b44 <col:23> '__streambuf_type *' lvalue Var 0xa3d4a50 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa3d5080 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0xa3d4e80 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0xa3d4d18 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0xa3d4c48 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0xa3d4c38 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa3d4bc8 <col:15> 'streamsize':'int' lvalue Var 0xa3d4320 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0xa3d4c20 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0xa3d4c10 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa3d4be0 <col:29> 'streamsize':'int' lvalue Var 0xa3d4590 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0xa3d4bf8 <col:37> 'int' 1)))
                (UnaryOperator 0xa3d4d00 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa3d4cd8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa3d4c80 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3d4ca4 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3d4b10 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa3d4cbc <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3d4960 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa3d4e68 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0xa3d4e40 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3d4d48 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3d4d30 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa3d47f0 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0xa3d4d9c <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0xa2bc610 'space' 'const mask':'const unsigned short')
                  (CallExpr 0xa3d4e20 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa3d4de0 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3d4e04 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3d4b10 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0xa3d5060 <line:986:3, line:990:3>
              (BinaryOperator 0xa3d4f78 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0xa3d4ee0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa3d4ec8 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa3d4e98 <col:6> '_CharT *' lvalue ParmVar 0xa3d3d20 '__s' '_CharT *')))
                (CallExpr 0xa3d4f58 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa3d4f18 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3d4f3c <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3d4b10 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa3d4fa8 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa3d4f90 <col:7> 'streamsize':'int' lvalue Var 0xa3d4320 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0xa3d5048 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa3d4fbc <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3d4b10 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa3d5028 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3d4ff0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa3d4fd4 <col:11> '__streambuf_type *' lvalue Var 0xa3d4a50 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa3d51f8 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0xa3d5118 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa3d50c0 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3d50e4 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa3d4b10 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa3d50fc <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa3d4960 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa3d51d0 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa3d51c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3d51a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa3d513c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d43b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa3d5198 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa3d5174 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0xa3d5280 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0xa3d5230 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa3d5214 <col:9> '_CharT *' lvalue ParmVar 0xa3d3d20 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0xa3d5268 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0xa3d5300 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d52b0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3d5298 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa3d52e8 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa3d5460 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d5378 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d5448 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0xa3d5418 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d53a0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3d5388 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa3d53f4 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa3d5438 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0xa3d5558 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3d5480 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3d5540 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0xa3d5520 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3d54a8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa3d5490 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa3d54fc <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a100 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa3d56c0 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0xa3d55f0 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3d55e0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3d55d0 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa3d55b4 <col:12> 'streamsize':'int' lvalue Var 0xa3d4320 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0xa3d5698 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa3d5688 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3d5670 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa278ad0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa3d5604 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d43b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa3d5660 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3d563c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a1c0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa3d57a0 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3d5708 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa3d56f8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa3d56dc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d43b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa3d5780 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3d5730 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa3d5714 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa3d5764 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa3d43b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3d57d8 <line:1011:7, col:14>
    (DeclRefExpr 0xa3d57bc <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d3cb0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0xa3d77a8 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0xa3d6c10 <line:1019:7, col:61>
    0xa3d6be0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa3d6d60 <line:1020:7, col:73>
    0xa3d6d30 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa3d6e20 <line:1021:7, col:60>
    0xa3d6df0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa3d6f10 <line:1022:7, col:44>
    0xa3d6ee0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa3d7098 <line:1024:7, col:72>
    0xa3d6f60 "const __ctype_type &__ct =
      (CallExpr 0xa3d7078 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0xa3d6fa0 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa269e80)
        (CallExpr 0xa3d7058 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3d7020 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa3d7008 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d6950 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0xa3d7178 <line:1025:7, col:46>
    0xa3d70d0 "const __int_type __eof =
      (CallExpr 0xa3d7158 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa3d7130 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0xa3d7278 <line:1026:7, col:44>
    0xa3d71d0 "__streambuf_type *__sb =
      (CallExpr 0xa3d7258 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d7220 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa3d7204 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d6950 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0xa3d7338 <line:1027:7, col:37>
    0xa3d7290 "__int_type __c =
      (CallExpr 0xa3d7318 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d72e0 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa3d72c4 <col:24> '__streambuf_type *' lvalue Var 0xa3d71d0 '__sb' '__streambuf_type *')))")
  (WhileStmt 0xa3d75f0 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0xa3d7538 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0xa3d73e8 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0xa3d73c0 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa3d7368 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3d738c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa3d7290 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0xa3d73a4 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa3d70d0 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0xa3d7510 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d7418 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa3d73fc <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa3d6f60 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0xa3d746c <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0xa2bc610 'space' 'const mask':'const unsigned short')
        (CallExpr 0xa3d74f0 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa3d74b0 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3d74d4 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa3d7290 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0xa3d75d8 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0xa3d7550 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa3d7290 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0xa3d75b8 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3d7580 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa3d7568 <col:8> '__streambuf_type *' lvalue Var 0xa3d71d0 '__sb' '__streambuf_type *')))))
  (IfStmt 0xa3d7760 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0xa3d7688 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa3d7630 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0xa3d7654 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa3d7290 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0xa3d766c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa3d70d0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0xa3d7740 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3d76c8 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa3d76ac <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d6950 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa3d771c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa27a160 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa3d7798 <line:1035:7, col:14>
    (DeclRefExpr 0xa3d777c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa3d6950 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3e2eb8 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e2ea8 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e2e90 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e2e70 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e2e0c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e2e80 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e2e4c <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0xa3e32b8 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3e1bf0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0xa3e3358 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3e2fa8 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e2f98 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e2f80 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e2f60 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e2efc <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e2f70 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e2f3c <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0xa3e3438 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa3e3400 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0xa3e33e8 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa3e1d40 '__str' 'const __string_type &')))
, (CallExpr 0xa3e34a8 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa3e3470 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0xa3e3454 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa3e1d40 '__str' 'const __string_type &')))
) (CompoundStmt 0xa3e35a0 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0xa3e3580 <col:9, col:33> '<dependent type>'
    (MemberExpr 0xa3e3548 <col:9> '<bound member function type>' ->_M_stringbuf_init 0xa3e2150
      (CXXThisExpr 0xa3e3538 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa3e3568 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3e1db0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0xa3e3b00 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0xa3e35f8 <line:123:2, col:21>
    0xa3e35c0 "__string_type __ret")
  (IfStmt 0xa3e3ab8 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0xa3e3670 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3e3638 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0xa3e3628 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0xa3e3a40 <line:125:4, line:131:4>
      (IfStmt 0xa3e3a20 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3e37a8 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e3760 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (CallExpr 0xa3e36d8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e36a0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e3690 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3e3740 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e3708 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e36f8 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa3e38e0 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0xa3e37cc <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3e35c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa3e38c0 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa3e3838 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3e3800 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e37f0 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa3e38a0 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3e3868 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e3858 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0xa3e3a08 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0xa3e38f8 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3e35c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa3e39e8 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa3e3960 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3e3928 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e3918 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa3e39c8 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3e3990 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa3e3980 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0xa3e3aa0 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0xa3e3a54 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3e35c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0xa3e3a80 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
        (CXXThisExpr 0xa3e3a70 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0xa3e3af0 <line:134:2, col:9>
    (DeclRefExpr 0xa3e3ad4 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3e35c0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0xa3e3d10 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0xa3e3c68 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3e3b50 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0xa3e3b30 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
        (CXXThisExpr 0xa3e3b20 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0xa3e3bd8 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3e3ba0 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0xa3e3b84 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa3e1f80 '__s' 'const __string_type &')))
    (CallExpr 0xa3e3c48 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3e3c10 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa3e3bf4 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa3e1f80 '__s' 'const __string_type &'))))
  (CallExpr 0xa3e3cf0 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0xa3e3ca0 <col:2> '<bound member function type>' ->_M_stringbuf_init 0xa3e2150
      (CXXThisExpr 0xa3e3c90 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0xa3e3cd0 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa3e1b10
      (CXXThisExpr 0xa3e3cc0 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0xa3e41a0 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0xa3e3d70 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa3e3d38 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa3e1b10
      (CXXThisExpr 0xa3e3d28 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa3e3d58 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3e2100 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0xa3e3de0 <line:158:2, col:23>
    0xa3e3d90 "__size_type __len =
      (IntegerLiteral 0xa3e3dc8 <col:22> 'int' 0)")
  (IfStmt 0xa3e4048 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e3f68 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e3f30 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa274710)
      (MemberExpr 0xa3e3e00 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa3e1b10
        (CXXThisExpr 0xa3e3df0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0xa3e3f18 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0xa3e3ef0 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa3e3ee0 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3e3ec8 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa3e3ea8 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3e3e48 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a330 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0xa3e3eb8 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3e3e84 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a2d0 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0xa3e4030 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0xa3e3f8c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0xa3e3d90 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0xa3e4010 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3e3fd8 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0xa3e3fb8 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
            (CXXThisExpr 0xa3e3fa8 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0xa3e4178 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0xa3e4078 <col:2> '<bound member function type>' ->_M_sync 0xa3e2b30
      (CXXThisExpr 0xa3e4068 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0xa3e4130 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0xa3e4100 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3e40c8 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0xa3e40a8 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
            (CXXThisExpr 0xa3e4098 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0xa3e4148 <col:52> 'int' 0)
    (DeclRefExpr 0xa3e4160 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0xa3e3d90 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0xa3e4538 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0xa3e4238 <line:167:2, col:23>
    0xa3e41d0 "streamsize __ret =
      (UnaryOperator 0xa3e4220 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0xa3e4208 <col:22> 'int' 1))")
  (IfStmt 0xa3e44e0 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3e42f0 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e42b8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa274710)
      (MemberExpr 0xa3e4258 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa3e1b10
        (CXXThisExpr 0xa3e4248 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa3e4294 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0xa3e44c8 <line:169:4, line:172:4>
      (CallExpr 0xa3e4348 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0xa3e4328 <col:6> '<bound member function type>' ->_M_update_egptr 0xa3e2bc0
          (CXXThisExpr 0xa3e4318 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0xa3e44b0 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa3e4364 <col:6> 'streamsize':'int' lvalue Var 0xa3e41d0 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0xa3e4488 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa3e4450 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (CallExpr 0xa3e43c8 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e4390 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4380 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3e4430 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e43f8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e43e8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0xa3e4528 <line:173:2, col:9>
    (ImplicitCastExpr 0xa3e4518 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa3e44fc <col:9> 'streamsize':'int' lvalue Var 0xa3e41d0 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0xa3e3018 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3e2ff0 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0xa3e3080 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3e3058 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa3e4760 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0xa3e4720 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0xa3e45c8 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0xa3e4554 <col:6> 'char_type *' lvalue ParmVar 0xa3e24d0 '__s' 'char_type *')
      (BinaryOperator 0xa3e45b0 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0xa3e45a0 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa3e456c <col:13> 'streamsize':'int' lvalue ParmVar 0xa3e2510 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa3e4588 <col:20> 'int' 0)))
    (CompoundStmt 0xa3e4708 <line:200:4, line:211:4>
      (CallExpr 0xa3e4648 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3e4610 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0xa3e45f0 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
            (CXXThisExpr 0xa3e45e0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa3e46e0 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0xa3e4678 <col:6> '<bound member function type>' ->_M_sync 0xa3e2b30
          (CXXThisExpr 0xa3e4668 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3e4698 <col:14> 'char_type *' lvalue ParmVar 0xa3e24d0 '__s' 'char_type *')
        (DeclRefExpr 0xa3e46b0 <col:19> 'streamsize':'int' lvalue ParmVar 0xa3e2510 '__n' 'streamsize':'int')
        (IntegerLiteral 0xa3e46c8 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0xa3e4750 <line:212:2, col:9>
    (CXXThisExpr 0xa3e4740 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3e3168 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e3158 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e3140 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e3120 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e30bc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e3130 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e30fc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3e3258 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e3248 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e3230 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e3210 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e31ac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e3220 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e31ec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0xa3e4e28 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0xa3e4888 <line:234:2, col:46>
    0xa3e4780 "const bool __testin =
      (CXXOperatorCallExpr 0xa3e4860 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e4828 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa274710)
        (MemberExpr 0xa3e47c8 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa3e1b10
          (CXXThisExpr 0xa3e47b8 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3e4804 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa3e4e08 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0xa3e4a40 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0xa3e48e0 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3e48a8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3e4898 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0xa3e4a18 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e49d0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
        (CallExpr 0xa3e4948 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3e4910 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e4900 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa3e49b0 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3e4978 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e4968 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa3e4df0 <line:236:4, line:241:4>
      (IfStmt 0xa3e4dd0 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3e4a70 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3e4a58 <col:10> 'const _Bool' lvalue Var 0xa3e4780 '__testin' 'const _Bool'))
        (CallExpr 0xa3e4c00 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3e4a90 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e4a80 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa3e4b10 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e4ad8 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4ac8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3e4b78 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e4b40 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4b30 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3e4be0 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e4ba8 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4b98 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa3e4da8 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3e4c38 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa3e4c28 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa3e4cb8 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e4c80 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4c70 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3e4d20 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e4ce8 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4cd8 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3e4d88 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3e4d50 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa3e4d40 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa3e5fa8 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa3e5f84 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa3e60f8 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e60e8 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e60d0 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e60b0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e6058 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3e59d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e60c0 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e608c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3e6270 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0xa3e6250 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3e6188 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa3e6178 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa3e6230 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e61f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (MemberExpr 0xa3e61d0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e5930
        (CXXThisExpr 0xa3e61c0 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa3e5ff8 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa3e5fd4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0xa3e62c8 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3e5af0 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa3e6380 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e6370 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e6358 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e6338 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e62e0 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3e5b60 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e6348 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e6314 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3e64e8 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0xa3e64c8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3e6400 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa3e63f0 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa3e64a8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3e6468 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (MemberExpr 0xa3e6448 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e5930
        (CXXThisExpr 0xa3e6438 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa3e6500 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa3e65f0 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0xa3e65e0 <col:9, col:59>
    (CXXConstCastExpr 0xa3e65c8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa3e6598 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa3e6558 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (MemberExpr 0xa3e6538 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e5930
          (CXXThisExpr 0xa3e6528 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa3e66a0 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0xa3e6690 <col:9, col:33>
    (CallExpr 0xa3e6670 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3e6638 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa3e6618 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e5930
          (CXXThisExpr 0xa3e6608 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa3e6758 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0xa3e6738 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3e66e8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa3e66c8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e5930
        (CXXThisExpr 0xa3e66b8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa3e671c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3e5e80 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa3ec6e8 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa3ec6c4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa3ec838 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3ec828 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3ec810 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3ec7f0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3ec798 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3e7300 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3ec800 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3ec7cc <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3ec9b0 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0xa3ec990 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ec8c8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa3ec8b8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa3ec970 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ec930 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (MemberExpr 0xa3ec910 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e7260
        (CXXThisExpr 0xa3ec900 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa3ec738 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa3ec714 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0xa3eca08 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3e7420 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa3ecac0 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3ecab0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3eca98 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3eca78 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3eca20 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3e7490 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3eca88 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3eca54 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3ecc28 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0xa3ecc08 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ecb40 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa3ecb30 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa3ecbe8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ecba8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (MemberExpr 0xa3ecb88 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e7260
        (CXXThisExpr 0xa3ecb78 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa3ecc40 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa3ecd30 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0xa3ecd20 <col:9, col:59>
    (CXXConstCastExpr 0xa3ecd08 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa3eccd8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa3ecc98 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (MemberExpr 0xa3ecc78 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e7260
          (CXXThisExpr 0xa3ecc68 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa3ecde0 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0xa3ecdd0 <col:9, col:33>
    (CallExpr 0xa3ecdb0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3ecd78 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa3ecd58 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e7260
          (CXXThisExpr 0xa3ecd48 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa3ece98 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0xa3ece78 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ece28 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa3ece08 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3e7260
        (CXXThisExpr 0xa3ecdf8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa3ece5c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3ec5c0 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0xa3ee060 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3ee050 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3ee038 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3ee018 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3edfb4 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3ee028 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3edff4 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa3ee1c8 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3eda40 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa3ee330 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0xa3ee310 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ee248 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa3ee238 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa3ee2f0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ee2b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (MemberExpr 0xa3ee290 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3ed9a0
        (CXXThisExpr 0xa3ee280 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0xa3ee150 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3ee140 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3ee128 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3ee108 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3ee0a4 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3ee118 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3ee0e4 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa3ee388 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3edb60 '__str' 'const __string_type &')
, (DeclRefExpr 0xa3ee3a0 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3edbd0 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa3ee4f8 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0xa3ee4d8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ee410 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa3ee400 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa3ee4b8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ee478 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
      (MemberExpr 0xa3ee458 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3ed9a0
        (CXXThisExpr 0xa3ee448 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa3ee510 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa3ee600 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0xa3ee5f0 <col:9, col:59>
    (CXXConstCastExpr 0xa3ee5d8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa3ee5a8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa3ee568 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (MemberExpr 0xa3ee548 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3ed9a0
          (CXXThisExpr 0xa3ee538 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa3ee6b0 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0xa3ee6a0 <col:9, col:33>
    (CallExpr 0xa3ee680 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3ee648 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa3ee628 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3ed9a0
          (CXXThisExpr 0xa3ee618 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa3ee768 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0xa3ee748 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3ee6f8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa3ee6d8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa3ed9a0
        (CXXThisExpr 0xa3ee6c8 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa3ee72c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3edeb0 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0xa3e3018 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3e2ff0 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0xa3efb68 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0xa3ef060 <line:49:7, col:42>
    0xa3eefb0 "int_type __ret =
      (CallExpr 0xa3ef040 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3ef008 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0xa3efb20 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3ef188 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa3ef140 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (CallExpr 0xa3ef0b8 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3ef080 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa3ef070 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa3ef120 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3ef0e8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa3ef0d8 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0xa3efb08 <line:51:2, line:74:2>
      (DeclStmt 0xa3ef2a8 <line:54:4, col:63>
        0xa3ef1c0 "const bool __testeof =
          (CallExpr 0xa3ef280 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ef218 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0xa3ef24c <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3eed30 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0xa3ef264 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3eefb0 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0xa3efae8 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0xa3ef2e0 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa3ef2d0 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3ef2b8 <col:9> 'const _Bool' lvalue Var 0xa3ef1c0 '__testeof' 'const _Bool')))
        (CompoundStmt 0xa3ef958 <line:56:6, line:68:6>
          (DeclStmt 0xa3ef4f8 <line:57:8, line:59:28>
            0xa3ef300 "const bool __testeq =
              (CallExpr 0xa3ef4d0 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ef358 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0xa3ef400 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3ef3b0 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3ef3e4 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3eed30 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0xa3ef4b8 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa3ef468 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3ef430 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3ef420 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0xa3ef4a0 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0xa3ef488 <col:25> 'int' 1))))")
          (DeclStmt 0xa3ef638 <line:60:8, col:60>
            0xa3ef510 "const bool __testout =
              (CXXOperatorCallExpr 0xa3ef610 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0xa3ef5d0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
                (CXXDependentScopeMemberExpr 0xa3ef558 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ef548 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa3ef5ac <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa3ef938 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0xa3ef698 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0xa3ef678 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa3ef648 <col:12> 'const _Bool' lvalue Var 0xa3ef300 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0xa3ef688 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa3ef660 <col:24> 'const _Bool' lvalue Var 0xa3ef510 '__testout' 'const _Bool')))
            (CompoundStmt 0xa3ef918 <line:62:3, line:67:3>
              (CallExpr 0xa3ef728 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3ef6c0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3ef6b0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0xa3ef710 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0xa3ef6f8 <col:18> 'int' 1)))
              (IfStmt 0xa3ef8b0 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0xa3ef770 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa3ef760 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa3ef748 <col:10> 'const _Bool' lvalue Var 0xa3ef300 '__testeq' 'const _Bool')))
                (BinaryOperator 0xa3ef898 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0xa3ef7f0 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0xa3ef7d0 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3ef798 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0xa3ef788 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0xa3ef878 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3ef828 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa3ef85c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3eed30 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0xa3ef900 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa3ef8cc <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3eefb0 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0xa3ef8e4 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3eed30 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0xa3efad0 <line:70:6, line:73:6>
          (CallExpr 0xa3ef9f0 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3ef988 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3ef978 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0xa3ef9d8 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0xa3ef9c0 <col:21> 'int' 1)))
          (BinaryOperator 0xa3efab8 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0xa3efa10 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3eefb0 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa3efa98 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3efa48 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3efa7c <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3eed30 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa3efb58 <line:75:7, col:14>
    (DeclRefExpr 0xa3efb3c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3eefb0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0xa3e3080 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3e3058 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0xa3f1b20 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0xa3f0408 <line:83:7, col:59>
    0xa3f02e0 "const bool __testout =
      (CXXOperatorCallExpr 0xa3f03e0 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f03a0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (CXXDependentScopeMemberExpr 0xa3f0328 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0xa3f0318 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3f037c <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa3f0570 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3f04d8 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa3f0490 <col:11, col:45> 'long'
        (ImplicitCastExpr 0xa3f0480 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3f0418 <col:11> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa3f04b8 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0xa3f0458 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa3f0448 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3f0430 <col:29> 'const _Bool' lvalue Var 0xa3f02e0 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0xa3f04c8 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa3f0470 <col:40> '_Bool' false))))
    (ReturnStmt 0xa3f0560 <line:85:2, col:26>
      (CallExpr 0xa3f0540 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f0508 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa3f06e8 <line:87:7, col:79>
    0xa3f05a0 "const bool __testeof =
      (CallExpr 0xa3f06c0 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f05f8 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0xa3f062c <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3f0060 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa3f06a0 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f0668 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0xa3f0850 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3f07a0 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa3f0748 <col:11, col:44> 'long'
        (ImplicitCastExpr 0xa3f0738 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3f06f8 <col:11> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa3f0780 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa3f0770 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3f0710 <col:28> 'const _Bool' lvalue Var 0xa3f05a0 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0xa3f0790 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa3f0728 <col:39> '_Bool' false))))
    (ReturnStmt 0xa3f0840 <line:89:2, col:33>
      (CallExpr 0xa3f0820 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f07d0 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0xa3f0804 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3f0060 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0xa3f0940 <line:91:7, col:58>
    0xa3f0880 "const __size_type __capacity =
      (CallExpr 0xa3f0920 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f08e8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa3f08c8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
            (CXXThisExpr 0xa3f08b8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa3f0a20 <line:92:7, col:58>
    0xa3f0960 "const __size_type __max_size =
      (CallExpr 0xa3f0a00 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f09c8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa3f09a8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
            (CXXThisExpr 0xa3f0998 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa3f0bb8 <line:93:7, col:58>
    0xa3f0a40 "const bool __testput =
      (CXXOperatorCallExpr 0xa3f0b90 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f0b48 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (CallExpr 0xa3f0ac0 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f0a88 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f0a78 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa3f0b28 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f0af0 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f0ae0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa3f0db0 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0xa3f0d00 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0xa3f0bc8 <col:11> 'long (long, long)' lvalue Function 0xa1a78f0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa3f0cd8 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0xa3f0c08 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa3f0bf8 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3f0be0 <col:29> 'const _Bool' lvalue Var 0xa3f0a40 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0xa3f0cb0 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f0c50 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
          (DeclRefExpr 0xa3f0c1c <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa3f0880 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0xa3f0c34 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa3f0960 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0xa3f0cf0 <col:68> '_Bool' false))
    (ReturnStmt 0xa3f0da0 <line:95:2, col:26>
      (CallExpr 0xa3f0d80 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f0d48 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa3f0ea8 <line:99:7, col:62>
    0xa3f0de0 "const char_type __conv =
      (CallExpr 0xa3f0e88 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f0e38 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa3f0e6c <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3f0060 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa3f1a58 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0xa3f0ee0 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3f0ed0 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa3f0eb8 <col:12> 'const _Bool' lvalue Var 0xa3f0a40 '__testput' 'const _Bool')))
    (CompoundStmt 0xa3f1978 <line:101:2, line:122:2>
      (DeclStmt 0xa3f1068 <line:111:4, line:112:25>
        0xa3f0f00 "const __size_type __opt_len =
          (CallExpr 0xa3f1040 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f0f58 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081f40 0xa0826b0)
            (CXXUnresolvedConstructExpr 0xa3f0fe0 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0xa3f0fc8 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0xa3f0f98 <col:55> 'int' 2)
                (DeclRefExpr 0xa3f0fb0 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa3f0880 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0xa3f1020 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0xa3f1008 <col:20> 'int' 512)))")
      (DeclStmt 0xa3f1160 <line:113:4, col:61>
        0xa3f1080 "const __size_type __len =
          (CallExpr 0xa3f1138 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f10d0 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081c30 0xa082320)
            (DeclRefExpr 0xa3f1108 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa3f0f00 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0xa3f1120 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa3f0960 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0xa3f11b8 <line:114:4, col:23>
        0xa3f1180 "__string_type __tmp")
      (CallExpr 0xa3f1230 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f11e0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa3f11c8 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3f1180 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa3f1214 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa3f1080 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0xa3f14c8 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0xa3f1298 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f1260 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f1250 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa3f14a0 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f12d0 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0xa3f12b4 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3f1180 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0xa3f1350 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f1318 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f1308 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa3f1478 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f1440 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
            (CallExpr 0xa3f13b8 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3f1380 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f1370 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa3f1420 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3f13e8 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f13d8 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0xa3f1550 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f1500 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa3f14e4 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3f1180 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa3f1534 <col:20> 'const char_type':'const _CharT' lvalue Var 0xa3f0de0 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0xa3f15f0 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f15a0 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0xa3f1580 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
            (CXXThisExpr 0xa3f1570 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa3f15d4 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa3f1180 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0xa3f1950 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0xa3f1620 <line:120:4> '<bound member function type>' ->_M_sync 0xa3e2b30
          (CXXThisExpr 0xa3f1610 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0xa3f16d8 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0xa3f16a8 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f1670 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0xa3f1650 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
                (CXXThisExpr 0xa3f1640 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0xa3f17f8 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f17c0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (CallExpr 0xa3f1738 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f1700 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f16f0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3f17a0 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f1768 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f1758 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa3f1928 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f18f0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (CallExpr 0xa3f1868 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f1830 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f1820 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3f18d0 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f1898 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f1888 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0xa3f1a40 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0xa3f1a10 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0xa3f19f0 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f19b8 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f19a8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa3f1a24 <col:18> 'const char_type':'const _CharT' lvalue Var 0xa3f0de0 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0xa3f1ad8 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3f1a88 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa3f1a78 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa3f1ac0 <col:19> 'int' 1))
  (ReturnStmt 0xa3f1b10 <line:126:7, col:14>
    (DeclRefExpr 0xa3f1af8 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa3f0060 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0xa3f27d8 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0xa3f2320 <line:134:7, col:42>
    0xa3f2270 "int_type __ret =
      (CallExpr 0xa3f2300 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3f22c8 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0xa3f2468 <line:135:7, col:57>
    0xa3f2340 "const bool __testin =
      (CXXOperatorCallExpr 0xa3f2440 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f2400 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (CXXDependentScopeMemberExpr 0xa3f2388 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0xa3f2378 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3f23dc <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa3f2790 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3f2490 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa3f2478 <col:11> 'const _Bool' lvalue Var 0xa3f2340 '__testin' 'const _Bool'))
    (CompoundStmt 0xa3f2778 <line:137:2, line:143:2>
      (CallExpr 0xa3f24d0 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0xa3f24b0 <col:4> '<bound member function type>' ->_M_update_egptr 0xa3e2bc0
          (CXXThisExpr 0xa3f24a0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0xa3f2758 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3f2608 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa3f25c0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
          (CallExpr 0xa3f2538 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f2500 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f24f0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa3f25a0 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f2568 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f2558 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa3f2740 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0xa3f262c <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3f2270 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0xa3f2720 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f2668 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0xa3f2708 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0xa3f26e8 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3f26b0 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f26a0 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3f27c8 <line:144:7, col:14>
    (DeclRefExpr 0xa3f27ac <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3f2270 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3e3168 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e3158 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e3140 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e3120 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e30bc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e3130 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e30fc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3f9478 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0xa3f3128 <line:152:7, col:47>
    0xa3f3070 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa3f3108 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa3f30e8 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa3f30d0 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa3f30b8 <col:44> 'int' 1))))")
  (DeclStmt 0xa3f33a0 <line:153:7, col:67>
    0xa3f3140 "bool __testin =
      (CXXOperatorCallExpr 0xa3f3378 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f3320 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
        (ParenExpr 0xa3f32f0 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0xa3f32c8 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f3288 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
            (CXXOperatorCallExpr 0xa3f3248 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f3208 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
              (DeclRefExpr 0xa3f31a0 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa3f31d0 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f31c0 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa3f326c <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f2dd0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa3f3308 <col:66> 'int' 0))")
  (DeclStmt 0xa3f3620 <line:154:7, col:69>
    0xa3f33c0 "bool __testout =
      (CXXOperatorCallExpr 0xa3f35f8 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f35a0 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
        (ParenExpr 0xa3f3570 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0xa3f3548 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f3508 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
            (CXXOperatorCallExpr 0xa3f34c8 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f3488 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
              (DeclRefExpr 0xa3f3420 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa3f3450 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f3440 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa3f34ec <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f2dd0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa3f3588 <col:68> 'int' 0))")
  (DeclStmt 0xa3f37e0 <line:155:7, col:78>
    0xa3f3640 "const bool __testboth =
      (BinaryOperator 0xa3f3790 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0xa3f36c8 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0xa3f36a8 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3f3674 <col:31> '_Bool' lvalue Var 0xa3f3140 '__testin' '_Bool'))
          (ImplicitCastExpr 0xa3f36b8 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3f368c <col:43> '_Bool' lvalue Var 0xa3f33c0 '__testout' '_Bool')))
        (BinaryOperator 0xa3f3778 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0xa3f3758 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3f3738 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa3f36e0 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa3f2d60 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa3f3768 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3f3748 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa3f3714 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa27a5c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0xa3f3920 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa3f37f0 <col:7> '_Bool' lvalue Var 0xa3f3140 '__testin' '_Bool')
    (ImplicitCastExpr 0xa3f3910 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa3f38f8 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa3f38e8 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa3f38d0 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa3f38a8 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa3f3898 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3f3880 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274710 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa3f3860 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa3f3808 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f2dd0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa3f3870 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa3f383c <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0xa3f3a70 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa3f3940 <col:7> '_Bool' lvalue Var 0xa3f33c0 '__testout' '_Bool')
    (ImplicitCastExpr 0xa3f3a60 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa3f3a48 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa3f3a38 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa3f3a20 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa3f39f8 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa3f39e8 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3f39d0 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274710 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa3f39b0 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa3f3958 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f2dd0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa3f39c0 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa3f398c <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0xa3f3c10 <line:161:7, col:72>
    0xa3f3ac0 "const char_type *__beg =
      (ConditionalOperator 0xa3f3bf0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa3f3be0 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3f3af4 <col:32> '_Bool' lvalue Var 0xa3f3140 '__testin' '_Bool'))
        (CallExpr 0xa3f3b58 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f3b20 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f3b10 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa3f3bc0 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3f3b88 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa3f3b78 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa3f9430 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0xa3f3d58 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0xa3f3c80 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0xa3f3c68 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0xa3f3c20 <col:12> 'const char_type *' lvalue Var 0xa3f3ac0 '__beg' 'const char_type *')
          (UnaryOperator 0xa3f3c50 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0xa3f3c38 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3f2cf0 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0xa3f3d40 <col:32, col:68> '_Bool'
        (BinaryOperator 0xa3f3d28 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0xa3f3ce8 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0xa3f3cc8 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3f3c94 <col:33> '_Bool' lvalue Var 0xa3f3140 '__testin' '_Bool'))
            (ImplicitCastExpr 0xa3f3cd8 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3f3cac <col:45> '_Bool' lvalue Var 0xa3f33c0 '__testout' '_Bool')))
          (ImplicitCastExpr 0xa3f3d18 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3f3d00 <col:58> 'const _Bool' lvalue Var 0xa3f3640 '__testboth' 'const _Bool')))))
    (CompoundStmt 0xa3f9408 <line:163:2, line:191:2>
      (CallExpr 0xa3f3da0 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0xa3f3d80 <col:4> '<bound member function type>' ->_M_update_egptr 0xa3e2bc0
          (CXXThisExpr 0xa3f3d70 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa3f3e20 <line:166:4, col:30>
        0xa3f3dd0 "off_type __newoffi =
          (DeclRefExpr 0xa3f3e04 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3f2cf0 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0xa3f3e90 <line:167:4, col:34>
        0xa3f3e40 "off_type __newoffo =
          (DeclRefExpr 0xa3f3e74 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3dd0 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0xa3f43e8 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0xa3f3f38 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0xa3f3f18 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3f3ef8 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa3f3ea0 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa3f2d60 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa3f3f28 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3f3f08 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa3f3ed4 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa27a5c0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0xa3f4180 <line:169:6, line:172:6>
          (CompoundAssignOperator 0xa3f4048 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa3f3f50 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3dd0 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa3f4020 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f3fe8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (CallExpr 0xa3f3fb0 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3f3f78 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f3f68 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3f3fcc <col:36> 'const char_type *' lvalue Var 0xa3f3ac0 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0xa3f4160 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa3f4068 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3e40 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa3f4138 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f4100 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (CallExpr 0xa3f40c8 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3f4090 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f4080 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3f40e4 <col:36> 'const char_type *' lvalue Var 0xa3f3ac0 '__beg' 'const char_type *'))))
        (IfStmt 0xa3f43c8 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0xa3f4230 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0xa3f4210 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3f41f0 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa3f4198 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa3f2d60 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0xa3f4220 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa3f4200 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa3f41cc <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa27a620 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0xa3f43b0 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0xa3f427c <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3e40 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0xa3f4390 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa3f4294 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3dd0 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0xa3f4368 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa3f4330 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                (CallExpr 0xa3f42f8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3f42c0 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3f42b0 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa3f4314 <col:47> 'const char_type *' lvalue Var 0xa3f3ac0 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0xa3f8f48 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0xa3f8c78 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0xa3f4528 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0xa3f4470 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0xa3f4458 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0xa3f4438 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa3f4404 <col:9> '_Bool' lvalue Var 0xa3f3140 '__testin' '_Bool'))
                (ImplicitCastExpr 0xa3f4448 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa3f441c <col:21> 'const _Bool' lvalue Var 0xa3f3640 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa3f4500 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f44b8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
              (DeclRefExpr 0xa3f4484 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3dd0 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa3f44a0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa3f8c50 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f8c08 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
            (CXXOperatorCallExpr 0xa3f8bc8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f8b90 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (CallExpr 0xa3f4588 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3f4550 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f4540 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3f8b78 <col:27> 'const char_type *' lvalue Var 0xa3f3ac0 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa3f8bec <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3dd0 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa3f8f30 <line:179:6, line:183:6>
          (CallExpr 0xa3f8e98 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3f8ca0 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa3f8c90 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa3f8d20 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3f8ce8 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f8cd8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa3f8e08 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f8dc0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
              (CallExpr 0xa3f8d88 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3f8d50 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f8d40 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3f8da4 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3dd0 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0xa3f8e78 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3f8e40 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f8e30 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0xa3f8f18 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa3f8ec0 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa3f3070 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa3f8ef8 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa3f8ee0 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3dd0 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0xa3f93e8 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0xa3f9208 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0xa3f9088 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0xa3f8fd0 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0xa3f8fb8 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0xa3f8f98 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa3f8f64 <col:9> '_Bool' lvalue Var 0xa3f33c0 '__testout' '_Bool'))
                (ImplicitCastExpr 0xa3f8fa8 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa3f8f7c <col:22> 'const _Bool' lvalue Var 0xa3f3640 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa3f9060 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f9018 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
              (DeclRefExpr 0xa3f8fe4 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3e40 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa3f9000 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa3f91e0 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f9198 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
            (CXXOperatorCallExpr 0xa3f9158 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f9120 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
              (CallExpr 0xa3f90e8 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3f90b0 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3f90a0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3f9104 <col:27> 'const char_type *' lvalue Var 0xa3f3ac0 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa3f917c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3e40 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa3f93d0 <line:187:6, line:190:6>
          (CallExpr 0xa3f9338 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0xa3f9230 <col:8> '<bound member function type>' ->_M_pbump 0xa3e2d80
              (CXXThisExpr 0xa3f9220 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa3f9298 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3f9260 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f9250 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa3f9300 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3f92c8 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f92b8 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa3f931c <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3e40 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0xa3f93b8 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa3f9360 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa3f3070 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa3f9398 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa3f9380 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa3f3e40 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3f9468 <line:192:7, col:14>
    (DeclRefExpr 0xa3f944c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa3f3070 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3e3258 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3e3248 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3e3230 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa274940 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3e3210 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e31ac <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3e3220 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3e31ec <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3fad68 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0xa3f9d38 <line:200:7, col:47>
    0xa3f9c80 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa3f9d18 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa3f9cf8 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa3f9ce0 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa3f9cc8 <col:44> 'int' 1))))")
  (DeclStmt 0xa3f9fb0 <line:201:7, col:73>
    0xa3f9d50 "const bool __testin =
      (CXXOperatorCallExpr 0xa3f9f88 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa3f9f30 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
        (ParenExpr 0xa3f9f00 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0xa3f9ed8 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0xa3f9e98 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
            (CXXOperatorCallExpr 0xa3f9e58 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa3f9e18 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
              (DeclRefExpr 0xa3f9db0 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa3f9de0 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa3f9dd0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa3f9e7c <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f99f0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa3f9f18 <col:72> 'int' 0))")
  (DeclStmt 0xa3fa230 <line:202:7, col:75>
    0xa3f9fd0 "const bool __testout =
      (CXXOperatorCallExpr 0xa3fa208 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fa1b0 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
        (ParenExpr 0xa3fa180 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0xa3fa158 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa3fa118 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
            (CXXOperatorCallExpr 0xa3fa0d8 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa3fa098 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
              (DeclRefExpr 0xa3fa030 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa3fa060 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0xa3fa050 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa3fa0fc <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f99f0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa3fa198 <col:74> 'int' 0))")
  (DeclStmt 0xa3fa3a0 <line:204:7, col:72>
    0xa3fa250 "const char_type *__beg =
      (ConditionalOperator 0xa3fa380 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa3fa370 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3fa284 <col:32> 'const _Bool' lvalue Var 0xa3f9d50 '__testin' 'const _Bool'))
        (CallExpr 0xa3fa2e8 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fa2b0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fa2a0 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa3fa350 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fa318 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fa308 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa3fad20 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0xa3fa4d0 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0xa3fa438 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0xa3fa420 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0xa3fa3b0 <col:12> 'const char_type *' lvalue Var 0xa3fa250 '__beg' 'const char_type *')
          (UnaryOperator 0xa3fa408 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0xa3fa3e8 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0xa3fa3d0 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa3f9980 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0xa3fa4b8 <col:41, col:63> '_Bool'
        (BinaryOperator 0xa3fa4a0 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0xa3fa480 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3fa44c <col:42> 'const _Bool' lvalue Var 0xa3f9d50 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0xa3fa490 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3fa464 <col:54> 'const _Bool' lvalue Var 0xa3f9fd0 '__testout' 'const _Bool')))))
    (CompoundStmt 0xa3fad00 <line:206:2, line:221:2>
      (CallExpr 0xa3fa518 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0xa3fa4f8 <col:4> '<bound member function type>' ->_M_update_egptr 0xa3e2bc0
          (CXXThisExpr 0xa3fa4e8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa3fa5b0 <line:209:4, col:30>
        0xa3fa540 "const off_type __pos =
          (ParenListExpr 0xa3fa590 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0xa3fa574 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa3f9980 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0xa3fa840 <line:210:4, line:211:41>
        0xa3fa5d0 "const bool __testpos =
          (ParenExpr 0xa3fa828 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0xa3fa810 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa3fa680 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa3fa638 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
                (IntegerLiteral 0xa3fa608 <col:28> 'int' 0)
                (DeclRefExpr 0xa3fa620 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa3fa540 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0xa3fa7e8 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa3fa7a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04d350 0xa066580 0xa068d70 0xa1c4fd0 0xa1c5500 0xa1c5a30)
                (DeclRefExpr 0xa3fa6a4 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa3fa540 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0xa3fa778 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3fa740 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
                  (CallExpr 0xa3fa708 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa3fa6d0 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0xa3fa6c0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0xa3fa724 <col:35> 'const char_type *' lvalue Var 0xa3fa250 '__beg' 'const char_type *')))))")
      (IfStmt 0xa3face0 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3fa868 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3fa850 <col:8> 'const _Bool' lvalue Var 0xa3fa5d0 '__testpos' 'const _Bool'))
        (CompoundStmt 0xa3facc0 <line:213:6, line:220:6>
          (IfStmt 0xa3faad0 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3fa890 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3fa874 <col:12> 'const _Bool' lvalue Var 0xa3f9d50 '__testin' 'const _Bool'))
            (CallExpr 0xa3faaa8 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3fa8b0 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa3fa8a0 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa3fa930 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3fa8f8 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3fa8e8 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa3faa18 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa3fa9d0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
                (CallExpr 0xa3fa998 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3fa960 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa3fa950 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa3fa9b4 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa3fa540 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0xa3faa88 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3faa50 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3faa40 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0xa3fac58 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3fab08 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa3faaec <col:12> 'const _Bool' lvalue Var 0xa3f9fd0 '__testout' 'const _Bool'))
            (CallExpr 0xa3fac30 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0xa3fab28 <col:3> '<bound member function type>' ->_M_pbump 0xa3e2d80
                (CXXThisExpr 0xa3fab18 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa3fab90 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3fab58 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3fab48 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0xa3fabf8 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3fabc0 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3fabb0 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa3fac14 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa3fa540 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0xa3faca8 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0xa3fac74 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa3f9c80 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0xa3fac8c <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa3f9980 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3fad58 <line:222:7, col:14>
    (DeclRefExpr 0xa3fad3c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa3f9c80 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0xa3fbd98 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0xa3fb3a8 <line:230:7, col:51>
    0xa3fb2a0 "const bool __testin =
      (CXXOperatorCallExpr 0xa3fb380 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fb348 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa274710)
        (MemberExpr 0xa3fb2e8 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa3e1b10
          (CXXThisExpr 0xa3fb2d8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3fb324 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a3f0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa3fb4c8 <line:231:7, col:53>
    0xa3fb3c0 "const bool __testout =
      (CXXOperatorCallExpr 0xa3fb4a0 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fb468 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa274710)
        (MemberExpr 0xa3fb408 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa3e1b10
          (CXXThisExpr 0xa3fb3f8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3fb444 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa27a450 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa3fb638 <line:232:7, col:52>
    0xa3fb4f0 "char_type *__endg =
      (CXXOperatorCallExpr 0xa3fb610 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fb5c8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (DeclRefExpr 0xa3fb524 <col:27> 'char_type *' lvalue ParmVar 0xa3fb110 '__base' 'char_type *')
        (CallExpr 0xa3fb5a8 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb570 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa3fb550 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
              (CXXThisExpr 0xa3fb540 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0xa3fb7a8 <line:233:7, col:56>
    0xa3fb660 "char_type *__endp =
      (CXXOperatorCallExpr 0xa3fb780 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fb738 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (DeclRefExpr 0xa3fb694 <col:27> 'char_type *' lvalue ParmVar 0xa3fb110 '__base' 'char_type *')
        (CallExpr 0xa3fb718 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb6e0 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa3fb6c0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
              (CXXThisExpr 0xa3fb6b0 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0xa3fb9d8 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3fb8b0 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa3fb858 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (DeclRefExpr 0xa3fb7b8 <col:11> 'char_type *' lvalue ParmVar 0xa3fb110 '__base' 'char_type *')
      (CallExpr 0xa3fb838 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fb800 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa3fb7e0 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa3e1b50
            (CXXThisExpr 0xa3fb7d0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa3fb9b8 <line:236:2, line:241:2>
      (CompoundAssignOperator 0xa3fb908 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa3fb8d4 <col:4> 'char_type *' lvalue Var 0xa3fb4f0 '__endg' 'char_type *')
        (DeclRefExpr 0xa3fb8ec <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa3fb150 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0xa3fb958 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa3fb928 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa3fb150 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0xa3fb940 <col:10> 'int' 0))
      (BinaryOperator 0xa3fb9a0 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa3fb970 <col:4> 'char_type *' lvalue Var 0xa3fb660 '__endp' 'char_type *')
        (DeclRefExpr 0xa3fb988 <col:13> 'char_type *' lvalue Var 0xa3fb4f0 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0xa3fbb60 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3fba10 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa3fb9f4 <col:11> 'const _Bool' lvalue Var 0xa3fb2a0 '__testin' 'const _Bool'))
    (CallExpr 0xa3fbb38 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fba30 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa3fba20 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa3fba64 <col:13> 'char_type *' lvalue ParmVar 0xa3fb110 '__base' 'char_type *')
      (CXXOperatorCallExpr 0xa3fbaf8 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fbab0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (DeclRefExpr 0xa3fba7c <col:21> 'char_type *' lvalue ParmVar 0xa3fb110 '__base' 'char_type *')
        (DeclRefExpr 0xa3fba94 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa3fb150 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0xa3fbb1c <col:35> 'char_type *' lvalue Var 0xa3fb4f0 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0xa3fbd78 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3fbb98 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa3fbb7c <col:11> 'const _Bool' lvalue Var 0xa3fb3c0 '__testout' 'const _Bool'))
    (CompoundStmt 0xa3fbd60 <line:246:2, line:253:2>
      (CallExpr 0xa3fbc20 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0xa3fbbb8 <col:4> '<bound member function type>' ->_M_pbump 0xa3e2d80
          (CXXThisExpr 0xa3fbba8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3fbbd8 <col:13> 'char_type *' lvalue ParmVar 0xa3fb110 '__base' 'char_type *')
        (DeclRefExpr 0xa3fbbf0 <col:21> 'char_type *' lvalue Var 0xa3fb660 '__endp' 'char_type *')
        (DeclRefExpr 0xa3fbc08 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa3fb190 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0xa3fbd40 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0xa3fbc70 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa3fbc60 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3fbc48 <col:9> 'const _Bool' lvalue Var 0xa3fb2a0 '__testin' 'const _Bool')))
        (CallExpr 0xa3fbd18 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fbc98 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fbc88 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa3fbccc <col:17> 'char_type *' lvalue Var 0xa3fb4f0 '__endg' 'char_type *')
          (DeclRefExpr 0xa3fbce4 <col:25> 'char_type *' lvalue Var 0xa3fb4f0 '__endg' 'char_type *')
          (DeclRefExpr 0xa3fbcfc <col:33> 'char_type *' lvalue Var 0xa3fb4f0 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0xa3fc780 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0xa3fc358 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3fc2f0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa3fc2e0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa3fc324 <col:18> 'char_type *' lvalue ParmVar 0xa3fc150 '__pbeg' 'char_type *')
    (DeclRefExpr 0xa3fc33c <col:26> 'char_type *' lvalue ParmVar 0xa3fc1a0 '__pend' 'char_type *'))
  (WhileStmt 0xa3fc6e8 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3fc498 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa3fc450 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
      (DeclRefExpr 0xa3fc37c <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3fc1e0 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa3fc430 <col:22, col:56> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))
    (CompoundStmt 0xa3fc6d0 <line:263:2, line:266:2>
      (CallExpr 0xa3fc5c0 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fc4d0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fc4c0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3fc5a0 <col:16, col:50> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0xa3fc6b0 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa3fc5e0 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3fc1e0 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0xa3fc690 <col:13, col:47> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))))
  (CallExpr 0xa3fc760 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3fc710 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa3fc700 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa3fc744 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3fc1e0 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0xa4100c0 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0xa410080 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0xa410048 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0xa410020 <col:32> '_T1 *' lvalue ParmVar 0xa40fe80 '__p' '_T1 *'))
    (DeclRefExpr 0xa410060 <col:42> 'const _T2' lvalue ParmVar 0xa40fef0 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0xa4102f0 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0xa4102d0 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0xa4102a0 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0xa41027c <col:7> '_Tp *' lvalue ParmVar 0xa410170 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa410d80 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa410980 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0xa410958 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4107d8 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa410780 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (DeclRefExpr 0xa410750 <col:11> '_ForwardIterator' lvalue ParmVar 0xa4105d0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa410768 <col:22> '_ForwardIterator' lvalue ParmVar 0xa410610 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa410818 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa4107fc <col:32> '_ForwardIterator' lvalue ParmVar 0xa4105d0 '__first' '_ForwardIterator'))
    (CallExpr 0xa410938 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa410860 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250)
      (CallExpr 0xa410918 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa4108b0 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
        (UnaryOperator 0xa410900 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa4108e4 <col:38> '_ForwardIterator' lvalue ParmVar 0xa4105d0 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa410d80 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa411228 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0xa411060 <line:125:7, line:126:35>
    0xa411030 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0xa411200 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa4111a8 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa4111cc <col:12> '_ForwardIterator' lvalue ParmVar 0xa410df0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa4111e4 <col:21> '_ForwardIterator' lvalue ParmVar 0xa410e30 '__last' '_ForwardIterator')))

;
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa0d10e8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa4a8cd0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa4a8a24 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa0d7fc0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa0d1200 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa0d1220 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator;
    template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0xa414470 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0xa414448 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4142e0 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa414288 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (DeclRefExpr 0xa414254 <col:14> '_ForwardIterator' lvalue ParmVar 0xa4113e0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa41426c <col:25> '_ForwardIterator' lvalue ParmVar 0xa411420 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa414320 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa414304 <col:35> '_ForwardIterator' lvalue ParmVar 0xa4113e0 '__first' '_ForwardIterator'))
    (CallExpr 0xa414428 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa414350 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0xa414334 <col:2> '_Allocator' lvalue ParmVar 0xa411490 '__alloc' '_Allocator &'))
      (CallExpr 0xa414408 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa4143a0 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
        (UnaryOperator 0xa4143f0 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa4143d4 <col:36> '_ForwardIterator' lvalue ParmVar 0xa4113e0 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0xa4148a0 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0xa414878 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0xa414808 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa4147d0 0xa414220 0xa410f10 0xa410250)
    (DeclRefExpr 0xa414848 <col:16> '_ForwardIterator' lvalue ParmVar 0xa414550 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa414860 <col:25> '_ForwardIterator' lvalue ParmVar 0xa414590 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa415880 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa415870 <col:11, col:53>
    (CallExpr 0xa415848 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa4157c8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
      (DeclRefExpr 0xa415800 <col:28> '_InputIterator' lvalue ParmVar 0xa4155f0 '__first' '_InputIterator')
      (DeclRefExpr 0xa415818 <col:37> '_InputIterator' lvalue ParmVar 0xa415630 '__last' '_InputIterator')
      (DeclRefExpr 0xa415830 <col:45> '_ForwardIterator' lvalue ParmVar 0xa415670 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa415308 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0xa414ec0 <line:73:4, col:37>
    0xa414e70 "_ForwardIterator __cur =
      (DeclRefExpr 0xa414ea4 <col:29> '_ForwardIterator' lvalue ParmVar 0xa414d20 '__result' '_ForwardIterator')")
  (IfStmt 0xa4151d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa414ed0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4151b8 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0xa415168 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa414f68 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa414f10 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
          (DeclRefExpr 0xa414ee0 <col:15> '_InputIterator' lvalue ParmVar 0xa414ca0 '__first' '_InputIterator')
          (DeclRefExpr 0xa414ef8 <col:26> '_InputIterator' lvalue ParmVar 0xa414ce0 '__last' '_InputIterator'))
        (BinaryOperator 0xa414ff0 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0xa414fa8 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa414f8c <col:36> '_InputIterator' lvalue ParmVar 0xa414ca0 '__first' '_InputIterator'))
          (UnaryOperator 0xa414fd8 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa414fbc <col:47> '_ForwardIterator' lvalue Var 0xa414e70 '__cur' '_ForwardIterator')))
        (CallExpr 0xa415140 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa415038 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa40fff0)
          (CallExpr 0xa4150f0 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa415088 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
            (UnaryOperator 0xa4150d8 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa4150bc <col:37> '_ForwardIterator' lvalue Var 0xa414e70 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa415128 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa415110 <col:46> '_InputIterator' lvalue ParmVar 0xa414ca0 '__first' '_InputIterator'))))
      (ReturnStmt 0xa4151a8 <line:78:8, col:15>
        (DeclRefExpr 0xa41518c <col:15> '_ForwardIterator' lvalue Var 0xa414e70 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa4152e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4151f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4152d0 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0xa415298 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa415228 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa415268 <col:22> '_ForwardIterator' lvalue ParmVar 0xa414d20 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa415280 <col:32> '_ForwardIterator' lvalue Var 0xa414e70 '__cur' '_ForwardIterator'))
      (NullStmt 0xa4152c0 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa415880 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa415870 <col:11, col:53>
    (CallExpr 0xa415848 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa4157c8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
      (DeclRefExpr 0xa415800 <col:28> '_InputIterator' lvalue ParmVar 0xa4155f0 '__first' '_InputIterator')
      (DeclRefExpr 0xa415818 <col:37> '_InputIterator' lvalue ParmVar 0xa415630 '__last' '_InputIterator')
      (DeclRefExpr 0xa415830 <col:45> '_ForwardIterator' lvalue ParmVar 0xa415670 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa415f88 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0xa415c20 <line:112:7, line:113:13>
    0xa415bf0 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0xa415d50 <line:114:7, line:115:13>
    0xa415d20 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0xa415f78 <line:117:7, line:119:41>
    (CallExpr 0xa415f50 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa415ee0 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0xa415f04 <col:16> '_InputIterator' lvalue ParmVar 0xa415960 '__first' '_InputIterator')
      (DeclRefExpr 0xa415f1c <col:25> '_InputIterator' lvalue ParmVar 0xa4159a0 '__last' '_InputIterator')
      (DeclRefExpr 0xa415f34 <col:33> '_ForwardIterator' lvalue ParmVar 0xa4159e0 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa416ec0 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa416e98 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa416e18 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0)
    (DeclRefExpr 0xa416e4c <col:21> '_ForwardIterator' lvalue ParmVar 0xa416c00 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa416e64 <col:30> '_ForwardIterator' lvalue ParmVar 0xa416c40 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa416e7c <col:38> 'const _Tp' lvalue ParmVar 0xa416cb0 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa416920 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0xa416570 <line:131:4, col:36>
    0xa416520 "_ForwardIterator __cur =
      (DeclRefExpr 0xa416554 <col:29> '_ForwardIterator' lvalue ParmVar 0xa4162d0 '__first' '_ForwardIterator')")
  (IfStmt 0xa4167e8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa416580 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4167d0 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0xa4167a8 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa416618 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa4165c0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
          (DeclRefExpr 0xa416590 <col:15> '_ForwardIterator' lvalue Var 0xa416520 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa4165a8 <col:24> '_ForwardIterator' lvalue ParmVar 0xa416310 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa416658 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa41663c <col:34> '_ForwardIterator' lvalue Var 0xa416520 '__cur' '_ForwardIterator'))
        (CallExpr 0xa416780 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa416690 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa40fff0)
          (CallExpr 0xa416748 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa4166e0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
            (UnaryOperator 0xa416730 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa416714 <col:37> '_ForwardIterator' lvalue Var 0xa416520 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa416768 <col:45> 'const _Tp' lvalue ParmVar 0xa4163a0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa416900 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa416808 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4168e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0xa4168b0 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa416840 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa416880 <col:22> '_ForwardIterator' lvalue ParmVar 0xa4162d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa416898 <col:31> '_ForwardIterator' lvalue Var 0xa416520 '__cur' '_ForwardIterator'))
      (NullStmt 0xa4168d8 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa416ec0 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa416e98 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa416e18 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0)
    (DeclRefExpr 0xa416e4c <col:21> '_ForwardIterator' lvalue ParmVar 0xa416c00 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa416e64 <col:30> '_ForwardIterator' lvalue ParmVar 0xa416c40 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa416e7c <col:38> 'const _Tp' lvalue ParmVar 0xa416cb0 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa417470 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0xa417290 <line:169:7, line:170:12>
    0xa417260 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa417448 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa4173d8 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa4173fc <col:16> '_ForwardIterator' lvalue ParmVar 0xa416fa0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa417414 <col:25> '_ForwardIterator' lvalue ParmVar 0xa416fe0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa41742c <col:33> 'const _Tp' lvalue ParmVar 0xa417050 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa4184b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa418488 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa418408 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0953c0)
    (DeclRefExpr 0xa41843c <col:23> '_ForwardIterator' lvalue ParmVar 0xa4181c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa418454 <col:32> '_Size' lvalue ParmVar 0xa418200 '__n' '_Size')
    (DeclRefExpr 0xa41846c <col:37> 'const _Tp' lvalue ParmVar 0xa418270 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa417e90 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0xa417aa0 <line:185:4, col:36>
    0xa417a50 "_ForwardIterator __cur =
      (DeclRefExpr 0xa417a84 <col:29> '_ForwardIterator' lvalue ParmVar 0xa417800 '__first' '_ForwardIterator')")
  (IfStmt 0xa417d58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa417ab0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa417d40 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0xa417d18 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa417b38 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa417af0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (DeclRefExpr 0xa417ac0 <col:15> '_Size' lvalue ParmVar 0xa417840 '__n' '_Size')
          (IntegerLiteral 0xa417ad8 <col:21> 'int' 0))
        (BinaryOperator 0xa417bc0 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0xa417b78 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa417b5c <col:26> '_Size' lvalue ParmVar 0xa417840 '__n' '_Size'))
          (UnaryOperator 0xa417ba8 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa417b8c <col:33> '_ForwardIterator' lvalue Var 0xa417a50 '__cur' '_ForwardIterator')))
        (CallExpr 0xa417cf0 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa417c00 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa40fff0)
          (CallExpr 0xa417cb8 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa417c50 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
            (UnaryOperator 0xa417ca0 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa417c84 <col:37> '_ForwardIterator' lvalue Var 0xa417a50 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa417cd8 <col:45> 'const _Tp' lvalue ParmVar 0xa4178d0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa417e70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa417d78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa417e58 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0xa417e20 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa417db0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa417df0 <col:22> '_ForwardIterator' lvalue ParmVar 0xa417800 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa417e08 <col:31> '_ForwardIterator' lvalue Var 0xa417a50 '__cur' '_ForwardIterator'))
      (NullStmt 0xa417e48 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa4184b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa418488 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa418408 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0953c0)
    (DeclRefExpr 0xa41843c <col:23> '_ForwardIterator' lvalue ParmVar 0xa4181c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa418454 <col:32> '_Size' lvalue ParmVar 0xa418200 '__n' '_Size')
    (DeclRefExpr 0xa41846c <col:37> 'const _Tp' lvalue ParmVar 0xa418270 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa418ab0 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0xa4188d0 <line:222:7, line:223:12>
    0xa4188a0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa418a88 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa418a18 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa418a3c <col:18> '_ForwardIterator' lvalue ParmVar 0xa4185e0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa418a54 <col:27> '_Size' lvalue ParmVar 0xa418620 '__n' '_Size')
    (DeclRefExpr 0xa418a6c <col:32> 'const _Tp' lvalue ParmVar 0xa418690 '__x' 'const _Tp &')))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa4192e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0xa418ea0 <line:241:7, col:40>
    0xa418e50 "_ForwardIterator __cur =
      (DeclRefExpr 0xa418e84 <col:32> '_ForwardIterator' lvalue ParmVar 0xa418c60 '__result' '_ForwardIterator')")
  (IfStmt 0xa419198 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa418eb0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa419180 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0xa419130 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa418f48 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa418ef0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
          (DeclRefExpr 0xa418ec0 <col:11> '_InputIterator' lvalue ParmVar 0xa418be0 '__first' '_InputIterator')
          (DeclRefExpr 0xa418ed8 <col:22> '_InputIterator' lvalue ParmVar 0xa418c20 '__last' '_InputIterator'))
        (BinaryOperator 0xa418fd0 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0xa418f88 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa418f6c <col:32> '_InputIterator' lvalue ParmVar 0xa418be0 '__first' '_InputIterator'))
          (UnaryOperator 0xa418fb8 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa418f9c <col:43> '_ForwardIterator' lvalue Var 0xa418e50 '__cur' '_ForwardIterator')))
        (CallExpr 0xa419108 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa419000 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa418fe8 <col:6> '_Allocator' lvalue ParmVar 0xa418cf0 '__alloc' '_Allocator &'))
          (CallExpr 0xa4190b8 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa419050 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
            (UnaryOperator 0xa4190a0 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa419084 <col:42> '_ForwardIterator' lvalue Var 0xa418e50 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa4190f0 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa4190d8 <col:51> '_InputIterator' lvalue ParmVar 0xa418be0 '__first' '_InputIterator'))))
      (ReturnStmt 0xa419170 <line:246:4, col:11>
        (DeclRefExpr 0xa419154 <col:11> '_ForwardIterator' lvalue Var 0xa418e50 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa4192c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4191b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4192b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0xa419278 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa4191f0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa419230 <col:18> '_ForwardIterator' lvalue ParmVar 0xa418c60 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa419248 <col:28> '_ForwardIterator' lvalue Var 0xa418e50 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa419260 <col:35> '_Allocator' lvalue ParmVar 0xa418cf0 '__alloc' '_Allocator &'))
      (NullStmt 0xa4192a0 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0xa419818 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0xa419808 <col:7, col:63>
    (CallExpr 0xa4197e0 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa419760 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa415ad0)
      (DeclRefExpr 0xa419794 <col:38> '_InputIterator' lvalue ParmVar 0xa419420 '__first' '_InputIterator')
      (DeclRefExpr 0xa4197ac <col:47> '_InputIterator' lvalue ParmVar 0xa419460 '__last' '_InputIterator')
      (DeclRefExpr 0xa4197c4 <col:55> '_ForwardIterator' lvalue ParmVar 0xa4194a0 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa419c78 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0xa419c68 <line:267:7, line:269:24>
    (CallExpr 0xa419c38 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa419b70 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
      (ParenExpr 0xa419bc0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa419ba8 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0xa419940 '__first' '_InputIterator'))
      (ParenExpr 0xa419bf0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa419bd4 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0xa419980 '__last' '_InputIterator'))
      (DeclRefExpr 0xa419c04 <line:269:7> '_ForwardIterator' lvalue ParmVar 0xa4199c0 '__result' '_ForwardIterator')
      (DeclRefExpr 0xa419c1c <col:17> '_Allocator' lvalue ParmVar 0xa419a30 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa41a430 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0xa41a070 <line:277:7, col:39>
    0xa41a020 "_ForwardIterator __cur =
      (DeclRefExpr 0xa41a054 <col:32> '_ForwardIterator' lvalue ParmVar 0xa419da0 '__first' '_ForwardIterator')")
  (IfStmt 0xa41a2e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa41a080 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa41a2c8 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0xa41a2a0 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa41a118 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa41a0c0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
          (DeclRefExpr 0xa41a090 <col:11> '_ForwardIterator' lvalue Var 0xa41a020 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa41a0a8 <col:20> '_ForwardIterator' lvalue ParmVar 0xa419de0 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa41a158 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa41a13c <col:30> '_ForwardIterator' lvalue Var 0xa41a020 '__cur' '_ForwardIterator'))
        (CallExpr 0xa41a278 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa41a188 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa41a16c <col:6> '_Allocator' lvalue ParmVar 0xa419ec0 '__alloc' '_Allocator &'))
          (CallExpr 0xa41a240 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa41a1d8 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
            (UnaryOperator 0xa41a228 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa41a20c <col:42> '_ForwardIterator' lvalue Var 0xa41a020 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa41a260 <col:50> 'const _Tp' lvalue ParmVar 0xa419e50 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa41a410 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa41a300 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa41a3f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0xa41a3c0 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa41a338 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa41a378 <col:18> '_ForwardIterator' lvalue ParmVar 0xa419da0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa41a390 <col:27> '_ForwardIterator' lvalue Var 0xa41a020 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa41a3a8 <col:34> '_Allocator' lvalue ParmVar 0xa419ec0 '__alloc' '_Allocator &'))
      (NullStmt 0xa41a3e8 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa41a938 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0xa41a910 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa41a890 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa417140)
    (DeclRefExpr 0xa41a8c4 <col:31> '_ForwardIterator' lvalue ParmVar 0xa41a560 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa41a8dc <col:40> '_ForwardIterator' lvalue ParmVar 0xa41a5a0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa41a8f4 <col:48> 'const _Tp' lvalue ParmVar 0xa41a610 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa41b198 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0xa41ada0 <line:302:7, col:39>
    0xa41ad50 "_ForwardIterator __cur =
      (DeclRefExpr 0xa41ad84 <col:32> '_ForwardIterator' lvalue ParmVar 0xa41aab0 '__first' '_ForwardIterator')")
  (IfStmt 0xa41b048 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa41adb0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa41b030 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0xa41b008 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa41ae38 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa41adf0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
          (DeclRefExpr 0xa41adc0 <col:11> '_Size' lvalue ParmVar 0xa41aaf0 '__n' '_Size')
          (IntegerLiteral 0xa41add8 <col:17> 'int' 0))
        (BinaryOperator 0xa41aec0 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0xa41ae78 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa41ae5c <col:22> '_Size' lvalue ParmVar 0xa41aaf0 '__n' '_Size'))
          (UnaryOperator 0xa41aea8 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa41ae8c <col:29> '_ForwardIterator' lvalue Var 0xa41ad50 '__cur' '_ForwardIterator')))
        (CallExpr 0xa41afe0 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa41aef0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa41aed8 <col:6> '_Allocator' lvalue ParmVar 0xa41abf0 '__alloc' '_Allocator &'))
          (CallExpr 0xa41afa8 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa41af40 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
            (UnaryOperator 0xa41af90 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa41af74 <col:42> '_ForwardIterator' lvalue Var 0xa41ad50 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa41afc8 <col:50> 'const _Tp' lvalue ParmVar 0xa41ab60 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa41b178 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa41b068 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa41b160 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0xa41b128 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa41b0a0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa41b0e0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa41aab0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa41b0f8 <col:27> '_ForwardIterator' lvalue Var 0xa41ad50 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa41b110 <col:34> '_Allocator' lvalue ParmVar 0xa41abf0 '__alloc' '_Allocator &'))
      (NullStmt 0xa41b150 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa41b748 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0xa41b720 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa41b6a0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418780)
    (DeclRefExpr 0xa41b6d4 <col:33> '_ForwardIterator' lvalue ParmVar 0xa41b320 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa41b6ec <col:42> '_Size' lvalue ParmVar 0xa41b360 '__n' '_Size')
    (DeclRefExpr 0xa41b704 <col:47> 'const _Tp' lvalue ParmVar 0xa41b3d0 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa41bf40 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0xa41bcc8 <line:342:7, line:344:19>
    0xa41bbb0 "_ForwardIterator __mid =
      (CallExpr 0xa41bc98 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa41bc00 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
        (DeclRefExpr 0xa41bc38 <col:60> '_InputIterator1' lvalue ParmVar 0xa41b8c0 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa41bc50 <col:70> '_InputIterator1' lvalue ParmVar 0xa41b900 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa41bc68 <line:343:11> '_ForwardIterator' lvalue ParmVar 0xa41b9c0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa41bc80 <line:344:11> '_Allocator' lvalue ParmVar 0xa41ba30 '__alloc' '_Allocator &'))")
  (IfStmt 0xa41bdf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa41bcd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa41bdd8 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0xa41bdc8 <line:347:4, col:72>
        (CallExpr 0xa41bd98 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa41bd00 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
          (DeclRefExpr 0xa41bd34 <col:39> '_InputIterator2' lvalue ParmVar 0xa41b940 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa41bd4c <col:49> '_InputIterator2' lvalue ParmVar 0xa41b980 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa41bd64 <col:58> '_ForwardIterator' lvalue Var 0xa41bbb0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa41bd7c <col:65> '_Allocator' lvalue ParmVar 0xa41ba30 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa41bf20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa41be10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa41bf08 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0xa41bed0 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa41be48 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa41be88 <col:18> '_ForwardIterator' lvalue ParmVar 0xa41b9c0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa41bea0 <col:28> '_ForwardIterator' lvalue Var 0xa41bbb0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa41beb8 <col:35> '_Allocator' lvalue ParmVar 0xa41ba30 '__alloc' '_Allocator &'))
      (NullStmt 0xa41bef8 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa420310 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0xa420098 <line:370:7, line:372:19>
    0xa41ff80 "_ForwardIterator __mid =
      (CallExpr 0xa420068 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa41ffd0 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
        (DeclRefExpr 0xa420004 <col:60> '_InputIterator1' lvalue ParmVar 0xa41c0c0 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa42001c <col:70> '_InputIterator1' lvalue ParmVar 0xa41c100 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa420034 <line:371:11> '_ForwardIterator' lvalue ParmVar 0xa41fdc0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa42004c <line:372:11> '_Allocator' lvalue ParmVar 0xa41fe30 '__alloc' '_Allocator &'))")
  (IfStmt 0xa4201c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4200a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4201a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0xa420198 <line:375:4, col:72>
        (CallExpr 0xa420168 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa4200d0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
          (DeclRefExpr 0xa420108 <col:39> '_InputIterator2' lvalue ParmVar 0xa41c140 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa420120 <col:49> '_InputIterator2' lvalue ParmVar 0xa41c180 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa420138 <col:58> '_ForwardIterator' lvalue Var 0xa41ff80 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa420150 <col:65> '_Allocator' lvalue ParmVar 0xa41fe30 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa4202f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4201e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4202d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0xa4202a0 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa420218 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa420258 <col:18> '_ForwardIterator' lvalue ParmVar 0xa41fdc0 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa420270 <col:28> '_ForwardIterator' lvalue Var 0xa41ff80 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa420288 <col:35> '_Allocator' lvalue ParmVar 0xa41fe30 '__alloc' '_Allocator &'))
      (NullStmt 0xa4202c8 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0xa420af8 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0xa420860 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0xa4207c8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419fe0 0xa41a830)
    (DeclRefExpr 0xa420800 <col:35> '_ForwardIterator' lvalue ParmVar 0xa420490 '__result' '_ForwardIterator')
    (DeclRefExpr 0xa420818 <col:45> '_ForwardIterator' lvalue ParmVar 0xa4204d0 '__mid' '_ForwardIterator')
    (DeclRefExpr 0xa420830 <col:52> 'const _Tp' lvalue ParmVar 0xa420540 '__x' 'const _Tp &')
    (DeclRefExpr 0xa420848 <col:57> '_Allocator' lvalue ParmVar 0xa420630 '__alloc' '_Allocator &'))
  (IfStmt 0xa4209a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa420890 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa420990 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0xa420980 <line:397:4, col:70>
        (CallExpr 0xa420950 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0xa4208b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
          (DeclRefExpr 0xa4208ec <col:39> '_InputIterator' lvalue ParmVar 0xa420580 '__first' '_InputIterator')
          (DeclRefExpr 0xa420904 <col:48> '_InputIterator' lvalue ParmVar 0xa4205c0 '__last' '_InputIterator')
          (DeclRefExpr 0xa42091c <col:56> '_ForwardIterator' lvalue ParmVar 0xa4204d0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa420934 <col:63> '_Allocator' lvalue ParmVar 0xa420630 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa420ad8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4209c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa420ac0 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0xa420a88 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa420a00 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa420a40 <col:18> '_ForwardIterator' lvalue ParmVar 0xa420490 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa420a58 <col:28> '_ForwardIterator' lvalue ParmVar 0xa4204d0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa420a70 <col:35> '_Allocator' lvalue ParmVar 0xa420630 '__alloc' '_Allocator &'))
      (NullStmt 0xa420ab0 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa421330 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0xa4210b8 <line:417:7, line:419:20>
    0xa420fa0 "_ForwardIterator __mid2 =
      (CallExpr 0xa421088 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa420ff0 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
        (DeclRefExpr 0xa421024 <col:61> '_InputIterator' lvalue ParmVar 0xa420c80 '__first1' '_InputIterator')
        (DeclRefExpr 0xa42103c <col:71> '_InputIterator' lvalue ParmVar 0xa420cc0 '__last1' '_InputIterator')
        (DeclRefExpr 0xa421054 <line:418:12> '_ForwardIterator' lvalue ParmVar 0xa420d00 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa42106c <line:419:12> '_Allocator' lvalue ParmVar 0xa420e20 '__alloc' '_Allocator &'))")
  (IfStmt 0xa4211e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4210c8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4211c8 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0xa421198 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa421100 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419fe0 0xa41a830)
        (DeclRefExpr 0xa421138 <col:32> '_ForwardIterator' lvalue Var 0xa420fa0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa421150 <col:40> '_ForwardIterator' lvalue ParmVar 0xa420d40 '__last2' '_ForwardIterator')
        (DeclRefExpr 0xa421168 <col:49> 'const _Tp' lvalue ParmVar 0xa420db0 '__x' 'const _Tp &')
        (DeclRefExpr 0xa421180 <col:54> '_Allocator' lvalue ParmVar 0xa420e20 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0xa421310 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa421200 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4212f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0xa4212c0 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa421238 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (DeclRefExpr 0xa421278 <col:18> '_ForwardIterator' lvalue ParmVar 0xa420d00 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa421290 <col:28> '_ForwardIterator' lvalue Var 0xa420fa0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa4212a8 <col:36> '_Allocator' lvalue ParmVar 0xa420e20 '__alloc' '_Allocator &'))
      (NullStmt 0xa4212e8 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0xa4228f8 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0xa422948 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa422998 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0xa4229f8 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0xa422a08 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0xa421cb0 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0xa422a68 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0xa422ab8 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa422b08 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0xa422b68 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0xa422cc8 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0xa422cb8 <col:9, col:60>
    (UnaryOperator 0xa422ca0 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa422c88 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa422c20 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa422be0 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CXXDependentScopeMemberExpr 0xa422ba8 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0xa422b98 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0xa422e28 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0xa422e18 <col:9, col:66>
    (UnaryOperator 0xa422e00 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa422de8 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa422d80 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0xa422d40 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CXXDependentScopeMemberExpr 0xa422d08 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0xa422cf8 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa422ee8 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0xa422ed8 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa422eb8 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0xa422e98 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0xa422e58 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0xa422f40 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa422f50 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa422170 '__a' 'const allocator_type &')
) (CompoundStmt 0xa422fb0 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0xa4233d0 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0xa423100 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa423048 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa423010 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa423000 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa4230e0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa423090 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa423080 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa4230c4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa422290 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa423218 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa423160 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa423128 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa423118 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa4231e0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4231a8 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa423198 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa4233b8 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa423278 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa423240 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa423230 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa423390 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa423348 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
      (CXXDependentScopeMemberExpr 0xa4232f8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa4232c0 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa4232b0 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa42332c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa422290 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0xa4233ec </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa4223b0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa423820 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0xa423550 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa423498 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa423460 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa423450 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa423530 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4234e0 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa4234d0 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa423514 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa422360 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa423668 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa4235b0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa423578 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa423568 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa423630 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4235f8 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa4235e8 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa423808 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa4236c8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa423690 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa423680 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa4237e0 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa423798 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
      (CXXDependentScopeMemberExpr 0xa423748 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa423710 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa423700 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa42377c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa422360 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0xa423a78 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0xa423a50 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0xa423850 <line:142:9> '<bound member function type>' ->_M_deallocate 0xa422850
      (CXXThisExpr 0xa423840 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa4238b8 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa423880 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa423870 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa423a28 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa4239f0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
      (CXXDependentScopeMemberExpr 0xa423938 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa423900 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa4238f0 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa4239b8 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa423980 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa423970 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0xa423be0 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0xa423bd0 <col:9, col:51>
    (ConditionalOperator 0xa423bb0 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0xa423ae0 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa423ac0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa423a8c <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa422610 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa423ad0 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa423aa8 <col:23> 'int' 0)))
      (CallExpr 0xa423b78 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa423b28 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0xa423b08 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa4225b0
            (CXXThisExpr 0xa423af8 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa423b5c <col:44> 'size_t':'unsigned int' lvalue ParmVar 0xa422610 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0xa423b98 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0xa423cf0 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0xa423cd0 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0xa423bf4 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa422770 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0xa423ca8 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa423c40 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa423c20 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa4225b0
          (CXXThisExpr 0xa423c10 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa423c74 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa422770 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0xa423c8c <col:28> 'size_t':'unsigned int' lvalue ParmVar 0xa4227b0 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0xa4315a0 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0xa4315b0 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa425240 '__a' 'const allocator_type &')
) (CompoundStmt 0xa431610 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0xa4314e0 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa431500 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa431620 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0xa425350 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0xa431638 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa425420 '__a' 'const allocator_type &')
) (CompoundStmt 0xa431740 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0xa431718 <col:9, col:40> '<dependent type>'
    (MemberExpr 0xa4316c8 <col:9> '<bound member function type>' ->_M_fill_initialize 0xa42fb70
      (CXXThisExpr 0xa4316b8 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa4316e8 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa425350 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa431700 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0xa4253d0 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0xa4317a8 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa431770 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0xa431754 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa425590 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0xa431818 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa4317e0 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0xa4317c4 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa425590 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0xa431b50 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0xa431b38 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa4318c8 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa431890 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa431880 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa431b08 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa431918 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
      (CallExpr 0xa4319a0 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa431968 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa431950 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa425590 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa431a10 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4319d8 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0xa4319bc <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa425590 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0xa431a78 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa431a40 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa431a30 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa431ae8 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa431aac <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa431520 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa431b64 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa425770 '__a' 'const allocator_type &')
) (CompoundStmt 0xa431de8 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0xa431d00 <line:339:4, col:72>
    0xa431cd0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa431dc0 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0xa431d20 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa431d60 <col:27> '_InputIterator' lvalue ParmVar 0xa4256e0 '__first' '_InputIterator')
    (DeclRefExpr 0xa431d78 <col:36> '_InputIterator' lvalue ParmVar 0xa425720 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa431da8 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0xa431fe8 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0xa431fc0 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa431e28 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
    (CXXDependentScopeMemberExpr 0xa431eb0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa431e78 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa431e68 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa431f30 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa431ef8 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa431ee8 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa431fa0 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa431f64 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0xa432088 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0xa432060 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa432010 <col:9> '<bound member function type>' ->_M_fill_assign 0xa430510
      (CXXThisExpr 0xa432000 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa432030 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0xa425aa0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa432048 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0xa425af0 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa4322b8 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0xa4321d0 <line:432:4, col:72>
    0xa4321a0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa432290 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0xa4321f0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa432230 <col:23> '_InputIterator' lvalue ParmVar 0xa425c60 '__first' '_InputIterator')
    (DeclRefExpr 0xa432248 <col:32> '_InputIterator' lvalue ParmVar 0xa425ca0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa432278 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0xa432388 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0xa432378 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0xa432358 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa432320 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa4322e8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa4322d8 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0xa432478 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0xa432468 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa432448 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa432410 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa4323d8 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa4323c8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0xa432548 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0xa432538 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0xa432518 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa4324e0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa4324a8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa432498 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0xa432618 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0xa432608 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0xa4325e8 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa4325b0 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa432578 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa432568 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0xa4326d8 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0xa4326c8 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0xa4326a8 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa432688 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa432648 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa432798 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0xa432788 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa432768 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa432748 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0xa432708 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0xa432858 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0xa432848 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa432828 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa432808 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa4327c8 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0xa432918 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0xa432908 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa4328e8 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa4328c8 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0xa432888 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0xa432ac8 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0xa432ab8 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0xa432a98 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa432a70 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa432a38 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CXXDependentScopeMemberExpr 0xa432980 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa432948 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa432938 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa432a00 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4329c8 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0xa4329b8 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0xa432ba0 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0xa432b90 <col:9, col:47>
    (CallExpr 0xa432b70 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa432b38 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0xa432b18 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa432adc <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0xa431540 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0xa4330d0 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0xa4330b0 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa432c68 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa432c20 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
      (DeclRefExpr 0xa432bb4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa426400 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa432c00 <col:19, col:24> '<dependent type>'
        (MemberExpr 0xa432be0 <col:19> '<bound member function type>' ->size 0xa426310
          (CXXThisExpr 0xa432bd0 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa432e38 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0xa432ca0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa432d38 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa432cf8 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa432df8 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa432dc0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (DeclRefExpr 0xa432d54 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0xa426400 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa432da0 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa432d80 <col:31> '<bound member function type>' ->size 0xa426310
            (CXXThisExpr 0xa432d70 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa432e1c <col:39> 'value_type':'_Tp' lvalue ParmVar 0xa426440 '__x' 'value_type':'_Tp'))
    (IfStmt 0xa433090 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa432f10 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa432ec8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
        (DeclRefExpr 0xa432e60 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa426400 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa432ea8 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa432e88 <col:24> '<bound member function type>' ->size 0xa426310
            (CXXThisExpr 0xa432e78 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0xa433070 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0xa432f48 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa431470
          (CXXThisExpr 0xa432f38 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa433048 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa433000 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (CXXDependentScopeMemberExpr 0xa432fb0 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa432f78 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa432f68 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa432fe4 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0xa426400 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0xa433280 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0xa433270 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0xa433250 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa433228 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa4331f0 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CXXDependentScopeMemberExpr 0xa433138 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa433100 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa4330f0 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa4331b8 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa433180 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa433170 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0xa433410 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0xa433400 <col:9, col:31>
    (CXXOperatorCallExpr 0xa4333d8 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0xa433378 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
      (CallExpr 0xa4332e8 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa4332a8 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0xa433358 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa433318 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0xa433570 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0xa433560 <col:9, col:46>
    (UnaryOperator 0xa433548 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa433530 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa433508 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa4334c0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (CXXDependentScopeMemberExpr 0xa433470 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa433438 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa433428 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa4334a4 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa426760 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa4336d0 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0xa4336c0 <col:9, col:46>
    (UnaryOperator 0xa4336a8 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa433690 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa433668 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa433620 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
          (CXXDependentScopeMemberExpr 0xa4335d0 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa433598 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa433588 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa433604 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa426890 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa4338d0 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0xa4338b0 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4337b0 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa433768 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00)
      (DeclRefExpr 0xa4336e4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa4269f0 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa433748 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa433710 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa433700 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa433880 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0xa433870 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa433854 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4338a0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa433840 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0xa43380c </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa4339d0 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0xa433930 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0xa4338f8 <col:2> '<bound member function type>' ->_M_range_check 0xa426a90
      (CXXThisExpr 0xa4338e8 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa433918 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa426b50 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa4339c0 <line:738:2, col:20>
    (ArraySubscriptExpr 0xa4339a8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa433978 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa433960 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa433950 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa43398c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa426b50 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa433ad0 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0xa433a30 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0xa4339f8 <col:2> '<bound member function type>' ->_M_range_check 0xa426a90
      (CXXThisExpr 0xa4339e8 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa433a18 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa426c10 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa433ac0 <line:756:2, col:20>
    (ArraySubscriptExpr 0xa433aa8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa433a78 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa433a60 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa433a50 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa433a8c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa426c10 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0xa433b80 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0xa433b70 <col:9, col:23>
    (UnaryOperator 0xa433b58 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa433b38 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa433af8 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa433c30 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0xa433c20 <col:9, col:23>
    (UnaryOperator 0xa433c08 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa433be8 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa433ba8 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa433d70 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0xa433d60 <col:9, col:27>
    (UnaryOperator 0xa433d48 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa433d30 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa433d08 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa433cd0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (CallExpr 0xa433c98 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa433c58 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa433cb8 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa433eb0 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0xa433ea0 <col:9, col:27>
    (UnaryOperator 0xa433e88 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa433e70 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa433e48 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa433e10 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
          (CallExpr 0xa433dd8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa433d98 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa433df8 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0xa433fb8 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0xa433fa8 <col:9, col:40>
    (CallExpr 0xa433f88 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa433ee0 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
      (CallExpr 0xa433f68 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa433f28 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0xa4340c0 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0xa4340b0 <col:9, col:40>
    (CallExpr 0xa434090 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa433fe8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0xa044ce0)
      (CallExpr 0xa434070 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa434030 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0xa434548 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0xa434528 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa434230 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa4341d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (CXXDependentScopeMemberExpr 0xa434120 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa4340e8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa4340d8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa4341a0 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa434168 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa434158 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa434430 <line:829:4, line:832:4>
      (CallExpr 0xa434370 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4342a0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa434268 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa434258 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa434320 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4342e8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa4342d8 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa434354 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0xa4270a0 '__x' 'const value_type &'))
      (UnaryOperator 0xa434418 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa4343e0 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4343a8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa434398 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0xa434500 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0xa434458 <col:4> '<bound member function type>' ->_M_insert_aux 0xa431220
        (CXXThisExpr 0xa434448 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0xa4344c8 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa434488 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa4344e4 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0xa4270a0 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0xa434718 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0xa4345e0 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa4345a8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434570 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa434560 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa4346f8 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa434640 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434608 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa4345f8 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa4346c0 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434688 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0xa434678 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa4347d0 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0xa4347a8 <col:9, col:44> '<dependent type>'
    (MemberExpr 0xa434740 <col:9> '<bound member function type>' ->_M_fill_insert 0xa4310b0
      (CXXThisExpr 0xa434730 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa434760 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa427370 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa434778 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa4273b0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa434790 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0xa427400 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa434a20 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0xa434910 <line:966:4, col:72>
    0xa4348e0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa4349f0 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0xa434930 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa434970 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa427590 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa434988 <col:35> '_InputIterator' lvalue ParmVar 0xa4275d0 '__first' '_InputIterator')
    (DeclRefExpr 0xa4349a0 <col:44> '_InputIterator' lvalue ParmVar 0xa427610 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa4349d8 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa4351a0 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0xa434ba8 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0xa434a60 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0450d0 0xa045610 0xa1c71c0)
    (CXXDependentScopeMemberExpr 0xa434ae8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434ab0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa434aa0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa434b70 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434b38 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa434b1c <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa4279e0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa434d38 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0xa434bf0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0450d0 0xa045610 0xa1c71c0)
    (CXXDependentScopeMemberExpr 0xa434c78 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434c40 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa434c30 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa434d00 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434cc8 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0xa434cac <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa4279e0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa434ec8 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0xa434d80 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0450d0 0xa045610 0xa1c71c0)
    (CXXDependentScopeMemberExpr 0xa434e08 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434dd0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa434dc0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa434e90 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa434e58 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0xa434e3c <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa4279e0 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa435178 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa435078 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0xa4350e8 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa4350ac <col:46> '<dependent type>' lvalue))
    (CallExpr 0xa435158 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa435120 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa435104 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa4279e0 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0xa435290 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0xa435270 <col:9, col:47> '<dependent type>'
    (MemberExpr 0xa4351d0 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa431470
      (CXXThisExpr 0xa4351c0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa435238 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa435200 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0xa4351f0 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa435610 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0xa435368 <line:1052:4, col:45>
    0xa4352b0 "pointer __result =
      (CallExpr 0xa435348 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4352f8 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0xa4352e8 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa43532c <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa427be0 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0xa435500 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa435378 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4354e8 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0xa435490 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa4353b0 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
        (DeclRefExpr 0xa4353e8 <col:36> '_ForwardIterator' lvalue ParmVar 0xa427c20 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa435400 <col:45> '_ForwardIterator' lvalue ParmVar 0xa427c60 '__last' '_ForwardIterator')
        (DeclRefExpr 0xa435418 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4352b0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0xa435470 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa435430 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0xa4354d8 <line:1057:8, col:15>
        (DeclRefExpr 0xa4354bc <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4352b0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0xa4355f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa435520 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4355d8 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0xa4355a0 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa435530 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0xa43556c <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4352b0 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0xa435584 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa427be0 '__n' 'size_type':'unsigned int'))
      (NullStmt 0xa4355c8 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0xa4359c0 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0xa435740 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa435678 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa435640 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa435630 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa435720 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa4356ac <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0xa435708 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa4356e8 <col:64> '_Integer' lvalue ParmVar 0xa42f1a0 '__n' '_Integer'))))
  (BinaryOperator 0xa435900 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa4357a0 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa435768 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa435758 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa4358d8 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa435890 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
      (CXXDependentScopeMemberExpr 0xa435820 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa4357e8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa4357d8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0xa435878 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa435854 <col:54> '_Integer' lvalue ParmVar 0xa42f1a0 '__n' '_Integer'))))
  (CallExpr 0xa435998 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0xa435928 <col:4> '<bound member function type>' ->_M_fill_initialize 0xa42fb70
      (CXXThisExpr 0xa435918 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0xa435968 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa435948 <col:46> '_Integer' lvalue ParmVar 0xa42f1a0 '__n' '_Integer'))
    (DeclRefExpr 0xa435980 <col:52> '_Integer' lvalue ParmVar 0xa42f1e0 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa435bf8 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0xa435b10 <line:1089:4, line:1090:37>
    0xa435ae0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa435bd0 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0xa435b30 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa435b70 <col:24> '_InputIterator' lvalue ParmVar 0xa42f3e0 '__first' '_InputIterator')
    (DeclRefExpr 0xa435b88 <col:33> '_InputIterator' lvalue ParmVar 0xa42f420 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa435bb8 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa435d98 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0xa435d70 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa435c98 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa435c40 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490)
      (DeclRefExpr 0xa435c10 <col:11> '_InputIterator' lvalue ParmVar 0xa42f620 '__first' '_InputIterator')
      (DeclRefExpr 0xa435c28 <col:22> '_InputIterator' lvalue ParmVar 0xa42f660 '__last' '_InputIterator'))
    (UnaryOperator 0xa435cd8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa435cbc <col:32> '_InputIterator' lvalue ParmVar 0xa42f620 '__first' '_InputIterator'))
    (CallExpr 0xa435d50 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0xa435d00 <col:6> '<bound member function type>' ->push_back 0xa427120
        (CXXThisExpr 0xa435cf0 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0xa435d38 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa435d20 <col:17> '_InputIterator' lvalue ParmVar 0xa42f620 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa436388 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0xa435ea0 <line:1110:4, col:56>
    0xa435dc0 "const size_type __n =
      (CallExpr 0xa435e78 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa435e10 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
        (DeclRefExpr 0xa435e44 <col:40> '_ForwardIterator' lvalue ParmVar 0xa42f8a0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa435e5c <col:49> '_ForwardIterator' lvalue ParmVar 0xa42f8e0 '__last' '_ForwardIterator'))")
  (BinaryOperator 0xa435fb0 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa435ef8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa435ec0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa435eb0 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa435f90 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa435f40 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa435f30 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa435f74 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa435dc0 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa436150 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa436010 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa435fd8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa435fc8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa436128 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa4360e0 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
      (CXXDependentScopeMemberExpr 0xa436090 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa436058 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa436048 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa4360c4 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa435dc0 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa436370 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa4361b0 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa436178 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa436168 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa436340 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa436200 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
      (DeclRefExpr 0xa436238 <col:34> '_ForwardIterator' lvalue ParmVar 0xa42f8a0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa436250 <col:43> '_ForwardIterator' lvalue ParmVar 0xa42f8e0 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0xa4362b0 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa436278 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa436268 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa436320 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa4362e4 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0xa436658 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0xa436510 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa4363d0 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa41ad10 0xa41b640)
    (CXXDependentScopeMemberExpr 0xa436450 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa436418 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0xa436408 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa436484 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0xa42fac0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa43649c <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0xa42fb10 '__value' 'const value_type &')
    (CallExpr 0xa4364f0 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0xa4364b4 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0xa436640 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa436588 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa436550 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa436540 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa436608 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4365d0 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa4365c0 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa4366f8 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0xa4366d0 <col:11, col:36> '<dependent type>'
    (MemberExpr 0xa436680 <col:11> '<bound member function type>' ->_M_fill_assign 0xa430510
      (CXXThisExpr 0xa436670 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa4366a0 <col:26> '_Integer' lvalue ParmVar 0xa42fc40 '__n' '_Integer')
    (DeclRefExpr 0xa4366b8 <col:31> '_Integer' lvalue ParmVar 0xa42fc80 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa436928 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0xa436840 <line:1158:4, line:1159:37>
    0xa436810 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa436900 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0xa436860 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa4368a0 <col:18> '_InputIterator' lvalue ParmVar 0xa42fe50 '__first' '_InputIterator')
    (DeclRefExpr 0xa4368b8 <col:27> '_InputIterator' lvalue ParmVar 0xa42fe90 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa4368e8 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa4369e0 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0xa4369b8 <col:11, col:43> '<dependent type>'
    (MemberExpr 0xa436950 <col:11> '<bound member function type>' ->_M_fill_insert 0xa4310b0
      (CXXThisExpr 0xa436940 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa436970 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4305e0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa436988 <col:33> '_Integer' lvalue ParmVar 0xa430620 '__n' '_Integer')
    (DeclRefExpr 0xa4369a0 <col:38> '_Integer' lvalue ParmVar 0xa430660 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa436c30 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0xa436b20 <line:1199:4, line:1200:37>
    0xa436af0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa436c00 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0xa436b40 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa436b80 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa430860 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa436b98 <col:27> '_InputIterator' lvalue ParmVar 0xa4308a0 '__first' '_InputIterator')
    (DeclRefExpr 0xa436bb0 <col:36> '_InputIterator' lvalue ParmVar 0xa4308e0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa436be8 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa43d710 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0xa436e90 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa436da8 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa436d60 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (CXXOperatorCallExpr 0xa436d20 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa436ce8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0)
        (CallExpr 0xa436c78 <col:6, col:15> '<dependent type>'
          (MemberExpr 0xa436c58 <col:6> '<bound member function type>' ->max_size 0xa426390
            (CXXThisExpr 0xa436c48 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa436cc8 <col:19, col:24> '<dependent type>'
          (MemberExpr 0xa436ca8 <col:19> '<bound member function type>' ->size 0xa426310
            (CXXThisExpr 0xa436c98 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa436d44 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa431290 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa436e60 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0xa436e50 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa436e34 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017270 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa436e80 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa436e20 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa436e04 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0xa4312e0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa437098 <line:1244:2, col:56>
    0xa436ec0 "const size_type __len =
      (CXXOperatorCallExpr 0xa437070 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa437028 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520)
        (CallExpr 0xa436f28 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa436f08 <col:26> '<bound member function type>' ->size 0xa426310
            (CXXThisExpr 0xa436ef8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa437000 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa436f60 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081f40 0xa0826b0)
          (CallExpr 0xa436fc8 <col:44, col:49> '<dependent type>'
            (MemberExpr 0xa436fa8 <col:44> '<bound member function type>' ->size 0xa426310
              (CXXThisExpr 0xa436f98 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa436fe4 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0xa431290 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa43d700 <line:1245:2, col:63>
    (ConditionalOperator 0xa43d6e0 <col:9, col:63> '<dependent type>'
      (ParenExpr 0xa43d660 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0xa43d648 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa43d548 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa43d500 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
            (DeclRefExpr 0xa4370a8 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa436ec0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa4370f0 <col:18, col:23> '<dependent type>'
              (MemberExpr 0xa4370d0 <col:18> '<bound member function type>' ->size 0xa426310
                (CXXThisExpr 0xa4370c0 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0xa43d620 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa43d5d8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950)
            (DeclRefExpr 0xa43d56c <col:28> 'const size_type':'const unsigned int' lvalue Var 0xa436ec0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa43d5b8 <col:36, col:45> '<dependent type>'
              (MemberExpr 0xa43d598 <col:36> '<bound member function type>' ->max_size 0xa426390
                (CXXThisExpr 0xa43d588 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa43d6a8 <col:50, col:59> '<dependent type>'
        (MemberExpr 0xa43d688 <col:50> '<bound member function type>' ->max_size 0xa426390
          (CXXThisExpr 0xa43d678 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa43d6c4 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa436ec0 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0xa43d958 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0xa43d880 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0xa43d750 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
    (DeclRefExpr 0xa43d790 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa4313d0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0xa43d7f0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa43d7b8 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa43d7a8 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa43d860 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa43d824 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0xa43d940 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa43d8f0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa43d8b8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa43d8a8 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa43d924 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa4313d0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa43e180 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0xa43e170 <line:1274:7, line:1275:58>
    (ParenExpr 0xa43e158 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0xa43e140 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa43df50 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa43def0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa43dde0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
          (CallExpr 0xa43de60 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa43de28 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa43de10 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43db70 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa43ded0 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa43de98 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa43de7c <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43dce0 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0xa43e118 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa43df90 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0a1e10 0xa0a2380)
          (CallExpr 0xa43e018 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa43dfe0 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0xa43dfc8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43db70 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa43e088 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa43e050 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa43e034 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43db70 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa43e0f8 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa43e0c0 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0xa43e0a4 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43dce0 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa43e850 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0xa43e840 <line:1291:7, line:1292:30>
    (CallExpr 0xa43e810 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa43e618 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0a28d0 0xa0a31a0)
      (CallExpr 0xa43e6a0 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa43e668 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0xa43e650 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43e380 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa43e710 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa43e6d8 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0xa43e6bc <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43e380 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa43e780 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa43e748 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa43e72c <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43e4f0 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa43e7f0 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa43e7b8 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa43e79c <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43e4f0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa43edc8 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0xa43edb8 <col:7, col:26>
    (UnaryOperator 0xa43eda0 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa43ed88 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa43ed60 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa43ed00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa43dde0 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80)
          (DeclRefExpr 0xa43ecd0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43ea50 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa43ece8 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43ebc0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa43f2f8 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0xa43f2e8 <col:7, col:20>
    (CXXOperatorCallExpr 0xa43f2c0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa43f270 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa43e5d0 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
      (DeclRefExpr 0xa43f240 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43f130 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0xa43f258 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43efc0 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa43f858 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0xa43f848 <col:7, col:25>
    (UnaryOperator 0xa43f830 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa43f818 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa43f7f0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa43f7a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa43e5d0 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
          (DeclRefExpr 0xa43f770 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43f660 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa43f788 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43f4f0 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa43fdb8 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0xa43fda8 <col:7, col:25>
    (UnaryOperator 0xa43fd90 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa43fd78 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa43fd50 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa43fd00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa43e5d0 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850)
          (DeclRefExpr 0xa43fcd0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43fa50 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa43fce8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa43fbc0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa4402f8 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0xa4402d8 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa440288 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa440270 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa43ffd0 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0xa4402bc <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa440140 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0xa440548 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0xa4404f8 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0xa4404e8 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0xa4404d0 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0xa4404c0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa440470 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0xa4404a8 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0xa440e38 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa440e1c <col:12> '_Bit_type *' lvalue ParmVar 0xa440730 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0xa440e80 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0xa440e68 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0xa440770 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0xa440eb0 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0xa440ed8 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa440ec0 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0xa440f20 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0xa440f08 <col:41> 'int' 0))
) (CompoundStmt 0xa440f50 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0xa4410c0 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0xa4410b0 <col:7, col:32>
    (UnaryOperator 0xa441098 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0xa441080 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa441070 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa441058 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0xa441040 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0xa441020 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0xa440fd8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0xa440fc8 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa440fa4 <col:18> '_Bit_type *const' lvalue ->_M_p 0xa4406b0
                      (CXXThisExpr 0xa440f78 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0xa441030 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0xa441000 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0xa4406f0
                  (CXXThisExpr 0xa440ff0 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0xa4412e0 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0xa441288 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4410f0 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa4410d4 <col:11> '_Bool' lvalue ParmVar 0xa4409b0 '__x' '_Bool'))
    (CompoundAssignOperator 0xa441198 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa441140 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa441130 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa441110 <col:3> '_Bit_type *' lvalue ->_M_p 0xa4406b0
            (CXXThisExpr 0xa441100 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0xa441188 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0xa441168 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa4406f0
          (CXXThisExpr 0xa441158 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0xa441268 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa4411f8 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa4411e8 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa4411c8 <col:3> '_Bit_type *' lvalue ->_M_p 0xa4406b0
            (CXXThisExpr 0xa4411b8 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0xa441250 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa441240 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0xa441220 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa4406f0
            (CXXThisExpr 0xa441210 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0xa4412d0 <line:89:7, col:15>
    (UnaryOperator 0xa4412b8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0xa4412a8 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0xa441540 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0xa441530 <col:7, col:30>
    (CXXOperatorCallExpr 0xa441508 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa4414f8 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4414c0 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa440a50 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0xa441308 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0xa4412f8 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0xa4413b0 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa4413a0 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa441380 <col:27> '_Bool'
            (MemberExpr 0xa441360 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa440940
              (DeclRefExpr 0xa441328 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0xa440af0 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0xa4416d0 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0xa4416c0 <col:7, col:37>
    (BinaryOperator 0xa4416a8 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0xa441688 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa4415e0 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa4415d0 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa4415b0 <col:19, col:20> '_Bool'
              (MemberExpr 0xa441590 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa440940
                (UnaryOperator 0xa441570 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa441560 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0xa441698 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa441670 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa441660 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa441640 <col:34> '_Bool'
              (MemberExpr 0xa441620 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa440940
                (DeclRefExpr 0xa441600 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0xa440bf0 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0xa441858 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0xa441848 <col:7, col:38>
    (BinaryOperator 0xa441830 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0xa441788 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0xa441770 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa441760 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa441740 <col:20, col:21> '_Bool'
              (MemberExpr 0xa441720 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa440940
                (UnaryOperator 0xa441700 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa4416f0 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0xa441818 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa441808 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa4417e8 <col:35> '_Bool'
            (MemberExpr 0xa4417c8 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa440940
              (DeclRefExpr 0xa4417a8 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0xa440cf0 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0xa441928 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0xa441908 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0xa4418b0 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0xa4418a0 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa441880 <col:8> '_Bit_type *' lvalue ->_M_p 0xa4406b0
          (CXXThisExpr 0xa441870 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0xa4418f8 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0xa4418d8 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa4406f0
        (CXXThisExpr 0xa4418c8 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0xa445080 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa44505c <col:10> '_Bit_type *const' lvalue ._M_p 0xa4406b0
    (DeclRefExpr 0xa445044 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa441480 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0xa4450e0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0xa4450bc <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0xa4406f0
    (DeclRefExpr 0xa4450a4 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa441480 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0xa445110 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0xa4428e0 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa4428c4 <col:12> '_Bit_type *' lvalue ParmVar 0xa442030 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0xa442920 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa442908 <col:28> 'unsigned int' lvalue ParmVar 0xa442080 '__y' 'unsigned int'))
) (CompoundStmt 0xa442b98 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0xa442da8 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0xa442d88 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0xa442ca0 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0xa442bf8 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0xa442bd8 <col:11> 'unsigned int' lvalue ->_M_offset 0xa441ff0
          (CXXThisExpr 0xa442bc8 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa442c90 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0xa442c78 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0xa442c48 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa442c38 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0xa442c1c <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0xa442c60 <col:45> 'int' 1))))
    (CompoundStmt 0xa442d70 <line:122:2, line:125:2>
      (BinaryOperator 0xa442d10 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0xa442cc8 <col:4> 'unsigned int' lvalue ->_M_offset 0xa441ff0
          (CXXThisExpr 0xa442cb8 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa442d00 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa442ce8 <col:16> 'int' 0)))
      (UnaryOperator 0xa442d58 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0xa442d38 <col:6> '_Bit_type *' lvalue ->_M_p 0xa441fb0
          (CXXThisExpr 0xa442d28 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0xa442fa0 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0xa442f80 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0xa442e30 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0xa442df0 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0xa442dd0 <col:11> 'unsigned int' lvalue ->_M_offset 0xa441ff0
          (CXXThisExpr 0xa442dc0 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa442e20 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa442e08 <col:26> 'int' 0)))
    (CompoundStmt 0xa442f68 <line:132:2, line:135:2>
      (BinaryOperator 0xa442f08 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0xa442e58 <col:4> 'unsigned int' lvalue ->_M_offset 0xa441ff0
          (CXXThisExpr 0xa442e48 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa442ef8 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa442ee0 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0xa442eb0 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa442ea0 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0xa442e84 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0xa442ec8 <col:35> 'int' 1))))
      (UnaryOperator 0xa442f50 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa442f30 <col:6> '_Bit_type *' lvalue ->_M_p 0xa441fb0
          (CXXThisExpr 0xa442f20 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0xa443470 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0xa4430b8 <line:141:7, col:44>
    0xa442fe0 "difference_type __n =
      (ImplicitCastExpr 0xa4430a8 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0xa443090 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0xa443080 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa443060 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa443014 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0xa4422b0 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0xa443070 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa443040 <col:35> 'unsigned int' lvalue ->_M_offset 0xa441ff0
              (CXXThisExpr 0xa443030 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0xa443188 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0xa4430d8 <col:7> '_Bit_type *' lvalue ->_M_p 0xa441fb0
      (CXXThisExpr 0xa4430c8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0xa443170 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0xa443160 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa4430f8 <col:15> 'difference_type':'int' lvalue Var 0xa442fe0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa443148 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa443138 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0xa44311c <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0xa443250 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0xa4431a8 <col:7> 'difference_type':'int' lvalue Var 0xa442fe0 '__n' 'difference_type':'int')
    (BinaryOperator 0xa443238 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0xa443228 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa4431c0 <col:13> 'difference_type':'int' lvalue Var 0xa442fe0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa443210 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa443200 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0xa4431e4 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0xa4433a8 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0xa4432a8 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0xa443298 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa443268 <col:11> 'difference_type':'int' lvalue Var 0xa442fe0 '__n' 'difference_type':'int'))
      (IntegerLiteral 0xa443280 <col:17> 'int' 0))
    (CompoundStmt 0xa443390 <line:145:2, line:148:2>
      (CompoundAssignOperator 0xa443328 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa4432c0 <col:4> 'difference_type':'int' lvalue Var 0xa442fe0 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0xa443310 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0xa443300 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0xa4432e4 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0xa443378 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa443358 <col:6> '_Bit_type *' lvalue ->_M_p 0xa441fb0
          (CXXThisExpr 0xa443348 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0xa443458 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0xa4433d8 <col:7> 'unsigned int' lvalue ->_M_offset 0xa441ff0
      (CXXThisExpr 0xa4433c8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0xa443440 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0xa443430 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa443420 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa4433f8 <col:45> 'difference_type':'int' lvalue Var 0xa442fe0 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa443620 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0xa443610 <col:7, col:51>
    (BinaryOperator 0xa4435f8 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0xa443540 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0xa443520 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa4434c8 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa441fb0
            (CXXThisExpr 0xa4434b8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa443530 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa443500 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0xa441fb0
            (DeclRefExpr 0xa4434e8 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa4423d0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0xa4435e0 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0xa4435c0 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa443568 <col:34> 'const unsigned int' lvalue ->_M_offset 0xa441ff0
            (CXXThisExpr 0xa443558 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa4435d0 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa4435a0 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0xa441ff0
            (DeclRefExpr 0xa443588 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa4423d0 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa443870 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0xa443860 <line:159:7, line:160:56>
    (BinaryOperator 0xa443848 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0xa4436c0 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0xa4436a0 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa443648 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa441fb0
            (CXXThisExpr 0xa443638 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa4436b0 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa443680 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0xa441fb0
            (DeclRefExpr 0xa443668 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa4424d0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0xa443830 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0xa443818 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0xa443760 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0xa443740 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa4436e8 <col:11> '_Bit_type *const' lvalue ->_M_p 0xa441fb0
                (CXXThisExpr 0xa4436d8 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa443750 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa443720 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0xa441fb0
                (DeclRefExpr 0xa443708 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa4424d0 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0xa443800 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0xa4437e0 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa443788 <col:31> 'const unsigned int' lvalue ->_M_offset 0xa441ff0
                (CXXThisExpr 0xa443778 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa4437f0 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa4437c0 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0xa441ff0
                (DeclRefExpr 0xa4437a8 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa4424d0 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa443970 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0xa443960 <col:7, col:28>
    (UnaryOperator 0xa443948 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0xa443930 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0xa443908 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0xa4438f8 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa4438c8 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa442450 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa443898 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa443888 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa4438ac <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa4425a0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa443a28 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0xa443a18 <col:7, col:21>
    (CXXOperatorCallExpr 0xa4439f0 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0xa4439e0 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4439c8 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa442520 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0xa443984 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa442670 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0xa4439b0 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0xa4439a0 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa443b10 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0xa443b00 <col:7, col:27>
    (UnaryOperator 0xa443ae8 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa443ad0 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa443aa8 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0xa443a98 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa443a80 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa442520 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0xa443a3c <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa442740 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0xa443a68 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa443a58 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa443bf8 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0xa443be8 <col:7, col:27>
    (UnaryOperator 0xa443bd0 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa443bb8 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa443b90 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0xa443b80 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa443b68 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa442520 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa443b38 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa443b28 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa443b4c <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa442810 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0xa445420 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0xa445408 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa444d90 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0xa4457a0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa445780 <col:10> '_Bit_type *const' lvalue ._M_p 0xa441fb0
    (DeclRefExpr 0xa445768 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa444d90 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0xa445800 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa4457dc <col:10> 'const unsigned int' lvalue ._M_offset 0xa441ff0
    (DeclRefExpr 0xa4457c4 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa444d90 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0xa445838 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0xa443fa8 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0xa443f98 <line:183:5, line:184:37>
    (ImplicitCastExpr 0xa443f88 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0xa443f70 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0xa443f58 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0xa443ef8 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0xa443ee8 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0xa443e88 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0xa443db0 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa443da0 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa443d84 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0xa443e70 <col:32, col:52> 'int'
                  (BinaryOperator 0xa443e58 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0xa443e38 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa443de0 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0xa441fb0
                        (DeclRefExpr 0xa443dc8 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa443c20 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0xa443e48 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa443e18 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0xa441fb0
                        (DeclRefExpr 0xa443e00 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa443c70 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0xa443ed8 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa443eb8 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0xa441ff0
                (DeclRefExpr 0xa443ea0 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa443c20 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0xa443f48 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa443f28 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0xa441ff0
              (DeclRefExpr 0xa443f10 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa443c70 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa444dd0 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa444c88 <col:42> 'int' 0))
, (ImplicitCastExpr 0xa444de0 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa444ca0 <col:45> 'int' 0))
) (CompoundStmt 0xa444e40 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa444e88 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa444e50 <col:26> '_Bit_type *' lvalue ParmVar 0xa444290 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa444e98 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa444e68 <col:31> 'unsigned int' lvalue ParmVar 0xa4442e0 '__y' 'unsigned int'))
) (CompoundStmt 0xa444ef0 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0xa445158 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0xa445148 <col:7, col:46>
    (CXXConstructExpr 0xa445120 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa445038 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa445028 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0xa444ff8 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0xa444fe8 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa444f48 <col:24> '_Bit_type *const' lvalue ->_M_p 0xa441fb0
                (ImplicitCastExpr 0xa444f38 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0xa444f28 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0xa444fd0 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0xa444f68 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0xa444fc0 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0xa444fa0 <col:37> 'const unsigned int' lvalue ->_M_offset 0xa441ff0
                  (ImplicitCastExpr 0xa444f90 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa444f80 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0xa445220 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0xa4451b8 <line:205:7, col:18> 'void'
    (MemberExpr 0xa445198 <col:7> '<bound member function type>' ->_M_bump_up 0xa4421c0
      (ImplicitCastExpr 0xa4451d8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa445188 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa445210 <line:206:7, col:15>
    (UnaryOperator 0xa4451f8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa4451e8 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0xa4459a8 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0xa4458d8 <line:212:7, col:29>
    0xa445240 "iterator __tmp =
      (CXXConstructExpr 0xa4458b0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa4453d0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa445288 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa445278 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa445918 <line:213:7, col:18> 'void'
    (MemberExpr 0xa4458f8 <col:7> '<bound member function type>' ->_M_bump_up 0xa4421c0
      (ImplicitCastExpr 0xa445938 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa4458e8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa445998 <line:214:7, col:14>
    (CXXConstructExpr 0xa445970 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa445960 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa445948 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa445240 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0xa445a60 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0xa4459f8 <line:220:7, col:20> 'void'
    (MemberExpr 0xa4459d8 <col:7> '<bound member function type>' ->_M_bump_down 0xa442240
      (ImplicitCastExpr 0xa445a18 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa4459c8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa445a50 <line:221:7, col:15>
    (UnaryOperator 0xa445a38 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa445a28 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0xa445be8 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0xa445b18 <line:227:7, col:29>
    0xa445a80 "iterator __tmp =
      (CXXConstructExpr 0xa445af0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa445ae0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa445ac8 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa445ab8 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa445b58 <line:228:7, col:20> 'void'
    (MemberExpr 0xa445b38 <col:7> '<bound member function type>' ->_M_bump_down 0xa442240
      (ImplicitCastExpr 0xa445b78 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa445b28 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa445bd8 <line:229:7, col:14>
    (CXXConstructExpr 0xa445bb0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa445ba0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa445b88 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa445a80 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0xa445cc8 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0xa445c50 <line:235:7, col:18> 'void'
    (MemberExpr 0xa445c18 <col:7> '<bound member function type>' ->_M_incr 0xa442330
      (ImplicitCastExpr 0xa445c70 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa445c08 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0xa445c80 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa445c38 <col:15> 'difference_type':'int' lvalue ParmVar 0xa4447d0 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa445cb8 <line:236:7, col:15>
    (UnaryOperator 0xa445ca0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa445c90 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0xa445e08 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0xa445da8 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0xa445d98 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa445d48 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa444870 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0xa445cf0 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa445ce0 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0xa445d30 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa445d20 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa445d04 <col:17> 'difference_type':'int' lvalue ParmVar 0xa4448e0 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa445df8 <line:243:7, col:15>
    (UnaryOperator 0xa445de0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa445dd0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0xa445fa0 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0xa445eb8 <line:249:7, col:29>
    0xa445e30 "iterator __tmp =
      (CXXConstructExpr 0xa445e90 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa445e78 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa445e68 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa445f90 <line:250:7, col:23>
    (CXXConstructExpr 0xa445f68 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa445f58 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa445f30 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa445f20 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa445f08 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa444870 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa445ec8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa445e30 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa445ef8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa445ee0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa4449b0 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0xa446130 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0xa446048 <line:256:7, col:29>
    0xa445fc0 "iterator __tmp =
      (CXXConstructExpr 0xa446020 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa446008 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa445ff8 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa446120 <line:257:7, col:23>
    (CXXConstructExpr 0xa4460f8 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa4460e8 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa4460c0 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa4460b0 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa446098 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa444940 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa446058 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa445fc0 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa446088 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa446070 <col:23> 'difference_type':'int' lvalue ParmVar 0xa444ac0 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0xa446320 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0xa446310 <col:7, col:27>
    (CXXConstructExpr 0xa4462e8 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa4462d8 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa4462c8 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa4462a8 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa446298 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa446248 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa444410 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa446238 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0xa446220 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa4461f8 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0xa4461e8 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa446198 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa444a50 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0xa446158 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0xa446148 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0xa446188 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0xa44616c <col:24> 'difference_type':'int' lvalue ParmVar 0xa444b80 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa4453f8 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa4453dc <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa445390 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0xa4458a0 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0xa446580 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0xa446570 <col:5, col:18>
    (CXXConstructExpr 0xa446548 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa446538 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa446528 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa446500 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa4464f0 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa4464d8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa444a50 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0xa446498 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa446390 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0xa4464c8 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa4464b0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa446340 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa4473b0 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa447378 <col:48> 'int' 0))
, (ImplicitCastExpr 0xa4473c0 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa447390 <col:51> 'int' 0))
) (CompoundStmt 0xa447420 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa447468 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa447430 <col:26> '_Bit_type *' lvalue ParmVar 0xa4468d0 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa447478 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa447448 <col:31> 'unsigned int' lvalue ParmVar 0xa446920 '__y' 'unsigned int'))
) (CompoundStmt 0xa4474d0 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0xa447578 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa447508 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0xa441fb0
    (ImplicitCastExpr 0xa4474f8 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa4474e0 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa446a00 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0xa447588 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa447550 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0xa441ff0
    (ImplicitCastExpr 0xa447540 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa447528 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa446a00 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0xa4475e0 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0xa447790 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0xa447780 <col:7, col:51>
    (ImplicitCastExpr 0xa447770 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0xa447750 <col:14, col:51> '_Bool'
        (MemberExpr 0xa447730 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa440940
          (ImplicitCastExpr 0xa447720 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0xa4476e8 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0xa4476d8 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0xa447638 <col:29> '_Bit_type *const' lvalue ->_M_p 0xa441fb0
                  (ImplicitCastExpr 0xa447628 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa447618 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0xa4476c0 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0xa447658 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0xa4476b0 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0xa447690 <col:42> 'const unsigned int' lvalue ->_M_offset 0xa441ff0
                    (ImplicitCastExpr 0xa447680 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0xa447670 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0xa447860 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0xa4477f8 <line:291:7, col:18> 'void'
    (MemberExpr 0xa4477d8 <col:7> '<bound member function type>' ->_M_bump_up 0xa4421c0
      (ImplicitCastExpr 0xa447818 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa4477c8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa447850 <line:292:7, col:15>
    (UnaryOperator 0xa447838 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa447828 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0xa447b88 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0xa447ab8 <line:298:7, col:35>
    0xa447880 "const_iterator __tmp =
      (CXXConstructExpr 0xa447a90 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa4479f0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa4478c8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa4478b8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa447af8 <line:299:7, col:18> 'void'
    (MemberExpr 0xa447ad8 <col:7> '<bound member function type>' ->_M_bump_up 0xa4421c0
      (ImplicitCastExpr 0xa447b18 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa447ac8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa447b78 <line:300:7, col:14>
    (CXXConstructExpr 0xa447b50 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa447b40 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa447b28 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa447880 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0xa447c40 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0xa447bd8 <line:306:7, col:20> 'void'
    (MemberExpr 0xa447bb8 <col:7> '<bound member function type>' ->_M_bump_down 0xa442240
      (ImplicitCastExpr 0xa447bf8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa447ba8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa447c30 <line:307:7, col:15>
    (UnaryOperator 0xa447c18 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa447c08 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0xa447dc8 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0xa447cf8 <line:313:7, col:35>
    0xa447c60 "const_iterator __tmp =
      (CXXConstructExpr 0xa447cd0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa447cc0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa447ca8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa447c98 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa447d38 <line:314:7, col:20> 'void'
    (MemberExpr 0xa447d18 <col:7> '<bound member function type>' ->_M_bump_down 0xa442240
      (ImplicitCastExpr 0xa447d58 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa447d08 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa447db8 <line:315:7, col:14>
    (CXXConstructExpr 0xa447d90 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa447d80 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa447d68 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa447c60 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0xa447ea8 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0xa447e30 <line:321:7, col:18> 'void'
    (MemberExpr 0xa447df8 <col:7> '<bound member function type>' ->_M_incr 0xa442330
      (ImplicitCastExpr 0xa447e50 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa447de8 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0xa447e60 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa447e18 <col:15> 'difference_type':'int' lvalue ParmVar 0xa446ec0 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa447e98 <line:322:7, col:15>
    (UnaryOperator 0xa447e80 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa447e70 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0xa447fe8 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0xa447f88 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0xa447f78 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa447f28 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa446f60 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0xa447ed0 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa447ec0 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0xa447f10 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa447f00 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa447ee4 <col:17> 'difference_type':'int' lvalue ParmVar 0xa446fd0 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa447fd8 <line:329:7, col:15>
    (UnaryOperator 0xa447fc0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa447fb0 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0xa448180 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0xa448098 <line:335:7, col:35>
    0xa448010 "const_iterator __tmp =
      (CXXConstructExpr 0xa448070 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa448058 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa448048 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa448170 <line:336:7, col:23>
    (CXXConstructExpr 0xa448148 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa448138 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa448110 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa448100 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa4480e8 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa446f60 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa4480a8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa448010 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa4480d8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa4480c0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa4470a0 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0xa448310 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0xa448228 <line:342:7, col:35>
    0xa4481a0 "const_iterator __tmp =
      (CXXConstructExpr 0xa448200 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa4481e8 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa4481d8 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa448300 <line:343:7, col:23>
    (CXXConstructExpr 0xa4482d8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa4482c8 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa4482a0 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa448290 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa448278 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa447030 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa448238 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa4481a0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa448268 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa448250 <col:23> 'difference_type':'int' lvalue ParmVar 0xa4471b0 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0xa448498 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0xa448488 <col:7, col:27>
    (CXXOperatorCallExpr 0xa448468 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa448458 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa448428 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa446b00 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa448418 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0xa448400 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa4483d8 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa4483c8 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa448378 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa447140 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0xa448338 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0xa448328 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0xa448368 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0xa44834c <col:24> 'difference_type':'int' lvalue ParmVar 0xa447270 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa447a18 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa4479fc <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa4479b0 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0xa447a80 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0xa448700 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0xa4486f0 <col:5, col:18>
    (CXXConstructExpr 0xa4486c8 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa4486b8 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0xa4486a8 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa448680 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa448670 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa448658 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa447140 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0xa448618 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa448510 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0xa448648 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa448630 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa4484c0 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0xa448af8 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0xa448ad0 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa448928 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0xa448918 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa448900 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa4425f0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa4488f0 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa44889c <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448720 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa4488e0 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa4488d0 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa4488b4 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448760 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0xa4489c8 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0xa4489b8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa448968 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa444510 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0xa44894c <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448720 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0xa448aa8 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa448a98 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa448a80 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa440a50 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0xa448a38 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa448a28 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa448a10 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa444410 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa448a00 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa4489e8 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448720 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa448a70 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa448a58 <col:18> '_Bool' lvalue ParmVar 0xa4487a0 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0xa4498e0 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0xa4498c0 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0xa448d80 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0xa448d60 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa448cf8 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0xa441fb0
          (ImplicitCastExpr 0xa448ce8 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa448ccc <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b20 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0xa448d70 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa448d40 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0xa441fb0
          (ImplicitCastExpr 0xa448d30 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa448d18 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b60 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0xa449750 <line:366:7, line:370:7>
      (CallExpr 0xa4492b8 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0xa4492a8 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa449248 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa449180 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0xa0928b0 'fill')))
        (BinaryOperator 0xa448e68 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0xa448e58 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0xa448e20 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0xa441fb0
              (ImplicitCastExpr 0xa448e10 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0xa448df8 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b20 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0xa448e40 <col:27> 'int' 1))
        (ImplicitCastExpr 0xa4492e0 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa448ea8 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0xa441fb0
            (ImplicitCastExpr 0xa448e98 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa448e80 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b60 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0xa4492f0 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0xa448f38 <col:43, col:54> 'int'
            (ImplicitCastExpr 0xa448f28 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa448ec8 <col:43> 'const _Bool' lvalue ParmVar 0xa448bd0 '__x' 'const _Bool &'))
            (UnaryOperator 0xa448ef8 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0xa448ee0 <col:50> 'int' 0))
            (IntegerLiteral 0xa448f10 <col:54> 'int' 0))))
      (CallExpr 0xa449498 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0xa449488 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa449450 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa448830 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa4494d0 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa4494c0 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa449334 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b20 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa449518 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa449508 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa4494f8 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa449408 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0xa4493c8 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0xa4493b8 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa449380 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0xa441fb0
                      (ImplicitCastExpr 0xa449370 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0xa449358 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b20 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0xa4493a0 <col:55> 'int' 1))
                (ImplicitCastExpr 0xa4493f8 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa4493e0 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0xa449540 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa449438 <col:62> 'const _Bool' lvalue ParmVar 0xa448bd0 '__x' 'const _Bool &')))
      (CallExpr 0xa449698 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0xa449688 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa449670 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa448830 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa4496e0 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa4496d0 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa4496c0 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa449610 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0xa4495f0 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0xa4495b8 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0xa441fb0
                    (ImplicitCastExpr 0xa4495a8 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0xa449590 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b60 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0xa449600 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa4495d8 <col:44> 'int' 0))))))
        (CXXConstructExpr 0xa449718 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa449708 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa449640 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b60 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa449740 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa449658 <col:56> 'const _Bool' lvalue ParmVar 0xa448bd0 '__x' 'const _Bool &'))))
    (CallExpr 0xa449818 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0xa449808 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4497ec <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa448830 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0xa449850 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa449840 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa4497a4 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b20 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0xa449888 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa449878 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa4497bc <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa448b60 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa4498b0 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa4497d4 <col:39> 'const _Bool' lvalue ParmVar 0xa448bd0 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa44a948 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0xa44a9b8 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0xa44a9c8 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0xa44a030 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa44aac8 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0xa44ab38 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0xa44ac98 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0xa44ac88 <col:9, col:61>
    (UnaryOperator 0xa44ac70 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa44ac58 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa44abf0 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa44abb0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CXXDependentScopeMemberExpr 0xa44ab78 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0xa44ab68 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0xa44adf8 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0xa44ade8 <col:9, col:67>
    (UnaryOperator 0xa44add0 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa44adb8 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa44ad50 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa44ad10 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
          (CXXDependentScopeMemberExpr 0xa44acd8 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0xa44acc8 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa44aeb8 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0xa44aea8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa44ae88 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0xa44ae68 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0xa44ae28 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0xa44af10 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa44af20 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa44a4d0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa44af80 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0xa44aff8 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0xa44afd8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa44afa0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa44af90 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0xa44b218 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0xa44b208 <line:439:9, line:440:23>
    (CallExpr 0xa44b1e8 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa44b040 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0xa44b020 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa44a6b0
          (CXXThisExpr 0xa44b010 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0xa44b1d0 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0xa44b158 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0xa44b140 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0xa44b100 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0xa44b0e0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa44b074 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa44a6f0 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa44b0f0 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa44b0c8 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa44b0b8 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0xa44b09c <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0xa44b130 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa44b118 <col:59> 'int' 1))))
        (ImplicitCastExpr 0xa44b1c0 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0xa44b1a8 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa44b198 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0xa44b17c <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0xa44b590 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0xa44b570 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa44b298 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa44b260 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0xa44b240 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa44a6b0
          (CXXThisExpr 0xa44b230 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0xa44b548 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa44b300 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa44b2e0 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa44a6b0
          (CXXThisExpr 0xa44b2d0 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa44b3a0 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa44b368 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa44b348 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa44a6b0
            (CXXThisExpr 0xa44b338 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0xa44b520 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa44b4e0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa443d10 0xa066ef0 0xa06a1b0)
        (CXXDependentScopeMemberExpr 0xa44b408 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0xa44b3e8 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa44a6b0
            (CXXThisExpr 0xa44b3d8 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa44b4a8 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa44b470 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0xa44b450 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa44a6b0
              (CXXThisExpr 0xa44b440 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0xa452eb0 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0xa452ea0 <col:7, col:35>
    (CallExpr 0xa452e80 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa452e48 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0xa452f10 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0xa452f20 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa44c4e0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa452f80 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0xa452d80 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa452d70 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa452d98 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa452f90 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa44c690 '__a' 'const allocator_type &')
) (CompoundStmt 0xa4532c0 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0xa453050 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0xa453018 <col:7> '<bound member function type>' ->_M_initialize 0xa450b00
      (CXXThisExpr 0xa453008 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa453038 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa44c5f0 '__n' 'size_type':'unsigned int'))
  (CallExpr 0xa453298 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0xa453098 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0 0xa448c60)
    (CXXDependentScopeMemberExpr 0xa453150 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa453118 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa4530e0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa4530d0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa4531d0 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa453198 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0xa453188 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa453278 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0xa453268 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa453204 <col:3> 'const _Bool' lvalue ParmVar 0xa44c640 '__value' 'const _Bool &'))
      (UnaryOperator 0xa453238 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0xa453220 <col:14> 'int' 0))
      (IntegerLiteral 0xa453250 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0xa453328 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa4532f0 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0xa4532d8 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44c800 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0xa453608 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0xa453430 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0xa4533a0 <col:7> '<bound member function type>' ->_M_initialize 0xa450b00
      (CXXThisExpr 0xa453390 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa453410 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4533d8 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa4533c0 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44c800 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa4535e0 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0xa453460 <col:7> '<bound member function type>' ->_M_copy_aligned 0xa450a30
      (CXXThisExpr 0xa453450 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa4534d0 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa453498 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0xa453480 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44c800 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0xa453540 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa453508 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa4534ec <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44c800 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0xa4535a8 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa453570 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa453560 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa452db8 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa453620 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa44c9e0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa453898 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0xa4537b0 <line:552:2, col:70>
    0xa453780 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa453870 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0xa4537d0 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa453810 <col:25> '_InputIterator' lvalue ParmVar 0xa44c950 '__first' '_InputIterator')
    (DeclRefExpr 0xa453828 <col:34> '_InputIterator' lvalue ParmVar 0xa44c990 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa453858 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0xa4538b0 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa453f38 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0xa453a08 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4539a8 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa453948 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80 0xa43dde0)
      (CXXOperatorCallExpr 0xa453918 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa4538d8 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (DeclRefExpr 0xa4538c0 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44cc00 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0xa453938 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0xa4539f8 <line:562:2, col:10>
      (UnaryOperator 0xa4539e0 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa4539d0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0xa453ca0 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa453b38 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa453ae8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
      (CallExpr 0xa453a78 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa453a40 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa453a24 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44cc00 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa453ac8 <col:24, col:33> '<dependent type>'
        (MemberExpr 0xa453aa8 <col:24> '<bound member function type>' ->capacity 0xa44d630
          (CXXThisExpr 0xa453a98 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa453c88 <line:564:2, line:567:2>
      (CallExpr 0xa453ba8 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa453b70 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa453b60 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0xa453c68 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0xa453bd8 <col:4> '<bound member function type>' ->_M_initialize 0xa450b00
          (CXXThisExpr 0xa453bc8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0xa453c48 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa453c10 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa453bf8 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44cc00 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0xa453ee8 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa453d08 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa453cd0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa453cc0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0xa453ec0 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0xa453d50 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0xa450a30
        (CXXThisExpr 0xa453d40 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa453dc0 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa453d88 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0xa453d70 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44cc00 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa453e30 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa453df8 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa453ddc <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44cc00 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa453ea0 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0xa453e60 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0xa453f28 <line:570:7, col:15>
    (UnaryOperator 0xa453f10 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa453f00 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0xa453fe0 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0xa453fb8 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa453f68 <col:7> '<bound member function type>' ->_M_fill_assign 0xa451910
      (CXXThisExpr 0xa453f58 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa453f88 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa44cd10 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa453fa0 <col:27> 'const _Bool' lvalue ParmVar 0xa44cd60 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa454208 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0xa454120 <line:604:2, col:70>
    0xa4540f0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa4541e0 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0xa454140 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa454180 <col:21> '_InputIterator' lvalue ParmVar 0xa44ced0 '__first' '_InputIterator')
    (DeclRefExpr 0xa454198 <col:30> '_InputIterator' lvalue ParmVar 0xa44cf10 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa4541c8 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0xa4542b0 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0xa4542a0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa454268 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa454230 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa454220 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0xa454358 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0xa454348 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa454310 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4542d8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa4542c8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0xa454400 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0xa4543f0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa4543b8 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa454380 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa454370 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0xa4544a8 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0xa454498 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa454460 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa454428 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa454418 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0xa4622e0 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0xa4622d0 <col:7, col:36>
    (CXXConstructExpr 0xa4622a8 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa462298 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa462288 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa462058 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa457188 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0xa457148 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa465240 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0xa465230 <col:7, col:42>
    (CXXConstructExpr 0xa465208 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa4651f8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa4651e8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa464fb8 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa464f98 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa464f58 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0xa465398 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0xa465388 <col:7, col:38>
    (CXXConstructExpr 0xa465360 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa465350 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa465340 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa4652d0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa4652b0 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0xa465270 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa4654f0 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0xa4654e0 <col:7, col:44>
    (CXXConstructExpr 0xa4654b8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa4654a8 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa465498 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa465428 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa465408 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa4653c8 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0xa465688 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0xa465678 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0xa465658 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa465630 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa4655f0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
        (CallExpr 0xa465560 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa465520 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0xa4655d0 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa465590 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0xa465b68 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0xa465868 <line:671:7, line:673:24>
    0xa4656b0 "const size_type __isize =
      (ImplicitCastExpr 0xa465858 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0xa465840 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0xa465810 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0xa465800 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0xa465790 <col:2, col:48> 'const int':'const int' lvalue Var 0xa1ae290 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0xa4657e8 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa4657d8 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0xa4657bc <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0xa465828 <col:23> 'int' 1)))")
  (DeclStmt 0xa465968 <line:674:7, col:66>
    0xa465880 "const size_type __asize =
      (CallExpr 0xa465948 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa465910 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0xa4658f0 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0xa4658b4 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0xa465b58 <line:675:7, line:676:46>
    (ParenExpr 0xa465b40 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0xa465b20 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0xa465a40 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0xa465a30 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa465978 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa465880 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0xa465a18 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0xa4659f8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa465990 <col:26> 'const size_type':'const unsigned int' lvalue Var 0xa4656b0 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0xa465a08 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa4659e0 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa4659d0 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0xa4659b4 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0xa465ae0 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0xa465ac0 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa465a58 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa465880 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0xa465ad0 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0xa465aa8 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa465a98 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa465a7c <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0xa465b10 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa465af8 <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa4656b0 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0xa465d58 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0xa465d48 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0xa465d28 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa465d00 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa465cc0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
        (CXXUnresolvedConstructExpr 0xa465c30 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0xa465be0 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa465ba8 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0xa465b98 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa465c18 <col:72> 'int' 0))
        (CallExpr 0xa465ca0 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa465c60 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0xa465ee8 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0xa465ed8 <col:7, col:29>
    (CXXOperatorCallExpr 0xa465eb0 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa465e50 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80 0xa43dde0)
      (CallExpr 0xa465dc0 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa465d80 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0xa465e30 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa465df0 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0xa466248 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0xa466238 <line:691:7, line:692:58>
    (CXXConstructExpr 0xa466210 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa466200 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa4661f0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa4661d0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa4661c0 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa4661a8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa444410 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa466198 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0xa466178 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa4660b0 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0xa466060 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                  (CXXDependentScopeMemberExpr 0xa465f88 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa465f50 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0xa465f18 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0xa465f08 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0xa466048 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0xa466028 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa465fbc <col:12> 'size_type':'unsigned int' lvalue ParmVar 0xa44f1c0 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa466038 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa466010 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa466000 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0xa465fe4 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0xa466160 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0xa466140 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa4660d4 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa44f1c0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa466150 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa466128 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa466118 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0xa4660fc <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa466560 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0xa466550 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0xa466530 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa466520 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa466508 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa446b00 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa4664f8 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0xa4664d8 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa466410 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa4663c0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
            (CXXDependentScopeMemberExpr 0xa4662e8 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa4662b0 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa466278 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0xa466268 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0xa4663a8 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0xa466388 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa46631c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa44f2f0 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0xa466398 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa466370 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa466360 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0xa466344 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0xa4664c0 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0xa4664a0 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa466434 <col:35> 'size_type':'unsigned int' lvalue ParmVar 0xa44f2f0 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0xa4664b0 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa466488 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa466478 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0xa46645c <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa466770 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0xa466750 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa466648 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa4665f8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00 0xa43fca0)
      (DeclRefExpr 0xa466574 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa44f450 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa4665d8 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4665a0 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0xa466590 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa466720 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0xa466710 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4666f4 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017340 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa466740 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa4666e0 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0xa4666a4 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa466870 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0xa4667d0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa466798 <col:7> '<bound member function type>' ->_M_range_check 0xa44f4d0
      (CXXThisExpr 0xa466788 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa4667b8 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa44f590 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa466860 <col:28, col:46>
    (ArraySubscriptExpr 0xa466848 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa466818 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa466800 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa4667f0 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa46682c <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa44f590 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa466970 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0xa4668d0 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa466898 <col:7> '<bound member function type>' ->_M_range_check 0xa44f4d0
      (CXXThisExpr 0xa466888 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa4668b8 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa44f650 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa466960 <col:28, col:46>
    (ArraySubscriptExpr 0xa466948 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa466918 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa466900 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa4668f0 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa46692c <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa44f650 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0xa466a20 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0xa466a10 <col:7, col:21>
    (UnaryOperator 0xa4669f8 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa4669d8 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa466998 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa466ad0 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0xa466ac0 <col:7, col:21>
    (UnaryOperator 0xa466aa8 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa466a88 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa466a48 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa466c18 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0xa466c08 <col:7, col:25>
    (UnaryOperator 0xa466bf0 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa466bd8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa466bb0 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa466b70 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (CallExpr 0xa466b38 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa466af8 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa466b58 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa466d60 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0xa466d50 <col:7, col:25>
    (UnaryOperator 0xa466d38 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa466d20 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa466cf8 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa466cb8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (CallExpr 0xa466c80 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa466c40 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa466ca0 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0xa466d78 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0xa467140 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0xa467120 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa466f20 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa466ec0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (CXXDependentScopeMemberExpr 0xa466e08 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa466dd0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa466d98 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa466d88 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa466e88 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa466e50 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa466e40 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0xa467028 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa466ff8 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa466fe0 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa466f90 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa466f58 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa466f48 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa46700c <col:38> '_Bool' lvalue ParmVar 0xa44fad0 '__x' '_Bool'))
    (CallExpr 0xa4670f8 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0xa467050 <col:9> '<bound member function type>' ->_M_insert_aux 0xa452ab0
        (CXXThisExpr 0xa467040 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa4670c0 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0xa467080 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa4670dc <col:30> '_Bool' lvalue ParmVar 0xa44fad0 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa467940 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0xa4672c0 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa467178 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0450d0 0xa045610 0xa1c71c0 0xa440240)
    (CXXDependentScopeMemberExpr 0xa467200 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4671c8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa4671b8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa467288 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa467250 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0xa467234 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44fbd0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa467450 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0xa467308 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0450d0 0xa045610 0xa1c71c0 0xa440240)
    (CXXDependentScopeMemberExpr 0xa467390 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa467358 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa467348 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa467418 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4673e0 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa4673c4 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44fbd0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa4675e0 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa467498 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0450d0 0xa045610 0xa1c71c0 0xa440240)
    (CXXDependentScopeMemberExpr 0xa467520 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4674e8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa4674d8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa4675a8 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa467570 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa467554 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44fbd0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa467918 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa467818 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0xa467888 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0xa46784c <col:11> '<dependent type>' lvalue))
    (CallExpr 0xa4678f8 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4678c0 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0xa4678a4 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa44fbd0 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0xa467b80 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0xa467a28 <line:773:7, col:23>
    0xa467970 "bool __tmp =
      (ImplicitCastExpr 0xa467a18 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0xa4679f8 <col:20> '_Bool'
          (MemberExpr 0xa4679d8 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa440940
            (ImplicitCastExpr 0xa4679c8 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0xa4679a4 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa44fcc0 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0xa467ac8 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa467ab8 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa467a80 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0xa440b70 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0xa467a38 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa44fcc0 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa467a70 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0xa467a50 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa44fd00 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0xa467b58 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa467b48 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa467b30 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa440a50 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0xa467aec <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa44fd00 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa467b20 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa467b04 <col:13> '_Bool' lvalue Var 0xa467970 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0xa452de8 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa452dd8 <col:51, col:56> '_Bool'))
) (CompoundStmt 0xa468280 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0xa467cd8 <line:781:7, col:55>
    0xa467bb0 "const difference_type __n =
      (CXXOperatorCallExpr 0xa467cb0 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa467c70 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
        (DeclRefExpr 0xa467be4 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa44fe10 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa467c50 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0xa467c10 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0xa468150 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0xa467fb8 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa467e80 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa467e20 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
        (CXXDependentScopeMemberExpr 0xa467d68 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa467d30 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa467cf8 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0xa467ce8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa467de8 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa467db0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa467da0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0xa467f90 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa467f30 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80 0xa43dde0)
        (DeclRefExpr 0xa467ea4 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa44fe10 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa467f10 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa467ed0 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa4680b0 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa468080 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa468068 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa468018 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa467fe0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa467fd0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa468094 <col:38> 'const _Bool' lvalue ParmVar 0xa44fe60 '__x' 'const _Bool &'))
    (CallExpr 0xa468128 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0xa4680d8 <col:9> '<bound member function type>' ->_M_insert_aux 0xa452ab0
        (CXXThisExpr 0xa4680c8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa4680f8 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa44fe10 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0xa468110 <col:35> 'const _Bool' lvalue ParmVar 0xa44fe60 '__x' 'const _Bool &')))
  (ReturnStmt 0xa468270 <line:787:7, col:24>
    (CXXOperatorCallExpr 0xa468248 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa4681f8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
      (CallExpr 0xa4681c0 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa468180 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa4681dc <col:24> 'const difference_type':'const int' lvalue Var 0xa467bb0 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa4684e0 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0xa4683d0 <line:795:2, col:70>
    0xa4683a0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa4684b0 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0xa4683f0 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa468430 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa44ffd0 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa468448 <col:33> '_InputIterator' lvalue ParmVar 0xa450010 '__first' '_InputIterator')
    (DeclRefExpr 0xa468460 <col:42> '_InputIterator' lvalue ParmVar 0xa450050 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa468498 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0xa468598 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0xa468570 <col:7, col:42> '<dependent type>'
    (MemberExpr 0xa468508 <col:7> '<bound member function type>' ->_M_fill_insert 0xa452420
      (CXXThisExpr 0xa4684f8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa468528 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4501b0 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa468540 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa4501f0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa468558 <col:39> 'const _Bool' lvalue ParmVar 0xa450240 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0xa468648 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0xa468630 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa4685f8 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4685c0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa4685b0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0xa468a98 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0xa468980 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4687c0 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa468760 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (CXXOperatorCallExpr 0xa4686c8 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa4686b8 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4686a0 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa444a50 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa468690 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa46865c <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450400 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa468678 <col:24> 'int' 1))
      (CallExpr 0xa468740 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa468700 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa468958 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa468808 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
      (CXXOperatorCallExpr 0xa4688a8 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa468898 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa468880 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa444a50 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa468870 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa468840 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450400 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa468858 <col:32> 'int' 1))
      (CallExpr 0xa468920 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa4688e0 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa46893c <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450400 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0xa468a20 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa4689e8 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4689b0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa4689a0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0xa468a88 <line:818:7, col:14>
    (CXXConstructExpr 0xa468a60 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa468a50 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa468a34 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450400 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa468d50 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0xa468cd0 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa468b40 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0xa468b30 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa468b18 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa4425f0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa468b08 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa468ab4 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450510 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa468af8 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa468ae8 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa468acc <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450550 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0xa468cb0 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0xa468b78 <col:2> '<bound member function type>' ->_M_erase_at_end 0xa452d00
        (CXXThisExpr 0xa468b68 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa468c88 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa468bb0 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
        (DeclRefExpr 0xa468be8 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450550 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa468c50 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0xa468c10 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa468c6c <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450510 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0xa468d40 <line:826:7, col:14>
    (CXXConstructExpr 0xa468d18 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa468d08 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa468cec <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450510 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0xa452e00 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0xa4691d0 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0xa4691b0 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa468e20 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa468dd0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
      (DeclRefExpr 0xa468d68 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa450660 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa468db0 <col:24, col:29> '<dependent type>'
        (MemberExpr 0xa468d90 <col:24> '<bound member function type>' ->size 0xa44d530
          (CXXThisExpr 0xa468d80 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa468fb8 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0xa468e58 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa452d00
        (CXXThisExpr 0xa468e48 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0xa468f90 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa468f40 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
        (CallExpr 0xa468ec8 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0xa468e88 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0xa468f28 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa468f18 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa468f08 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa468ef0 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa450660 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0xa469188 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0xa468fe8 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0xa469080 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa469040 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa469148 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa469108 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
        (DeclRefExpr 0xa46909c <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa450660 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa4690e8 <col:36, col:41> '<dependent type>'
          (MemberExpr 0xa4690c8 <col:36> '<bound member function type>' ->size 0xa44d530
            (CXXThisExpr 0xa4690b8 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa46916c <col:44> '_Bool' lvalue ParmVar 0xa4506a0 '__x' '_Bool'))))


        void flip() (CompoundStmt 0xa469538 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0xa469510 <line:847:7, line:849:18>
    (DeclStmt 0xa4692f0 <line:847:12, col:57>
      0xa469200 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0xa4692b8 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa469280 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa469248 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa469238 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4693f8 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa469398 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (DeclRefExpr 0xa469300 <col:5> '_Bit_type *' lvalue Var 0xa469200 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0xa469360 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa469328 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa469318 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0xa469438 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0xa46941c <col:47> '_Bit_type *' lvalue Var 0xa469200 '__p' '_Bit_type *'))
    (BinaryOperator 0xa4694f8 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0xa469478 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa469468 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa46944c <col:10> '_Bit_type *' lvalue Var 0xa469200 '__p' '_Bit_type *')))
      (UnaryOperator 0xa4694e0 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa4694d0 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0xa4694b8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0xa4694a8 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa46948c <col:18> '_Bit_type *' lvalue Var 0xa469200 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0xa469610 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0xa4695f0 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa469560 <col:7> '<bound member function type>' ->_M_erase_at_end 0xa452d00
      (CXXThisExpr 0xa469550 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa4695d0 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa469590 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0xa46d0e8 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0xa469b30 <line:863:7, col:75>
    0xa469640 "_Bit_type *__q =
      (CallExpr 0xa469ad8 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0xa469ac8 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa469a68 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0xa4699a0 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0xa08b540 'copy')))
        (ImplicitCastExpr 0xa469b00 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa4696f0 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0xa441fb0
            (ImplicitCastExpr 0xa4696e0 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa4696c8 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa4508f0 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa469b10 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa469738 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0xa441fb0
            (ImplicitCastExpr 0xa469728 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa469710 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa450930 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa469b20 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa469780 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0xa441fb0
            (ImplicitCastExpr 0xa469770 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa469758 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa450970 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0xa46d0d8 <line:864:7, line:865:26>
    (CXXConstructExpr 0xa46d0b0 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa46d0a0 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa46d090 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0xa469fb8 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa469fa8 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa469f48 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0xa469e80 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0xa08b540 'copy')))
            (CXXConstructExpr 0xa46a000 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa469ff0 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0xa469fe0 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa469c18 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa469bf8 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa469bc0 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0xa441fb0
                        (ImplicitCastExpr 0xa469bb0 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0xa469b98 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa450930 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0xa469c08 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa469be0 <col:52> 'int' 0))))))
            (CXXConstructExpr 0xa46d020 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0xa46a028 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0xa469c48 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa450930 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0xa46d068 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa46d058 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0xa46d048 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa469cb8 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa469c98 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0xa469c68 <col:19> '_Bit_type *' lvalue Var 0xa469640 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0xa469ca8 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa469c80 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0xa46d758 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0xa46d1c8 <line:871:7, col:46>
    0xa46d110 "_Bit_type *__q =
      (CallExpr 0xa46d1a8 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa46d158 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0xa46d148 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0xa46d18c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa450ab0 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0xa46d438 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa46d220 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa46d1e8 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa46d1d8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0xa46d420 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0xa46d408 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0xa46d3f8 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa46d254 <col:42> '_Bit_type *' lvalue Var 0xa46d110 '__q' '_Bit_type *'))
        (ParenExpr 0xa46d3e0 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0xa46d3c8 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0xa46d350 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0xa46d338 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0xa46d2f8 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa46d2d8 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa46d26c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa450ab0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa46d2e8 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa46d2c0 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa46d2b0 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0xa46d294 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0xa46d328 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa46d310 <col:36> 'int' 1))))
            (ImplicitCastExpr 0xa46d3b8 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa46d3a0 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa46d390 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0xa46d374 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0xa46d558 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa46d498 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa46d460 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa46d450 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0xa46d528 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0xa46d508 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0xa46d4d8 <col:41> '_Bit_type *' lvalue Var 0xa46d110 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0xa46d518 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa46d4f0 <col:46> 'int' 0))))
  (BinaryOperator 0xa46d740 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa46d5b8 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa46d580 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa46d570 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0xa46d718 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0xa46d6c8 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
      (CXXDependentScopeMemberExpr 0xa46d638 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa46d600 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa46d5f0 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0xa46d6b0 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0xa46d6a0 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0xa46d690 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa46d678 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0xa450ab0 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa46da40 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0xa46d7e0 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0xa46d788 <col:2> '<bound member function type>' ->_M_initialize 0xa450b00
      (CXXThisExpr 0xa46d778 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0xa46d7c8 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa46d7a8 <col:39> '_Integer' lvalue ParmVar 0xa450bd0 '__n' '_Integer')))
  (CallExpr 0xa46da18 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa46d828 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0 0xa448c60)
    (CXXDependentScopeMemberExpr 0xa46d8e0 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa46d8a8 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa46d870 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa46d860 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa46d960 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa46d928 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0xa46d918 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa46d9f8 <col:38, col:49> 'int'
      (DeclRefExpr 0xa46d994 <col:38> '_Integer' lvalue ParmVar 0xa450c10 '__x' '_Integer')
      (UnaryOperator 0xa46d9c8 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0xa46d9b0 <col:45> 'int' 0))
      (IntegerLiteral 0xa46d9e0 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa46db88 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0xa46db60 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0xa46da68 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa46daa8 <col:29> '_InputIterator' lvalue ParmVar 0xa450de0 '__first' '_InputIterator')
    (DeclRefExpr 0xa46dac0 <col:38> '_InputIterator' lvalue ParmVar 0xa450e20 '__last' '_InputIterator')
    (CallExpr 0xa46db40 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa46daf0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa057ea0)
      (DeclRefExpr 0xa46db24 <col:33> '_InputIterator' lvalue ParmVar 0xa450de0 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa46dd30 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0xa46dd08 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa46dc30 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa46dbd0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (DeclRefExpr 0xa46db9c <col:9> '_InputIterator' lvalue ParmVar 0xa450ff0 '__first' '_InputIterator')
      (DeclRefExpr 0xa46dbb4 <col:20> '_InputIterator' lvalue ParmVar 0xa451030 '__last' '_InputIterator'))
    (UnaryOperator 0xa46dc70 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa46dc54 <col:30> '_InputIterator' lvalue ParmVar 0xa450ff0 '__first' '_InputIterator'))
    (CallExpr 0xa46dce8 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0xa46dc98 <col:4> '<bound member function type>' ->push_back 0xa44fb50
        (CXXThisExpr 0xa46dc88 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0xa46dcd0 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa46dcb8 <col:15> '_InputIterator' lvalue ParmVar 0xa450ff0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa46dfe0 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0xa46de30 <line:913:2, col:54>
    0xa46dd50 "const size_type __n =
      (CallExpr 0xa46de08 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa46dda0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
        (DeclRefExpr 0xa46ddd4 <col:38> '_ForwardIterator' lvalue ParmVar 0xa451240 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa46ddec <col:47> '_ForwardIterator' lvalue ParmVar 0xa451280 '__last' '_ForwardIterator'))")
  (CallExpr 0xa46de88 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0xa46de50 <col:2> '<bound member function type>' ->_M_initialize 0xa450b00
      (CXXThisExpr 0xa46de40 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa46de70 <col:16> 'const size_type':'const unsigned int' lvalue Var 0xa46dd50 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0xa46dfb8 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa46ded0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
    (DeclRefExpr 0xa46df08 <col:12> '_ForwardIterator' lvalue ParmVar 0xa451240 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa46df20 <col:21> '_ForwardIterator' lvalue ParmVar 0xa451280 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0xa46df80 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa46df48 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa46df38 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa46e088 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0xa46e060 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa46e010 <col:9> '<bound member function type>' ->_M_fill_assign 0xa451910
      (CXXThisExpr 0xa46e000 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa46e030 <col:24> '_Integer' lvalue ParmVar 0xa451490 '__n' '_Integer')
    (DeclRefExpr 0xa46e048 <col:29> '_Integer' lvalue ParmVar 0xa4514d0 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa46e1d0 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0xa46e1a8 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0xa46e0b0 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa46e0f0 <col:23> '_InputIterator' lvalue ParmVar 0xa4516a0 '__first' '_InputIterator')
    (DeclRefExpr 0xa46e108 <col:32> '_InputIterator' lvalue ParmVar 0xa4516e0 '__last' '_InputIterator')
    (CallExpr 0xa46e188 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa46e138 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0xa057ea0)
      (DeclRefExpr 0xa46e16c <col:65> '_InputIterator' lvalue ParmVar 0xa4516a0 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0xa46ead8 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0xa46eab8 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa46e2a0 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa46e250 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
      (DeclRefExpr 0xa46e1e4 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa451850 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa46e230 <col:17, col:22> '<dependent type>'
        (MemberExpr 0xa46e210 <col:17> '<bound member function type>' ->size 0xa44d530
          (CXXThisExpr 0xa46e200 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa46e6e8 <line:935:2, line:939:2>
      (CallExpr 0xa46e4e8 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa46e2e8 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0 0xa448c60)
        (CXXDependentScopeMemberExpr 0xa46e3a0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa46e368 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa46e330 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa46e320 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa46e420 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa46e3e8 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa46e3d8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa46e4c8 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa46e4b8 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa46e454 <col:40> '_Bool' lvalue ParmVar 0xa451890 '__x' '_Bool'))
          (UnaryOperator 0xa46e488 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa46e470 <col:47> 'int' 0))
          (IntegerLiteral 0xa46e4a0 <col:51> 'int' 0)))
      (CallExpr 0xa46e6c0 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa46e520 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa46e5b8 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0xa46e578 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa46e680 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa46e640 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (DeclRefExpr 0xa46e5d4 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0xa451850 '__n' 'size_t':'unsigned int')
          (CallExpr 0xa46e620 <col:24, col:29> '<dependent type>'
            (MemberExpr 0xa46e600 <col:24> '<bound member function type>' ->size 0xa44d530
              (CXXThisExpr 0xa46e5f0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0xa46e6a4 <col:32> '_Bool' lvalue ParmVar 0xa451890 '__x' '_Bool')))
    (CompoundStmt 0xa46eaa0 <line:941:2, line:945:2>
      (CallExpr 0xa46e830 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0xa46e710 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa452d00
          (CXXThisExpr 0xa46e700 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0xa46e808 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa46e7b8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (CallExpr 0xa46e780 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa46e740 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa46e79c <col:30> 'size_t':'unsigned int' lvalue ParmVar 0xa451850 '__n' 'size_t':'unsigned int')))
      (CallExpr 0xa46ea78 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa46e878 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0 0xa448c60)
        (CXXDependentScopeMemberExpr 0xa46e930 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa46e8f8 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa46e8c0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa46e8b0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa46e9b0 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa46e978 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa46e968 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa46ea58 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa46ea48 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa46e9e4 <col:40> '_Bool' lvalue ParmVar 0xa451890 '__x' '_Bool'))
          (UnaryOperator 0xa46ea18 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa46ea00 <col:47> 'int' 0))
          (IntegerLiteral 0xa46ea30 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa46f180 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0xa46eba8 <line:953:2, col:26>
    0xa46eb00 "iterator __cur =
      (CallExpr 0xa46eb88 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa46eb48 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0xa46eef8 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa46ed80 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa46ec48 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa46ebe8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
        (DeclRefExpr 0xa46ebb8 <col:9> '_InputIterator' lvalue ParmVar 0xa4519e0 '__first' '_InputIterator')
        (DeclRefExpr 0xa46ebd0 <col:20> '_InputIterator' lvalue ParmVar 0xa451a20 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa46ed58 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa46ecf8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
        (DeclRefExpr 0xa46ec6c <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa46eb00 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa46ecd8 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0xa46ec98 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa46ee28 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0xa46edd8 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa46edc8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa46edb0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa444510 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa46ed98 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa46eb00 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0xa46ee10 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa46edf8 <col:57> '_InputIterator' lvalue ParmVar 0xa4519e0 '__first' '_InputIterator')))
    (BinaryOperator 0xa46eee0 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0xa46ee90 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa46ee80 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa46ee68 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa444410 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa46ee58 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa46ee40 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa46eb00 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0xa46eec8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa46eeb0 <col:14> '_InputIterator' lvalue ParmVar 0xa4519e0 '__first' '_InputIterator'))))
  (IfStmt 0xa46f160 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa46efb0 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa46ef50 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80 0xa43dde0)
      (DeclRefExpr 0xa46ef1c <col:6> '_InputIterator' lvalue ParmVar 0xa4519e0 '__first' '_InputIterator')
      (DeclRefExpr 0xa46ef34 <col:17> '_InputIterator' lvalue ParmVar 0xa451a20 '__last' '_InputIterator'))
    (CallExpr 0xa46f020 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0xa46efe8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa452d00
        (CXXThisExpr 0xa46efd8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa46f008 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa46eb00 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0xa46f138 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa46f050 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa46f0e8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa46f0a8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa46f104 <col:18> '_InputIterator' lvalue ParmVar 0xa4519e0 '__first' '_InputIterator')
      (DeclRefExpr 0xa46f11c <col:27> '_InputIterator' lvalue ParmVar 0xa451a20 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa46f8c0 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0xa46f290 <line:967:2, col:56>
    0xa46f1b0 "const size_type __len =
      (CallExpr 0xa46f268 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa46f200 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
        (DeclRefExpr 0xa46f234 <col:40> '_ForwardIterator' lvalue ParmVar 0xa451c10 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa46f24c <col:49> '_ForwardIterator' lvalue ParmVar 0xa451c50 '__last' '_ForwardIterator'))")
  (IfStmt 0xa46f8a0 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa46f358 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa46f308 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
      (DeclRefExpr 0xa46f2a0 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa46f1b0 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa46f2e8 <col:14, col:19> '<dependent type>'
        (MemberExpr 0xa46f2c8 <col:14> '<bound member function type>' ->size 0xa44d530
          (CXXThisExpr 0xa46f2b8 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa46f4c8 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0xa46f390 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa452d00
        (CXXThisExpr 0xa46f380 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa46f4a0 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa46f3c8 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
        (DeclRefExpr 0xa46f400 <col:30> '_ForwardIterator' lvalue ParmVar 0xa451c10 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa46f418 <col:39> '_ForwardIterator' lvalue ParmVar 0xa451c50 '__last' '_ForwardIterator')
        (CallExpr 0xa46f480 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa46f440 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa46f880 <line:971:4, line:976:4>
      (DeclStmt 0xa46f540 <line:972:6, col:38>
        0xa46f4f0 "_ForwardIterator __mid =
          (DeclRefExpr 0xa46f524 <col:31> '_ForwardIterator' lvalue ParmVar 0xa451c10 '__first' '_ForwardIterator')")
      (CallExpr 0xa46f618 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa46f578 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05ce60)
        (DeclRefExpr 0xa46f5ac <col:19> '_ForwardIterator' lvalue Var 0xa46f4f0 '__mid' '_ForwardIterator')
        (CallExpr 0xa46f5f8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa46f5d8 <col:26> '<bound member function type>' ->size 0xa44d530
            (CXXThisExpr 0xa46f5c8 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0xa46f738 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa46f660 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
        (DeclRefExpr 0xa46f698 <col:16> '_ForwardIterator' lvalue ParmVar 0xa451c10 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa46f6b0 <col:25> '_ForwardIterator' lvalue Var 0xa46f4f0 '__mid' '_ForwardIterator')
        (CallExpr 0xa46f718 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa46f6d8 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0xa46f858 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa46f770 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0xa46f808 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0xa46f7c8 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa46f824 <col:20> '_ForwardIterator' lvalue Var 0xa46f4f0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa46f83c <col:27> '_ForwardIterator' lvalue ParmVar 0xa451c50 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa46f978 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0xa46f950 <col:9, col:39> '<dependent type>'
    (MemberExpr 0xa46f8e8 <col:9> '<bound member function type>' ->_M_fill_insert 0xa452420
      (CXXThisExpr 0xa46f8d8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa46f908 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa451e40 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa46f920 <col:31> '_Integer' lvalue ParmVar 0xa451e80 '__n' '_Integer')
    (DeclRefExpr 0xa46f938 <col:36> '_Integer' lvalue ParmVar 0xa451ec0 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa46fae0 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0xa46fab0 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0xa46f9a0 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa46f9e0 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4520c0 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa46f9f8 <col:32> '_InputIterator' lvalue ParmVar 0xa452100 '__first' '_InputIterator')
    (DeclRefExpr 0xa46fa10 <col:41> '_InputIterator' lvalue ParmVar 0xa452140 '__last' '_InputIterator')
    (CallExpr 0xa46fa90 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa46fa40 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa057ea0)
      (DeclRefExpr 0xa46fa74 <col:29> '_InputIterator' lvalue ParmVar 0xa452100 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa46fd78 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0xa46fd50 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa46fb88 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa46fb28 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (DeclRefExpr 0xa46faf4 <col:9> '_InputIterator' lvalue ParmVar 0xa452530 '__first' '_InputIterator')
      (DeclRefExpr 0xa46fb0c <col:20> '_InputIterator' lvalue ParmVar 0xa452570 '__last' '_InputIterator'))
    (UnaryOperator 0xa46fbc8 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa46fbac <col:30> '_InputIterator' lvalue ParmVar 0xa452530 '__first' '_InputIterator'))
    (CompoundStmt 0xa46fd38 <line:1006:4, line:1009:4>
      (BinaryOperator 0xa46fcc0 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa46fbdc <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4524f0 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa46fc98 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa46fc08 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa46fc4c <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4524f0 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0xa46fc80 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa46fc64 <col:29> '_InputIterator' lvalue ParmVar 0xa452530 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0xa46fd18 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa46fd08 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa46fcf0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa444510 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa46fcd8 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4524f0 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa470488 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0xa46ffe8 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa46ff00 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa46feb0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
      (CXXOperatorCallExpr 0xa46fe70 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa46fe30 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
        (CallExpr 0xa46fdc0 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa46fda0 <col:11> '<bound member function type>' ->max_size 0xa44d5b0
            (CXXThisExpr 0xa46fd90 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa46fe10 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa46fdf0 <col:24> '<bound member function type>' ->size 0xa44d530
            (CXXThisExpr 0xa46fde0 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa46fe94 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0xa452b20 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa46ffb8 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0xa46ffa8 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa46ff8c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017270 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa46ffd8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa46ff78 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa46ff5c </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0xa452b70 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa4701f0 <line:1026:7, col:61>
    0xa470010 "const size_type __len =
      (CXXOperatorCallExpr 0xa4701c8 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa470178 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
        (CallExpr 0xa470078 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa470058 <col:31> '<bound member function type>' ->size 0xa44d530
            (CXXThisExpr 0xa470048 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa470150 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa4700b0 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0xa081f40 0xa0826b0)
          (CallExpr 0xa470118 <col:49, col:54> '<dependent type>'
            (MemberExpr 0xa4700f8 <col:49> '<bound member function type>' ->size 0xa44d530
              (CXXThisExpr 0xa4700e8 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0xa470134 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0xa452b20 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa470478 <line:1027:7, col:68>
    (ConditionalOperator 0xa470458 <col:14, col:68> '<dependent type>'
      (ParenExpr 0xa4703d8 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0xa4703c0 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa4702b8 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa470268 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
            (DeclRefExpr 0xa470200 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa470010 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa470248 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa470228 <col:23> '<bound member function type>' ->size 0xa44d530
                (CXXThisExpr 0xa470218 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0xa470398 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa470348 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
            (DeclRefExpr 0xa4702dc <col:33> 'const size_type':'const unsigned int' lvalue Var 0xa470010 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa470328 <col:41, col:50> '<dependent type>'
              (MemberExpr 0xa470308 <col:41> '<bound member function type>' ->max_size 0xa44d5b0
                (CXXThisExpr 0xa4702f8 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0xa470420 <col:55, col:64> '<dependent type>'
        (MemberExpr 0xa470400 <col:55> '<bound member function type>' ->max_size 0xa44d5b0
          (CXXThisExpr 0xa4703f0 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa47043c <col:68> 'const size_type':'const unsigned int' lvalue Var 0xa470010 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0xa470558 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0xa470540 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa4704f0 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4704b8 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa4704a8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0xa470524 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa452c60 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0xa471790 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0xa470ba0 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa470a78 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa470a28 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
      (DeclRefExpr 0xa4709a4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa4708c0 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa470a08 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4709d0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa4709c0 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa470b70 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0xa470b60 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa470b44 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017270 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa470b90 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa470b30 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa470b00 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa471770 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa470c90 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa470c40 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
      (CallExpr 0xa470c08 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa470bd0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa470bc0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa470c24 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa4708c0 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa471740 <line:72:2, line:85:2>
      (DeclStmt 0xa470d48 <line:73:4, col:39>
        0xa470cc0 "const size_type __old_size =
          (CallExpr 0xa470d28 <col:33, col:38> '<dependent type>'
            (MemberExpr 0xa470d08 <col:33> '<bound member function type>' ->size 0xa426310
              (CXXThisExpr 0xa470cf8 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0xa470f58 <line:74:4, line:76:57>
        0xa470d60 "pointer __tmp =
          (CallExpr 0xa470f30 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa470da8 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa470de4 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa4708c0 '__n' 'size_type':'unsigned int')
            (ParenExpr 0xa470e80 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa470e48 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa470e10 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa470e00 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0xa470f18 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa470ee0 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa470ea8 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa470e98 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0xa471130 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa470f98 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (CXXDependentScopeMemberExpr 0xa471020 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa470fe8 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa470fd8 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa4710a0 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa471068 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa471058 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa471110 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa4710d4 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa471380 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa471158 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa4711e0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4711a8 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa471198 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa471358 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa471318 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (CXXDependentScopeMemberExpr 0xa471260 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa471228 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa471218 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa4712e0 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa4712a8 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa471298 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa471440 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa4713f0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4713b8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa4713a8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa471424 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa470d60 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa471580 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa4714a0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa471468 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa471458 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa471558 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa471508 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (DeclRefExpr 0xa4714d4 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa470d60 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa4714ec <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa470cc0 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa471728 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa4715e0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4715a8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa471598 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa471700 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa4716b0 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (CXXDependentScopeMemberExpr 0xa471660 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa471628 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa471618 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa471694 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0xa4708c0 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0xa472620 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0xa471f68 <line:111:7, col:49>
    0xa471e40 "const size_type __n =
      (CXXOperatorCallExpr 0xa471f40 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa471f00 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
        (DeclRefExpr 0xa471e74 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa471ba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa471ee0 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0xa471ea0 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0xa4724b8 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0xa472210 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa4720d8 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa472078 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
        (CXXDependentScopeMemberExpr 0xa471fc0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa471f88 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa471f78 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa472040 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa472008 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa471ff8 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa4721e8 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa472188 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80 0xa43dde0)
        (DeclRefExpr 0xa4720fc <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa471ba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa472168 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa472128 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa472400 <line:114:2, line:117:2>
      (CallExpr 0xa472340 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa472270 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa472238 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa472228 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa4722f0 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4722b8 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa4722a8 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa472324 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0xa471bf0 '__x' 'const value_type &'))
      (UnaryOperator 0xa4723e8 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa4723b0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa472378 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa472368 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0xa4724a0 <line:119:2, line:129:2>
      (CallExpr 0xa472478 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0xa472428 <col:6> '<bound member function type>' ->_M_insert_aux 0xa431220
          (CXXThisExpr 0xa472418 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa472448 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa471ba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0xa472460 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0xa471bf0 '__x' 'const value_type &'))))
  (ReturnStmt 0xa472610 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0xa4725f0 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0xa4725c8 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa472578 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
        (CXXDependentScopeMemberExpr 0xa472528 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4724f0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa4724e0 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa47255c <col:48> 'const size_type':'const unsigned int' lvalue Var 0xa471e40 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0xa473188 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0xa472f88 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa472db0 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa472d50 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (CXXOperatorCallExpr 0xa472cb8 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa472c68 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
        (DeclRefExpr 0xa472c34 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa472a00 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa472c50 <col:24> 'int' 1))
      (CallExpr 0xa472d30 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa472cf0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa472f60 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0xa472df8 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
      (CXXOperatorCallExpr 0xa472eb0 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa472e60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
        (DeclRefExpr 0xa472e30 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa472a00 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa472e48 <col:30> 'int' 1))
      (CallExpr 0xa472f28 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa472ee8 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa472f44 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa472a00 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0xa473028 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa472ff0 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa472fb8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa472fa8 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa473140 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa473088 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa473050 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa473040 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa473108 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa4730d0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa4730c0 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0xa473178 <line:142:7, col:14>
    (DeclRefExpr 0xa473160 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa472a00 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa473da0 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0xa473d58 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa473888 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa473828 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (DeclRefExpr 0xa4737f8 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa473570 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0xa473810 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4735b0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0xa473d40 <line:151:2, line:155:2>
      (IfStmt 0xa473ae0 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa473998 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa473938 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
          (DeclRefExpr 0xa4738ac <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4735b0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa473918 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa4738d8 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0xa473ab8 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa4739e0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
          (DeclRefExpr 0xa473a18 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4735b0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa473a80 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0xa473a40 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa473a9c <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa473570 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0xa473d20 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0xa473b10 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa431470
          (CXXThisExpr 0xa473b00 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa473cf8 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa473ca8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (CallExpr 0xa473b80 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa473b48 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa473b30 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa473570 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0xa473c90 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa473c68 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa473c28 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
              (CallExpr 0xa473bf0 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0xa473bb0 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa473c0c <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4735b0 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa473d90 <line:156:7, col:14>
    (DeclRefExpr 0xa473d74 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa473570 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa477f10 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0xa477eb8 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa474590 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa474530 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (CXXOperatorCallExpr 0xa474500 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa4744c0 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa272f10 0xa274710 0xa275980)
        (DeclRefExpr 0xa4744a4 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0xa474520 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0xa477e98 <line:165:2, line:194:2>
      (DeclStmt 0xa474668 <line:166:4, col:39>
        0xa4745c0 "const size_type __xlen =
          (CallExpr 0xa474648 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa474610 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa4745f4 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0xa477cd0 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa474730 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa4746e0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
          (DeclRefExpr 0xa474678 <col:8> 'const size_type':'const unsigned int' lvalue Var 0xa4745c0 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0xa4746c0 <col:17, col:26> '<dependent type>'
            (MemberExpr 0xa4746a0 <col:17> '<bound member function type>' ->capacity 0xa426560
              (CXXThisExpr 0xa474690 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0xa474fa8 <line:168:6, line:178:6>
          (DeclStmt 0xa474908 <line:169:8, line:170:20>
            0xa474760 "pointer __tmp =
              (CallExpr 0xa4748e0 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0xa4747a8 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0xa4747e4 <col:45> 'const size_type':'const unsigned int' lvalue Var 0xa4745c0 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0xa474850 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa474818 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4747fc <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa4748c0 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa474888 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47486c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0xa474ad8 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa474940 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
            (CXXDependentScopeMemberExpr 0xa4749c8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa474990 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa474980 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa474a48 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa474a10 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa474a00 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa474ab8 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa474a7c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa474d28 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa474b00 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa474b88 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa474b50 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa474b40 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa474d00 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa474cc0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
              (CXXDependentScopeMemberExpr 0xa474c08 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa474bd0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa474bc0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa474c88 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa474c50 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa474c40 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa474de8 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa474d98 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa474d60 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa474d50 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa474dcc <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa474760 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa474f90 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa474e48 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa474e10 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa474e00 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa474f68 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0xa474f18 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
              (CXXDependentScopeMemberExpr 0xa474ec8 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa474e90 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0xa474e80 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa474efc <col:67> 'const size_type':'const unsigned int' lvalue Var 0xa4745c0 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0xa477cb0 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa477328 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa4772d8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00 0xa43fca0)
            (CallExpr 0xa475000 <col:13, col:18> '<dependent type>'
              (MemberExpr 0xa474fe0 <col:13> '<bound member function type>' ->size 0xa426310
                (CXXThisExpr 0xa474fd0 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa4772bc <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa4745c0 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0xa477668 <line:180:6, line:183:6>
            (CallExpr 0xa477640 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa477370 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
              (CallExpr 0xa477550 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0xa4773c8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
                (CallExpr 0xa477450 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa477418 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0xa477400 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa4774c0 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa477488 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47746c <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa477530 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0xa4774f0 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0xa4775c8 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0xa477588 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0xa477620 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0xa4775e4 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0xa477c98 <line:185:6, line:192:6>
            (CallExpr 0xa477930 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa4776a0 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
              (CXXDependentScopeMemberExpr 0xa477728 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa4776f0 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0xa4776d8 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0xa477888 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0xa477838 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                (CXXDependentScopeMemberExpr 0xa4777b0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa477778 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47775c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa477818 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0xa4777f8 <col:63> '<bound member function type>' ->size 0xa426310
                    (CXXThisExpr 0xa4777e8 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa4778f8 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa4778c0 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0xa4778b0 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0xa477c68 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa477980 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
              (CXXOperatorCallExpr 0xa477ae0 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa477a90 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                (CXXDependentScopeMemberExpr 0xa477a08 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa4779d0 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4779b8 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa477a70 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0xa477a50 <col:59> '<bound member function type>' ->size 0xa426310
                    (CXXThisExpr 0xa477a40 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa477b58 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa477b20 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa477b04 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa474260 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0xa477bd8 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa477ba0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa477b90 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa477c48 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0xa477c0c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0xa477e80 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa477d38 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa477d00 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa477cf0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa477e58 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa477e08 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (CXXDependentScopeMemberExpr 0xa477db8 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa477d80 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa477d70 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa477dec <col:55> 'const size_type':'const unsigned int' lvalue Var 0xa4745c0 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0xa477f00 <line:195:7, col:15>
    (UnaryOperator 0xa477ee8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa477ed8 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0xa478db8 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0xa478d98 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4783f0 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa4783a0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
      (DeclRefExpr 0xa478338 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa4781d0 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa478380 <col:17, col:26> '<dependent type>'
        (MemberExpr 0xa478360 <col:17> '<bound member function type>' ->capacity 0xa426560
          (CXXThisExpr 0xa478350 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa4785b0 <line:204:2, line:207:2>
      (DeclStmt 0xa478508 <line:205:4, col:51>
        0xa478420 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0xa4784e0 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0xa478454 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0xa4781d0 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0xa47846c <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0xa478220 '__val' 'const value_type &')
            (CallExpr 0xa4784c0 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0xa478484 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0xa478590 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa478530 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa478518 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0xa478420 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0xa478578 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa478568 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0xa478d78 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa478680 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa478630 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
        (DeclRefExpr 0xa4785c8 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa4781d0 '__n' 'size_t':'unsigned int')
        (CallExpr 0xa478610 <col:22, col:27> '<dependent type>'
          (MemberExpr 0xa4785f0 <col:22> '<bound member function type>' ->size 0xa426310
            (CXXThisExpr 0xa4785e0 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0xa478be0 <line:209:2, line:215:2>
        (CallExpr 0xa4787f8 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa4786c8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0 0xa448c60)
          (CallExpr 0xa478750 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa478710 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa4787c0 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0xa478780 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa4787dc <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa478220 '__val' 'const value_type &'))
        (CallExpr 0xa478a40 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa478848 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa41ad10 0xa41b640)
          (CXXDependentScopeMemberExpr 0xa4788c8 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa478890 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa478880 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa4789a8 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0xa478968 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
            (DeclRefExpr 0xa4788fc <col:6> 'size_t':'unsigned int' lvalue ParmVar 0xa4781d0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa478948 <col:12, col:17> '<dependent type>'
              (MemberExpr 0xa478928 <col:12> '<bound member function type>' ->size 0xa426310
                (CXXThisExpr 0xa478918 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0xa4789cc <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0xa478220 '__val' 'const value_type &')
          (CallExpr 0xa478a20 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa4789e4 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0xa478bc0 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0xa478ab8 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa478a80 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa478a70 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa478b98 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa478b58 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
            (DeclRefExpr 0xa478aec <col:31> 'size_t':'unsigned int' lvalue ParmVar 0xa4781d0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa478b38 <col:37, col:42> '<dependent type>'
              (MemberExpr 0xa478b18 <col:37> '<bound member function type>' ->size 0xa426310
                (CXXThisExpr 0xa478b08 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa478d58 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0xa478c10 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa431470
          (CXXThisExpr 0xa478c00 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa478d30 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa478c48 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0953c0)
          (CXXDependentScopeMemberExpr 0xa478cc8 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa478c90 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0xa478c80 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa478cfc <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa4781d0 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0xa478d14 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0xa478220 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa479980 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0xa479408 <line:227:2, col:39>
    0xa479330 "pointer __cur =
      (ParenListExpr 0xa4793e8 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0xa4793b0 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa479378 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa479368 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0xa4796f8 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa4795f0 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa4794a8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa479448 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
        (DeclRefExpr 0xa479418 <col:9> '_InputIterator' lvalue ParmVar 0xa4790d0 '__first' '_InputIterator')
        (DeclRefExpr 0xa479430 <col:20> '_InputIterator' lvalue ParmVar 0xa479110 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa4795c8 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa479568 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
        (DeclRefExpr 0xa4794cc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa479330 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0xa479530 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4794f8 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa4794e8 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0xa479668 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0xa479620 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa479608 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa479330 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa479650 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa479634 <col:18> '_InputIterator' lvalue ParmVar 0xa4790d0 '__first' '_InputIterator')))
    (BinaryOperator 0xa4796e0 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0xa479698 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa479680 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa479330 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa4796c8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa4796ac <col:14> '_InputIterator' lvalue ParmVar 0xa4790d0 '__first' '_InputIterator'))))
  (IfStmt 0xa479960 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4797b0 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa479750 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80 0xa43dde0)
      (DeclRefExpr 0xa47971c <col:6> '_InputIterator' lvalue ParmVar 0xa4790d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa479734 <col:17> '_InputIterator' lvalue ParmVar 0xa479110 '__last' '_InputIterator'))
    (CallExpr 0xa479820 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0xa4797e8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa431470
        (CXXThisExpr 0xa4797d8 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa479808 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa479330 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0xa479938 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa479850 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa4798e8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa4798a8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa479904 <col:18> '_InputIterator' lvalue ParmVar 0xa4790d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa47991c <col:27> '_InputIterator' lvalue ParmVar 0xa479110 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa47b140 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0xa479fe0 <line:244:2, col:56>
    0xa479f00 "const size_type __len =
      (CallExpr 0xa479fb8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa479f50 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
        (DeclRefExpr 0xa479f84 <col:40> '_ForwardIterator' lvalue ParmVar 0xa479ca0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa479f9c <col:49> '_ForwardIterator' lvalue ParmVar 0xa479ce0 '__last' '_ForwardIterator'))")
  (IfStmt 0xa47b120 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa47a0a8 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa47a058 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
      (DeclRefExpr 0xa479ff0 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa479f00 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa47a038 <col:14, col:23> '<dependent type>'
        (MemberExpr 0xa47a018 <col:14> '<bound member function type>' ->capacity 0xa426560
          (CXXThisExpr 0xa47a008 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa47a9b0 <line:247:4, line:257:4>
      (DeclStmt 0xa47a1f8 <line:248:6, col:65>
        0xa47a0e0 "pointer __tmp =
          (ParenListExpr 0xa47a1d8 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa47a1b0 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0xa47a128 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa47a164 <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa479f00 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0xa47a17c <col:48> '_ForwardIterator' lvalue ParmVar 0xa479ca0 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa47a194 <col:57> '_ForwardIterator' lvalue ParmVar 0xa479ce0 '__last' '_ForwardIterator')))")
      (CallExpr 0xa47a3c8 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa47a230 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (CXXDependentScopeMemberExpr 0xa47a2b8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47a280 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa47a270 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa47a338 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47a300 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0xa47a2f0 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa47a3a8 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa47a36c <col:6> '<dependent type>' lvalue)))
      (CallExpr 0xa47a618 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa47a3f0 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa47a478 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47a440 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa47a430 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa47a5f0 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa47a5b0 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (CXXDependentScopeMemberExpr 0xa47a4f8 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47a4c0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa47a4b0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa47a578 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47a540 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa47a530 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa47a6d8 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa47a688 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47a650 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa47a640 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa47a6bc <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47a0e0 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa47a880 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa47a738 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47a700 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa47a6f0 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa47a858 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa47a808 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (CXXDependentScopeMemberExpr 0xa47a7b8 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47a780 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa47a770 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa47a7ec <col:57> 'const size_type':'const unsigned int' lvalue Var 0xa479f00 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa47a998 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa47a8e0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47a8a8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa47a898 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa47a960 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47a928 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa47a918 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0xa47b100 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa47aa90 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa47aa40 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00 0xa43fca0)
        (CallExpr 0xa47aa08 <col:11, col:16> '<dependent type>'
          (MemberExpr 0xa47a9e8 <col:11> '<bound member function type>' ->size 0xa426310
            (CXXThisExpr 0xa47a9d8 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa47aa24 <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa479f00 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0xa47ac10 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0xa47aac8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa431470
          (CXXThisExpr 0xa47aab8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa47abe8 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0xa47ab00 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
          (DeclRefExpr 0xa47ab38 <col:30> '_ForwardIterator' lvalue ParmVar 0xa479ca0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa47ab50 <col:39> '_ForwardIterator' lvalue ParmVar 0xa479ce0 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa47abb0 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47ab78 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa47ab68 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0xa47b0e0 <line:261:4, line:269:4>
        (DeclStmt 0xa47ac90 <line:262:6, col:38>
          0xa47ac40 "_ForwardIterator __mid =
            (DeclRefExpr 0xa47ac74 <col:31> '_ForwardIterator' lvalue ParmVar 0xa479ca0 '__first' '_ForwardIterator')")
        (CallExpr 0xa47ad68 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa47acc8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05ce60)
          (DeclRefExpr 0xa47acfc <col:19> '_ForwardIterator' lvalue Var 0xa47ac40 '__mid' '_ForwardIterator')
          (CallExpr 0xa47ad48 <col:26, col:31> '<dependent type>'
            (MemberExpr 0xa47ad28 <col:26> '<bound member function type>' ->size 0xa426310
              (CXXThisExpr 0xa47ad18 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0xa47ae98 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa47adb0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
          (DeclRefExpr 0xa47ade8 <col:16> '_ForwardIterator' lvalue ParmVar 0xa479ca0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa47ae00 <col:25> '_ForwardIterator' lvalue Var 0xa47ac40 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa47ae60 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47ae28 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa47ae18 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0xa47b0c8 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa47af08 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47aed0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa47aec0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0xa47b098 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa47af58 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
            (DeclRefExpr 0xa47af90 <col:36> '_ForwardIterator' lvalue Var 0xa47ac40 '__mid' '_ForwardIterator')
            (DeclRefExpr 0xa47afa8 <col:43> '_ForwardIterator' lvalue ParmVar 0xa479ce0 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0xa47b008 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa47afd0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa47afc0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa47b078 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa47b03c <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0xa47d320 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0xa47d300 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa47b6e8 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa47b688 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (CXXDependentScopeMemberExpr 0xa47b5d0 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa47b598 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa47b588 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa47b650 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa47b618 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa47b608 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa47bdd8 <line:305:2, line:321:2>
      (CallExpr 0xa47b958 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa47b758 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47b720 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa47b710 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa47b7d8 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47b7a0 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa47b790 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0xa47b940 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0xa47b928 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0xa47b910 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0xa47b8e8 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0xa47b8a8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                (CXXDependentScopeMemberExpr 0xa47b858 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47b820 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47b810 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0xa47b890 <line:308:11> 'int' 1))))))
      (UnaryOperator 0xa47ba00 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa47b9c8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47b990 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa47b980 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0xa47ba70 <line:311:4, col:22>
        0xa47ba20 "_Tp __x_copy =
          (DeclRefExpr 0xa47ba54 <col:19> 'const _Tp' lvalue ParmVar 0xa47b470 '__x' 'const _Tp &')")
      (CallExpr 0xa47bd50 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0xa47baa8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0902d0)
        (CallExpr 0xa47bb30 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa47baf8 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0xa47badc <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47b400 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0xa47bc28 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa47bbe8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (CXXDependentScopeMemberExpr 0xa47bb98 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47bb60 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa47bb50 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa47bbd0 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0xa47bd28 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa47bce8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (CXXDependentScopeMemberExpr 0xa47bc98 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47bc60 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa47bc50 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa47bcd0 <col:33> 'int' 1)))
      (BinaryOperator 0xa47bdc0 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0xa47bd90 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa47bd78 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47b400 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0xa47bda4 <col:18> '_Tp' lvalue Var 0xa47ba20 '__x_copy' '_Tp')))
    (CompoundStmt 0xa47d2c0 <line:323:2, line:372:2>
      (DeclStmt 0xa47bf20 <line:324:4, line:325:57>
        0xa47be10 "const size_type __len =
          (CallExpr 0xa47bef8 <col:6, col:56> '<dependent type>'
            (MemberExpr 0xa47be58 <col:6> '<bound member function type>' ->_M_check_len 0xa431360
              (CXXThisExpr 0xa47be48 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0xa47bea8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa47be98 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa47be80 <col:29> 'int' 1)))
            (StringLiteral 0xa47bec0 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0xa47c068 <line:326:4, col:57>
        0xa47bf40 "const size_type __elems_before =
          (CXXOperatorCallExpr 0xa47c040 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa47c000 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
            (DeclRefExpr 0xa47bf74 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47b400 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0xa47bfe0 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0xa47bfa0 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0xa47c158 <line:327:4, col:49>
        0xa47c080 "pointer __new_start =
          (ParenListExpr 0xa47c138 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa47c118 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa47c0c8 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0xa47c0b8 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0xa47c0fc <col:42> 'const size_type':'const unsigned int' lvalue Var 0xa47be10 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0xa47c1e0 <line:328:4, col:37>
        0xa47c170 "pointer __new_finish =
          (ParenListExpr 0xa47c1c0 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0xa47c1a4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0xa47c828 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa47c1f0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa47c800 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0xa47c340 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa47c248 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa47c210 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa47c200 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa47c300 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa47c2b0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
              (DeclRefExpr 0xa47c27c <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa47c294 <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa47bf40 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0xa47c324 <line:339:32> 'const _Tp' lvalue ParmVar 0xa47b470 '__x' 'const _Tp &'))
          (BinaryOperator 0xa47c398 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0xa47c364 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0xa47c380 <col:23> 'int' 0))
          (BinaryOperator 0xa47c5a8 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0xa47c3b0 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa47c578 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa47c3e0 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
              (CXXDependentScopeMemberExpr 0xa47c460 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa47c428 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa47c418 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa47c4e8 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa47c4b0 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa47c494 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47b400 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0xa47c504 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa47c558 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa47c51c <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0xa47c5d8 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa47c5c0 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa47c7e8 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0xa47c5ec <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa47c7b8 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa47c620 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
              (CallExpr 0xa47c6a8 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa47c670 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0xa47c654 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47b400 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0xa47c710 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa47c6d8 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa47c6c8 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa47c744 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa47c798 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa47c75c <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa47cbd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa47c848 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa47cbb0 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0xa47caf0 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0xa47c870 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0xa47c858 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0xa47c9b0 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa47c8d0 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa47c898 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0xa47c888 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa47c988 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa47c938 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                (DeclRefExpr 0xa47c904 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa47c91c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa47bf40 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0xa47cac8 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0xa47c9f8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
              (DeclRefExpr 0xa47ca38 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa47ca50 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa47caa8 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0xa47ca68 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0xa47cb78 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0xa47cb0c <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0xa47cb48 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0xa47cb60 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa47be10 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0xa47cba0 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0xa47cda8 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa47cc10 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
        (CXXDependentScopeMemberExpr 0xa47cc98 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47cc60 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa47cc50 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa47cd18 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47cce0 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa47ccd0 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa47cd88 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa47cd4c <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa47cff8 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa47cdd0 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa47ce58 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47ce20 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa47ce10 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa47cfd0 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa47cf90 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
          (CXXDependentScopeMemberExpr 0xa47ced8 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47cea0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa47ce90 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa47cf58 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa47cf20 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa47cf10 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa47d0b8 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa47d068 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47d030 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa47d020 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa47d09c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa47d168 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa47d118 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47d0e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa47d0d0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa47d14c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c170 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa47d2a8 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa47d1c8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa47d190 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa47d180 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa47d280 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa47d230 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (DeclRefExpr 0xa47d1fc <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47c080 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa47d214 <col:52> 'const size_type':'const unsigned int' lvalue Var 0xa47be10 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa480298 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0xa480278 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0xa47d7c0 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0xa47d7a0 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa47d76c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa47d7b0 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa47d788 <col:18> 'int' 0)))
    (CompoundStmt 0xa480260 <line:381:2, line:463:2>
      (IfStmt 0xa480240 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0xa47d990 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa47d948 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa47d920 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa47d8e0 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
              (CXXDependentScopeMemberExpr 0xa47d828 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa47d7f0 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0xa47d7e0 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa47d8a8 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa47d870 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0xa47d860 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa47d980 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa47d964 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0xa47eb38 <line:384:6, line:413:6>
          (DeclStmt 0xa47da00 <line:385:8, col:33>
            0xa47d9b0 "value_type __x_copy =
              (DeclRefExpr 0xa47d9e4 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa47d670 '__x' 'const value_type &')")
          (DeclStmt 0xa47db48 <line:386:8, col:58>
            0xa47da20 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa47db20 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0xa47dae0 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                (CallExpr 0xa47daa8 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0xa47da68 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa47dac4 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa47dc38 <line:387:8, col:53>
            0xa47db60 "pointer __old_finish =
              (ParenListExpr 0xa47dc18 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa47dbe0 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47dba8 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47db98 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa47eb18 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0xa47dc98 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0xa47dc78 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa47dc48 <col:12> 'const size_type':'const unsigned int' lvalue Var 0xa47da20 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa47dc88 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa47dc60 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0xa47e408 <line:389:3, line:399:3>
              (CallExpr 0xa47df68 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa47dcd8 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                (CXXOperatorCallExpr 0xa47dde8 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47dda8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                  (CXXDependentScopeMemberExpr 0xa47dd58 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa47dd20 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa47dd10 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa47dd8c <col:59> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0xa47de58 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47de20 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47de10 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa47ded8 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47dea0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47de90 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa47df48 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa47df0c <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa47e030 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa47dfe0 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47dfa8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47df98 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa47e014 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
              (CallExpr 0xa47e1d0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa47e078 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0902d0)
                (CallExpr 0xa47e100 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa47e0c8 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47e0ac <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa47e190 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47e150 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                  (DeclRefExpr 0xa47e11c <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47db60 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa47e134 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa47e1b4 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47db60 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa47e3e0 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0xa47e220 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0 0xa448c60)
                (CallExpr 0xa47e2a8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa47e270 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47e258 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa47e3a0 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47e350 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                  (CallExpr 0xa47e318 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa47e2e0 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0xa47e2c4 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa47e334 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa47e3c4 <line:398:8> 'value_type':'_Tp' lvalue Var 0xa47d9b0 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0xa47eaf0 <line:401:3, line:412:3>
              (CallExpr 0xa47e5e8 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa47e450 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa41ad10 0xa41b640)
                (CXXDependentScopeMemberExpr 0xa47e4d0 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47e498 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47e488 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa47e558 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa47e538 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa47e504 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa47e548 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa47e51c <col:13> 'const size_type':'const unsigned int' lvalue Var 0xa47da20 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0xa47e570 <line:404:7> 'value_type':'_Tp' lvalue Var 0xa47d9b0 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0xa47e5c8 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa47e588 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa47e700 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa47e660 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47e628 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47e618 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa47e6e8 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa47e6c8 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa47e694 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa47e6d8 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa47e6ac <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa47da20 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa47e8e0 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa47e748 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                (CallExpr 0xa47e7d0 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa47e798 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47e77c <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa47e7ec <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47db60 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa47e850 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47e818 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47e808 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa47e8c0 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa47e884 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa47e9a8 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa47e958 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa47e920 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47e910 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa47e98c <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa47da20 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa47eac8 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa47e9f0 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0928b0 0xa448c60)
                (CallExpr 0xa47ea78 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa47ea40 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47ea28 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa47ea94 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47db60 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa47eaac <col:48> 'value_type':'_Tp' lvalue Var 0xa47d9b0 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0xa480200 <line:415:6, line:462:6>
          (DeclStmt 0xa47ec40 <line:416:8, line:417:46>
            0xa47eb60 "const size_type __len =
              (CallExpr 0xa47ec18 <col:3, col:45> '<dependent type>'
                (MemberExpr 0xa47eba8 <col:3> '<bound member function type>' ->_M_check_len 0xa431360
                  (CXXThisExpr 0xa47eb98 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa47ebc8 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa47ebe0 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0xa47ed88 <line:418:8, col:61>
            0xa47ec60 "const size_type __elems_before =
              (CXXOperatorCallExpr 0xa47ed60 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0xa47ed20 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                (DeclRefExpr 0xa47ec94 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0xa47ed00 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0xa47ecc0 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0xa47ee78 <line:419:8, col:53>
            0xa47eda0 "pointer __new_start =
              (ParenListExpr 0xa47ee58 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa47ee38 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa47ede8 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0xa47edd8 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa47ee1c <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa47eb60 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa47ef00 <line:420:8, col:41>
            0xa47ee90 "pointer __new_finish =
              (ParenListExpr 0xa47eee0 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa47eec4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa47f5f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa47ef10 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa47f5c8 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0xa47f0b0 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa47ef48 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa41ad10 0xa41b640)
                (CXXOperatorCallExpr 0xa47f000 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47efb0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                  (DeclRefExpr 0xa47ef80 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa47ef98 <col:49> 'const size_type':'const unsigned int' lvalue Var 0xa47ec60 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa47f024 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0xa47f03c <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0xa47d670 '__x' 'const value_type &')
                (CallExpr 0xa47f090 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa47f054 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0xa47f110 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0xa47f0dc <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0xa47f0f8 <col:20> 'int' 0))
              (BinaryOperator 0xa47f350 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0xa47f128 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa47f320 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47f158 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                  (CXXDependentScopeMemberExpr 0xa47f1d8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa47f1a0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa47f190 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa47f260 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa47f228 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa47f20c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa47f27c <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa47f300 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa47f2c0 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0xa47f398 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa47f368 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa47f380 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0xa47f5b0 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0xa47f3b8 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa47f580 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47f3e8 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                  (CallExpr 0xa47f470 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa47f438 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa47f41c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa47d5e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa47f4d8 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa47f4a0 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0xa47f490 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa47f50c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa47f560 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa47f524 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa47fb10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa47f610 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa47faf0 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0xa47fa30 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0xa47f638 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa47f620 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0xa47f8e8 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47f670 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
                  (CXXOperatorCallExpr 0xa47f730 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0xa47f6e0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                    (DeclRefExpr 0xa47f6b0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0xa47f6c8 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa47ec60 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0xa47f868 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa47f818 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                    (CXXOperatorCallExpr 0xa47f7d8 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0xa47f788 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
                      (DeclRefExpr 0xa47f754 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0xa47f76c <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa47ec60 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0xa47f7fc <col:38> 'size_type':'unsigned int' lvalue ParmVar 0xa47d620 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0xa47f8c8 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa47f88c <col:7> '<dependent type>' lvalue)))
                (CallExpr 0xa47fa08 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47f938 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
                  (DeclRefExpr 0xa47f978 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa47f990 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa47f9e8 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa47f9a8 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0xa47fab8 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa47fa4c <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0xa47fa88 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa47faa0 <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa47eb60 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa47fae0 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0xa47fce8 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa47fb50 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
            (CXXDependentScopeMemberExpr 0xa47fbd8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa47fba0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa47fb90 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa47fc58 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa47fc20 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa47fc10 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa47fcc8 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa47fc8c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa47ff38 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa47fd10 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa47fd98 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa47fd60 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa47fd50 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa47ff10 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa47fed0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
              (CXXDependentScopeMemberExpr 0xa47fe18 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa47fde0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa47fdd0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa47fe98 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa47fe60 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa47fe50 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa47fff8 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa47ffa8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa47ff70 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa47ff60 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa47ffdc <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa4800a8 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa480058 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa480020 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa480010 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa48008c <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47ee90 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa4801e8 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa480108 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa4800d0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa4800c0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa4801c0 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0xa480170 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
              (DeclRefExpr 0xa48013c <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa47eda0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa480154 <col:56> 'const size_type':'const unsigned int' lvalue Var 0xa47eb60 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa480a70 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0xa480a48 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4808b0 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa480850 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (DeclRefExpr 0xa48081c <col:9> '_InputIterator' lvalue ParmVar 0xa4805f0 '__first' '_InputIterator')
      (DeclRefExpr 0xa480834 <col:20> '_InputIterator' lvalue ParmVar 0xa480630 '__last' '_InputIterator'))
    (UnaryOperator 0xa4808f0 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa4808d4 <col:30> '_InputIterator' lvalue ParmVar 0xa4805f0 '__first' '_InputIterator'))
    (CompoundStmt 0xa480a30 <line:527:4, line:530:4>
      (BinaryOperator 0xa4809e8 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa480904 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4805b0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa4809c0 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa480930 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa480974 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4805b0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0xa4809a8 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa48098c <col:29> '_InputIterator' lvalue ParmVar 0xa4805f0 '__first' '_InputIterator'))))
      (UnaryOperator 0xa480a18 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa480a00 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa4805b0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa4835b0 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0xa483590 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa481090 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa481030 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (DeclRefExpr 0xa480ffc <col:6> '_ForwardIterator' lvalue ParmVar 0xa480dd0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa481014 <col:17> '_ForwardIterator' lvalue ParmVar 0xa480e10 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa483578 <line:541:4, line:614:4>
      (DeclStmt 0xa4811a0 <line:542:6, col:58>
        0xa4810c0 "const size_type __n =
          (CallExpr 0xa481178 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa481110 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
            (DeclRefExpr 0xa481144 <col:42> '_ForwardIterator' lvalue ParmVar 0xa480dd0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa48115c <col:51> '_ForwardIterator' lvalue ParmVar 0xa480e10 '__last' '_ForwardIterator'))")
      (IfStmt 0xa483558 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0xa481368 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa481320 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa4812f8 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0xa4812b8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
              (CXXDependentScopeMemberExpr 0xa481200 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa4811c8 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0xa4811b8 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa481280 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa481248 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa481238 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa481358 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa48133c <col:36> 'const size_type':'const unsigned int' lvalue Var 0xa4810c0 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0xa4823d8 <line:545:8, line:574:8>
          (DeclStmt 0xa4814b8 <line:546:3, col:53>
            0xa481390 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa481490 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa481450 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                (CallExpr 0xa481418 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0xa4813d8 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa481434 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa480d90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa4815a8 <line:547:3, col:48>
            0xa4814d0 "pointer __old_finish =
              (ParenListExpr 0xa481588 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa481550 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa481518 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0xa481508 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa4823b8 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0xa481608 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0xa4815e8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa4815b8 <col:7> 'const size_type':'const unsigned int' lvalue Var 0xa481390 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa4815f8 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa4815d0 <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa4810c0 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0xa481c38 <line:549:5, line:558:5>
              (CallExpr 0xa4818d8 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa481648 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                (CXXOperatorCallExpr 0xa481758 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0xa481718 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                  (CXXDependentScopeMemberExpr 0xa4816c8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa481690 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa481680 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa4816fc <col:61> 'const size_type':'const unsigned int' lvalue Var 0xa4810c0 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0xa4817c8 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa481790 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa481780 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa481848 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa481810 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa481800 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa4818b8 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa48187c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa4819a0 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa481950 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa481918 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa481908 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa481984 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa4810c0 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0xa481b40 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa4819e8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0902d0)
                (CallExpr 0xa481a70 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa481a38 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0xa481a1c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa480d90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa481b00 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0xa481ac0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
                  (DeclRefExpr 0xa481a8c <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4814d0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa481aa4 <col:25> 'const size_type':'const unsigned int' lvalue Var 0xa4810c0 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa481b24 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4814d0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa481c10 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa481b90 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
                (DeclRefExpr 0xa481bc8 <col:17> '_ForwardIterator' lvalue ParmVar 0xa480dd0 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa481be0 <col:26> '_ForwardIterator' lvalue ParmVar 0xa480e10 '__last' '_ForwardIterator')
                (DeclRefExpr 0xa481bf8 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa480d90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0xa482388 <line:560:5, line:573:5>
              (DeclStmt 0xa481cb0 <line:561:7, col:39>
                0xa481c60 "_ForwardIterator __mid =
                  (DeclRefExpr 0xa481c94 <col:32> '_ForwardIterator' lvalue ParmVar 0xa480dd0 '__first' '_ForwardIterator')")
              (CallExpr 0xa481d50 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0xa481ce8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05ce60)
                (DeclRefExpr 0xa481d1c <col:20> '_ForwardIterator' lvalue Var 0xa481c60 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa481d34 <col:27> 'const size_type':'const unsigned int' lvalue Var 0xa481390 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa481ed8 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa481d98 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
                (DeclRefExpr 0xa481dd0 <col:35> '_ForwardIterator' lvalue Var 0xa481c60 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa481de8 <col:42> '_ForwardIterator' lvalue ParmVar 0xa480e10 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0xa481e48 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa481e10 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa481e00 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa481eb8 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa481e7c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa481ff0 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa481f50 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa481f18 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa481f08 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa481fd8 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa481fb8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa481f84 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa4810c0 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0xa481fc8 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa481f9c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa481390 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa4821d0 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa482038 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                (CallExpr 0xa4820c0 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa482088 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0xa48206c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa480d90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa4820dc <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4814d0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa482140 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa482108 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa4820f8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa4821b0 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa482174 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa482298 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa482248 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa482210 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa482200 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa48227c <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa481390 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa482360 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa4822e0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
                (DeclRefExpr 0xa482318 <col:17> '_ForwardIterator' lvalue ParmVar 0xa480dd0 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa482330 <col:26> '_ForwardIterator' lvalue Var 0xa481c60 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa482348 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa480d90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0xa483520 <line:576:8, line:613:8>
          (DeclStmt 0xa4824e0 <line:577:3, line:578:49>
            0xa482400 "const size_type __len =
              (CallExpr 0xa4824b8 <col:5, col:48> '<dependent type>'
                (MemberExpr 0xa482448 <col:5> '<bound member function type>' ->_M_check_len 0xa431360
                  (CXXThisExpr 0xa482438 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa482468 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa4810c0 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0xa482480 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0xa4825d8 <line:579:3, col:48>
            0xa482500 "pointer __new_start =
              (ParenListExpr 0xa4825b8 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa482598 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa482548 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa482538 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa48257c <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa482400 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa482660 <line:580:3, col:36>
            0xa4825f0 "pointer __new_finish =
              (ParenListExpr 0xa482640 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa482624 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa482500 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa482c18 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa482670 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa482bf8 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0xa482878 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0xa482680 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4825f0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa482848 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa4826b0 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                  (CXXDependentScopeMemberExpr 0xa482730 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa4826f8 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0xa4826e8 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa4827b8 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa482780 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0xa482764 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa480d90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa4827d4 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa482500 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa482828 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa4827ec <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa4829d0 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0xa482890 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4825f0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa4829a0 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa4828c0 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa418e10 0xa419710)
                  (DeclRefExpr 0xa4828f8 <col:37> '_ForwardIterator' lvalue ParmVar 0xa480dd0 '__first' '_ForwardIterator')
                  (DeclRefExpr 0xa482910 <col:46> '_ForwardIterator' lvalue ParmVar 0xa480e10 '__last' '_ForwardIterator')
                  (DeclRefExpr 0xa482928 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4825f0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa482980 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa482940 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa482be0 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0xa4829e8 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4825f0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa482bb0 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa482a18 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa419b20)
                  (CallExpr 0xa482aa0 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa482a68 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0xa482a4c <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa480d90 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa482b08 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa482ad0 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0xa482ac0 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa482b3c <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4825f0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa482b90 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa482b54 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa482e30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa482c38 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa482e10 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0xa482d40 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa482c70 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
                (DeclRefExpr 0xa482cb0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa482500 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa482cc8 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4825f0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa482d20 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa482ce0 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0xa482dd8 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0xa482d68 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0xa482da4 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa482500 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa482dbc <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa482400 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa482e00 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0xa483008 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa482e70 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa410250 0xa410f10 0xa414220 0xa4147d0)
            (CXXDependentScopeMemberExpr 0xa482ef8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa482ec0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa482eb0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa482f78 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa482f40 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa482f30 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa482fe8 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0xa482fac <col:10> '<dependent type>' lvalue)))
          (CallExpr 0xa483258 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0xa483030 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa4830b8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa483080 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa483070 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa483230 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa4831f0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
              (CXXDependentScopeMemberExpr 0xa483138 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa483100 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa4830f0 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa4831b8 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa483180 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa483170 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa483318 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa4832c8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa483290 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa483280 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa4832fc <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa482500 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa4833c8 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa483378 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa483340 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa483330 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa4833ac <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa4825f0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa483508 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa483428 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa4833f0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa4833e0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa4834e0 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa483490 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
              (DeclRefExpr 0xa48345c <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa482500 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa483474 <col:51> 'const size_type':'const unsigned int' lvalue Var 0xa482400 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0xa484350 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0xa483ad0 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4839d8 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa483988 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ce30 0xa066190 0xa068920 0xa1c3ec0 0xa1c4420 0xa1c4950 0xa43f210)
      (DeclRefExpr 0xa483904 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa483820 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa483968 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa483930 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa483920 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa483aa0 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0xa483a90 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa483a74 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa017270 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa483ac0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa483a60 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa483a34 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa484330 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa483bc0 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa483b70 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
      (CallExpr 0xa483b38 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa483b00 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa483af0 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa483b54 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa483820 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa484308 <line:628:2, line:636:2>
      (DeclStmt 0xa483cb8 <line:629:4, col:43>
        0xa483c00 "_Bit_type *__q =
          (CallExpr 0xa483c98 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa483c48 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0xa483c38 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa483c7c <col:39> 'size_type':'unsigned int' lvalue ParmVar 0xa483820 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0xa483f08 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa483d10 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa483cd8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa483cc8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa483ee0 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0xa483d58 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0xa450a30
            (CXXThisExpr 0xa483d48 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0xa483dc8 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0xa483d88 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0xa483e38 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0xa483df8 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0xa483eb0 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0xa483e90 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa483e60 <col:20> '_Bit_type *' lvalue Var 0xa483c00 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0xa483ea0 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa483e78 <col:25> 'int' 0)))))
      (CallExpr 0xa483f68 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa483f30 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa483f20 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa484090 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa483fd0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa483f98 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa483f88 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa484060 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa484040 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa484010 <col:38> '_Bit_type *' lvalue Var 0xa483c00 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa484050 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa484028 <col:43> 'int' 0))))
      (BinaryOperator 0xa4842f0 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa4840f0 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4840b8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa4840a8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa4842d8 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0xa4842c0 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa4842b0 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa484124 <col:39> '_Bit_type *' lvalue Var 0xa483c00 '__q' '_Bit_type *'))
            (BinaryOperator 0xa484298 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0xa484220 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0xa484208 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0xa4841c8 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa4841a8 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa48413c <col:46> 'size_type':'unsigned int' lvalue ParmVar 0xa483820 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa4841b8 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa484190 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa484180 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0xa484164 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0xa4841f8 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa4841e0 <col:71> 'int' 1))))
              (ImplicitCastExpr 0xa484288 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa484270 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa484260 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa484244 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0xa485ea8 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0xa4847b8 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0xa484790 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0xa484770 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa48473c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa484780 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa484758 <col:18> 'int' 0)))
    (ReturnStmt 0xa4847a8 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0xa485e88 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa484948 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0xa4848f8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00 0xa43fca0)
      (CXXOperatorCallExpr 0xa4848b8 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa484878 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
        (CallExpr 0xa484808 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa4847e8 <col:11> '<bound member function type>' ->capacity 0xa44d630
            (CXXThisExpr 0xa4847d8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa484858 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa484838 <col:24> '<bound member function type>' ->size 0xa44d530
            (CXXThisExpr 0xa484828 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa4848dc <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa4851b8 <line:647:2, line:652:2>
      (CallExpr 0xa484ba0 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa484990 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0902d0)
        (DeclRefExpr 0xa4849c4 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4845c0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa484a30 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa4849f0 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa484b78 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa484b28 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (CXXDependentScopeMemberExpr 0xa484a98 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa484a60 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa484a50 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0xa484b10 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0xa484b00 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0xa484af0 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa484ad8 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0xa485008 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0xa484ff8 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa484fb8 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa448c60 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa485040 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa485030 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa484c28 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4845c0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa485088 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa485078 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa485068 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa484ce8 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa484cd8 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa484cc0 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa444a50 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa484cb0 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa484c40 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4845c0 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa484c98 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa484c88 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa484c78 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa484c60 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa4850b0 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa484d0c <col:61> '_Bool' lvalue ParmVar 0xa484640 '__x' '_Bool')))
      (CompoundAssignOperator 0xa485198 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0xa485108 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa4850d0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa4850c0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0xa485180 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa485170 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa485160 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa485148 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0xa485e58 <line:654:2, line:668:2>
      (DeclStmt 0xa4852c0 <line:655:4, line:656:55>
        0xa4851e0 "const size_type __len =
          (CallExpr 0xa485298 <col:6, col:54> '<dependent type>'
            (MemberExpr 0xa485228 <col:6> '<bound member function type>' ->_M_check_len 0xa452bf0
              (CXXThisExpr 0xa485218 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa485248 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int')
            (StringLiteral 0xa485260 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0xa485398 <line:657:4, col:46>
        0xa4852e0 "_Bit_type *__q =
          (CallExpr 0xa485378 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa485328 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa485318 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa48535c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa4851e0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa485550 <line:658:4, line:659:24>
        0xa4853b0 "iterator __i =
          (CallExpr 0xa485528 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0xa4853f8 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0xa450a30
              (CXXThisExpr 0xa4853e8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa485468 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa485428 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa485484 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4845c0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa4854f8 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa4854d8 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa4854a8 <col:16> '_Bit_type *' lvalue Var 0xa4852e0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa4854e8 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa4854c0 <col:21> 'int' 0))))")
      (CallExpr 0xa485738 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0xa485728 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa485708 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa448c60 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa485770 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa485760 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa4855c0 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa4853b0 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa4857b8 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa4857a8 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa485798 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa485680 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa485670 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa485658 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa444a50 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa485648 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa4855d8 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa4853b0 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa485630 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa485620 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa485610 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa4855f8 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa4857e0 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa4856a4 <col:47> '_Bool' lvalue ParmVar 0xa484640 '__x' '_Bool')))
      (BinaryOperator 0xa485a40 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa485838 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa485800 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa4857f0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa485a18 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa485888 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
          (DeclRefExpr 0xa4858c0 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa4845c0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa485928 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa4858e8 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0xa4859f0 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa4859e0 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa4859c8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa444a50 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0xa4859b8 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0xa485944 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa4853b0 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0xa4859a0 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa485990 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa485980 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa485968 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa484600 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0xa485aa0 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa485a68 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa485a58 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa485d20 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa485b08 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa485ad0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa485ac0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa485d08 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0xa485cf0 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa485ce0 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa485b3c <col:39> '_Bit_type *' lvalue Var 0xa4852e0 '__q' '_Bit_type *'))
            (ParenExpr 0xa485cc8 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0xa485cb0 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0xa485c38 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0xa485c20 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0xa485be0 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa485bc0 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa485b54 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa4851e0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa485bd0 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa485ba8 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa485b98 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa485b7c <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa485c10 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa485bf8 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa485ca0 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa485c88 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa485c78 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa485c5c <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa485e40 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa485d80 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa485d48 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa485d38 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa485e10 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa485df0 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa485dc0 <col:38> '_Bit_type *' lvalue Var 0xa4852e0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa485e00 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa485dd8 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa4876a0 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0xa487680 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa486470 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa486410 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (DeclRefExpr 0xa4863dc <col:6> '_ForwardIterator' lvalue ParmVar 0xa4861b0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa4863f4 <col:17> '_ForwardIterator' lvalue ParmVar 0xa4861f0 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa487668 <line:679:4, line:705:4>
      (DeclStmt 0xa486580 <line:680:6, col:52>
        0xa4864a0 "size_type __n =
          (CallExpr 0xa486558 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa4864f0 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa05bf80)
            (DeclRefExpr 0xa486524 <col:36> '_ForwardIterator' lvalue ParmVar 0xa4861b0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa48653c <col:45> '_ForwardIterator' lvalue ParmVar 0xa4861f0 '__last' '_ForwardIterator'))")
      (IfStmt 0xa487648 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa486700 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa4866b0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0518c0 0xa0669a0 0xa0691f0 0xa1c60a0 0xa1c65d0 0xa1c6b00 0xa43fca0)
          (CXXOperatorCallExpr 0xa486670 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa486630 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa066ef0 0xa06a1b0 0xa443d10)
            (CallExpr 0xa4865c0 <col:10, col:19> '<dependent type>'
              (MemberExpr 0xa4865a0 <col:10> '<bound member function type>' ->capacity 0xa44d630
                (CXXThisExpr 0xa486590 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa486610 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa4865f0 <col:23> '<bound member function type>' ->size 0xa44d530
                (CXXThisExpr 0xa4865e0 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0xa486694 <col:33> 'size_type':'unsigned int' lvalue Var 0xa4864a0 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0xa486b48 <line:682:8, line:688:8>
          (CallExpr 0xa486958 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa486748 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0902d0)
            (DeclRefExpr 0xa48677c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa486170 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa4867e8 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0xa4867a8 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0xa486930 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa4868e0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
              (CXXDependentScopeMemberExpr 0xa486850 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa486818 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa486808 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0xa4868c8 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0xa4868b8 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0xa4868a8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa486890 <col:26> 'size_type':'unsigned int' lvalue Var 0xa4864a0 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0xa486a28 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0xa4869a8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
            (DeclRefExpr 0xa4869e0 <col:13> '_ForwardIterator' lvalue ParmVar 0xa4861b0 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa4869f8 <col:22> '_ForwardIterator' lvalue ParmVar 0xa4861f0 '__last' '_ForwardIterator')
            (DeclRefExpr 0xa486a10 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa486170 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0xa486b28 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0xa486a98 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa486a60 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa486a50 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0xa486b10 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa486b00 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa486af0 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa486ad8 <col:46> 'size_type':'unsigned int' lvalue Var 0xa4864a0 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0xa487618 <line:690:8, line:704:8>
          (DeclStmt 0xa486c98 <line:691:3, line:692:55>
            0xa486b70 "const size_type __len =
              (CallExpr 0xa486c70 <col:5, col:54> '<dependent type>'
                (MemberExpr 0xa486bb8 <col:5> '<bound member function type>' ->_M_check_len 0xa452bf0
                  (CXXThisExpr 0xa486ba8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa486bd8 <col:18> 'size_type':'unsigned int' lvalue Var 0xa4864a0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa486c30 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0xa486d78 <line:693:3, col:45>
            0xa486cc0 "_Bit_type *__q =
              (CallExpr 0xa486d58 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa486d08 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa486cf8 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa486d3c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa486b70 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0xa486f30 <line:694:3, line:695:30>
            0xa486d90 "iterator __i =
              (CallExpr 0xa486f08 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0xa486dd8 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0xa450a30
                  (CXXThisExpr 0xa486dc8 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0xa486e48 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0xa486e08 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa486e64 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa486170 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0xa486ed8 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0xa486eb8 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0xa486e88 <col:22> '_Bit_type *' lvalue Var 0xa486cc0 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0xa486ec8 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa486ea0 <col:27> 'int' 0))))")
          (BinaryOperator 0xa487018 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0xa486f40 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa486d90 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa486ff0 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0xa486f70 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
              (DeclRefExpr 0xa486fa8 <col:19> '_ForwardIterator' lvalue ParmVar 0xa4861b0 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa486fc0 <col:28> '_ForwardIterator' lvalue ParmVar 0xa4861f0 '__last' '_ForwardIterator')
              (DeclRefExpr 0xa486fd8 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa486d90 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0xa4871c8 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa487078 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa487040 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa487030 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa4871a0 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0xa4870c8 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
              (DeclRefExpr 0xa487100 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa486170 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0xa487168 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0xa487128 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa487184 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa486d90 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0xa487228 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4871f0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa4871e0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0xa4874e0 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa4872c8 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa487258 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa487248 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0xa4874c8 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0xa4874b0 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0xa4874a0 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0xa4872fc <col:38> '_Bit_type *' lvalue Var 0xa486cc0 '__q' '_Bit_type *'))
                (ParenExpr 0xa487488 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0xa487470 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0xa4873f8 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0xa4873e0 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0xa4873a0 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0xa487380 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0xa487314 <col:14> 'const size_type':'const unsigned int' lvalue Var 0xa486b70 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0xa487390 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0xa487368 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0xa487358 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0xa48733c <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0xa4873d0 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa4873b8 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0xa487460 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa487448 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa487438 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0xa48741c <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0xa487600 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa487540 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa487508 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa4874f8 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0xa4875d0 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa4875b0 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa487580 <col:37> '_Bit_type *' lvalue Var 0xa486cc0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa4875c0 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa487598 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0xa488b60 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0xa488b40 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa487be0 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa487b80 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c8e0 0xa065d70 0xa0684a0 0xa0af360 0xa0d1d80 0xa0d20f0 0xa1c1d90 0xa1c2290 0xa1c27a0 0xa2c9490 0xa43eca0)
      (CXXDependentScopeMemberExpr 0xa487ac8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa487a90 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa487a58 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa487a48 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa487b48 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa487b10 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa487b00 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa487fb0 <line:714:2, line:719:2>
      (CallExpr 0xa487e08 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa487c28 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0902d0)
        (DeclRefExpr 0xa487c5c <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa487910 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0xa487cc0 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa487c88 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0xa487c78 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0xa487de0 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa487d90 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0674c0 0xa1bda30 0xa1e8210 0xa1e8e10 0xa1bed20 0xa1bf520 0xa446430 0xa4485b0)
          (CXXDependentScopeMemberExpr 0xa487d40 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa487d08 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa487cf8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa487d78 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0xa487ef0 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa487ee0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa487ec8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa440a50 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa487e80 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa487e70 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa487e58 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa444410 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa487e48 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa487e30 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa487910 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa487eb8 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa487ea0 <col:18> '_Bool' lvalue ParmVar 0xa487950 '__x' '_Bool')))
      (UnaryOperator 0xa487f98 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa487f60 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa487f28 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa487f18 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0xa488b10 <line:721:2, line:734:2>
      (DeclStmt 0xa488130 <line:722:4, line:723:63>
        0xa487fe0 "const size_type __len =
          (CallExpr 0xa488108 <col:6, col:62> '<dependent type>'
            (MemberExpr 0xa488028 <col:6> '<bound member function type>' ->_M_check_len 0xa452bf0
              (CXXThisExpr 0xa488018 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0xa488078 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa488068 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa488050 <col:29> 'int' 1)))
            (StringLiteral 0xa4880d0 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0xa488208 <line:724:4, col:46>
        0xa488150 "_Bit_type *__q =
          (CallExpr 0xa4881e8 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa488198 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa488188 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa4881cc <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa487fe0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa4883c0 <line:725:4, line:726:24>
        0xa488220 "iterator __i =
          (CallExpr 0xa488398 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0xa488268 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0xa450a30
              (CXXThisExpr 0xa488258 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa4882d8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa488298 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa4882f4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa487910 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa488368 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa488348 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa488318 <col:16> '_Bit_type *' lvalue Var 0xa488150 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa488358 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa488330 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0xa488538 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa488528 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa488510 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa440a50 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa4884c8 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa4884b8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa4884a0 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa444410 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa488490 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0xa488468 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0xa488458 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa488400 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0xa444620 'operator++' 'iterator (int)'))
              (DeclRefExpr 0xa4883d0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa488220 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0xa4883e8 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0xa488500 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa4884e8 <col:13> '_Bool' lvalue ParmVar 0xa487950 '__x' '_Bool')))
      (BinaryOperator 0xa4886f8 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa4885a8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa488570 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa488560 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa4886d0 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa4885f8 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0xa08b540 0xa2cc270)
          (DeclRefExpr 0xa488630 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa487910 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa488698 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa488658 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa4886b4 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa488220 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0xa488758 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa488720 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa488710 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa4889d8 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa4887c0 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa488788 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa488778 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa4889c0 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0xa4889a8 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa488998 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa4887f4 <col:39> '_Bit_type *' lvalue Var 0xa488150 '__q' '_Bit_type *'))
            (ParenExpr 0xa488980 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0xa488968 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0xa4888f0 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0xa4888d8 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0xa488898 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa488878 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa48880c <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa487fe0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa488888 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa488860 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa488850 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa488834 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa4888c8 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa4888b0 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa488958 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa488940 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa488930 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa488914 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa440510 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa488af8 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa488a38 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa488a00 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa4889f0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa488ac8 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa488aa8 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa488a78 <col:38> '_Bit_type *' lvalue Var 0xa488150 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa488ab8 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa488a90 <col:43> 'int' 0)))))))


}
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0xa489158 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa489000 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0xa488fd0 <col:18> 'int' 1)
    (IntegerLiteral 0xa488fe8 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0xa489168 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa489088 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0xa489058 <col:24> 'int' 1)
    (IntegerLiteral 0xa489070 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0xa489178 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa489108 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0xa4890d8 <col:23> 'int' 1)
    (IntegerLiteral 0xa4890f0 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0xa48a698 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa48a4c0 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0xa48a8f0 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0xa48a7d0 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa48a7c0 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa48a7b0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa48a794 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa48a6b0 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa48a8b8 <line:277:5, line:283:5>
      (CaseStmt 0xa48a808 <line:278:9, line:280:20>
        (ImplicitCastExpr 0xa48a8e0 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa48a7ec <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa48a4e0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa48a840 <line:279:9, line:280:20>
          (ImplicitCastExpr 0xa48a8d0 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa48a828 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa48a520 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0xa48a870 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0xa48a860 <col:20> '_Bool' false))))
      (DefaultStmt 0xa48a8a0 <line:281:9, line:282:20>
        (ReturnStmt 0xa48a890 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa48a880 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0xa48abb0 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0xa48aa00 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa48a9f0 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa48a9e0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa48a9c4 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa48a910 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa48ab58 <line:290:5, line:298:5>
      (CaseStmt 0xa48aa38 <line:291:9, line:295:20>
        (ImplicitCastExpr 0xa48aba0 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa48aa1c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa48a4e0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa48aa70 <line:292:9, line:295:20>
          (ImplicitCastExpr 0xa48ab90 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa48aa58 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa48a520 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0xa48aaa8 <line:293:9, line:295:20>
            (ImplicitCastExpr 0xa48ab80 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0xa48aa90 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa48a560 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0xa48aae0 <line:294:9, line:295:20>
              (ImplicitCastExpr 0xa48ab70 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0xa48aac8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa48a5a0 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0xa48ab10 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0xa48ab00 <col:20> '_Bool' true))))))
      (DefaultStmt 0xa48ab40 <line:296:9, line:297:20>
        (ReturnStmt 0xa48ab30 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa48ab20 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0xa48b0e0 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa48b0c8 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0xa48b108 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa48b0f0 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0xa48b1f4 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0xa48a660 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0xa48bba0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bb88 <col:14> 'int' 0))
, const char *param2 = (ImplicitCastExpr 0xa48bc10 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bbf8 <col:14> 'int' 0))
, const char *param3 = (ImplicitCastExpr 0xa48bc80 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bc68 <col:14> 'int' 0))
, const char *param4 = (ImplicitCastExpr 0xa48bcf0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bcd8 <col:14> 'int' 0))
, const char *param5 = (ImplicitCastExpr 0xa48bd60 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bd48 <col:14> 'int' 0))
, const char *param6 = (ImplicitCastExpr 0xa48bdd0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bdb8 <col:14> 'int' 0))
, const char *param7 = (ImplicitCastExpr 0xa48be40 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48be28 <col:14> 'int' 0))
, const char *param8 = (ImplicitCastExpr 0xa48beb0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48be98 <col:14> 'int' 0))
, const char *param9 = (ImplicitCastExpr 0xa48bf20 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bf08 <col:14> 'int' 0))
, const char *param10 = (ImplicitCastExpr 0xa48bf90 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bf78 <col:14> 'int' 0))
, const char *param11 = (ImplicitCastExpr 0xa48c000 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48bfe8 <col:14> 'int' 0))
, const char *param12 = (ImplicitCastExpr 0xa48c070 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa48c058 <col:14> 'int' 0))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0xa48f138 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa48f128 <line:395:5, col:51>
    (BinaryOperator 0xa48f110 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa48ef08 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa48eed0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa48eeb0 <col:14, col:16> '<bound member function type>' .empty 0xa22c380
            (DeclRefExpr 0xa48ee98 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa48ebb0 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa48f100 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa48f0b8 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa48f0a8 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa48f08c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9ee8f90 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa48f0e0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa48efa0 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa48f0f0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa48f060 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa48f040 <col:44, col:46> '<bound member function type>' .at 0xa22cd10
                (DeclRefExpr 0xa48efd0 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa48ebb0 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa48f080 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa48f028 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0xa48ce70 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0xa48c6a8 <line:354:5, col:13>
    0xa48c670 "T result")
  (DeclStmt 0xa48cdf0 <line:355:5, col:33>
    0xa48c710 "std::wstringstream stream =
      (CXXConstructExpr 0xa48cdc8 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa48c744 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa48c530 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0xa48cdb0 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa48ce30 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa48ce00 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa48c710 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa48ce18 <col:15> 'T' lvalue Var 0xa48c670 'result' 'T'))
  (ReturnStmt 0xa48ce60 <line:357:5, col:12>
    (DeclRefExpr 0xa48ce48 <col:12> 'T' lvalue Var 0xa48c670 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0xa48eb78 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa48eb68 <line:389:5, col:50>
    (BinaryOperator 0xa48eb50 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa48e950 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa48e930 <col:14, col:22> '_Bool'
          (MemberExpr 0xa48e910 <col:14, col:16> '<bound member function type>' .empty 0xa206ea0
            (DeclRefExpr 0xa48e8f8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa48e610 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa48eb40 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa48eae8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa48ead8 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa48ea7c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9f34610 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa48eb10 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa48e99c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa48eb30 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa48eb20 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa48ea50 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa48ea30 <col:43, col:45> '<bound member function type>' .at 0xa207830
                  (DeclRefExpr 0xa48e9c0 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa48e610 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa48ea70 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa48ea18 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0xa48d860 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0xa48d0b8 <line:363:5, col:19>
    0xa48d060 "T result =
      (CXXUnresolvedConstructExpr 0xa48d0a0 <col:16, col:18> 'T')")
  (DeclStmt 0xa48d7e0 <line:364:5, col:32>
    0xa48d120 "std::stringstream stream =
      (CXXConstructExpr 0xa48d7b8 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa48d154 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa48cf20 'x' 'const std::string &')
        (CXXDefaultArgExpr 0xa48d7a0 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa48d820 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa48d7f0 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0xa48d120 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0xa48d808 <col:15> 'T' lvalue Var 0xa48d060 'result' 'T'))
  (ReturnStmt 0xa48d850 <line:366:5, col:12>
    (DeclRefExpr 0xa48d838 <col:12> 'T' lvalue Var 0xa48d060 'result' 'T')))

;
template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0xa48f690 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa48f680 <line:401:5, col:42>
    (ExprWithCleanups 0xa48f660 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa48f600)
      (CXXConstructExpr 0xa48f638 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa48f628 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa48f618 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa48f608 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa48f600)
              (CallExpr 0xa48f5c8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa48f5b8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa48f560 <col:12> 'wcstring (const long &)' lvalue Function 0xa48de10 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa48da10 'to_string')))
                (MaterializeTemporaryExpr 0xa48f5e8 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa48f518 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa48f508 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa48f4f8 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa48f4cc <col:40> 'const int' lvalue ParmVar 0xa48f170 'x' 'const int &')))))))))))))

template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0xa48e5a8 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa48e108 <line:381:5, col:22>
    0xa48e0d0 "wchar_t buff[128]")
  (CallExpr 0xa48e1c8 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa48e1b8 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa48e180 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa48c450 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa48e1f0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa48e150 <col:22> 'wchar_t [128]' lvalue Var 0xa48e0d0 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa48e200 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa48e168 <col:28> 'const long' lvalue ParmVar 0xa48dd70 'x' 'const long &')))
  (ReturnStmt 0xa48e598 <line:383:5, col:25>
    (ExprWithCleanups 0xa48e578 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa48e280)
      (CXXTemporary 0xa48e500)
      (CXXConstructExpr 0xa48e550 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa48e540 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa48e530 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa48e518 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa48e508 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa48e500)
                (CXXConstructExpr 0xa48e4d8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa48e240 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa48e230 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa48e218 <col:21> 'wchar_t [128]' lvalue Var 0xa48e0d0 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa48e4c0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0xa48dd10 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0xa48db58 <line:372:5, col:30>
    0xa48da70 "std::wstringstream stream =
      (CXXConstructExpr 0xa48db30 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0xa48db18 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa48db98 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0xa48db68 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa48da70 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa48db80 <col:15> 'const T' lvalue ParmVar 0xa48d910 'x' 'const T &'))
  (ReturnStmt 0xa48dd00 <line:374:5, col:23>
    (ExprWithCleanups 0xa48dce0 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa48dc80)
      (CXXConstructExpr 0xa48dcb8 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa48dca8 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa48dc98 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa48dc88 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0xa48dc80)
              (CXXMemberCallExpr 0xa48dc28 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0xa48dc08 <col:12, col:19> '<bound member function type>' .str 0xa40f950
                  (ImplicitCastExpr 0xa48dc68 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0xa48dbb0 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa48da70 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0xa48e5a8 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa48e108 <line:381:5, col:22>
    0xa48e0d0 "wchar_t buff[128]")
  (CallExpr 0xa48e1c8 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa48e1b8 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa48e180 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa48c450 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa48e1f0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa48e150 <col:22> 'wchar_t [128]' lvalue Var 0xa48e0d0 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa48e200 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa48e168 <col:28> 'const long' lvalue ParmVar 0xa48dd70 'x' 'const long &')))
  (ReturnStmt 0xa48e598 <line:383:5, col:25>
    (ExprWithCleanups 0xa48e578 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa48e280)
      (CXXTemporary 0xa48e500)
      (CXXConstructExpr 0xa48e550 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa48e540 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa48e530 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa48e518 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa48e508 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa48e500)
                (CXXConstructExpr 0xa48e4d8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa48e240 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa48e230 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa48e218 <col:21> 'wchar_t [128]' lvalue Var 0xa48e0d0 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa48e4c0 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0xa48eb78 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa48eb68 <line:389:5, col:50>
    (BinaryOperator 0xa48eb50 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa48e950 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa48e930 <col:14, col:22> '_Bool'
          (MemberExpr 0xa48e910 <col:14, col:16> '<bound member function type>' .empty 0xa206ea0
            (DeclRefExpr 0xa48e8f8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa48e610 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa48eb40 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa48eae8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa48ead8 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa48ea7c <col:27> 'char *(const char *, int) throw()' lvalue Function 0x9f34610 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa48eb10 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa48e99c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa48eb30 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa48eb20 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa48ea50 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa48ea30 <col:43, col:45> '<bound member function type>' .at 0xa207830
                  (DeclRefExpr 0xa48e9c0 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa48e610 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa48ea70 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa48ea18 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0xa48f138 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa48f128 <line:395:5, col:51>
    (BinaryOperator 0xa48f110 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa48ef08 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa48eed0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa48eeb0 <col:14, col:16> '<bound member function type>' .empty 0xa22c380
            (DeclRefExpr 0xa48ee98 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa48ebb0 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa48f100 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa48f0b8 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa48f0a8 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa48f08c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9ee8f90 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa48f0e0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa48efa0 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa48f0f0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa48f060 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa48f040 <col:44, col:46> '<bound member function type>' .at 0xa22cd10
                (DeclRefExpr 0xa48efd0 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa48ebb0 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa48f080 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa48f028 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0xa48f690 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa48f680 <line:401:5, col:42>
    (ExprWithCleanups 0xa48f660 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa48f600)
      (CXXConstructExpr 0xa48f638 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa48f628 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa48f618 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa48f608 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa48f600)
              (CallExpr 0xa48f5c8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa48f5b8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa48f560 <col:12> 'wcstring (const long &)' lvalue Function 0xa48de10 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa48da10 'to_string')))
                (MaterializeTemporaryExpr 0xa48f5e8 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa48f518 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa48f508 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa48f4f8 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa48f4cc <col:40> 'const int' lvalue ParmVar 0xa48f170 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0xa490ed8 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0xa490cd0 <line:421:9, col:23>
    0xa490c70 "size_t len =
      (ImplicitCastExpr 0xa490cc0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa490ca8 <col:22> 'int' 0))")
  (IfStmt 0xa490e80 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0xa490d60 <line:422:13, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
      (MemberExpr 0xa490d24 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0xa48fec0
        (CXXThisExpr 0xa490cf8 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (IntegerLiteral 0xa490d48 </usr/include/linux/stddef.h:8:14> 'int' 0))
    (CompoundStmt 0xa490e68 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0xa490e50 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0xa490df0 <line:424:20, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0xa490dc0 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0xa490d88 <col:20> 'CharType_t **const' lvalue ->array 0xa48fec0
              (CXXThisExpr 0xa490d78 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0xa490da8 <col:26> 'size_t':'unsigned int' lvalue Var 0xa490c70 'len' 'size_t':'unsigned int'))
          (IntegerLiteral 0xa490dd8 </usr/include/linux/stddef.h:8:14> 'int' 0))
        (CompoundStmt 0xa490e38 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0xa490e20 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa490e08 <col:17> 'size_t':'unsigned int' lvalue Var 0xa490c70 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa490ec8 <line:429:9, col:16>
    (ImplicitCastExpr 0xa490eb8 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa490e9c <col:16> 'size_t':'unsigned int' lvalue Var 0xa490c70 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0xa491038 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0xa490fb8 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0xa490fa8 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa490f0c <col:9, col:11> 'void (void *) throw()' lvalue Function 0x9ed9a30 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa490f70 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0xa490f40 <col:24> 'CharType_t **' lvalue ->array 0xa48fec0
        (CXXThisExpr 0xa490f30 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0xa491020 <line:435:9, /usr/include/linux/stddef.h:8:14> '<dependent type>' '='
    (MemberExpr 0xa490fe8 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0xa48fec0
      (CXXThisExpr 0xa490fd8 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (IntegerLiteral 0xa491008 </usr/include/linux/stddef.h:8:14> 'int' 0)))


public:
public:
    null_terminated_array_t<CharType_t>() : array((IntegerLiteral 0xa491050 </usr/include/linux/stddef.h:8:14> 'int' 0)
) (CompoundStmt 0xa4910b0 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0xa491110 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0xa4910c0 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0xa48fb90 0xa48f760)
  (DeclRefExpr 0xa4910f8 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa490840 'argv' 'const string_list_t &'))
) (CompoundStmt 0xa491170 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0xa4911e8 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0xa4911c8 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa491190 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa491180 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0xa491338 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0xa491248 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa491210 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa491200 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0xa491320 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa491278 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa491268 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0xa491300 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa4912b0 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0xa48fb90 0xa48f760)
      (DeclRefExpr 0xa4912e8 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa490a00 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0xa491390 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0xa491380 <line:457:9, col:16>
    (MemberExpr 0xa491360 <col:16> 'CharType_t **const' lvalue ->array 0xa48fec0
      (CXXThisExpr 0xa491350 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0xa491410 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0xa4913f0 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4913b8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa4913a8 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0xa491ff8 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0xa491fd8 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0xa491fc8 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa491fb0 <col:9> 'void (void *) throw()' lvalue Function 0x9ed9a30 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa491f98 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa491f88 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa491f78 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa491f48 <col:22> 'const char *' lvalue ->str 0xa491990
            (CXXThisExpr 0xa491f38 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0xa492028 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0xa492010 <col:14> 'int' 0))
) (CompoundStmt 0xa492060 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0xa4922b0 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0xa492148 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0xa492138 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa492120 <col:9> 'void (void *) throw()' lvalue Function 0x9ed9a30 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa492108 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa4920f8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa4920e8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa4920b8 <col:22> 'const char *' lvalue ->str 0xa491990
            (CXXThisExpr 0xa4920a8 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0xa492298 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0xa492178 <col:9> 'const char *' lvalue ->str 0xa491990
      (CXXThisExpr 0xa492168 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0xa492288 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0xa492268 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0xa492258 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa492224 <col:15> 'char *(const wchar_t *)' lvalue Function 0xa489b10 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0xa492208 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0xa4921e8 <col:23, col:25> '<bound member function type>' .c_str 0xa23c0b0
            (DeclRefExpr 0xa4921d0 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa491d80 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0xa492338 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0xa492328 <line:495:9, col:16>
    (ImplicitCastExpr 0xa492318 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0xa4922f8 <col:16> 'const char *const' lvalue ->str 0xa491990
        (CXXThisExpr 0xa4922e8 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0xa49327c <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0xa492f00 'r' 'T *')
), saved_value((UnaryOperator 0xa4932f0 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa4932d8 <col:45> 'T *' lvalue ParmVar 0xa492f00 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa493348 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0xa4933a8 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0xa4933b8 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0xa493010 'r' 'T *')
), saved_value((UnaryOperator 0xa493420 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa493408 <col:66> 'T *' lvalue ParmVar 0xa493010 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa493478 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0xa493538 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0xa493520 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0xa4934f0 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa4934d4 <col:10> 'T *' lvalue ParmVar 0xa493010 'r' 'T *'))
    (DeclRefExpr 0xa493504 <col:14> 'const T' lvalue ParmVar 0xa493080 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0xa4935b8 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0xa493598 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0xa493578 <col:9> '<bound member function type>' ->restore 0xa493220
      (CXXThisExpr 0xa493568 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0xa4937b8 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0xa493798 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0xa493610 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa493600 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0xa4935e0 <col:14> '_Bool' lvalue ->restored 0xa492e80
          (CXXThisExpr 0xa4935d0 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0xa493780 <line:551:9, line:554:9>
      (CallExpr 0xa493700 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa493648 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0xa0450d0 0xa045610 0xa1c71c0 0xa440240)
        (UnaryOperator 0xa4936b8 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0xa493698 <col:24> 'T *const' lvalue ->ref 0xa492e00
            (CXXThisExpr 0xa493688 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0xa4936e0 <col:29> 'T' lvalue ->saved_value 0xa492e40
          (CXXThisExpr 0xa4936d0 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0xa493768 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0xa493738 <col:13> '_Bool' lvalue ->restored 0xa492e80
          (CXXThisExpr 0xa493728 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0xa493758 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
namespace std {
    namespace rel_ops {
        template <class _Tp> inline bool operator!=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa496fb8 </usr/include/c++/4.6/bits/stl_relops.h:89:7, col:31>
  (ReturnStmt 0xa496fa8 <col:9, col:28>
    (UnaryOperator 0xa496f90 <col:16, col:28> '<dependent type>' prefix '!'
      (ParenExpr 0xa496f78 <col:17, col:28> '<dependent type>'
        (CXXOperatorCallExpr 0xa496f50 <col:18, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa496ef0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04ba40 0xa065430 0xa067aa0 0xa0aef70 0xa0d1620 0xa0d19b0 0xa1bfed0 0xa1c0950 0xa1c1190 0xa1c1700 0xa2c8f80 0xa43dde0)
          (DeclRefExpr 0xa496ec0 <col:18> 'const _Tp' lvalue ParmVar 0xa496d60 '__x' 'const _Tp &')
          (DeclRefExpr 0xa496ed8 <col:25> 'const _Tp' lvalue ParmVar 0xa496db0 '__y' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa497278 </usr/include/c++/4.6/bits/stl_relops.h:102:7, col:27>
  (ReturnStmt 0xa497268 <col:9, col:22>
    (CXXOperatorCallExpr 0xa497240 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa4971f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
      (DeclRefExpr 0xa4971c0 <col:16> 'const _Tp' lvalue ParmVar 0xa4970b0 '__y' 'const _Tp &')
      (DeclRefExpr 0xa4971d8 <col:22> 'const _Tp' lvalue ParmVar 0xa497060 '__x' 'const _Tp &'))))

;
        template <class _Tp> inline bool operator<=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa49ba08 </usr/include/c++/4.6/bits/stl_relops.h:115:7, col:30>
  (ReturnStmt 0xa49b9f8 <col:9, col:27>
    (UnaryOperator 0xa49b9e0 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0xa49b9c8 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa49b9a0 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa49b950 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
          (DeclRefExpr 0xa49b920 <col:18> 'const _Tp' lvalue ParmVar 0xa49b810 '__y' 'const _Tp &')
          (DeclRefExpr 0xa49b938 <col:24> 'const _Tp' lvalue ParmVar 0xa49b7c0 '__x' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa49bcf8 </usr/include/c++/4.6/bits/stl_relops.h:128:7, col:30>
  (ReturnStmt 0xa49bce8 <col:9, col:27>
    (UnaryOperator 0xa49bcd0 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0xa49bcb8 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa49bc90 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa49bc40 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa04c0e0 0xa0658d0 0xa067fa0 0xa1c2df0 0xa1c3320 0xa1c3850 0xa43e5d0)
          (DeclRefExpr 0xa49bc10 <col:18> 'const _Tp' lvalue ParmVar 0xa49bab0 '__x' 'const _Tp &')
          (DeclRefExpr 0xa49bc28 <col:24> 'const _Tp' lvalue ParmVar 0xa49bb00 '__y' 'const _Tp &'))))))

;
    }
}
void wutil_init();
void wutil_destroy();
FILE *wfopen(const wcstring &path, const char *mode);
bool set_cloexec(int fd);
FILE *wfreopen(const wcstring &path, const char *mode, FILE *stream);
int wopen(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0xa49c370 <../codeBase/fish-shell-master/wutil.h:46:62> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa49c358 <col:62> 'int' 0))
);
int wopen_cloexec(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0xa49c560 <../codeBase/fish-shell-master/wutil.h:49:70> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa49c548 <col:70> 'int' 0))
);
int make_fd_nonblocking(int fd);
int make_fd_blocking(int fd);
int wcreat(const wcstring &pathname, mode_t mode);
DIR *wopendir(const wcstring &name);
int wstat(const wcstring &file_name, struct stat *buf);
int lwstat(const wcstring &file_name, struct stat *buf);
int waccess(const wcstring &pathname, int mode);
int wunlink(const wcstring &pathname);
void wperror(const wcstring &s);
void safe_perror(const char *message);
const char *safe_strerror(int err);
wchar_t *wgetcwd(wchar_t *buff, size_t sz);
int wchdir(const wcstring &dir);
wchar_t *wrealpath(const wcstring &pathname, wchar_t *resolved_path);
bool wreaddir(DIR *dir, std::wstring &out_name);
bool wreaddir_resolving(DIR *dir, const std::wstring &dir_path, std::wstring &out_name, bool *out_is_dir);
std::wstring wdirname(const std::wstring &path);
std::wstring wbasename(const std::wstring &path);
const wchar_t *wgettext(const wchar_t *in);
const wchar_t *wgetenv(const wcstring &name);
int wmkdir(const wcstring &dir, int mode);
int wrename(const wcstring &oldName, const wcstring &newName);
int fish_wcstoi(const wchar_t *str, wchar_t **endptr, int base);
typedef std::pair<dev_t, ino_t> file_id_t;
int wcsfilecmp(const wchar_t *a, const wchar_t *b) (CompoundStmt 0xa4a0858 <../codeBase/fish-shell-master/util.cpp:51:1, line:119:1>
  (IfStmt 0xa49e9c0 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa49e668 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa49e658 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa49e648 <col:7, col:11> 'const wchar_t *' <LValueToRValue>
          (ParenExpr 0xa49e630 <col:7, col:11> 'const wchar_t *' lvalue
            (DeclRefExpr 0xa49e618 <../codeBase/fish-shell-master/util.cpp:52:11> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *')))))
    (CompoundStmt 0xa49e9a0 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa49e818 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa49e808 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49e7d0 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa495720 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa49e6b8 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa49e848 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa49e710 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa49e858 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa49e7a0 <col:20> 'const char [11]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa49e868 <<scratch space>:199:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa49e7b0 <col:1> 'const char [2]' lvalue "a")))
      (CallExpr 0xa49e8d8 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa49e8c8 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49e8ac <col:3> 'void (void)' lvalue Function 0xa496470 'bugreport' 'void (void)')))
      (CallExpr 0xa49e958 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa49e948 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49e92c <col:3> 'void (void)' lvalue Function 0xa489470 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa49e990 <line:140:3, ../codeBase/fish-shell-master/util.cpp:52:14>
        (IntegerLiteral 0xa49e978 <col:14> 'int' 0)))
    <<<NULL>>>)
  (NullStmt 0xa49e9e0 <col:16>)
  (IfStmt 0xa49ecf8 <../codeBase/fish-shell-master/common.h:132:2, line:141:2>
    <<<NULL>>>
    (UnaryOperator 0xa49ea40 <line:132:6, col:11> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa49ea30 <col:7, col:11> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa49ea20 <col:7, col:11> 'const wchar_t *' <LValueToRValue>
          (ParenExpr 0xa49ea08 <col:7, col:11> 'const wchar_t *' lvalue
            (DeclRefExpr 0xa49e9ec <../codeBase/fish-shell-master/util.cpp:53:11> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *')))))
    (CompoundStmt 0xa49ecd8 <../codeBase/fish-shell-master/common.h:133:2, line:141:2>
      (CallExpr 0xa49eb50 <line:134:3, line:137:12> 'void'
        (ImplicitCastExpr 0xa49eb40 <line:134:3> 'void (*)(int, const char *, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49eb28 <col:3> 'void (int, const char *, ...)' lvalue Function 0xa495720 'debug' 'void (int, const char *, ...)'))
        (IntegerLiteral 0xa49ea90 <col:10> 'int' 0)
        (ImplicitCastExpr 0xa49eb80 <line:135:7> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa49eaa8 <col:7> 'const char [53]' lvalue "function %s called with null value for argument %s. "))
        (ImplicitCastExpr 0xa49eb90 <../codeBase/fish-shell-master/fallback.h:33:20> 'const char *' <ArrayToPointerDecay>
          (PredefinedExpr 0xa49eaf8 <col:20> 'const char [11]' lvalue __FUNCTION__))
        (ImplicitCastExpr 0xa49eba0 <<scratch space>:200:1> 'const char *' <ArrayToPointerDecay>
          (StringLiteral 0xa49eb08 <col:1> 'const char [2]' lvalue "b")))
      (CallExpr 0xa49ec10 <../codeBase/fish-shell-master/common.h:138:3, col:13> 'void'
        (ImplicitCastExpr 0xa49ec00 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49ebe4 <col:3> 'void (void)' lvalue Function 0xa496470 'bugreport' 'void (void)')))
      (CallExpr 0xa49ec90 <line:139:3, col:19> 'void'
        (ImplicitCastExpr 0xa49ec80 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49ec64 <col:3> 'void (void)' lvalue Function 0xa489470 'show_stackframe' 'void (void)')))
      (ReturnStmt 0xa49ecc8 <line:140:3, ../codeBase/fish-shell-master/util.cpp:53:14>
        (IntegerLiteral 0xa49ecb0 <col:14> 'int' 0)))
    <<<NULL>>>)
  (NullStmt 0xa49ed18 <col:16>)
  (IfStmt 0xa49eee8 <line:55:5, line:60:5>
    <<<NULL>>>
    (BinaryOperator 0xa49eda0 <line:55:9, col:13> '_Bool' '=='
      (ImplicitCastExpr 0xa49ed80 <col:9, col:10> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0xa49ed50 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0xa49ed40 <col:10> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa49ed24 <col:10> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *'))))
      (ImplicitCastExpr 0xa49ed90 <col:13> 'wchar_t' <IntegralCast>
        (IntegerLiteral 0xa49ed68 <col:13> 'int' 0)))
    (CompoundStmt 0xa49eed0 <line:56:5, line:60:5>
      (IfStmt 0xa49ee70 <line:57:9, line:58:20>
        <<<NULL>>>
        (BinaryOperator 0xa49ee30 <line:57:13, col:17> '_Bool' '=='
          (ImplicitCastExpr 0xa49ee10 <col:13, col:14> 'wchar_t' <LValueToRValue>
            (UnaryOperator 0xa49ede0 <col:13, col:14> 'const wchar_t' lvalue prefix '*'
              (ImplicitCastExpr 0xa49edd0 <col:14> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0xa49edb8 <col:14> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *'))))
          (ImplicitCastExpr 0xa49ee20 <col:17> 'wchar_t' <IntegralCast>
            (IntegerLiteral 0xa49edf8 <col:17> 'int' 0)))
        (ReturnStmt 0xa49ee60 <line:58:13, col:20>
          (IntegerLiteral 0xa49ee48 <col:20> 'int' 0))
        <<<NULL>>>)
      (ReturnStmt 0xa49eec0 <line:59:9, col:17>
        (UnaryOperator 0xa49eea8 <col:16, col:17> 'int' prefix '-'
          (IntegerLiteral 0xa49ee90 <col:17> 'int' 1))))
    <<<NULL>>>)
  (IfStmt 0xa49efd8 <line:61:5, line:64:5>
    <<<NULL>>>
    (BinaryOperator 0xa49ef80 <line:61:9, col:13> '_Bool' '=='
      (ImplicitCastExpr 0xa49ef60 <col:9, col:10> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0xa49ef30 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0xa49ef20 <col:10> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa49ef04 <col:10> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *'))))
      (ImplicitCastExpr 0xa49ef70 <col:13> 'wchar_t' <IntegralCast>
        (IntegerLiteral 0xa49ef48 <col:13> 'int' 0)))
    (CompoundStmt 0xa49efc0 <line:62:5, line:64:5>
      (ReturnStmt 0xa49efb0 <line:63:9, col:16>
        (IntegerLiteral 0xa49ef98 <col:16> 'int' 1)))
    <<<NULL>>>)
  (DeclStmt 0xa49f070 <line:66:5, col:26>
    0xa49f010 "long secondary_diff =
      (ImplicitCastExpr 0xa49f060 <col:25> 'long' <IntegralCast>
        (IntegerLiteral 0xa49f048 <col:25> 'int' 0))")
  (IfStmt 0xa4a03c8 <line:67:5, line:102:5>
    <<<NULL>>>
    (BinaryOperator 0xa49f278 <line:67:9, col:36> '_Bool' '&&'
      (ImplicitCastExpr 0xa49f258 <col:9, col:20> '_Bool' <IntegralToBoolean>
        (CallExpr 0xa49f138 <col:9, col:20> 'int'
          (ImplicitCastExpr 0xa49f128 <col:9> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa49f0f4 <col:9> 'int (wint_t) throw()' lvalue Function 0x9f51a50 'iswdigit' 'int (wint_t) throw()'))
          (ImplicitCastExpr 0xa49f168 <col:18, col:19> 'wint_t':'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa49f158 <col:18, col:19> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa49f0e0 <col:18, col:19> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa49f0d0 <col:19> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa49f0b4 <col:19> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *')))))))
      (ImplicitCastExpr 0xa49f268 <col:25, col:36> '_Bool' <IntegralToBoolean>
        (CallExpr 0xa49f218 <col:25, col:36> 'int'
          (ImplicitCastExpr 0xa49f208 <col:25> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa49f1ec <col:25> 'int (wint_t) throw()' lvalue Function 0x9f51a50 'iswdigit' 'int (wint_t) throw()'))
          (ImplicitCastExpr 0xa49f248 <col:34, col:35> 'wint_t':'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa49f238 <col:34, col:35> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa49f1d8 <col:34, col:35> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa49f1c8 <col:35> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa49f1ac <col:35> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *'))))))))
    (CompoundStmt 0xa49fe80 <line:68:5, line:94:5>
      (DeclStmt 0xa49f330 <line:69:9, col:29>
        0xa49f2a0 "wchar_t *aend"
        0xa49f2f0 "wchar_t *bend")
      (DeclStmt 0xa49f388 <line:70:9, col:16>
        0xa49f350 "long al")
      (DeclStmt 0xa49f3e8 <line:71:9, col:16>
        0xa49f3b0 "long bl")
      (DeclStmt 0xa49f448 <line:72:9, col:18>
        0xa49f410 "long diff")
      (BinaryOperator 0xa49f560 </usr/include/i386-linux-gnu/bits/errno.h:51:18, ../codeBase/fish-shell-master/util.cpp:74:17> 'int' lvalue '='
        (ParenExpr 0xa49f530 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' lvalue
          (UnaryOperator 0xa49f518 <col:19, col:38> 'int' lvalue prefix '*'
            (CallExpr 0xa49f4f8 <col:20, col:38> 'int *'
              (ImplicitCastExpr 0xa49f4e8 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa49f48c <col:20> 'int *(void) throw()' lvalue Function 0x9fa8440 '__errno_location' 'int *(void) throw()')))))
        (IntegerLiteral 0xa49f548 <../codeBase/fish-shell-master/util.cpp:74:17> 'int' 0))
      (BinaryOperator 0xa49f6c0 <line:75:9, col:33> 'long' lvalue '='
        (DeclRefExpr 0xa49f578 <col:9> 'long' lvalue Var 0xa49f350 'al' 'long')
        (CallExpr 0xa49f688 <col:14, col:33> 'long'
          (ImplicitCastExpr 0xa49f678 <col:14> 'long (*)(const wchar_t *restrict, wchar_t **restrict, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa49f628 <col:14> 'long (const wchar_t *restrict, wchar_t **restrict, int) throw()' lvalue Function 0x9eec740 'wcstol' 'long (const wchar_t *restrict, wchar_t **restrict, int) throw()'))
          (ImplicitCastExpr 0xa49f6b0 <col:21> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa49f5c4 <col:21> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *'))
          (UnaryOperator 0xa49f5f8 <col:24, col:25> 'wchar_t **' prefix '&'
            (DeclRefExpr 0xa49f5dc <col:25> 'wchar_t *' lvalue Var 0xa49f2a0 'aend' 'wchar_t *'))
          (IntegerLiteral 0xa49f610 <col:31> 'int' 10)))
      (BinaryOperator 0xa49f7e8 <line:76:9, col:33> 'long' lvalue '='
        (DeclRefExpr 0xa49f6d8 <col:9> 'long' lvalue Var 0xa49f3b0 'bl' 'long')
        (CallExpr 0xa49f7b0 <col:14, col:33> 'long'
          (ImplicitCastExpr 0xa49f7a0 <col:14> 'long (*)(const wchar_t *restrict, wchar_t **restrict, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa49f788 <col:14> 'long (const wchar_t *restrict, wchar_t **restrict, int) throw()' lvalue Function 0x9eec740 'wcstol' 'long (const wchar_t *restrict, wchar_t **restrict, int) throw()'))
          (ImplicitCastExpr 0xa49f7d8 <col:21> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa49f724 <col:21> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *'))
          (UnaryOperator 0xa49f758 <col:24, col:25> 'wchar_t **' prefix '&'
            (DeclRefExpr 0xa49f73c <col:25> 'wchar_t *' lvalue Var 0xa49f2f0 'bend' 'wchar_t *'))
          (IntegerLiteral 0xa49f770 <col:31> 'int' 10)))
      (IfStmt 0xa49fa08 <line:78:9, line:84:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa49f8c0 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa49f8b0 <col:18, col:39> 'int' <LValueToRValue>
            (ParenExpr 0xa49f898 <col:18, col:39> 'int' lvalue
              (UnaryOperator 0xa49f880 <col:19, col:38> 'int' lvalue prefix '*'
                (CallExpr 0xa49f860 <col:20, col:38> 'int *'
                  (ImplicitCastExpr 0xa49f850 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa49f834 <col:20> 'int *(void) throw()' lvalue Function 0x9fa8440 '__errno_location' 'int *(void) throw()')))))))
        (CompoundStmt 0xa49f9f0 <../codeBase/fish-shell-master/util.cpp:79:9, line:84:9>
          (ReturnStmt 0xa49f9e0 <line:83:13, col:31>
            (CallExpr 0xa49f998 <col:20, col:31> 'int'
              (ImplicitCastExpr 0xa49f988 <col:20> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa49f934 <col:20> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9ee7d50 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
              (ImplicitCastExpr 0xa49f9c0 <col:27> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0xa49f904 <col:27> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *'))
              (ImplicitCastExpr 0xa49f9d0 <col:30> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0xa49f91c <col:30> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *')))))
        <<<NULL>>>)
      (BinaryOperator 0xa49faa8 <line:86:9, col:21> 'long' lvalue '='
        (DeclRefExpr 0xa49fa24 <col:9> 'long' lvalue Var 0xa49f410 'diff' 'long')
        (BinaryOperator 0xa49fa90 <col:16, col:21> 'long' '-'
          (ImplicitCastExpr 0xa49fa70 <col:16> 'long' <LValueToRValue>
            (DeclRefExpr 0xa49fa3c <col:16> 'long' lvalue Var 0xa49f350 'al' 'long'))
          (ImplicitCastExpr 0xa49fa80 <col:21> 'long' <LValueToRValue>
            (DeclRefExpr 0xa49fa54 <col:21> 'long' lvalue Var 0xa49f3b0 'bl' 'long'))))
      (IfStmt 0xa49fbd8 <line:87:9, line:88:36>
        <<<NULL>>>
        (ImplicitCastExpr 0xa49fae8 <line:87:13> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa49fad8 <col:13> 'long' <LValueToRValue>
            (DeclRefExpr 0xa49fac0 <col:13> 'long' lvalue Var 0xa49f410 'diff' 'long')))
        (ReturnStmt 0xa49fbc8 <line:88:13, col:36>
          (ConditionalOperator 0xa49fba8 <col:20, col:36> 'int'
            (BinaryOperator 0xa49fb48 <col:20, col:27> '_Bool' '>'
              (ImplicitCastExpr 0xa49fb28 <col:20> 'long' <LValueToRValue>
                (DeclRefExpr 0xa49faf4 <col:20> 'long' lvalue Var 0xa49f410 'diff' 'long'))
              (ImplicitCastExpr 0xa49fb38 <col:27> 'long' <IntegralCast>
                (IntegerLiteral 0xa49fb10 <col:27> 'int' 0)))
            (IntegerLiteral 0xa49fb60 <col:31> 'int' 2)
            (UnaryOperator 0xa49fb90 <col:35, col:36> 'int' prefix '-'
              (IntegerLiteral 0xa49fb78 <col:36> 'int' 2))))
        <<<NULL>>>)
      (BinaryOperator 0xa49fd38 <line:90:9, col:44> 'long' lvalue '='
        (DeclRefExpr 0xa49fbf4 <col:9> 'long' lvalue Var 0xa49f010 'secondary_diff' 'long')
        (ImplicitCastExpr 0xa49fd28 <col:26, col:44> 'long' <IntegralCast>
          (BinaryOperator 0xa49fd10 <col:26, col:44> 'int' '-'
            (ParenExpr 0xa49fc78 <col:26, col:33> 'int'
              (BinaryOperator 0xa49fc60 <col:27, col:32> 'int' '-'
                (ImplicitCastExpr 0xa49fc40 <col:27> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa49fc0c <col:27> 'wchar_t *' lvalue Var 0xa49f2a0 'aend' 'wchar_t *'))
                (ImplicitCastExpr 0xa49fc50 <col:32> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa49fc24 <col:32> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *'))))
            (ParenExpr 0xa49fcf8 <col:37, col:44> 'int'
              (BinaryOperator 0xa49fce0 <col:38, col:43> 'int' '-'
                (ImplicitCastExpr 0xa49fcc0 <col:38> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa49fc8c <col:38> 'wchar_t *' lvalue Var 0xa49f2f0 'bend' 'wchar_t *'))
                (ImplicitCastExpr 0xa49fcd0 <col:43> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa49fca4 <col:43> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *')))))))
      (BinaryOperator 0xa49fdd0 <line:92:9, col:16> 'const wchar_t *' lvalue '='
        (DeclRefExpr 0xa49fd50 <col:9> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *')
        (ImplicitCastExpr 0xa49fdc0 <col:11, col:16> 'const wchar_t *' <NoOp>
          (BinaryOperator 0xa49fda8 <col:11, col:16> 'wchar_t *' '-'
            (ImplicitCastExpr 0xa49fd98 <col:11> 'wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa49fd68 <col:11> 'wchar_t *' lvalue Var 0xa49f2a0 'aend' 'wchar_t *'))
            (IntegerLiteral 0xa49fd80 <col:16> 'int' 1))))
      (BinaryOperator 0xa49fe68 <line:93:9, col:16> 'const wchar_t *' lvalue '='
        (DeclRefExpr 0xa49fde8 <col:9> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *')
        (ImplicitCastExpr 0xa49fe58 <col:11, col:16> 'const wchar_t *' <NoOp>
          (BinaryOperator 0xa49fe40 <col:11, col:16> 'wchar_t *' '-'
            (ImplicitCastExpr 0xa49fe30 <col:11> 'wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa49fe00 <col:11> 'wchar_t *' lvalue Var 0xa49f2f0 'bend' 'wchar_t *'))
            (IntegerLiteral 0xa49fe18 <col:16> 'int' 1)))))
    (CompoundStmt 0xa4a03a8 <line:96:5, line:102:5>
      (DeclStmt 0xa4a0140 <line:97:9, col:47>
        0xa49fee0 "int diff =
          (ImplicitCastExpr 0xa4a0130 <col:20, col:46> 'int' <IntegralCast>
            (BinaryOperator 0xa4a0118 <col:20, col:46> 'unsigned int' '-'
              (CallExpr 0xa49fff8 <col:20, col:31> 'wint_t':'unsigned int'
                (ImplicitCastExpr 0xa49ffe8 <col:20> 'wint_t (*)(wint_t) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa49ff8c <col:20> 'wint_t (wint_t) throw()' lvalue Function 0x9f526c0 'towlower' 'wint_t (wint_t) throw()'))
                (ImplicitCastExpr 0xa4a0028 <col:29, col:30> 'wint_t':'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa4a0018 <col:29, col:30> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa49ff78 <col:29, col:30> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa49ff68 <col:30> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0xa49ff4c <col:30> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *'))))))
              (CallExpr 0xa4a00d8 <col:35, col:46> 'wint_t':'unsigned int'
                (ImplicitCastExpr 0xa4a00c8 <col:35> 'wint_t (*)(wint_t) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa4a00ac <col:35> 'wint_t (wint_t) throw()' lvalue Function 0x9f526c0 'towlower' 'wint_t (wint_t) throw()'))
                (ImplicitCastExpr 0xa4a0108 <col:44, col:45> 'wint_t':'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa4a00f8 <col:44, col:45> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa4a0098 <col:44, col:45> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa4a0088 <col:45> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0xa4a006c <col:45> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *'))))))))")
      (IfStmt 0xa4a0290 <line:98:9, line:99:32>
        <<<NULL>>>
        (BinaryOperator 0xa4a0190 <line:98:13, col:21> '_Bool' '!='
          (ImplicitCastExpr 0xa4a0180 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0xa4a0150 <col:13> 'int' lvalue Var 0xa49fee0 'diff' 'int'))
          (IntegerLiteral 0xa4a0168 <col:21> 'int' 0))
        (ReturnStmt 0xa4a0280 <line:99:13, col:32>
          (ConditionalOperator 0xa4a0260 <col:20, col:32> 'int'
            (ParenExpr 0xa4a0200 <col:20, col:27> '_Bool'
              (BinaryOperator 0xa4a01e8 <col:21, col:26> '_Bool' '>'
                (ImplicitCastExpr 0xa4a01d8 <col:21> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa4a01a8 <col:21> 'int' lvalue Var 0xa49fee0 'diff' 'int'))
                (IntegerLiteral 0xa4a01c0 <col:26> 'int' 0)))
            (IntegerLiteral 0xa4a0218 <col:29> 'int' 2)
            (UnaryOperator 0xa4a0248 <col:31, col:32> 'int' prefix '-'
              (IntegerLiteral 0xa4a0230 <col:32> 'int' 2))))
        <<<NULL>>>)
      (BinaryOperator 0xa4a0390 <line:101:9, col:30> 'long' lvalue '='
        (DeclRefExpr 0xa4a02ac <col:9> 'long' lvalue Var 0xa49f010 'secondary_diff' 'long')
        (ImplicitCastExpr 0xa4a0380 <col:26, col:30> 'long' <IntegralCast>
          (BinaryOperator 0xa4a0368 <col:26, col:30> 'wchar_t' '-'
            (ImplicitCastExpr 0xa4a0348 <col:26, col:27> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa4a02f0 <col:26, col:27> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa4a02e0 <col:27> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa4a02c4 <col:27> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *'))))
            (ImplicitCastExpr 0xa4a0358 <col:29, col:30> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa4a0330 <col:29, col:30> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa4a0320 <col:30> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa4a0304 <col:30> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *')))))))))
  (DeclStmt 0xa4a0570 <line:104:5, col:35>
    0xa4a0400 "int res =
      (CallExpr 0xa4a0548 <col:15, col:34> 'int'
        (ImplicitCastExpr 0xa4a0538 <col:15> 'int (*)(const wchar_t *, const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4a0520 <col:15> 'int (const wchar_t *, const wchar_t *)' lvalue Function 0xa49e5b0 'wcsfilecmp' 'int (const wchar_t *, const wchar_t *)'))
        (BinaryOperator 0xa4a04b0 <col:26, col:28> 'const wchar_t *' '+'
          (ImplicitCastExpr 0xa4a04a0 <col:26> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa4a046c <col:26> 'const wchar_t *' lvalue ParmVar 0xa49e500 'a' 'const wchar_t *'))
          (IntegerLiteral 0xa4a0488 <col:28> 'int' 1))
        (BinaryOperator 0xa4a0508 <col:31, col:33> 'const wchar_t *' '+'
          (ImplicitCastExpr 0xa4a04f8 <col:31> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa4a04c8 <col:31> 'const wchar_t *' lvalue ParmVar 0xa49e550 'b' 'const wchar_t *'))
          (IntegerLiteral 0xa4a04e0 <col:33> 'int' 1)))")
  (IfStmt 0xa4a0800 <line:106:5, line:116:5>
    <<<NULL>>>
    (BinaryOperator 0xa4a0680 <line:106:9, col:20> '_Bool' '<'
      (CallExpr 0xa4a0638 <col:9, col:16> 'int'
        (ImplicitCastExpr 0xa4a0628 <col:9> 'int (*)(int) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4a05cc <col:9> 'int (int) throw()' lvalue Function 0x9ee19f0 'abs' 'int (int) throw()'))
        (ImplicitCastExpr 0xa4a0658 <col:13> 'int' <LValueToRValue>
          (DeclRefExpr 0xa4a05b4 <col:13> 'int' lvalue Var 0xa4a0400 'res' 'int')))
      (IntegerLiteral 0xa4a0668 <col:20> 'int' 2))
    (CompoundStmt 0xa4a07e8 <line:107:5, line:116:5>
      (IfStmt 0xa4a07c8 <line:112:9, line:115:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa4a06c0 <line:112:13> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa4a06b0 <col:13> 'long' <LValueToRValue>
            (DeclRefExpr 0xa4a0698 <col:13> 'long' lvalue Var 0xa49f010 'secondary_diff' 'long')))
        (CompoundStmt 0xa4a07b0 <line:113:9, line:115:9>
          (ReturnStmt 0xa4a07a0 <line:114:13, col:45>
            (ConditionalOperator 0xa4a0780 <col:20, col:45> 'int'
              (BinaryOperator 0xa4a0720 <col:20, col:37> '_Bool' '>'
                (ImplicitCastExpr 0xa4a0700 <col:20> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa4a06cc <col:20> 'long' lvalue Var 0xa49f010 'secondary_diff' 'long'))
                (ImplicitCastExpr 0xa4a0710 <col:37> 'long' <IntegralCast>
                  (IntegerLiteral 0xa4a06e8 <col:37> 'int' 0)))
              (IntegerLiteral 0xa4a0738 <col:41> 'int' 1)
              (UnaryOperator 0xa4a0768 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0xa4a0750 <col:45> 'int' 1)))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa4a0848 <line:118:5, col:12>
    (ImplicitCastExpr 0xa4a0838 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0xa4a081c <col:12> 'int' lvalue Var 0xa4a0400 'res' 'int'))))


long long get_time() (CompoundStmt 0xa4a0d48 <../codeBase/fish-shell-master/util.cpp:122:1, line:126:1>
  (DeclStmt 0xa4a0b10 <line:123:5, col:31>
    0xa4a0920 "struct timeval time_struct =
      (CXXConstructExpr 0xa4a0af0 <col:20> 'struct timeval':'struct timeval''void (void) throw()')")
  (CallExpr 0xa4a0c08 <line:124:5, col:33> 'int'
    (ImplicitCastExpr 0xa4a0bf8 <col:5> 'int (*)(struct timeval *restrict, __timezone_ptr_t) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa4a0ba0 <col:5> 'int (struct timeval *restrict, __timezone_ptr_t) throw()' lvalue Function 0x9f28dc0 'gettimeofday' 'int (struct timeval *restrict, __timezone_ptr_t) throw()'))
    (UnaryOperator 0xa4a0b70 <col:18, col:19> 'struct timeval *' prefix '&'
      (DeclRefExpr 0xa4a0b54 <col:19> 'struct timeval':'struct timeval' lvalue Var 0xa4a0920 'time_struct' 'struct timeval':'struct timeval'))
    (ImplicitCastExpr 0xa4a0c30 <col:32> 'struct timezone *' <NullToPointer>
      (IntegerLiteral 0xa4a0b88 <col:32> 'int' 0)))
  (ReturnStmt 0xa4a0d38 <line:125:5, col:53>
    (BinaryOperator 0xa4a0d20 <col:12, col:53> 'long long' '+'
      (BinaryOperator 0xa4a0cb0 <col:12, col:34> 'long long' '*'
        (IntegerLiteral 0xa4a0c40 <col:12> 'long long' 1000000)
        (ImplicitCastExpr 0xa4a0ca0 <col:22, col:34> 'long long' <IntegralCast>
          (ImplicitCastExpr 0xa4a0c90 <col:22, col:34> '__time_t':'long' <LValueToRValue>
            (MemberExpr 0xa4a0c70 <col:22, col:34> '__time_t':'long' lvalue .tv_sec 0x9ec1050
              (DeclRefExpr 0xa4a0c58 <col:22> 'struct timeval':'struct timeval' lvalue Var 0xa4a0920 'time_struct' 'struct timeval':'struct timeval')))))
      (ImplicitCastExpr 0xa4a0d10 <col:41, col:53> 'long long' <IntegralCast>
        (ImplicitCastExpr 0xa4a0d00 <col:41, col:53> '__suseconds_t':'long' <LValueToRValue>
          (MemberExpr 0xa4a0ce0 <col:41, col:53> '__suseconds_t':'long' lvalue .tv_usec 0x9ec1090
            (DeclRefExpr 0xa4a0cc8 <col:41> 'struct timeval':'struct timeval' lvalue Var 0xa4a0920 'time_struct' 'struct timeval':'struct timeval')))))))


